
CP1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c584  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000e7c  0800c788  0800c788  0001c788  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d604  0800d604  00020308  2**0
                  CONTENTS
  4 .ARM          00000008  0800d604  0800d604  0001d604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d60c  0800d60c  00020308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d60c  0800d60c  0001d60c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d610  0800d610  0001d610  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000308  20000000  0800d614  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0001848c  20000308  0800d91c  00020308  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20018794  0800d91c  00028794  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00020308  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001d95e  00000000  00000000  00020336  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000036d3  00000000  00000000  0003dc94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001288  00000000  00000000  00041368  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001150  00000000  00000000  000425f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002b50c  00000000  00000000  00043740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000187f5  00000000  00000000  0006ec4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001040a6  00000000  00000000  00087441  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0018b4e7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006294  00000000  00000000  0018b53c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	20000308 	.word	0x20000308
 800021c:	00000000 	.word	0x00000000
 8000220:	0800c76c 	.word	0x0800c76c

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	2000030c 	.word	0x2000030c
 800023c:	0800c76c 	.word	0x0800c76c

08000240 <strcmp>:
 8000240:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000244:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000248:	2a01      	cmp	r2, #1
 800024a:	bf28      	it	cs
 800024c:	429a      	cmpcs	r2, r3
 800024e:	d0f7      	beq.n	8000240 <strcmp>
 8000250:	1ad0      	subs	r0, r2, r3
 8000252:	4770      	bx	lr

08000254 <strlen>:
 8000254:	4603      	mov	r3, r0
 8000256:	f813 2b01 	ldrb.w	r2, [r3], #1
 800025a:	2a00      	cmp	r2, #0
 800025c:	d1fb      	bne.n	8000256 <strlen+0x2>
 800025e:	1a18      	subs	r0, r3, r0
 8000260:	3801      	subs	r0, #1
 8000262:	4770      	bx	lr
	...

08000270 <memchr>:
 8000270:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000274:	2a10      	cmp	r2, #16
 8000276:	db2b      	blt.n	80002d0 <memchr+0x60>
 8000278:	f010 0f07 	tst.w	r0, #7
 800027c:	d008      	beq.n	8000290 <memchr+0x20>
 800027e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000282:	3a01      	subs	r2, #1
 8000284:	428b      	cmp	r3, r1
 8000286:	d02d      	beq.n	80002e4 <memchr+0x74>
 8000288:	f010 0f07 	tst.w	r0, #7
 800028c:	b342      	cbz	r2, 80002e0 <memchr+0x70>
 800028e:	d1f6      	bne.n	800027e <memchr+0xe>
 8000290:	b4f0      	push	{r4, r5, r6, r7}
 8000292:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000296:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800029a:	f022 0407 	bic.w	r4, r2, #7
 800029e:	f07f 0700 	mvns.w	r7, #0
 80002a2:	2300      	movs	r3, #0
 80002a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002a8:	3c08      	subs	r4, #8
 80002aa:	ea85 0501 	eor.w	r5, r5, r1
 80002ae:	ea86 0601 	eor.w	r6, r6, r1
 80002b2:	fa85 f547 	uadd8	r5, r5, r7
 80002b6:	faa3 f587 	sel	r5, r3, r7
 80002ba:	fa86 f647 	uadd8	r6, r6, r7
 80002be:	faa5 f687 	sel	r6, r5, r7
 80002c2:	b98e      	cbnz	r6, 80002e8 <memchr+0x78>
 80002c4:	d1ee      	bne.n	80002a4 <memchr+0x34>
 80002c6:	bcf0      	pop	{r4, r5, r6, r7}
 80002c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002cc:	f002 0207 	and.w	r2, r2, #7
 80002d0:	b132      	cbz	r2, 80002e0 <memchr+0x70>
 80002d2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002d6:	3a01      	subs	r2, #1
 80002d8:	ea83 0301 	eor.w	r3, r3, r1
 80002dc:	b113      	cbz	r3, 80002e4 <memchr+0x74>
 80002de:	d1f8      	bne.n	80002d2 <memchr+0x62>
 80002e0:	2000      	movs	r0, #0
 80002e2:	4770      	bx	lr
 80002e4:	3801      	subs	r0, #1
 80002e6:	4770      	bx	lr
 80002e8:	2d00      	cmp	r5, #0
 80002ea:	bf06      	itte	eq
 80002ec:	4635      	moveq	r5, r6
 80002ee:	3803      	subeq	r0, #3
 80002f0:	3807      	subne	r0, #7
 80002f2:	f015 0f01 	tst.w	r5, #1
 80002f6:	d107      	bne.n	8000308 <memchr+0x98>
 80002f8:	3001      	adds	r0, #1
 80002fa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002fe:	bf02      	ittt	eq
 8000300:	3001      	addeq	r0, #1
 8000302:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000306:	3001      	addeq	r0, #1
 8000308:	bcf0      	pop	{r4, r5, r6, r7}
 800030a:	3801      	subs	r0, #1
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop

08000310 <__aeabi_drsub>:
 8000310:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000314:	e002      	b.n	800031c <__adddf3>
 8000316:	bf00      	nop

08000318 <__aeabi_dsub>:
 8000318:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800031c <__adddf3>:
 800031c:	b530      	push	{r4, r5, lr}
 800031e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000322:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000326:	ea94 0f05 	teq	r4, r5
 800032a:	bf08      	it	eq
 800032c:	ea90 0f02 	teqeq	r0, r2
 8000330:	bf1f      	itttt	ne
 8000332:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000336:	ea55 0c02 	orrsne.w	ip, r5, r2
 800033a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800033e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000342:	f000 80e2 	beq.w	800050a <__adddf3+0x1ee>
 8000346:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800034a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800034e:	bfb8      	it	lt
 8000350:	426d      	neglt	r5, r5
 8000352:	dd0c      	ble.n	800036e <__adddf3+0x52>
 8000354:	442c      	add	r4, r5
 8000356:	ea80 0202 	eor.w	r2, r0, r2
 800035a:	ea81 0303 	eor.w	r3, r1, r3
 800035e:	ea82 0000 	eor.w	r0, r2, r0
 8000362:	ea83 0101 	eor.w	r1, r3, r1
 8000366:	ea80 0202 	eor.w	r2, r0, r2
 800036a:	ea81 0303 	eor.w	r3, r1, r3
 800036e:	2d36      	cmp	r5, #54	; 0x36
 8000370:	bf88      	it	hi
 8000372:	bd30      	pophi	{r4, r5, pc}
 8000374:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000378:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800037c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000380:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000384:	d002      	beq.n	800038c <__adddf3+0x70>
 8000386:	4240      	negs	r0, r0
 8000388:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800038c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000390:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000394:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000398:	d002      	beq.n	80003a0 <__adddf3+0x84>
 800039a:	4252      	negs	r2, r2
 800039c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003a0:	ea94 0f05 	teq	r4, r5
 80003a4:	f000 80a7 	beq.w	80004f6 <__adddf3+0x1da>
 80003a8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ac:	f1d5 0e20 	rsbs	lr, r5, #32
 80003b0:	db0d      	blt.n	80003ce <__adddf3+0xb2>
 80003b2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003b6:	fa22 f205 	lsr.w	r2, r2, r5
 80003ba:	1880      	adds	r0, r0, r2
 80003bc:	f141 0100 	adc.w	r1, r1, #0
 80003c0:	fa03 f20e 	lsl.w	r2, r3, lr
 80003c4:	1880      	adds	r0, r0, r2
 80003c6:	fa43 f305 	asr.w	r3, r3, r5
 80003ca:	4159      	adcs	r1, r3
 80003cc:	e00e      	b.n	80003ec <__adddf3+0xd0>
 80003ce:	f1a5 0520 	sub.w	r5, r5, #32
 80003d2:	f10e 0e20 	add.w	lr, lr, #32
 80003d6:	2a01      	cmp	r2, #1
 80003d8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003dc:	bf28      	it	cs
 80003de:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003e2:	fa43 f305 	asr.w	r3, r3, r5
 80003e6:	18c0      	adds	r0, r0, r3
 80003e8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	d507      	bpl.n	8000402 <__adddf3+0xe6>
 80003f2:	f04f 0e00 	mov.w	lr, #0
 80003f6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003fa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003fe:	eb6e 0101 	sbc.w	r1, lr, r1
 8000402:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000406:	d31b      	bcc.n	8000440 <__adddf3+0x124>
 8000408:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800040c:	d30c      	bcc.n	8000428 <__adddf3+0x10c>
 800040e:	0849      	lsrs	r1, r1, #1
 8000410:	ea5f 0030 	movs.w	r0, r0, rrx
 8000414:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000418:	f104 0401 	add.w	r4, r4, #1
 800041c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000420:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000424:	f080 809a 	bcs.w	800055c <__adddf3+0x240>
 8000428:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800042c:	bf08      	it	eq
 800042e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000432:	f150 0000 	adcs.w	r0, r0, #0
 8000436:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800043a:	ea41 0105 	orr.w	r1, r1, r5
 800043e:	bd30      	pop	{r4, r5, pc}
 8000440:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000444:	4140      	adcs	r0, r0
 8000446:	eb41 0101 	adc.w	r1, r1, r1
 800044a:	3c01      	subs	r4, #1
 800044c:	bf28      	it	cs
 800044e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000452:	d2e9      	bcs.n	8000428 <__adddf3+0x10c>
 8000454:	f091 0f00 	teq	r1, #0
 8000458:	bf04      	itt	eq
 800045a:	4601      	moveq	r1, r0
 800045c:	2000      	moveq	r0, #0
 800045e:	fab1 f381 	clz	r3, r1
 8000462:	bf08      	it	eq
 8000464:	3320      	addeq	r3, #32
 8000466:	f1a3 030b 	sub.w	r3, r3, #11
 800046a:	f1b3 0220 	subs.w	r2, r3, #32
 800046e:	da0c      	bge.n	800048a <__adddf3+0x16e>
 8000470:	320c      	adds	r2, #12
 8000472:	dd08      	ble.n	8000486 <__adddf3+0x16a>
 8000474:	f102 0c14 	add.w	ip, r2, #20
 8000478:	f1c2 020c 	rsb	r2, r2, #12
 800047c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000480:	fa21 f102 	lsr.w	r1, r1, r2
 8000484:	e00c      	b.n	80004a0 <__adddf3+0x184>
 8000486:	f102 0214 	add.w	r2, r2, #20
 800048a:	bfd8      	it	le
 800048c:	f1c2 0c20 	rsble	ip, r2, #32
 8000490:	fa01 f102 	lsl.w	r1, r1, r2
 8000494:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000498:	bfdc      	itt	le
 800049a:	ea41 010c 	orrle.w	r1, r1, ip
 800049e:	4090      	lslle	r0, r2
 80004a0:	1ae4      	subs	r4, r4, r3
 80004a2:	bfa2      	ittt	ge
 80004a4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004a8:	4329      	orrge	r1, r5
 80004aa:	bd30      	popge	{r4, r5, pc}
 80004ac:	ea6f 0404 	mvn.w	r4, r4
 80004b0:	3c1f      	subs	r4, #31
 80004b2:	da1c      	bge.n	80004ee <__adddf3+0x1d2>
 80004b4:	340c      	adds	r4, #12
 80004b6:	dc0e      	bgt.n	80004d6 <__adddf3+0x1ba>
 80004b8:	f104 0414 	add.w	r4, r4, #20
 80004bc:	f1c4 0220 	rsb	r2, r4, #32
 80004c0:	fa20 f004 	lsr.w	r0, r0, r4
 80004c4:	fa01 f302 	lsl.w	r3, r1, r2
 80004c8:	ea40 0003 	orr.w	r0, r0, r3
 80004cc:	fa21 f304 	lsr.w	r3, r1, r4
 80004d0:	ea45 0103 	orr.w	r1, r5, r3
 80004d4:	bd30      	pop	{r4, r5, pc}
 80004d6:	f1c4 040c 	rsb	r4, r4, #12
 80004da:	f1c4 0220 	rsb	r2, r4, #32
 80004de:	fa20 f002 	lsr.w	r0, r0, r2
 80004e2:	fa01 f304 	lsl.w	r3, r1, r4
 80004e6:	ea40 0003 	orr.w	r0, r0, r3
 80004ea:	4629      	mov	r1, r5
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	fa21 f004 	lsr.w	r0, r1, r4
 80004f2:	4629      	mov	r1, r5
 80004f4:	bd30      	pop	{r4, r5, pc}
 80004f6:	f094 0f00 	teq	r4, #0
 80004fa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004fe:	bf06      	itte	eq
 8000500:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000504:	3401      	addeq	r4, #1
 8000506:	3d01      	subne	r5, #1
 8000508:	e74e      	b.n	80003a8 <__adddf3+0x8c>
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf18      	it	ne
 8000510:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000514:	d029      	beq.n	800056a <__adddf3+0x24e>
 8000516:	ea94 0f05 	teq	r4, r5
 800051a:	bf08      	it	eq
 800051c:	ea90 0f02 	teqeq	r0, r2
 8000520:	d005      	beq.n	800052e <__adddf3+0x212>
 8000522:	ea54 0c00 	orrs.w	ip, r4, r0
 8000526:	bf04      	itt	eq
 8000528:	4619      	moveq	r1, r3
 800052a:	4610      	moveq	r0, r2
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	ea91 0f03 	teq	r1, r3
 8000532:	bf1e      	ittt	ne
 8000534:	2100      	movne	r1, #0
 8000536:	2000      	movne	r0, #0
 8000538:	bd30      	popne	{r4, r5, pc}
 800053a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800053e:	d105      	bne.n	800054c <__adddf3+0x230>
 8000540:	0040      	lsls	r0, r0, #1
 8000542:	4149      	adcs	r1, r1
 8000544:	bf28      	it	cs
 8000546:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800054a:	bd30      	pop	{r4, r5, pc}
 800054c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000550:	bf3c      	itt	cc
 8000552:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000556:	bd30      	popcc	{r4, r5, pc}
 8000558:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800055c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000560:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000564:	f04f 0000 	mov.w	r0, #0
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800056e:	bf1a      	itte	ne
 8000570:	4619      	movne	r1, r3
 8000572:	4610      	movne	r0, r2
 8000574:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000578:	bf1c      	itt	ne
 800057a:	460b      	movne	r3, r1
 800057c:	4602      	movne	r2, r0
 800057e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000582:	bf06      	itte	eq
 8000584:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000588:	ea91 0f03 	teqeq	r1, r3
 800058c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000590:	bd30      	pop	{r4, r5, pc}
 8000592:	bf00      	nop

08000594 <__aeabi_ui2d>:
 8000594:	f090 0f00 	teq	r0, #0
 8000598:	bf04      	itt	eq
 800059a:	2100      	moveq	r1, #0
 800059c:	4770      	bxeq	lr
 800059e:	b530      	push	{r4, r5, lr}
 80005a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005a8:	f04f 0500 	mov.w	r5, #0
 80005ac:	f04f 0100 	mov.w	r1, #0
 80005b0:	e750      	b.n	8000454 <__adddf3+0x138>
 80005b2:	bf00      	nop

080005b4 <__aeabi_i2d>:
 80005b4:	f090 0f00 	teq	r0, #0
 80005b8:	bf04      	itt	eq
 80005ba:	2100      	moveq	r1, #0
 80005bc:	4770      	bxeq	lr
 80005be:	b530      	push	{r4, r5, lr}
 80005c0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005c8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80005cc:	bf48      	it	mi
 80005ce:	4240      	negmi	r0, r0
 80005d0:	f04f 0100 	mov.w	r1, #0
 80005d4:	e73e      	b.n	8000454 <__adddf3+0x138>
 80005d6:	bf00      	nop

080005d8 <__aeabi_f2d>:
 80005d8:	0042      	lsls	r2, r0, #1
 80005da:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005de:	ea4f 0131 	mov.w	r1, r1, rrx
 80005e2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005e6:	bf1f      	itttt	ne
 80005e8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005ec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005f0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005f4:	4770      	bxne	lr
 80005f6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005fa:	bf08      	it	eq
 80005fc:	4770      	bxeq	lr
 80005fe:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000602:	bf04      	itt	eq
 8000604:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000608:	4770      	bxeq	lr
 800060a:	b530      	push	{r4, r5, lr}
 800060c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000610:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000614:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000618:	e71c      	b.n	8000454 <__adddf3+0x138>
 800061a:	bf00      	nop

0800061c <__aeabi_ul2d>:
 800061c:	ea50 0201 	orrs.w	r2, r0, r1
 8000620:	bf08      	it	eq
 8000622:	4770      	bxeq	lr
 8000624:	b530      	push	{r4, r5, lr}
 8000626:	f04f 0500 	mov.w	r5, #0
 800062a:	e00a      	b.n	8000642 <__aeabi_l2d+0x16>

0800062c <__aeabi_l2d>:
 800062c:	ea50 0201 	orrs.w	r2, r0, r1
 8000630:	bf08      	it	eq
 8000632:	4770      	bxeq	lr
 8000634:	b530      	push	{r4, r5, lr}
 8000636:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800063a:	d502      	bpl.n	8000642 <__aeabi_l2d+0x16>
 800063c:	4240      	negs	r0, r0
 800063e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000642:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000646:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800064a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800064e:	f43f aed8 	beq.w	8000402 <__adddf3+0xe6>
 8000652:	f04f 0203 	mov.w	r2, #3
 8000656:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800065a:	bf18      	it	ne
 800065c:	3203      	addne	r2, #3
 800065e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000662:	bf18      	it	ne
 8000664:	3203      	addne	r2, #3
 8000666:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800066a:	f1c2 0320 	rsb	r3, r2, #32
 800066e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000672:	fa20 f002 	lsr.w	r0, r0, r2
 8000676:	fa01 fe03 	lsl.w	lr, r1, r3
 800067a:	ea40 000e 	orr.w	r0, r0, lr
 800067e:	fa21 f102 	lsr.w	r1, r1, r2
 8000682:	4414      	add	r4, r2
 8000684:	e6bd      	b.n	8000402 <__adddf3+0xe6>
 8000686:	bf00      	nop

08000688 <__aeabi_uldivmod>:
 8000688:	b953      	cbnz	r3, 80006a0 <__aeabi_uldivmod+0x18>
 800068a:	b94a      	cbnz	r2, 80006a0 <__aeabi_uldivmod+0x18>
 800068c:	2900      	cmp	r1, #0
 800068e:	bf08      	it	eq
 8000690:	2800      	cmpeq	r0, #0
 8000692:	bf1c      	itt	ne
 8000694:	f04f 31ff 	movne.w	r1, #4294967295
 8000698:	f04f 30ff 	movne.w	r0, #4294967295
 800069c:	f000 b9a6 	b.w	80009ec <__aeabi_idiv0>
 80006a0:	f1ad 0c08 	sub.w	ip, sp, #8
 80006a4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006a8:	f000 f83e 	bl	8000728 <__udivmoddi4>
 80006ac:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006b0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006b4:	b004      	add	sp, #16
 80006b6:	4770      	bx	lr

080006b8 <__aeabi_d2lz>:
 80006b8:	b508      	push	{r3, lr}
 80006ba:	4602      	mov	r2, r0
 80006bc:	460b      	mov	r3, r1
 80006be:	ec43 2b17 	vmov	d7, r2, r3
 80006c2:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80006c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80006ca:	d403      	bmi.n	80006d4 <__aeabi_d2lz+0x1c>
 80006cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80006d0:	f000 b80a 	b.w	80006e8 <__aeabi_d2ulz>
 80006d4:	eeb1 7b47 	vneg.f64	d7, d7
 80006d8:	ec51 0b17 	vmov	r0, r1, d7
 80006dc:	f000 f804 	bl	80006e8 <__aeabi_d2ulz>
 80006e0:	4240      	negs	r0, r0
 80006e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006e6:	bd08      	pop	{r3, pc}

080006e8 <__aeabi_d2ulz>:
 80006e8:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000718 <__aeabi_d2ulz+0x30>
 80006ec:	ec41 0b17 	vmov	d7, r0, r1
 80006f0:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 8000720 <__aeabi_d2ulz+0x38>
 80006f4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80006f8:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 80006fc:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 8000700:	eea4 7b45 	vfms.f64	d7, d4, d5
 8000704:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8000708:	ee16 1a10 	vmov	r1, s12
 800070c:	ee17 0a90 	vmov	r0, s15
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	f3af 8000 	nop.w
 8000718:	00000000 	.word	0x00000000
 800071c:	3df00000 	.word	0x3df00000
 8000720:	00000000 	.word	0x00000000
 8000724:	41f00000 	.word	0x41f00000

08000728 <__udivmoddi4>:
 8000728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800072c:	9d08      	ldr	r5, [sp, #32]
 800072e:	4604      	mov	r4, r0
 8000730:	468c      	mov	ip, r1
 8000732:	2b00      	cmp	r3, #0
 8000734:	f040 8083 	bne.w	800083e <__udivmoddi4+0x116>
 8000738:	428a      	cmp	r2, r1
 800073a:	4617      	mov	r7, r2
 800073c:	d947      	bls.n	80007ce <__udivmoddi4+0xa6>
 800073e:	fab2 f282 	clz	r2, r2
 8000742:	b142      	cbz	r2, 8000756 <__udivmoddi4+0x2e>
 8000744:	f1c2 0020 	rsb	r0, r2, #32
 8000748:	fa24 f000 	lsr.w	r0, r4, r0
 800074c:	4091      	lsls	r1, r2
 800074e:	4097      	lsls	r7, r2
 8000750:	ea40 0c01 	orr.w	ip, r0, r1
 8000754:	4094      	lsls	r4, r2
 8000756:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800075a:	0c23      	lsrs	r3, r4, #16
 800075c:	fbbc f6f8 	udiv	r6, ip, r8
 8000760:	fa1f fe87 	uxth.w	lr, r7
 8000764:	fb08 c116 	mls	r1, r8, r6, ip
 8000768:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800076c:	fb06 f10e 	mul.w	r1, r6, lr
 8000770:	4299      	cmp	r1, r3
 8000772:	d909      	bls.n	8000788 <__udivmoddi4+0x60>
 8000774:	18fb      	adds	r3, r7, r3
 8000776:	f106 30ff 	add.w	r0, r6, #4294967295
 800077a:	f080 8119 	bcs.w	80009b0 <__udivmoddi4+0x288>
 800077e:	4299      	cmp	r1, r3
 8000780:	f240 8116 	bls.w	80009b0 <__udivmoddi4+0x288>
 8000784:	3e02      	subs	r6, #2
 8000786:	443b      	add	r3, r7
 8000788:	1a5b      	subs	r3, r3, r1
 800078a:	b2a4      	uxth	r4, r4
 800078c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000790:	fb08 3310 	mls	r3, r8, r0, r3
 8000794:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000798:	fb00 fe0e 	mul.w	lr, r0, lr
 800079c:	45a6      	cmp	lr, r4
 800079e:	d909      	bls.n	80007b4 <__udivmoddi4+0x8c>
 80007a0:	193c      	adds	r4, r7, r4
 80007a2:	f100 33ff 	add.w	r3, r0, #4294967295
 80007a6:	f080 8105 	bcs.w	80009b4 <__udivmoddi4+0x28c>
 80007aa:	45a6      	cmp	lr, r4
 80007ac:	f240 8102 	bls.w	80009b4 <__udivmoddi4+0x28c>
 80007b0:	3802      	subs	r0, #2
 80007b2:	443c      	add	r4, r7
 80007b4:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80007b8:	eba4 040e 	sub.w	r4, r4, lr
 80007bc:	2600      	movs	r6, #0
 80007be:	b11d      	cbz	r5, 80007c8 <__udivmoddi4+0xa0>
 80007c0:	40d4      	lsrs	r4, r2
 80007c2:	2300      	movs	r3, #0
 80007c4:	e9c5 4300 	strd	r4, r3, [r5]
 80007c8:	4631      	mov	r1, r6
 80007ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007ce:	b902      	cbnz	r2, 80007d2 <__udivmoddi4+0xaa>
 80007d0:	deff      	udf	#255	; 0xff
 80007d2:	fab2 f282 	clz	r2, r2
 80007d6:	2a00      	cmp	r2, #0
 80007d8:	d150      	bne.n	800087c <__udivmoddi4+0x154>
 80007da:	1bcb      	subs	r3, r1, r7
 80007dc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80007e0:	fa1f f887 	uxth.w	r8, r7
 80007e4:	2601      	movs	r6, #1
 80007e6:	fbb3 fcfe 	udiv	ip, r3, lr
 80007ea:	0c21      	lsrs	r1, r4, #16
 80007ec:	fb0e 331c 	mls	r3, lr, ip, r3
 80007f0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80007f4:	fb08 f30c 	mul.w	r3, r8, ip
 80007f8:	428b      	cmp	r3, r1
 80007fa:	d907      	bls.n	800080c <__udivmoddi4+0xe4>
 80007fc:	1879      	adds	r1, r7, r1
 80007fe:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000802:	d202      	bcs.n	800080a <__udivmoddi4+0xe2>
 8000804:	428b      	cmp	r3, r1
 8000806:	f200 80e9 	bhi.w	80009dc <__udivmoddi4+0x2b4>
 800080a:	4684      	mov	ip, r0
 800080c:	1ac9      	subs	r1, r1, r3
 800080e:	b2a3      	uxth	r3, r4
 8000810:	fbb1 f0fe 	udiv	r0, r1, lr
 8000814:	fb0e 1110 	mls	r1, lr, r0, r1
 8000818:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 800081c:	fb08 f800 	mul.w	r8, r8, r0
 8000820:	45a0      	cmp	r8, r4
 8000822:	d907      	bls.n	8000834 <__udivmoddi4+0x10c>
 8000824:	193c      	adds	r4, r7, r4
 8000826:	f100 33ff 	add.w	r3, r0, #4294967295
 800082a:	d202      	bcs.n	8000832 <__udivmoddi4+0x10a>
 800082c:	45a0      	cmp	r8, r4
 800082e:	f200 80d9 	bhi.w	80009e4 <__udivmoddi4+0x2bc>
 8000832:	4618      	mov	r0, r3
 8000834:	eba4 0408 	sub.w	r4, r4, r8
 8000838:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800083c:	e7bf      	b.n	80007be <__udivmoddi4+0x96>
 800083e:	428b      	cmp	r3, r1
 8000840:	d909      	bls.n	8000856 <__udivmoddi4+0x12e>
 8000842:	2d00      	cmp	r5, #0
 8000844:	f000 80b1 	beq.w	80009aa <__udivmoddi4+0x282>
 8000848:	2600      	movs	r6, #0
 800084a:	e9c5 0100 	strd	r0, r1, [r5]
 800084e:	4630      	mov	r0, r6
 8000850:	4631      	mov	r1, r6
 8000852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000856:	fab3 f683 	clz	r6, r3
 800085a:	2e00      	cmp	r6, #0
 800085c:	d14a      	bne.n	80008f4 <__udivmoddi4+0x1cc>
 800085e:	428b      	cmp	r3, r1
 8000860:	d302      	bcc.n	8000868 <__udivmoddi4+0x140>
 8000862:	4282      	cmp	r2, r0
 8000864:	f200 80b8 	bhi.w	80009d8 <__udivmoddi4+0x2b0>
 8000868:	1a84      	subs	r4, r0, r2
 800086a:	eb61 0103 	sbc.w	r1, r1, r3
 800086e:	2001      	movs	r0, #1
 8000870:	468c      	mov	ip, r1
 8000872:	2d00      	cmp	r5, #0
 8000874:	d0a8      	beq.n	80007c8 <__udivmoddi4+0xa0>
 8000876:	e9c5 4c00 	strd	r4, ip, [r5]
 800087a:	e7a5      	b.n	80007c8 <__udivmoddi4+0xa0>
 800087c:	f1c2 0320 	rsb	r3, r2, #32
 8000880:	fa20 f603 	lsr.w	r6, r0, r3
 8000884:	4097      	lsls	r7, r2
 8000886:	fa01 f002 	lsl.w	r0, r1, r2
 800088a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800088e:	40d9      	lsrs	r1, r3
 8000890:	4330      	orrs	r0, r6
 8000892:	0c03      	lsrs	r3, r0, #16
 8000894:	fbb1 f6fe 	udiv	r6, r1, lr
 8000898:	fa1f f887 	uxth.w	r8, r7
 800089c:	fb0e 1116 	mls	r1, lr, r6, r1
 80008a0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80008a4:	fb06 f108 	mul.w	r1, r6, r8
 80008a8:	4299      	cmp	r1, r3
 80008aa:	fa04 f402 	lsl.w	r4, r4, r2
 80008ae:	d909      	bls.n	80008c4 <__udivmoddi4+0x19c>
 80008b0:	18fb      	adds	r3, r7, r3
 80008b2:	f106 3cff 	add.w	ip, r6, #4294967295
 80008b6:	f080 808d 	bcs.w	80009d4 <__udivmoddi4+0x2ac>
 80008ba:	4299      	cmp	r1, r3
 80008bc:	f240 808a 	bls.w	80009d4 <__udivmoddi4+0x2ac>
 80008c0:	3e02      	subs	r6, #2
 80008c2:	443b      	add	r3, r7
 80008c4:	1a5b      	subs	r3, r3, r1
 80008c6:	b281      	uxth	r1, r0
 80008c8:	fbb3 f0fe 	udiv	r0, r3, lr
 80008cc:	fb0e 3310 	mls	r3, lr, r0, r3
 80008d0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80008d4:	fb00 f308 	mul.w	r3, r0, r8
 80008d8:	428b      	cmp	r3, r1
 80008da:	d907      	bls.n	80008ec <__udivmoddi4+0x1c4>
 80008dc:	1879      	adds	r1, r7, r1
 80008de:	f100 3cff 	add.w	ip, r0, #4294967295
 80008e2:	d273      	bcs.n	80009cc <__udivmoddi4+0x2a4>
 80008e4:	428b      	cmp	r3, r1
 80008e6:	d971      	bls.n	80009cc <__udivmoddi4+0x2a4>
 80008e8:	3802      	subs	r0, #2
 80008ea:	4439      	add	r1, r7
 80008ec:	1acb      	subs	r3, r1, r3
 80008ee:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80008f2:	e778      	b.n	80007e6 <__udivmoddi4+0xbe>
 80008f4:	f1c6 0c20 	rsb	ip, r6, #32
 80008f8:	fa03 f406 	lsl.w	r4, r3, r6
 80008fc:	fa22 f30c 	lsr.w	r3, r2, ip
 8000900:	431c      	orrs	r4, r3
 8000902:	fa20 f70c 	lsr.w	r7, r0, ip
 8000906:	fa01 f306 	lsl.w	r3, r1, r6
 800090a:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 800090e:	fa21 f10c 	lsr.w	r1, r1, ip
 8000912:	431f      	orrs	r7, r3
 8000914:	0c3b      	lsrs	r3, r7, #16
 8000916:	fbb1 f9fe 	udiv	r9, r1, lr
 800091a:	fa1f f884 	uxth.w	r8, r4
 800091e:	fb0e 1119 	mls	r1, lr, r9, r1
 8000922:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000926:	fb09 fa08 	mul.w	sl, r9, r8
 800092a:	458a      	cmp	sl, r1
 800092c:	fa02 f206 	lsl.w	r2, r2, r6
 8000930:	fa00 f306 	lsl.w	r3, r0, r6
 8000934:	d908      	bls.n	8000948 <__udivmoddi4+0x220>
 8000936:	1861      	adds	r1, r4, r1
 8000938:	f109 30ff 	add.w	r0, r9, #4294967295
 800093c:	d248      	bcs.n	80009d0 <__udivmoddi4+0x2a8>
 800093e:	458a      	cmp	sl, r1
 8000940:	d946      	bls.n	80009d0 <__udivmoddi4+0x2a8>
 8000942:	f1a9 0902 	sub.w	r9, r9, #2
 8000946:	4421      	add	r1, r4
 8000948:	eba1 010a 	sub.w	r1, r1, sl
 800094c:	b2bf      	uxth	r7, r7
 800094e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000952:	fb0e 1110 	mls	r1, lr, r0, r1
 8000956:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800095a:	fb00 f808 	mul.w	r8, r0, r8
 800095e:	45b8      	cmp	r8, r7
 8000960:	d907      	bls.n	8000972 <__udivmoddi4+0x24a>
 8000962:	19e7      	adds	r7, r4, r7
 8000964:	f100 31ff 	add.w	r1, r0, #4294967295
 8000968:	d22e      	bcs.n	80009c8 <__udivmoddi4+0x2a0>
 800096a:	45b8      	cmp	r8, r7
 800096c:	d92c      	bls.n	80009c8 <__udivmoddi4+0x2a0>
 800096e:	3802      	subs	r0, #2
 8000970:	4427      	add	r7, r4
 8000972:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000976:	eba7 0708 	sub.w	r7, r7, r8
 800097a:	fba0 8902 	umull	r8, r9, r0, r2
 800097e:	454f      	cmp	r7, r9
 8000980:	46c6      	mov	lr, r8
 8000982:	4649      	mov	r1, r9
 8000984:	d31a      	bcc.n	80009bc <__udivmoddi4+0x294>
 8000986:	d017      	beq.n	80009b8 <__udivmoddi4+0x290>
 8000988:	b15d      	cbz	r5, 80009a2 <__udivmoddi4+0x27a>
 800098a:	ebb3 020e 	subs.w	r2, r3, lr
 800098e:	eb67 0701 	sbc.w	r7, r7, r1
 8000992:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000996:	40f2      	lsrs	r2, r6
 8000998:	ea4c 0202 	orr.w	r2, ip, r2
 800099c:	40f7      	lsrs	r7, r6
 800099e:	e9c5 2700 	strd	r2, r7, [r5]
 80009a2:	2600      	movs	r6, #0
 80009a4:	4631      	mov	r1, r6
 80009a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009aa:	462e      	mov	r6, r5
 80009ac:	4628      	mov	r0, r5
 80009ae:	e70b      	b.n	80007c8 <__udivmoddi4+0xa0>
 80009b0:	4606      	mov	r6, r0
 80009b2:	e6e9      	b.n	8000788 <__udivmoddi4+0x60>
 80009b4:	4618      	mov	r0, r3
 80009b6:	e6fd      	b.n	80007b4 <__udivmoddi4+0x8c>
 80009b8:	4543      	cmp	r3, r8
 80009ba:	d2e5      	bcs.n	8000988 <__udivmoddi4+0x260>
 80009bc:	ebb8 0e02 	subs.w	lr, r8, r2
 80009c0:	eb69 0104 	sbc.w	r1, r9, r4
 80009c4:	3801      	subs	r0, #1
 80009c6:	e7df      	b.n	8000988 <__udivmoddi4+0x260>
 80009c8:	4608      	mov	r0, r1
 80009ca:	e7d2      	b.n	8000972 <__udivmoddi4+0x24a>
 80009cc:	4660      	mov	r0, ip
 80009ce:	e78d      	b.n	80008ec <__udivmoddi4+0x1c4>
 80009d0:	4681      	mov	r9, r0
 80009d2:	e7b9      	b.n	8000948 <__udivmoddi4+0x220>
 80009d4:	4666      	mov	r6, ip
 80009d6:	e775      	b.n	80008c4 <__udivmoddi4+0x19c>
 80009d8:	4630      	mov	r0, r6
 80009da:	e74a      	b.n	8000872 <__udivmoddi4+0x14a>
 80009dc:	f1ac 0c02 	sub.w	ip, ip, #2
 80009e0:	4439      	add	r1, r7
 80009e2:	e713      	b.n	800080c <__udivmoddi4+0xe4>
 80009e4:	3802      	subs	r0, #2
 80009e6:	443c      	add	r4, r7
 80009e8:	e724      	b.n	8000834 <__udivmoddi4+0x10c>
 80009ea:	bf00      	nop

080009ec <__aeabi_idiv0>:
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop

080009f0 <MX_ADC3_Init1>:
bool Read;
uint32_t adc_value;
bool run = 0;

void MX_ADC3_Init1(bool software1)
{
 80009f0:	b580      	push	{r7, lr}
 80009f2:	b086      	sub	sp, #24
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	4603      	mov	r3, r0
 80009f8:	71fb      	strb	r3, [r7, #7]
  software = software1;
 80009fa:	4a2b      	ldr	r2, [pc, #172]	; (8000aa8 <MX_ADC3_Init1+0xb8>)
 80009fc:	79fb      	ldrb	r3, [r7, #7]
 80009fe:	7013      	strb	r3, [r2, #0]

  ADC_ChannelConfTypeDef sConfig = {0};
 8000a00:	f107 0308 	add.w	r3, r7, #8
 8000a04:	2200      	movs	r2, #0
 8000a06:	601a      	str	r2, [r3, #0]
 8000a08:	605a      	str	r2, [r3, #4]
 8000a0a:	609a      	str	r2, [r3, #8]
 8000a0c:	60da      	str	r2, [r3, #12]

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 8000a0e:	4b27      	ldr	r3, [pc, #156]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a10:	4a27      	ldr	r2, [pc, #156]	; (8000ab0 <MX_ADC3_Init1+0xc0>)
 8000a12:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000a14:	4b25      	ldr	r3, [pc, #148]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a16:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000a1a:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000a1c:	4b23      	ldr	r3, [pc, #140]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a1e:	2200      	movs	r2, #0
 8000a20:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000a22:	4b22      	ldr	r3, [pc, #136]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a24:	2200      	movs	r2, #0
 8000a26:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 8000a28:	4b20      	ldr	r3, [pc, #128]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8000a2e:	4b1f      	ldr	r3, [pc, #124]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a30:	2200      	movs	r2, #0
 8000a32:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000a36:	4b1d      	ldr	r3, [pc, #116]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000a3c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_TRGO;
 8000a3e:	4b1b      	ldr	r3, [pc, #108]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a40:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 8000a44:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000a46:	4b19      	ldr	r3, [pc, #100]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a48:	2200      	movs	r2, #0
 8000a4a:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8000a4c:	4b17      	ldr	r3, [pc, #92]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a4e:	2201      	movs	r2, #1
 8000a50:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8000a52:	4b16      	ldr	r3, [pc, #88]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a54:	2200      	movs	r2, #0
 8000a56:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a5a:	4b14      	ldr	r3, [pc, #80]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a5c:	2201      	movs	r2, #1
 8000a5e:	615a      	str	r2, [r3, #20]

  if(software)
 8000a60:	4b11      	ldr	r3, [pc, #68]	; (8000aa8 <MX_ADC3_Init1+0xb8>)
 8000a62:	781b      	ldrb	r3, [r3, #0]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d002      	beq.n	8000a6e <MX_ADC3_Init1+0x7e>
	  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a68:	4b10      	ldr	r3, [pc, #64]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a6a:	4a12      	ldr	r2, [pc, #72]	; (8000ab4 <MX_ADC3_Init1+0xc4>)
 8000a6c:	629a      	str	r2, [r3, #40]	; 0x28


  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000a6e:	480f      	ldr	r0, [pc, #60]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a70:	f002 fa98 	bl	8002fa4 <HAL_ADC_Init>
 8000a74:	4603      	mov	r3, r0
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	d001      	beq.n	8000a7e <MX_ADC3_Init1+0x8e>
  {
    Error_Handler();
 8000a7a:	f001 fdb5 	bl	80025e8 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	60bb      	str	r3, [r7, #8]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a82:	2301      	movs	r3, #1
 8000a84:	60fb      	str	r3, [r7, #12]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000a86:	2300      	movs	r3, #0
 8000a88:	613b      	str	r3, [r7, #16]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000a8a:	f107 0308 	add.w	r3, r7, #8
 8000a8e:	4619      	mov	r1, r3
 8000a90:	4806      	ldr	r0, [pc, #24]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a92:	f002 fd13 	bl	80034bc <HAL_ADC_ConfigChannel>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <MX_ADC3_Init1+0xb0>
  {
    Error_Handler();
 8000a9c:	f001 fda4 	bl	80025e8 <Error_Handler>
  }

}
 8000aa0:	bf00      	nop
 8000aa2:	3718      	adds	r7, #24
 8000aa4:	46bd      	mov	sp, r7
 8000aa6:	bd80      	pop	{r7, pc}
 8000aa8:	2000043d 	.word	0x2000043d
 8000aac:	20010444 	.word	0x20010444
 8000ab0:	40012200 	.word	0x40012200
 8000ab4:	0f000001 	.word	0x0f000001

08000ab8 <MX_ADC3_Init>:

ADC_HandleTypeDef hadc3;

/* ADC3 init function */
void MX_ADC3_Init(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b084      	sub	sp, #16
 8000abc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000abe:	463b      	mov	r3, r7
 8000ac0:	2200      	movs	r2, #0
 8000ac2:	601a      	str	r2, [r3, #0]
 8000ac4:	605a      	str	r2, [r3, #4]
 8000ac6:	609a      	str	r2, [r3, #8]
 8000ac8:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC3_Init 1 */

  /* USER CODE END ADC3_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 8000aca:	4b22      	ldr	r3, [pc, #136]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000acc:	4a22      	ldr	r2, [pc, #136]	; (8000b58 <MX_ADC3_Init+0xa0>)
 8000ace:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000ad0:	4b20      	ldr	r3, [pc, #128]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000ad6:	4b1f      	ldr	r3, [pc, #124]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ad8:	2200      	movs	r2, #0
 8000ada:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000adc:	4b1d      	ldr	r3, [pc, #116]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ade:	2200      	movs	r2, #0
 8000ae0:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 8000ae2:	4b1c      	ldr	r3, [pc, #112]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8000ae8:	4b1a      	ldr	r3, [pc, #104]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000aea:	2200      	movs	r2, #0
 8000aec:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000af0:	4b18      	ldr	r3, [pc, #96]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000af2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000af6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_TRGO;
 8000af8:	4b16      	ldr	r3, [pc, #88]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000afa:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 8000afe:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000b00:	4b14      	ldr	r3, [pc, #80]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8000b06:	4b13      	ldr	r3, [pc, #76]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b08:	2201      	movs	r2, #1
 8000b0a:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8000b0c:	4b11      	ldr	r3, [pc, #68]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b0e:	2200      	movs	r2, #0
 8000b10:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000b14:	4b0f      	ldr	r3, [pc, #60]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b16:	2201      	movs	r2, #1
 8000b18:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b1c:	f002 fa42 	bl	8002fa4 <HAL_ADC_Init>
 8000b20:	4603      	mov	r3, r0
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d001      	beq.n	8000b2a <MX_ADC3_Init+0x72>
  {
    Error_Handler();
 8000b26:	f001 fd5f 	bl	80025e8 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b2e:	2301      	movs	r3, #1
 8000b30:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000b32:	2300      	movs	r3, #0
 8000b34:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000b36:	463b      	mov	r3, r7
 8000b38:	4619      	mov	r1, r3
 8000b3a:	4806      	ldr	r0, [pc, #24]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b3c:	f002 fcbe 	bl	80034bc <HAL_ADC_ConfigChannel>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <MX_ADC3_Init+0x92>
  {
    Error_Handler();
 8000b46:	f001 fd4f 	bl	80025e8 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8000b4a:	bf00      	nop
 8000b4c:	3710      	adds	r7, #16
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	20010444 	.word	0x20010444
 8000b58:	40012200 	.word	0x40012200

08000b5c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b08c      	sub	sp, #48	; 0x30
 8000b60:	af00      	add	r7, sp, #0
 8000b62:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b64:	f107 031c 	add.w	r3, r7, #28
 8000b68:	2200      	movs	r2, #0
 8000b6a:	601a      	str	r2, [r3, #0]
 8000b6c:	605a      	str	r2, [r3, #4]
 8000b6e:	609a      	str	r2, [r3, #8]
 8000b70:	60da      	str	r2, [r3, #12]
 8000b72:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC3)
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	4a31      	ldr	r2, [pc, #196]	; (8000c40 <HAL_ADC_MspInit+0xe4>)
 8000b7a:	4293      	cmp	r3, r2
 8000b7c:	d15c      	bne.n	8000c38 <HAL_ADC_MspInit+0xdc>
  {
  /* USER CODE BEGIN ADC3_MspInit 0 */

  /* USER CODE END ADC3_MspInit 0 */
    /* ADC3 clock enable */
    __HAL_RCC_ADC3_CLK_ENABLE();
 8000b7e:	4b31      	ldr	r3, [pc, #196]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b82:	4a30      	ldr	r2, [pc, #192]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b84:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000b88:	6453      	str	r3, [r2, #68]	; 0x44
 8000b8a:	4b2e      	ldr	r3, [pc, #184]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b8e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000b92:	61bb      	str	r3, [r7, #24]
 8000b94:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b96:	4b2b      	ldr	r3, [pc, #172]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b9a:	4a2a      	ldr	r2, [pc, #168]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b9c:	f043 0320 	orr.w	r3, r3, #32
 8000ba0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ba2:	4b28      	ldr	r3, [pc, #160]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000ba4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ba6:	f003 0320 	and.w	r3, r3, #32
 8000baa:	617b      	str	r3, [r7, #20]
 8000bac:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bae:	4b25      	ldr	r3, [pc, #148]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bb2:	4a24      	ldr	r2, [pc, #144]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bb4:	f043 0304 	orr.w	r3, r3, #4
 8000bb8:	6313      	str	r3, [r2, #48]	; 0x30
 8000bba:	4b22      	ldr	r3, [pc, #136]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bbe:	f003 0304 	and.w	r3, r3, #4
 8000bc2:	613b      	str	r3, [r7, #16]
 8000bc4:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bca:	4a1e      	ldr	r2, [pc, #120]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bcc:	f043 0301 	orr.w	r3, r3, #1
 8000bd0:	6313      	str	r3, [r2, #48]	; 0x30
 8000bd2:	4b1c      	ldr	r3, [pc, #112]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bd6:	f003 0301 	and.w	r3, r3, #1
 8000bda:	60fb      	str	r3, [r7, #12]
 8000bdc:	68fb      	ldr	r3, [r7, #12]
    PA0/WKUP     ------> ADC3_IN0
    PA1     ------> ADC3_IN1
    PA2     ------> ADC3_IN2
    PA3     ------> ADC3_IN3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8000bde:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 8000be2:	61fb      	str	r3, [r7, #28]
                          |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000be4:	2303      	movs	r3, #3
 8000be6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000be8:	2300      	movs	r3, #0
 8000bea:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000bec:	f107 031c 	add.w	r3, r7, #28
 8000bf0:	4619      	mov	r1, r3
 8000bf2:	4815      	ldr	r0, [pc, #84]	; (8000c48 <HAL_ADC_MspInit+0xec>)
 8000bf4:	f003 f948 	bl	8003e88 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000bf8:	230f      	movs	r3, #15
 8000bfa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000bfc:	2303      	movs	r3, #3
 8000bfe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c00:	2300      	movs	r3, #0
 8000c02:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c04:	f107 031c 	add.w	r3, r7, #28
 8000c08:	4619      	mov	r1, r3
 8000c0a:	4810      	ldr	r0, [pc, #64]	; (8000c4c <HAL_ADC_MspInit+0xf0>)
 8000c0c:	f003 f93c 	bl	8003e88 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000c10:	230f      	movs	r3, #15
 8000c12:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000c14:	2303      	movs	r3, #3
 8000c16:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c18:	2300      	movs	r3, #0
 8000c1a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c1c:	f107 031c 	add.w	r3, r7, #28
 8000c20:	4619      	mov	r1, r3
 8000c22:	480b      	ldr	r0, [pc, #44]	; (8000c50 <HAL_ADC_MspInit+0xf4>)
 8000c24:	f003 f930 	bl	8003e88 <HAL_GPIO_Init>

    /* ADC3 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 8000c28:	2200      	movs	r2, #0
 8000c2a:	2100      	movs	r1, #0
 8000c2c:	2012      	movs	r0, #18
 8000c2e:	f002 ff7a 	bl	8003b26 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 8000c32:	2012      	movs	r0, #18
 8000c34:	f002 ff93 	bl	8003b5e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }
}
 8000c38:	bf00      	nop
 8000c3a:	3730      	adds	r7, #48	; 0x30
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	40012200 	.word	0x40012200
 8000c44:	40023800 	.word	0x40023800
 8000c48:	40021400 	.word	0x40021400
 8000c4c:	40020800 	.word	0x40020800
 8000c50:	40020000 	.word	0x40020000

08000c54 <config_ADC>:
}

/* USER CODE BEGIN 1 */

void config_ADC(unsigned int channel)
{
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b086      	sub	sp, #24
 8000c58:	af00      	add	r7, sp, #0
 8000c5a:	6078      	str	r0, [r7, #4]
	ADC_ChannelConfTypeDef sConfig = {0};
 8000c5c:	f107 0308 	add.w	r3, r7, #8
 8000c60:	2200      	movs	r2, #0
 8000c62:	601a      	str	r2, [r3, #0]
 8000c64:	605a      	str	r2, [r3, #4]
 8000c66:	609a      	str	r2, [r3, #8]
 8000c68:	60da      	str	r2, [r3, #12]

	sConfig.Channel = (uint32_t) channel;
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	60bb      	str	r3, [r7, #8]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000c6e:	2301      	movs	r3, #1
 8000c70:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000c72:	2300      	movs	r3, #0
 8000c74:	613b      	str	r3, [r7, #16]

	HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000c76:	f107 0308 	add.w	r3, r7, #8
 8000c7a:	4619      	mov	r1, r3
 8000c7c:	4803      	ldr	r0, [pc, #12]	; (8000c8c <config_ADC+0x38>)
 8000c7e:	f002 fc1d 	bl	80034bc <HAL_ADC_ConfigChannel>
}
 8000c82:	bf00      	nop
 8000c84:	3718      	adds	r7, #24
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
 8000c8a:	bf00      	nop
 8000c8c:	20010444 	.word	0x20010444

08000c90 <read_ADC>:

uint32_t read_ADC(void)
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	af00      	add	r7, sp, #0
	Read = false;
 8000c94:	4b0b      	ldr	r3, [pc, #44]	; (8000cc4 <read_ADC+0x34>)
 8000c96:	2200      	movs	r2, #0
 8000c98:	701a      	strb	r2, [r3, #0]
	if(HAL_ADC_Start_IT(&hadc3) == HAL_OK)
 8000c9a:	480b      	ldr	r0, [pc, #44]	; (8000cc8 <read_ADC+0x38>)
 8000c9c:	f002 f9c6 	bl	800302c <HAL_ADC_Start_IT>
 8000ca0:	4603      	mov	r3, r0
 8000ca2:	2b00      	cmp	r3, #0
 8000ca4:	d10a      	bne.n	8000cbc <read_ADC+0x2c>
	{
	  while(!Read);
 8000ca6:	bf00      	nop
 8000ca8:	4b06      	ldr	r3, [pc, #24]	; (8000cc4 <read_ADC+0x34>)
 8000caa:	781b      	ldrb	r3, [r3, #0]
 8000cac:	f083 0301 	eor.w	r3, r3, #1
 8000cb0:	b2db      	uxtb	r3, r3
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d1f8      	bne.n	8000ca8 <read_ADC+0x18>
	  HAL_ADC_Stop_IT(&hadc3);
 8000cb6:	4804      	ldr	r0, [pc, #16]	; (8000cc8 <read_ADC+0x38>)
 8000cb8:	f002 fa90 	bl	80031dc <HAL_ADC_Stop_IT>
	}
	return adc_value;
 8000cbc:	4b03      	ldr	r3, [pc, #12]	; (8000ccc <read_ADC+0x3c>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
}
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	bd80      	pop	{r7, pc}
 8000cc4:	2000043c 	.word	0x2000043c
 8000cc8:	20010444 	.word	0x20010444
 8000ccc:	20010440 	.word	0x20010440

08000cd0 <reset_adc_buf>:

void reset_adc_buf(void)
{
 8000cd0:	b480      	push	{r7}
 8000cd2:	b083      	sub	sp, #12
 8000cd4:	af00      	add	r7, sp, #0
	for(int i = 0 ; i < ADC_BUF_SIZE - 1 ; i++)
 8000cd6:	2300      	movs	r3, #0
 8000cd8:	607b      	str	r3, [r7, #4]
 8000cda:	e007      	b.n	8000cec <reset_adc_buf+0x1c>
		adc_buf[i] = 0;
 8000cdc:	4a0a      	ldr	r2, [pc, #40]	; (8000d08 <reset_adc_buf+0x38>)
 8000cde:	687b      	ldr	r3, [r7, #4]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0 ; i < ADC_BUF_SIZE - 1 ; i++)
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	3301      	adds	r3, #1
 8000cea:	607b      	str	r3, [r7, #4]
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	f640 72fe 	movw	r2, #4094	; 0xffe
 8000cf2:	4293      	cmp	r3, r2
 8000cf4:	ddf2      	ble.n	8000cdc <reset_adc_buf+0xc>

	adc_buf_index = 0;
 8000cf6:	4b05      	ldr	r3, [pc, #20]	; (8000d0c <reset_adc_buf+0x3c>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	601a      	str	r2, [r3, #0]
}
 8000cfc:	bf00      	nop
 8000cfe:	370c      	adds	r7, #12
 8000d00:	46bd      	mov	sp, r7
 8000d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d06:	4770      	bx	lr
 8000d08:	20010594 	.word	0x20010594
 8000d0c:	20000324 	.word	0x20000324

08000d10 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
 8000d10:	b590      	push	{r4, r7, lr}
 8000d12:	b083      	sub	sp, #12
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	6078      	str	r0, [r7, #4]

	if(software)
 8000d18:	4b17      	ldr	r3, [pc, #92]	; (8000d78 <HAL_ADC_ConvCpltCallback+0x68>)
 8000d1a:	781b      	ldrb	r3, [r3, #0]
 8000d1c:	2b00      	cmp	r3, #0
 8000d1e:	d009      	beq.n	8000d34 <HAL_ADC_ConvCpltCallback+0x24>
	{
		adc_value = HAL_ADC_GetValue(&hadc3);
 8000d20:	4816      	ldr	r0, [pc, #88]	; (8000d7c <HAL_ADC_ConvCpltCallback+0x6c>)
 8000d22:	f002 fba9 	bl	8003478 <HAL_ADC_GetValue>
 8000d26:	4603      	mov	r3, r0
 8000d28:	4a15      	ldr	r2, [pc, #84]	; (8000d80 <HAL_ADC_ConvCpltCallback+0x70>)
 8000d2a:	6013      	str	r3, [r2, #0]
		Read = true;
 8000d2c:	4b15      	ldr	r3, [pc, #84]	; (8000d84 <HAL_ADC_ConvCpltCallback+0x74>)
 8000d2e:	2201      	movs	r2, #1
 8000d30:	701a      	strb	r2, [r3, #0]
		adc_buf[adc_buf_index] = HAL_ADC_GetValue(&hadc3);
		process_buf(adc_buf, adc_buf_index);
		adc_buf_index++;
		adc_buf_index &= ADC_BUF_SIZE - 1;;
	}
}
 8000d32:	e01d      	b.n	8000d70 <HAL_ADC_ConvCpltCallback+0x60>
		HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 8000d34:	2101      	movs	r1, #1
 8000d36:	4814      	ldr	r0, [pc, #80]	; (8000d88 <HAL_ADC_ConvCpltCallback+0x78>)
 8000d38:	f003 fa83 	bl	8004242 <HAL_GPIO_TogglePin>
		adc_buf[adc_buf_index] = HAL_ADC_GetValue(&hadc3);
 8000d3c:	4b13      	ldr	r3, [pc, #76]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d3e:	681c      	ldr	r4, [r3, #0]
 8000d40:	480e      	ldr	r0, [pc, #56]	; (8000d7c <HAL_ADC_ConvCpltCallback+0x6c>)
 8000d42:	f002 fb99 	bl	8003478 <HAL_ADC_GetValue>
 8000d46:	4603      	mov	r3, r0
 8000d48:	4a11      	ldr	r2, [pc, #68]	; (8000d90 <HAL_ADC_ConvCpltCallback+0x80>)
 8000d4a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
		process_buf(adc_buf, adc_buf_index);
 8000d4e:	4b0f      	ldr	r3, [pc, #60]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d50:	681b      	ldr	r3, [r3, #0]
 8000d52:	4619      	mov	r1, r3
 8000d54:	480e      	ldr	r0, [pc, #56]	; (8000d90 <HAL_ADC_ConvCpltCallback+0x80>)
 8000d56:	f001 f9f5 	bl	8002144 <process_buf>
		adc_buf_index++;
 8000d5a:	4b0c      	ldr	r3, [pc, #48]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	3301      	adds	r3, #1
 8000d60:	4a0a      	ldr	r2, [pc, #40]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d62:	6013      	str	r3, [r2, #0]
		adc_buf_index &= ADC_BUF_SIZE - 1;;
 8000d64:	4b09      	ldr	r3, [pc, #36]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000d6c:	4a07      	ldr	r2, [pc, #28]	; (8000d8c <HAL_ADC_ConvCpltCallback+0x7c>)
 8000d6e:	6013      	str	r3, [r2, #0]
}
 8000d70:	bf00      	nop
 8000d72:	370c      	adds	r7, #12
 8000d74:	46bd      	mov	sp, r7
 8000d76:	bd90      	pop	{r4, r7, pc}
 8000d78:	2000043d 	.word	0x2000043d
 8000d7c:	20010444 	.word	0x20010444
 8000d80:	20010440 	.word	0x20010440
 8000d84:	2000043c 	.word	0x2000043c
 8000d88:	40020400 	.word	0x40020400
 8000d8c:	20000324 	.word	0x20000324
 8000d90:	20010594 	.word	0x20010594

08000d94 <check_command>:
float coef_ak[10] = {0.05, 0.005, 0.045, 0.1, 0.075, 0.025, 0.15, 0.02, 0.02, 0.01};

float coef_bk[10] = {0.05, 0.005, 0.045, 0.1, 0.075, 0.025, 0.15, 0.02, 0.02, 0.01};

unsigned char check_command(char* message)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b084      	sub	sp, #16
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
	char cmd = INV;
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "VER", 3)) * VER;
 8000da0:	2203      	movs	r2, #3
 8000da2:	4990      	ldr	r1, [pc, #576]	; (8000fe4 <check_command+0x250>)
 8000da4:	6878      	ldr	r0, [r7, #4]
 8000da6:	f007 fc1c 	bl	80085e2 <strncmp>
 8000daa:	4603      	mov	r3, r0
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	d101      	bne.n	8000db4 <check_command+0x20>
 8000db0:	220b      	movs	r2, #11
 8000db2:	e000      	b.n	8000db6 <check_command+0x22>
 8000db4:	2200      	movs	r2, #0
 8000db6:	7bfb      	ldrb	r3, [r7, #15]
 8000db8:	4413      	add	r3, r2
 8000dba:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "FNF", 3)) * FNF;
 8000dbc:	2203      	movs	r2, #3
 8000dbe:	498a      	ldr	r1, [pc, #552]	; (8000fe8 <check_command+0x254>)
 8000dc0:	6878      	ldr	r0, [r7, #4]
 8000dc2:	f007 fc0e 	bl	80085e2 <strncmp>
 8000dc6:	4603      	mov	r3, r0
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d101      	bne.n	8000dd0 <check_command+0x3c>
 8000dcc:	2210      	movs	r2, #16
 8000dce:	e000      	b.n	8000dd2 <check_command+0x3e>
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	7bfb      	ldrb	r3, [r7, #15]
 8000dd4:	4413      	add	r3, r2
 8000dd6:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "FFF", 3)) * FFF;
 8000dd8:	2203      	movs	r2, #3
 8000dda:	4984      	ldr	r1, [pc, #528]	; (8000fec <check_command+0x258>)
 8000ddc:	6878      	ldr	r0, [r7, #4]
 8000dde:	f007 fc00 	bl	80085e2 <strncmp>
 8000de2:	4603      	mov	r3, r0
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d101      	bne.n	8000dec <check_command+0x58>
 8000de8:	2211      	movs	r2, #17
 8000dea:	e000      	b.n	8000dee <check_command+0x5a>
 8000dec:	2200      	movs	r2, #0
 8000dee:	7bfb      	ldrb	r3, [r7, #15]
 8000df0:	4413      	add	r3, r2
 8000df2:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "FNI", 3)) * FNI;
 8000df4:	2203      	movs	r2, #3
 8000df6:	497e      	ldr	r1, [pc, #504]	; (8000ff0 <check_command+0x25c>)
 8000df8:	6878      	ldr	r0, [r7, #4]
 8000dfa:	f007 fbf2 	bl	80085e2 <strncmp>
 8000dfe:	4603      	mov	r3, r0
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d101      	bne.n	8000e08 <check_command+0x74>
 8000e04:	220e      	movs	r2, #14
 8000e06:	e000      	b.n	8000e0a <check_command+0x76>
 8000e08:	2200      	movs	r2, #0
 8000e0a:	7bfb      	ldrb	r3, [r7, #15]
 8000e0c:	4413      	add	r3, r2
 8000e0e:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "FFI", 3)) * FFI;
 8000e10:	2203      	movs	r2, #3
 8000e12:	4978      	ldr	r1, [pc, #480]	; (8000ff4 <check_command+0x260>)
 8000e14:	6878      	ldr	r0, [r7, #4]
 8000e16:	f007 fbe4 	bl	80085e2 <strncmp>
 8000e1a:	4603      	mov	r3, r0
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	d101      	bne.n	8000e24 <check_command+0x90>
 8000e20:	220f      	movs	r2, #15
 8000e22:	e000      	b.n	8000e26 <check_command+0x92>
 8000e24:	2200      	movs	r2, #0
 8000e26:	7bfb      	ldrb	r3, [r7, #15]
 8000e28:	4413      	add	r3, r2
 8000e2a:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "ST", 2)) * ST;
 8000e2c:	2202      	movs	r2, #2
 8000e2e:	4972      	ldr	r1, [pc, #456]	; (8000ff8 <check_command+0x264>)
 8000e30:	6878      	ldr	r0, [r7, #4]
 8000e32:	f007 fbd6 	bl	80085e2 <strncmp>
 8000e36:	4603      	mov	r3, r0
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d101      	bne.n	8000e40 <check_command+0xac>
 8000e3c:	2213      	movs	r2, #19
 8000e3e:	e000      	b.n	8000e42 <check_command+0xae>
 8000e40:	2200      	movs	r2, #0
 8000e42:	7bfb      	ldrb	r3, [r7, #15]
 8000e44:	4413      	add	r3, r2
 8000e46:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "MR", 2)) * MR;
 8000e48:	2202      	movs	r2, #2
 8000e4a:	496c      	ldr	r1, [pc, #432]	; (8000ffc <check_command+0x268>)
 8000e4c:	6878      	ldr	r0, [r7, #4]
 8000e4e:	f007 fbc8 	bl	80085e2 <strncmp>
 8000e52:	4603      	mov	r3, r0
 8000e54:	2b00      	cmp	r3, #0
 8000e56:	bf0c      	ite	eq
 8000e58:	2301      	moveq	r3, #1
 8000e5a:	2300      	movne	r3, #0
 8000e5c:	b2db      	uxtb	r3, r3
 8000e5e:	461a      	mov	r2, r3
 8000e60:	7bfb      	ldrb	r3, [r7, #15]
 8000e62:	4413      	add	r3, r2
 8000e64:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "MW", 2)) * MW;
 8000e66:	2202      	movs	r2, #2
 8000e68:	4965      	ldr	r1, [pc, #404]	; (8001000 <check_command+0x26c>)
 8000e6a:	6878      	ldr	r0, [r7, #4]
 8000e6c:	f007 fbb9 	bl	80085e2 <strncmp>
 8000e70:	4603      	mov	r3, r0
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	d101      	bne.n	8000e7a <check_command+0xe6>
 8000e76:	2202      	movs	r2, #2
 8000e78:	e000      	b.n	8000e7c <check_command+0xe8>
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	7bfb      	ldrb	r3, [r7, #15]
 8000e7e:	4413      	add	r3, r2
 8000e80:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "MI", 2)) * MI;
 8000e82:	2202      	movs	r2, #2
 8000e84:	495f      	ldr	r1, [pc, #380]	; (8001004 <check_command+0x270>)
 8000e86:	6878      	ldr	r0, [r7, #4]
 8000e88:	f007 fbab 	bl	80085e2 <strncmp>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d101      	bne.n	8000e96 <check_command+0x102>
 8000e92:	2203      	movs	r2, #3
 8000e94:	e000      	b.n	8000e98 <check_command+0x104>
 8000e96:	2200      	movs	r2, #0
 8000e98:	7bfb      	ldrb	r3, [r7, #15]
 8000e9a:	4413      	add	r3, r2
 8000e9c:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "MO", 2)) * MO;
 8000e9e:	2202      	movs	r2, #2
 8000ea0:	4959      	ldr	r1, [pc, #356]	; (8001008 <check_command+0x274>)
 8000ea2:	6878      	ldr	r0, [r7, #4]
 8000ea4:	f007 fb9d 	bl	80085e2 <strncmp>
 8000ea8:	4603      	mov	r3, r0
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d101      	bne.n	8000eb2 <check_command+0x11e>
 8000eae:	2204      	movs	r2, #4
 8000eb0:	e000      	b.n	8000eb4 <check_command+0x120>
 8000eb2:	2200      	movs	r2, #0
 8000eb4:	7bfb      	ldrb	r3, [r7, #15]
 8000eb6:	4413      	add	r3, r2
 8000eb8:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "RD", 2)) * RD;
 8000eba:	2202      	movs	r2, #2
 8000ebc:	4953      	ldr	r1, [pc, #332]	; (800100c <check_command+0x278>)
 8000ebe:	6878      	ldr	r0, [r7, #4]
 8000ec0:	f007 fb8f 	bl	80085e2 <strncmp>
 8000ec4:	4603      	mov	r3, r0
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d101      	bne.n	8000ece <check_command+0x13a>
 8000eca:	2205      	movs	r2, #5
 8000ecc:	e000      	b.n	8000ed0 <check_command+0x13c>
 8000ece:	2200      	movs	r2, #0
 8000ed0:	7bfb      	ldrb	r3, [r7, #15]
 8000ed2:	4413      	add	r3, r2
 8000ed4:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "WD", 2)) * WD;
 8000ed6:	2202      	movs	r2, #2
 8000ed8:	494d      	ldr	r1, [pc, #308]	; (8001010 <check_command+0x27c>)
 8000eda:	6878      	ldr	r0, [r7, #4]
 8000edc:	f007 fb81 	bl	80085e2 <strncmp>
 8000ee0:	4603      	mov	r3, r0
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	d101      	bne.n	8000eea <check_command+0x156>
 8000ee6:	2206      	movs	r2, #6
 8000ee8:	e000      	b.n	8000eec <check_command+0x158>
 8000eea:	2200      	movs	r2, #0
 8000eec:	7bfb      	ldrb	r3, [r7, #15]
 8000eee:	4413      	add	r3, r2
 8000ef0:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "RA", 2)) * RA;
 8000ef2:	2202      	movs	r2, #2
 8000ef4:	4947      	ldr	r1, [pc, #284]	; (8001014 <check_command+0x280>)
 8000ef6:	6878      	ldr	r0, [r7, #4]
 8000ef8:	f007 fb73 	bl	80085e2 <strncmp>
 8000efc:	4603      	mov	r3, r0
 8000efe:	2b00      	cmp	r3, #0
 8000f00:	d101      	bne.n	8000f06 <check_command+0x172>
 8000f02:	2207      	movs	r2, #7
 8000f04:	e000      	b.n	8000f08 <check_command+0x174>
 8000f06:	2200      	movs	r2, #0
 8000f08:	7bfb      	ldrb	r3, [r7, #15]
 8000f0a:	4413      	add	r3, r2
 8000f0c:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "WA", 2)) * WA;
 8000f0e:	2202      	movs	r2, #2
 8000f10:	4941      	ldr	r1, [pc, #260]	; (8001018 <check_command+0x284>)
 8000f12:	6878      	ldr	r0, [r7, #4]
 8000f14:	f007 fb65 	bl	80085e2 <strncmp>
 8000f18:	4603      	mov	r3, r0
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d101      	bne.n	8000f22 <check_command+0x18e>
 8000f1e:	2208      	movs	r2, #8
 8000f20:	e000      	b.n	8000f24 <check_command+0x190>
 8000f22:	2200      	movs	r2, #0
 8000f24:	7bfb      	ldrb	r3, [r7, #15]
 8000f26:	4413      	add	r3, r2
 8000f28:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "SP", 2)) * SP;
 8000f2a:	2202      	movs	r2, #2
 8000f2c:	493b      	ldr	r1, [pc, #236]	; (800101c <check_command+0x288>)
 8000f2e:	6878      	ldr	r0, [r7, #4]
 8000f30:	f007 fb57 	bl	80085e2 <strncmp>
 8000f34:	4603      	mov	r3, r0
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d101      	bne.n	8000f3e <check_command+0x1aa>
 8000f3a:	220c      	movs	r2, #12
 8000f3c:	e000      	b.n	8000f40 <check_command+0x1ac>
 8000f3e:	2200      	movs	r2, #0
 8000f40:	7bfb      	ldrb	r3, [r7, #15]
 8000f42:	4413      	add	r3, r2
 8000f44:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "AC", 2)) * AC;
 8000f46:	2202      	movs	r2, #2
 8000f48:	4935      	ldr	r1, [pc, #212]	; (8001020 <check_command+0x28c>)
 8000f4a:	6878      	ldr	r0, [r7, #4]
 8000f4c:	f007 fb49 	bl	80085e2 <strncmp>
 8000f50:	4603      	mov	r3, r0
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d101      	bne.n	8000f5a <check_command+0x1c6>
 8000f56:	220d      	movs	r2, #13
 8000f58:	e000      	b.n	8000f5c <check_command+0x1c8>
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	7bfb      	ldrb	r3, [r7, #15]
 8000f5e:	4413      	add	r3, r2
 8000f60:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "S ", 2)) * S;
 8000f62:	2202      	movs	r2, #2
 8000f64:	492f      	ldr	r1, [pc, #188]	; (8001024 <check_command+0x290>)
 8000f66:	6878      	ldr	r0, [r7, #4]
 8000f68:	f007 fb3b 	bl	80085e2 <strncmp>
 8000f6c:	4603      	mov	r3, r0
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d101      	bne.n	8000f76 <check_command+0x1e2>
 8000f72:	2212      	movs	r2, #18
 8000f74:	e000      	b.n	8000f78 <check_command+0x1e4>
 8000f76:	2200      	movs	r2, #0
 8000f78:	7bfb      	ldrb	r3, [r7, #15]
 8000f7a:	4413      	add	r3, r2
 8000f7c:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "S\r", 2)) * S;
 8000f7e:	2202      	movs	r2, #2
 8000f80:	4929      	ldr	r1, [pc, #164]	; (8001028 <check_command+0x294>)
 8000f82:	6878      	ldr	r0, [r7, #4]
 8000f84:	f007 fb2d 	bl	80085e2 <strncmp>
 8000f88:	4603      	mov	r3, r0
 8000f8a:	2b00      	cmp	r3, #0
 8000f8c:	d101      	bne.n	8000f92 <check_command+0x1fe>
 8000f8e:	2212      	movs	r2, #18
 8000f90:	e000      	b.n	8000f94 <check_command+0x200>
 8000f92:	2200      	movs	r2, #0
 8000f94:	7bfb      	ldrb	r3, [r7, #15]
 8000f96:	4413      	add	r3, r2
 8000f98:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "$", 1)) * LAST;
 8000f9a:	687b      	ldr	r3, [r7, #4]
 8000f9c:	781a      	ldrb	r2, [r3, #0]
 8000f9e:	4b23      	ldr	r3, [pc, #140]	; (800102c <check_command+0x298>)
 8000fa0:	781b      	ldrb	r3, [r3, #0]
 8000fa2:	1ad3      	subs	r3, r2, r3
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d101      	bne.n	8000fac <check_command+0x218>
 8000fa8:	2209      	movs	r2, #9
 8000faa:	e000      	b.n	8000fae <check_command+0x21a>
 8000fac:	2200      	movs	r2, #0
 8000fae:	7bfb      	ldrb	r3, [r7, #15]
 8000fb0:	4413      	add	r3, r2
 8000fb2:	73fb      	strb	r3, [r7, #15]

	cmd += (!strncmp((char*) message, "?", 1)) * HELP;
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	781a      	ldrb	r2, [r3, #0]
 8000fb8:	4b1d      	ldr	r3, [pc, #116]	; (8001030 <check_command+0x29c>)
 8000fba:	781b      	ldrb	r3, [r3, #0]
 8000fbc:	1ad3      	subs	r3, r2, r3
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d101      	bne.n	8000fc6 <check_command+0x232>
 8000fc2:	220a      	movs	r2, #10
 8000fc4:	e000      	b.n	8000fc8 <check_command+0x234>
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	7bfb      	ldrb	r3, [r7, #15]
 8000fca:	4413      	add	r3, r2
 8000fcc:	73fb      	strb	r3, [r7, #15]

	if(cmd > ST)
 8000fce:	7bfb      	ldrb	r3, [r7, #15]
 8000fd0:	2b13      	cmp	r3, #19
 8000fd2:	d901      	bls.n	8000fd8 <check_command+0x244>
		cmd = INV;
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	73fb      	strb	r3, [r7, #15]

	return cmd;
 8000fd8:	7bfb      	ldrb	r3, [r7, #15]
}
 8000fda:	4618      	mov	r0, r3
 8000fdc:	3710      	adds	r7, #16
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	bd80      	pop	{r7, pc}
 8000fe2:	bf00      	nop
 8000fe4:	0800c788 	.word	0x0800c788
 8000fe8:	0800c78c 	.word	0x0800c78c
 8000fec:	0800c790 	.word	0x0800c790
 8000ff0:	0800c794 	.word	0x0800c794
 8000ff4:	0800c798 	.word	0x0800c798
 8000ff8:	0800c79c 	.word	0x0800c79c
 8000ffc:	0800c7a0 	.word	0x0800c7a0
 8001000:	0800c7a4 	.word	0x0800c7a4
 8001004:	0800c7a8 	.word	0x0800c7a8
 8001008:	0800c7ac 	.word	0x0800c7ac
 800100c:	0800c7b0 	.word	0x0800c7b0
 8001010:	0800c7b4 	.word	0x0800c7b4
 8001014:	0800c7b8 	.word	0x0800c7b8
 8001018:	0800c7bc 	.word	0x0800c7bc
 800101c:	0800c7c0 	.word	0x0800c7c0
 8001020:	0800c7c4 	.word	0x0800c7c4
 8001024:	0800c7c8 	.word	0x0800c7c8
 8001028:	0800c7cc 	.word	0x0800c7cc
 800102c:	0800c7d0 	.word	0x0800c7d0
 8001030:	0800c7d4 	.word	0x0800c7d4

08001034 <proc_inv_cmd>:

//------------------------------------------------------------------------------------------------------------------


void proc_inv_cmd(char* message)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	b082      	sub	sp, #8
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
	send_UART("Invalid instruction. Type '?' for Help.");
 800103c:	4803      	ldr	r0, [pc, #12]	; (800104c <proc_inv_cmd+0x18>)
 800103e:	f001 fe37 	bl	8002cb0 <send_UART>
}
 8001042:	bf00      	nop
 8001044:	3708      	adds	r7, #8
 8001046:	46bd      	mov	sp, r7
 8001048:	bd80      	pop	{r7, pc}
 800104a:	bf00      	nop
 800104c:	0800c7d8 	.word	0x0800c7d8

08001050 <proc_mr_cmd>:


void proc_mr_cmd(char* message)
{
 8001050:	b5b0      	push	{r4, r5, r7, lr}
 8001052:	b088      	sub	sp, #32
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
	unsigned int addr, length;

	if(sscanf((char*)message, "MR %x %x", &addr, &length) == 2)
 8001058:	f107 030c 	add.w	r3, r7, #12
 800105c:	f107 0210 	add.w	r2, r7, #16
 8001060:	4932      	ldr	r1, [pc, #200]	; (800112c <proc_mr_cmd+0xdc>)
 8001062:	6878      	ldr	r0, [r7, #4]
 8001064:	f007 fa44 	bl	80084f0 <siscanf>
 8001068:	4603      	mov	r3, r0
 800106a:	2b02      	cmp	r3, #2
 800106c:	d157      	bne.n	800111e <proc_mr_cmd+0xce>
	{
 800106e:	466b      	mov	r3, sp
 8001070:	461d      	mov	r5, r3
		char data[length];
 8001072:	68fc      	ldr	r4, [r7, #12]
 8001074:	4623      	mov	r3, r4
 8001076:	3b01      	subs	r3, #1
 8001078:	61bb      	str	r3, [r7, #24]
 800107a:	4620      	mov	r0, r4
 800107c:	f04f 0100 	mov.w	r1, #0
 8001080:	f04f 0200 	mov.w	r2, #0
 8001084:	f04f 0300 	mov.w	r3, #0
 8001088:	00cb      	lsls	r3, r1, #3
 800108a:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 800108e:	00c2      	lsls	r2, r0, #3
 8001090:	4620      	mov	r0, r4
 8001092:	f04f 0100 	mov.w	r1, #0
 8001096:	f04f 0200 	mov.w	r2, #0
 800109a:	f04f 0300 	mov.w	r3, #0
 800109e:	00cb      	lsls	r3, r1, #3
 80010a0:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 80010a4:	00c2      	lsls	r2, r0, #3
 80010a6:	1de3      	adds	r3, r4, #7
 80010a8:	08db      	lsrs	r3, r3, #3
 80010aa:	00db      	lsls	r3, r3, #3
 80010ac:	ebad 0d03 	sub.w	sp, sp, r3
 80010b0:	466b      	mov	r3, sp
 80010b2:	3300      	adds	r3, #0
 80010b4:	617b      	str	r3, [r7, #20]

		if(memory_read(addr, length, data))
 80010b6:	693b      	ldr	r3, [r7, #16]
 80010b8:	68f9      	ldr	r1, [r7, #12]
 80010ba:	697a      	ldr	r2, [r7, #20]
 80010bc:	4618      	mov	r0, r3
 80010be:	f000 fcf7 	bl	8001ab0 <memory_read>
 80010c2:	4603      	mov	r3, r0
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d025      	beq.n	8001114 <proc_mr_cmd+0xc4>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80010c8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80010cc:	6879      	ldr	r1, [r7, #4]
 80010ce:	4818      	ldr	r0, [pc, #96]	; (8001130 <proc_mr_cmd+0xe0>)
 80010d0:	f007 fa99 	bl	8008606 <strncpy>

			sprintf((char*) message, "Memory read: ");
 80010d4:	4917      	ldr	r1, [pc, #92]	; (8001134 <proc_mr_cmd+0xe4>)
 80010d6:	6878      	ldr	r0, [r7, #4]
 80010d8:	f007 f9ea 	bl	80084b0 <siprintf>

			for(int i = 0; i < length; i++)
 80010dc:	2300      	movs	r3, #0
 80010de:	61fb      	str	r3, [r7, #28]
 80010e0:	e010      	b.n	8001104 <proc_mr_cmd+0xb4>
			{
				sprintf((char*) message + strlen((char*) message), "%02X ", data[i]);
 80010e2:	6878      	ldr	r0, [r7, #4]
 80010e4:	f7ff f8b6 	bl	8000254 <strlen>
 80010e8:	4602      	mov	r2, r0
 80010ea:	687b      	ldr	r3, [r7, #4]
 80010ec:	1898      	adds	r0, r3, r2
 80010ee:	697a      	ldr	r2, [r7, #20]
 80010f0:	69fb      	ldr	r3, [r7, #28]
 80010f2:	4413      	add	r3, r2
 80010f4:	781b      	ldrb	r3, [r3, #0]
 80010f6:	461a      	mov	r2, r3
 80010f8:	490f      	ldr	r1, [pc, #60]	; (8001138 <proc_mr_cmd+0xe8>)
 80010fa:	f007 f9d9 	bl	80084b0 <siprintf>
			for(int i = 0; i < length; i++)
 80010fe:	69fb      	ldr	r3, [r7, #28]
 8001100:	3301      	adds	r3, #1
 8001102:	61fb      	str	r3, [r7, #28]
 8001104:	69fa      	ldr	r2, [r7, #28]
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	429a      	cmp	r2, r3
 800110a:	d3ea      	bcc.n	80010e2 <proc_mr_cmd+0x92>
			}
			send_UART((char*) message);
 800110c:	6878      	ldr	r0, [r7, #4]
 800110e:	f001 fdcf 	bl	8002cb0 <send_UART>
 8001112:	e002      	b.n	800111a <proc_mr_cmd+0xca>
		}
		else
			send_UART("Invalid Memory Read instruction argument values.\r");
 8001114:	4809      	ldr	r0, [pc, #36]	; (800113c <proc_mr_cmd+0xec>)
 8001116:	f001 fdcb 	bl	8002cb0 <send_UART>
 800111a:	46ad      	mov	sp, r5
	}
	else
		send_UART("Invalid Memory Read instruction syntax.");
}
 800111c:	e002      	b.n	8001124 <proc_mr_cmd+0xd4>
		send_UART("Invalid Memory Read instruction syntax.");
 800111e:	4808      	ldr	r0, [pc, #32]	; (8001140 <proc_mr_cmd+0xf0>)
 8001120:	f001 fdc6 	bl	8002cb0 <send_UART>
}
 8001124:	bf00      	nop
 8001126:	3720      	adds	r7, #32
 8001128:	46bd      	mov	sp, r7
 800112a:	bdb0      	pop	{r4, r5, r7, pc}
 800112c:	0800c800 	.word	0x0800c800
 8001130:	20014594 	.word	0x20014594
 8001134:	0800c80c 	.word	0x0800c80c
 8001138:	0800c81c 	.word	0x0800c81c
 800113c:	0800c824 	.word	0x0800c824
 8001140:	0800c858 	.word	0x0800c858

08001144 <proc_mw_cmd>:


void proc_mw_cmd(char* message)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b088      	sub	sp, #32
 8001148:	af02      	add	r7, sp, #8
 800114a:	6078      	str	r0, [r7, #4]
	unsigned int addr, length, data;

	if(sscanf((char*) message, "MW %x %x %x", &addr, &length, &data) == 3)
 800114c:	f107 0110 	add.w	r1, r7, #16
 8001150:	f107 0214 	add.w	r2, r7, #20
 8001154:	f107 030c 	add.w	r3, r7, #12
 8001158:	9300      	str	r3, [sp, #0]
 800115a:	460b      	mov	r3, r1
 800115c:	4912      	ldr	r1, [pc, #72]	; (80011a8 <proc_mw_cmd+0x64>)
 800115e:	6878      	ldr	r0, [r7, #4]
 8001160:	f007 f9c6 	bl	80084f0 <siscanf>
 8001164:	4603      	mov	r3, r0
 8001166:	2b03      	cmp	r3, #3
 8001168:	d116      	bne.n	8001198 <proc_mw_cmd+0x54>
	{
		if(memory_write(addr, length, data))
 800116a:	697b      	ldr	r3, [r7, #20]
 800116c:	6939      	ldr	r1, [r7, #16]
 800116e:	68fa      	ldr	r2, [r7, #12]
 8001170:	4618      	mov	r0, r3
 8001172:	f000 fcd1 	bl	8001b18 <memory_write>
 8001176:	4603      	mov	r3, r0
 8001178:	2b00      	cmp	r3, #0
 800117a:	d009      	beq.n	8001190 <proc_mw_cmd+0x4c>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800117c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001180:	6879      	ldr	r1, [r7, #4]
 8001182:	480a      	ldr	r0, [pc, #40]	; (80011ac <proc_mw_cmd+0x68>)
 8001184:	f007 fa3f 	bl	8008606 <strncpy>
			send_UART("Memory written with success.");
 8001188:	4809      	ldr	r0, [pc, #36]	; (80011b0 <proc_mw_cmd+0x6c>)
 800118a:	f001 fd91 	bl	8002cb0 <send_UART>
		else
			send_UART("Invalid Memory Write instruction argument values.");
	}
	else
		send_UART("Invalid Memory Write instruction syntax.");
}
 800118e:	e006      	b.n	800119e <proc_mw_cmd+0x5a>
			send_UART("Invalid Memory Write instruction argument values.");
 8001190:	4808      	ldr	r0, [pc, #32]	; (80011b4 <proc_mw_cmd+0x70>)
 8001192:	f001 fd8d 	bl	8002cb0 <send_UART>
}
 8001196:	e002      	b.n	800119e <proc_mw_cmd+0x5a>
		send_UART("Invalid Memory Write instruction syntax.");
 8001198:	4807      	ldr	r0, [pc, #28]	; (80011b8 <proc_mw_cmd+0x74>)
 800119a:	f001 fd89 	bl	8002cb0 <send_UART>
}
 800119e:	bf00      	nop
 80011a0:	3718      	adds	r7, #24
 80011a2:	46bd      	mov	sp, r7
 80011a4:	bd80      	pop	{r7, pc}
 80011a6:	bf00      	nop
 80011a8:	0800c880 	.word	0x0800c880
 80011ac:	20014594 	.word	0x20014594
 80011b0:	0800c88c 	.word	0x0800c88c
 80011b4:	0800c8ac 	.word	0x0800c8ac
 80011b8:	0800c8e0 	.word	0x0800c8e0

080011bc <proc_mi_cmd>:


void proc_mi_cmd(char* message)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	b084      	sub	sp, #16
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "MI %x %x", &port_addr, &pin_setting) == 2)
 80011c4:	f107 0308 	add.w	r3, r7, #8
 80011c8:	f107 020c 	add.w	r2, r7, #12
 80011cc:	4918      	ldr	r1, [pc, #96]	; (8001230 <proc_mi_cmd+0x74>)
 80011ce:	6878      	ldr	r0, [r7, #4]
 80011d0:	f007 f98e 	bl	80084f0 <siscanf>
 80011d4:	4603      	mov	r3, r0
 80011d6:	2b02      	cmp	r3, #2
 80011d8:	d123      	bne.n	8001222 <proc_mi_cmd+0x66>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	68ba      	ldr	r2, [r7, #8]
 80011de:	4611      	mov	r1, r2
 80011e0:	4618      	mov	r0, r3
 80011e2:	f001 f8f9 	bl	80023d8 <is_GPIO_pin_free>
 80011e6:	4603      	mov	r3, r0
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d016      	beq.n	800121a <proc_mi_cmd+0x5e>
		{
			if(make_pin_input(port_addr, pin_setting))
 80011ec:	68fb      	ldr	r3, [r7, #12]
 80011ee:	68ba      	ldr	r2, [r7, #8]
 80011f0:	4611      	mov	r1, r2
 80011f2:	4618      	mov	r0, r3
 80011f4:	f000 fcc8 	bl	8001b88 <make_pin_input>
 80011f8:	4603      	mov	r3, r0
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d009      	beq.n	8001212 <proc_mi_cmd+0x56>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80011fe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001202:	6879      	ldr	r1, [r7, #4]
 8001204:	480b      	ldr	r0, [pc, #44]	; (8001234 <proc_mi_cmd+0x78>)
 8001206:	f007 f9fe 	bl	8008606 <strncpy>
				send_UART("Pin(s) set as input with success.");
 800120a:	480b      	ldr	r0, [pc, #44]	; (8001238 <proc_mi_cmd+0x7c>)
 800120c:	f001 fd50 	bl	8002cb0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
	  send_UART("Invalid Make Pin Input instruction syntax.");
}
 8001210:	e00a      	b.n	8001228 <proc_mi_cmd+0x6c>
				send_UART("Invalid Make Pin Input instruction argument values.");
 8001212:	480a      	ldr	r0, [pc, #40]	; (800123c <proc_mi_cmd+0x80>)
 8001214:	f001 fd4c 	bl	8002cb0 <send_UART>
}
 8001218:	e006      	b.n	8001228 <proc_mi_cmd+0x6c>
			send_UART("At least one inputted pin is reserved to peripherals.");
 800121a:	4809      	ldr	r0, [pc, #36]	; (8001240 <proc_mi_cmd+0x84>)
 800121c:	f001 fd48 	bl	8002cb0 <send_UART>
}
 8001220:	e002      	b.n	8001228 <proc_mi_cmd+0x6c>
	  send_UART("Invalid Make Pin Input instruction syntax.");
 8001222:	4808      	ldr	r0, [pc, #32]	; (8001244 <proc_mi_cmd+0x88>)
 8001224:	f001 fd44 	bl	8002cb0 <send_UART>
}
 8001228:	bf00      	nop
 800122a:	3710      	adds	r7, #16
 800122c:	46bd      	mov	sp, r7
 800122e:	bd80      	pop	{r7, pc}
 8001230:	0800c90c 	.word	0x0800c90c
 8001234:	20014594 	.word	0x20014594
 8001238:	0800c918 	.word	0x0800c918
 800123c:	0800c93c 	.word	0x0800c93c
 8001240:	0800c970 	.word	0x0800c970
 8001244:	0800c9a8 	.word	0x0800c9a8

08001248 <proc_mo_cmd>:


void proc_mo_cmd(char* message)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b084      	sub	sp, #16
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "MO %x %x", &port_addr, &pin_setting) == 2)
 8001250:	f107 0308 	add.w	r3, r7, #8
 8001254:	f107 020c 	add.w	r2, r7, #12
 8001258:	4918      	ldr	r1, [pc, #96]	; (80012bc <proc_mo_cmd+0x74>)
 800125a:	6878      	ldr	r0, [r7, #4]
 800125c:	f007 f948 	bl	80084f0 <siscanf>
 8001260:	4603      	mov	r3, r0
 8001262:	2b02      	cmp	r3, #2
 8001264:	d123      	bne.n	80012ae <proc_mo_cmd+0x66>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 8001266:	68fb      	ldr	r3, [r7, #12]
 8001268:	68ba      	ldr	r2, [r7, #8]
 800126a:	4611      	mov	r1, r2
 800126c:	4618      	mov	r0, r3
 800126e:	f001 f8b3 	bl	80023d8 <is_GPIO_pin_free>
 8001272:	4603      	mov	r3, r0
 8001274:	2b00      	cmp	r3, #0
 8001276:	d016      	beq.n	80012a6 <proc_mo_cmd+0x5e>
		{
			if(make_pin_output(port_addr, pin_setting))
 8001278:	68fb      	ldr	r3, [r7, #12]
 800127a:	68ba      	ldr	r2, [r7, #8]
 800127c:	4611      	mov	r1, r2
 800127e:	4618      	mov	r0, r3
 8001280:	f000 fd1e 	bl	8001cc0 <make_pin_output>
 8001284:	4603      	mov	r3, r0
 8001286:	2b00      	cmp	r3, #0
 8001288:	d009      	beq.n	800129e <proc_mo_cmd+0x56>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800128a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800128e:	6879      	ldr	r1, [r7, #4]
 8001290:	480b      	ldr	r0, [pc, #44]	; (80012c0 <proc_mo_cmd+0x78>)
 8001292:	f007 f9b8 	bl	8008606 <strncpy>
				send_UART("Pin(s) set as output with success.");
 8001296:	480b      	ldr	r0, [pc, #44]	; (80012c4 <proc_mo_cmd+0x7c>)
 8001298:	f001 fd0a 	bl	8002cb0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
		send_UART("Invalid Make Pin Output instruction syntax.");
}
 800129c:	e00a      	b.n	80012b4 <proc_mo_cmd+0x6c>
				send_UART("Invalid Make Pin Output instruction argument values.");
 800129e:	480a      	ldr	r0, [pc, #40]	; (80012c8 <proc_mo_cmd+0x80>)
 80012a0:	f001 fd06 	bl	8002cb0 <send_UART>
}
 80012a4:	e006      	b.n	80012b4 <proc_mo_cmd+0x6c>
			send_UART("At least one inputted pin is reserved to peripherals.");
 80012a6:	4809      	ldr	r0, [pc, #36]	; (80012cc <proc_mo_cmd+0x84>)
 80012a8:	f001 fd02 	bl	8002cb0 <send_UART>
}
 80012ac:	e002      	b.n	80012b4 <proc_mo_cmd+0x6c>
		send_UART("Invalid Make Pin Output instruction syntax.");
 80012ae:	4808      	ldr	r0, [pc, #32]	; (80012d0 <proc_mo_cmd+0x88>)
 80012b0:	f001 fcfe 	bl	8002cb0 <send_UART>
}
 80012b4:	bf00      	nop
 80012b6:	3710      	adds	r7, #16
 80012b8:	46bd      	mov	sp, r7
 80012ba:	bd80      	pop	{r7, pc}
 80012bc:	0800c9d4 	.word	0x0800c9d4
 80012c0:	20014594 	.word	0x20014594
 80012c4:	0800c9e0 	.word	0x0800c9e0
 80012c8:	0800ca04 	.word	0x0800ca04
 80012cc:	0800c970 	.word	0x0800c970
 80012d0:	0800ca3c 	.word	0x0800ca3c

080012d4 <proc_rd_cmd>:


void proc_rd_cmd(char* message)
{
 80012d4:	b580      	push	{r7, lr}
 80012d6:	b08a      	sub	sp, #40	; 0x28
 80012d8:	af00      	add	r7, sp, #0
 80012da:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "RD %x %x", &port_addr, &pin_setting) == 2)
 80012dc:	f107 031c 	add.w	r3, r7, #28
 80012e0:	f107 0220 	add.w	r2, r7, #32
 80012e4:	492a      	ldr	r1, [pc, #168]	; (8001390 <proc_rd_cmd+0xbc>)
 80012e6:	6878      	ldr	r0, [r7, #4]
 80012e8:	f007 f902 	bl	80084f0 <siscanf>
 80012ec:	4603      	mov	r3, r0
 80012ee:	2b02      	cmp	r3, #2
 80012f0:	d147      	bne.n	8001382 <proc_rd_cmd+0xae>
	{
		GPIO_PinState pin_values[16];

		if(read_dig_input(port_addr, pin_setting, pin_values))
 80012f2:	6a3b      	ldr	r3, [r7, #32]
 80012f4:	69f9      	ldr	r1, [r7, #28]
 80012f6:	f107 020c 	add.w	r2, r7, #12
 80012fa:	4618      	mov	r0, r3
 80012fc:	f000 fd7e 	bl	8001dfc <read_dig_input>
 8001300:	4603      	mov	r3, r0
 8001302:	2b00      	cmp	r3, #0
 8001304:	d039      	beq.n	800137a <proc_rd_cmd+0xa6>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001306:	f44f 7280 	mov.w	r2, #256	; 0x100
 800130a:	6879      	ldr	r1, [r7, #4]
 800130c:	4821      	ldr	r0, [pc, #132]	; (8001394 <proc_rd_cmd+0xc0>)
 800130e:	f007 f97a 	bl	8008606 <strncpy>

			sprintf((char*) message, "Digital input read: ");
 8001312:	4921      	ldr	r1, [pc, #132]	; (8001398 <proc_rd_cmd+0xc4>)
 8001314:	6878      	ldr	r0, [r7, #4]
 8001316:	f007 f8cb 	bl	80084b0 <siprintf>

			for(int i = 15; i >= 0; i--)
 800131a:	230f      	movs	r3, #15
 800131c:	627b      	str	r3, [r7, #36]	; 0x24
 800131e:	e025      	b.n	800136c <proc_rd_cmd+0x98>
			{
				sprintf((char*) message + strlen((char*) message), "%d", pin_values[i]);
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f7fe ff97 	bl	8000254 <strlen>
 8001326:	4602      	mov	r2, r0
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	1898      	adds	r0, r3, r2
 800132c:	f107 020c 	add.w	r2, r7, #12
 8001330:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001332:	4413      	add	r3, r2
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	461a      	mov	r2, r3
 8001338:	4918      	ldr	r1, [pc, #96]	; (800139c <proc_rd_cmd+0xc8>)
 800133a:	f007 f8b9 	bl	80084b0 <siprintf>

				if(!(i % 4) && i)
 800133e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001340:	f003 0303 	and.w	r3, r3, #3
 8001344:	2b00      	cmp	r3, #0
 8001346:	d10e      	bne.n	8001366 <proc_rd_cmd+0x92>
 8001348:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800134a:	2b00      	cmp	r3, #0
 800134c:	d00b      	beq.n	8001366 <proc_rd_cmd+0x92>
					strcat((char*) message, " ");
 800134e:	6878      	ldr	r0, [r7, #4]
 8001350:	f7fe ff80 	bl	8000254 <strlen>
 8001354:	4603      	mov	r3, r0
 8001356:	461a      	mov	r2, r3
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	4413      	add	r3, r2
 800135c:	4910      	ldr	r1, [pc, #64]	; (80013a0 <proc_rd_cmd+0xcc>)
 800135e:	461a      	mov	r2, r3
 8001360:	460b      	mov	r3, r1
 8001362:	881b      	ldrh	r3, [r3, #0]
 8001364:	8013      	strh	r3, [r2, #0]
			for(int i = 15; i >= 0; i--)
 8001366:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001368:	3b01      	subs	r3, #1
 800136a:	627b      	str	r3, [r7, #36]	; 0x24
 800136c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800136e:	2b00      	cmp	r3, #0
 8001370:	dad6      	bge.n	8001320 <proc_rd_cmd+0x4c>
			}
			send_UART((char*) message);
 8001372:	6878      	ldr	r0, [r7, #4]
 8001374:	f001 fc9c 	bl	8002cb0 <send_UART>
		else
			send_UART("Invalid Read Digital Input instruction argument values.");
	}
	else
		send_UART("Invalid Read Digital Input instruction syntax.");
}
 8001378:	e006      	b.n	8001388 <proc_rd_cmd+0xb4>
			send_UART("Invalid Read Digital Input instruction argument values.");
 800137a:	480a      	ldr	r0, [pc, #40]	; (80013a4 <proc_rd_cmd+0xd0>)
 800137c:	f001 fc98 	bl	8002cb0 <send_UART>
}
 8001380:	e002      	b.n	8001388 <proc_rd_cmd+0xb4>
		send_UART("Invalid Read Digital Input instruction syntax.");
 8001382:	4809      	ldr	r0, [pc, #36]	; (80013a8 <proc_rd_cmd+0xd4>)
 8001384:	f001 fc94 	bl	8002cb0 <send_UART>
}
 8001388:	bf00      	nop
 800138a:	3728      	adds	r7, #40	; 0x28
 800138c:	46bd      	mov	sp, r7
 800138e:	bd80      	pop	{r7, pc}
 8001390:	0800ca68 	.word	0x0800ca68
 8001394:	20014594 	.word	0x20014594
 8001398:	0800ca74 	.word	0x0800ca74
 800139c:	0800ca8c 	.word	0x0800ca8c
 80013a0:	0800ca90 	.word	0x0800ca90
 80013a4:	0800ca94 	.word	0x0800ca94
 80013a8:	0800cacc 	.word	0x0800cacc

080013ac <proc_wd_cmd>:


void proc_wd_cmd(char* message)
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b088      	sub	sp, #32
 80013b0:	af02      	add	r7, sp, #8
 80013b2:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting, pin_values;

	if(sscanf((char*) message, "WD %x %x %x", &port_addr, &pin_setting, &pin_values) == 3)
 80013b4:	f107 0110 	add.w	r1, r7, #16
 80013b8:	f107 0214 	add.w	r2, r7, #20
 80013bc:	f107 030c 	add.w	r3, r7, #12
 80013c0:	9300      	str	r3, [sp, #0]
 80013c2:	460b      	mov	r3, r1
 80013c4:	4918      	ldr	r1, [pc, #96]	; (8001428 <proc_wd_cmd+0x7c>)
 80013c6:	6878      	ldr	r0, [r7, #4]
 80013c8:	f007 f892 	bl	80084f0 <siscanf>
 80013cc:	4603      	mov	r3, r0
 80013ce:	2b03      	cmp	r3, #3
 80013d0:	d123      	bne.n	800141a <proc_wd_cmd+0x6e>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 80013d2:	697b      	ldr	r3, [r7, #20]
 80013d4:	693a      	ldr	r2, [r7, #16]
 80013d6:	4611      	mov	r1, r2
 80013d8:	4618      	mov	r0, r3
 80013da:	f000 fffd 	bl	80023d8 <is_GPIO_pin_free>
 80013de:	4603      	mov	r3, r0
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d016      	beq.n	8001412 <proc_wd_cmd+0x66>
		{
			if(write_dig_output(port_addr, pin_setting, pin_values))
 80013e4:	697b      	ldr	r3, [r7, #20]
 80013e6:	6939      	ldr	r1, [r7, #16]
 80013e8:	68fa      	ldr	r2, [r7, #12]
 80013ea:	4618      	mov	r0, r3
 80013ec:	f000 fd50 	bl	8001e90 <write_dig_output>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d009      	beq.n	800140a <proc_wd_cmd+0x5e>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80013f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80013fa:	6879      	ldr	r1, [r7, #4]
 80013fc:	480b      	ldr	r0, [pc, #44]	; (800142c <proc_wd_cmd+0x80>)
 80013fe:	f007 f902 	bl	8008606 <strncpy>
				send_UART("Digital output value wrote with success.");
 8001402:	480b      	ldr	r0, [pc, #44]	; (8001430 <proc_wd_cmd+0x84>)
 8001404:	f001 fc54 	bl	8002cb0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
		send_UART("Invalid Write Digital Output instruction syntax.");
}
 8001408:	e00a      	b.n	8001420 <proc_wd_cmd+0x74>
				send_UART("Invalid Write Digital Output instruction argument values.");
 800140a:	480a      	ldr	r0, [pc, #40]	; (8001434 <proc_wd_cmd+0x88>)
 800140c:	f001 fc50 	bl	8002cb0 <send_UART>
}
 8001410:	e006      	b.n	8001420 <proc_wd_cmd+0x74>
			send_UART("At least one inputted pin is reserved to peripherals.");
 8001412:	4809      	ldr	r0, [pc, #36]	; (8001438 <proc_wd_cmd+0x8c>)
 8001414:	f001 fc4c 	bl	8002cb0 <send_UART>
}
 8001418:	e002      	b.n	8001420 <proc_wd_cmd+0x74>
		send_UART("Invalid Write Digital Output instruction syntax.");
 800141a:	4808      	ldr	r0, [pc, #32]	; (800143c <proc_wd_cmd+0x90>)
 800141c:	f001 fc48 	bl	8002cb0 <send_UART>
}
 8001420:	bf00      	nop
 8001422:	3718      	adds	r7, #24
 8001424:	46bd      	mov	sp, r7
 8001426:	bd80      	pop	{r7, pc}
 8001428:	0800cafc 	.word	0x0800cafc
 800142c:	20014594 	.word	0x20014594
 8001430:	0800cb08 	.word	0x0800cb08
 8001434:	0800cb34 	.word	0x0800cb34
 8001438:	0800c970 	.word	0x0800c970
 800143c:	0800cb70 	.word	0x0800cb70

08001440 <proc_ra_cmd>:


void proc_ra_cmd(char* message)
{
 8001440:	b580      	push	{r7, lr}
 8001442:	b088      	sub	sp, #32
 8001444:	af02      	add	r7, sp, #8
 8001446:	6078      	str	r0, [r7, #4]
	unsigned int addr3, value;

	if(sscanf((char*) message, "RA %x", &addr3) == 1)
 8001448:	f107 0310 	add.w	r3, r7, #16
 800144c:	461a      	mov	r2, r3
 800144e:	492c      	ldr	r1, [pc, #176]	; (8001500 <proc_ra_cmd+0xc0>)
 8001450:	6878      	ldr	r0, [r7, #4]
 8001452:	f007 f84d 	bl	80084f0 <siscanf>
 8001456:	4603      	mov	r3, r0
 8001458:	2b01      	cmp	r3, #1
 800145a:	d13f      	bne.n	80014dc <proc_ra_cmd+0x9c>
	{
		if(analog_read(addr3, &value))
 800145c:	693b      	ldr	r3, [r7, #16]
 800145e:	f107 020c 	add.w	r2, r7, #12
 8001462:	4611      	mov	r1, r2
 8001464:	4618      	mov	r0, r3
 8001466:	f000 fd5d 	bl	8001f24 <analog_read>
 800146a:	4603      	mov	r3, r0
 800146c:	2b00      	cmp	r3, #0
 800146e:	d031      	beq.n	80014d4 <proc_ra_cmd+0x94>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001470:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001474:	6879      	ldr	r1, [r7, #4]
 8001476:	4823      	ldr	r0, [pc, #140]	; (8001504 <proc_ra_cmd+0xc4>)
 8001478:	f007 f8c5 	bl	8008606 <strncpy>

			float volts = (float) value * 3.3 / 4095;
 800147c:	68fb      	ldr	r3, [r7, #12]
 800147e:	ee07 3a90 	vmov	s15, r3
 8001482:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001486:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800148a:	ed9f 6b19 	vldr	d6, [pc, #100]	; 80014f0 <proc_ra_cmd+0xb0>
 800148e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001492:	ed9f 5b19 	vldr	d5, [pc, #100]	; 80014f8 <proc_ra_cmd+0xb8>
 8001496:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800149a:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800149e:	edc7 7a05 	vstr	s15, [r7, #20]

			sprintf((char*) message, "Analog read digital value: ");
 80014a2:	4919      	ldr	r1, [pc, #100]	; (8001508 <proc_ra_cmd+0xc8>)
 80014a4:	6878      	ldr	r0, [r7, #4]
 80014a6:	f007 f803 	bl	80084b0 <siprintf>
			sprintf((char*) message + strlen((char*) message), "%d // %.2fV", value, volts);
 80014aa:	6878      	ldr	r0, [r7, #4]
 80014ac:	f7fe fed2 	bl	8000254 <strlen>
 80014b0:	4602      	mov	r2, r0
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	4413      	add	r3, r2
 80014b6:	68fa      	ldr	r2, [r7, #12]
 80014b8:	edd7 7a05 	vldr	s15, [r7, #20]
 80014bc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80014c0:	ed8d 7b00 	vstr	d7, [sp]
 80014c4:	4911      	ldr	r1, [pc, #68]	; (800150c <proc_ra_cmd+0xcc>)
 80014c6:	4618      	mov	r0, r3
 80014c8:	f006 fff2 	bl	80084b0 <siprintf>

			send_UART((char*) message);
 80014cc:	6878      	ldr	r0, [r7, #4]
 80014ce:	f001 fbef 	bl	8002cb0 <send_UART>
		else
			send_UART("Invalid Analog Read instruction argument values.");
	}
	else
		send_UART("Invalid Analog Read instruction syntax.");
}
 80014d2:	e006      	b.n	80014e2 <proc_ra_cmd+0xa2>
			send_UART("Invalid Analog Read instruction argument values.");
 80014d4:	480e      	ldr	r0, [pc, #56]	; (8001510 <proc_ra_cmd+0xd0>)
 80014d6:	f001 fbeb 	bl	8002cb0 <send_UART>
}
 80014da:	e002      	b.n	80014e2 <proc_ra_cmd+0xa2>
		send_UART("Invalid Analog Read instruction syntax.");
 80014dc:	480d      	ldr	r0, [pc, #52]	; (8001514 <proc_ra_cmd+0xd4>)
 80014de:	f001 fbe7 	bl	8002cb0 <send_UART>
}
 80014e2:	bf00      	nop
 80014e4:	3718      	adds	r7, #24
 80014e6:	46bd      	mov	sp, r7
 80014e8:	bd80      	pop	{r7, pc}
 80014ea:	bf00      	nop
 80014ec:	f3af 8000 	nop.w
 80014f0:	66666666 	.word	0x66666666
 80014f4:	400a6666 	.word	0x400a6666
 80014f8:	00000000 	.word	0x00000000
 80014fc:	40affe00 	.word	0x40affe00
 8001500:	0800cba4 	.word	0x0800cba4
 8001504:	20014594 	.word	0x20014594
 8001508:	0800cbac 	.word	0x0800cbac
 800150c:	0800cbc8 	.word	0x0800cbc8
 8001510:	0800cbd4 	.word	0x0800cbd4
 8001514:	0800cc08 	.word	0x0800cc08

08001518 <proc_wa_cmd>:

void proc_wa_cmd(char* message)
{
 8001518:	b580      	push	{r7, lr}
 800151a:	b086      	sub	sp, #24
 800151c:	af00      	add	r7, sp, #0
 800151e:	6078      	str	r0, [r7, #4]
    unsigned int addr3, volts;

    if(sscanf((char*) message, "WA %x %d", &addr3, &volts) == 2)
 8001520:	f107 030c 	add.w	r3, r7, #12
 8001524:	f107 0210 	add.w	r2, r7, #16
 8001528:	491f      	ldr	r1, [pc, #124]	; (80015a8 <proc_wa_cmd+0x90>)
 800152a:	6878      	ldr	r0, [r7, #4]
 800152c:	f006 ffe0 	bl	80084f0 <siscanf>
 8001530:	4603      	mov	r3, r0
 8001532:	2b02      	cmp	r3, #2
 8001534:	d12d      	bne.n	8001592 <proc_wa_cmd+0x7a>
    {
    	float value = (float) volts * 4095 / 3.3;
 8001536:	68fb      	ldr	r3, [r7, #12]
 8001538:	ee07 3a90 	vmov	s15, r3
 800153c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001540:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 80015ac <proc_wa_cmd+0x94>
 8001544:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001548:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800154c:	ed9f 5b14 	vldr	d5, [pc, #80]	; 80015a0 <proc_wa_cmd+0x88>
 8001550:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001554:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8001558:	edc7 7a05 	vstr	s15, [r7, #20]

        if(analog_write(addr3, value))
 800155c:	693b      	ldr	r3, [r7, #16]
 800155e:	edd7 7a05 	vldr	s15, [r7, #20]
 8001562:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001566:	ee17 1a90 	vmov	r1, s15
 800156a:	4618      	mov	r0, r3
 800156c:	f000 fcf4 	bl	8001f58 <analog_write>
 8001570:	4603      	mov	r3, r0
 8001572:	2b00      	cmp	r3, #0
 8001574:	d009      	beq.n	800158a <proc_wa_cmd+0x72>
        {
            strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001576:	f44f 7280 	mov.w	r2, #256	; 0x100
 800157a:	6879      	ldr	r1, [r7, #4]
 800157c:	480c      	ldr	r0, [pc, #48]	; (80015b0 <proc_wa_cmd+0x98>)
 800157e:	f007 f842 	bl	8008606 <strncpy>
            send_UART("Analog value wrote with success.");
 8001582:	480c      	ldr	r0, [pc, #48]	; (80015b4 <proc_wa_cmd+0x9c>)
 8001584:	f001 fb94 	bl	8002cb0 <send_UART>
        else
            send_UART("Invalid Analog Write instruction argument values.");
    }
    else
        send_UART("Invalid Analog Write instruction syntax.");
}
 8001588:	e006      	b.n	8001598 <proc_wa_cmd+0x80>
            send_UART("Invalid Analog Write instruction argument values.");
 800158a:	480b      	ldr	r0, [pc, #44]	; (80015b8 <proc_wa_cmd+0xa0>)
 800158c:	f001 fb90 	bl	8002cb0 <send_UART>
}
 8001590:	e002      	b.n	8001598 <proc_wa_cmd+0x80>
        send_UART("Invalid Analog Write instruction syntax.");
 8001592:	480a      	ldr	r0, [pc, #40]	; (80015bc <proc_wa_cmd+0xa4>)
 8001594:	f001 fb8c 	bl	8002cb0 <send_UART>
}
 8001598:	bf00      	nop
 800159a:	3718      	adds	r7, #24
 800159c:	46bd      	mov	sp, r7
 800159e:	bd80      	pop	{r7, pc}
 80015a0:	66666666 	.word	0x66666666
 80015a4:	400a6666 	.word	0x400a6666
 80015a8:	0800cc30 	.word	0x0800cc30
 80015ac:	457ff000 	.word	0x457ff000
 80015b0:	20014594 	.word	0x20014594
 80015b4:	0800cc3c 	.word	0x0800cc3c
 80015b8:	0800cc60 	.word	0x0800cc60
 80015bc:	0800cc94 	.word	0x0800cc94

080015c0 <proc_last_cmd>:


void proc_last_cmd(char* message)
{
 80015c0:	b580      	push	{r7, lr}
 80015c2:	b0c4      	sub	sp, #272	; 0x110
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	1d3b      	adds	r3, r7, #4
 80015c8:	6018      	str	r0, [r3, #0]
	if(message[1] == '\r')
 80015ca:	1d3b      	adds	r3, r7, #4
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	3301      	adds	r3, #1
 80015d0:	781b      	ldrb	r3, [r3, #0]
 80015d2:	2b0d      	cmp	r3, #13
 80015d4:	d12a      	bne.n	800162c <proc_last_cmd+0x6c>
	{
		char temp[BUFFER_SIZE];

		for(int i = 0; i < BUFFER_SIZE; i++)
 80015d6:	2300      	movs	r3, #0
 80015d8:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80015dc:	e010      	b.n	8001600 <proc_last_cmd+0x40>
			temp[i] = last_message[i];
 80015de:	4a17      	ldr	r2, [pc, #92]	; (800163c <proc_last_cmd+0x7c>)
 80015e0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80015e4:	4413      	add	r3, r2
 80015e6:	7819      	ldrb	r1, [r3, #0]
 80015e8:	f107 0208 	add.w	r2, r7, #8
 80015ec:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80015f0:	4413      	add	r3, r2
 80015f2:	460a      	mov	r2, r1
 80015f4:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < BUFFER_SIZE; i++)
 80015f6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80015fa:	3301      	adds	r3, #1
 80015fc:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001600:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001604:	2bff      	cmp	r3, #255	; 0xff
 8001606:	ddea      	ble.n	80015de <proc_last_cmd+0x1e>

		unsigned char cmd = check_command((char*) temp);
 8001608:	f107 0308 	add.w	r3, r7, #8
 800160c:	4618      	mov	r0, r3
 800160e:	f7ff fbc1 	bl	8000d94 <check_command>
 8001612:	4603      	mov	r3, r0
 8001614:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
		exec_command[cmd]((char*) temp);
 8001618:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800161c:	4a08      	ldr	r2, [pc, #32]	; (8001640 <proc_last_cmd+0x80>)
 800161e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001622:	f107 0208 	add.w	r2, r7, #8
 8001626:	4610      	mov	r0, r2
 8001628:	4798      	blx	r3
	}
	else
		send_UART("Invalid $ instruction syntax.");
}
 800162a:	e002      	b.n	8001632 <proc_last_cmd+0x72>
		send_UART("Invalid $ instruction syntax.");
 800162c:	4805      	ldr	r0, [pc, #20]	; (8001644 <proc_last_cmd+0x84>)
 800162e:	f001 fb3f 	bl	8002cb0 <send_UART>
}
 8001632:	bf00      	nop
 8001634:	f507 7788 	add.w	r7, r7, #272	; 0x110
 8001638:	46bd      	mov	sp, r7
 800163a:	bd80      	pop	{r7, pc}
 800163c:	20014594 	.word	0x20014594
 8001640:	20000000 	.word	0x20000000
 8001644:	0800ccc0 	.word	0x0800ccc0

08001648 <proc_help_cmd>:


void proc_help_cmd(char* message)
{
 8001648:	b580      	push	{r7, lr}
 800164a:	b082      	sub	sp, #8
 800164c:	af00      	add	r7, sp, #0
 800164e:	6078      	str	r0, [r7, #4]
	if(message[1] == '\r')
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	3301      	adds	r3, #1
 8001654:	781b      	ldrb	r3, [r3, #0]
 8001656:	2b0d      	cmp	r3, #13
 8001658:	d109      	bne.n	800166e <proc_help_cmd+0x26>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800165a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800165e:	6879      	ldr	r1, [r7, #4]
 8001660:	4806      	ldr	r0, [pc, #24]	; (800167c <proc_help_cmd+0x34>)
 8001662:	f006 ffd0 	bl	8008606 <strncpy>

		send_UART("MR <addr> <length>\n\r"
 8001666:	4806      	ldr	r0, [pc, #24]	; (8001680 <proc_help_cmd+0x38>)
 8001668:	f001 fb22 	bl	8002cb0 <send_UART>
					"$\n\r"
					"VER");
	}
	else
		send_UART("Invalid ? instruction syntax.");
}
 800166c:	e002      	b.n	8001674 <proc_help_cmd+0x2c>
		send_UART("Invalid ? instruction syntax.");
 800166e:	4805      	ldr	r0, [pc, #20]	; (8001684 <proc_help_cmd+0x3c>)
 8001670:	f001 fb1e 	bl	8002cb0 <send_UART>
}
 8001674:	bf00      	nop
 8001676:	3708      	adds	r7, #8
 8001678:	46bd      	mov	sp, r7
 800167a:	bd80      	pop	{r7, pc}
 800167c:	20014594 	.word	0x20014594
 8001680:	0800cce0 	.word	0x0800cce0
 8001684:	0800cd9c 	.word	0x0800cd9c

08001688 <proc_ver_cmd>:


void proc_ver_cmd(char* message)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	b082      	sub	sp, #8
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
	static int procs = 0;	// EASTER EGG

	if(message[3] == '\r')
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	3303      	adds	r3, #3
 8001694:	781b      	ldrb	r3, [r3, #0]
 8001696:	2b0d      	cmp	r3, #13
 8001698:	d113      	bne.n	80016c2 <proc_ver_cmd+0x3a>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800169a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800169e:	6879      	ldr	r1, [r7, #4]
 80016a0:	480b      	ldr	r0, [pc, #44]	; (80016d0 <proc_ver_cmd+0x48>)
 80016a2:	f006 ffb0 	bl	8008606 <strncpy>
		sprintf((char*) message, "v1.%d - BOCKS & PRIEST - G5 PIEEIC2 EEIC UM - 2022", procs++);
 80016a6:	4b0b      	ldr	r3, [pc, #44]	; (80016d4 <proc_ver_cmd+0x4c>)
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	1c5a      	adds	r2, r3, #1
 80016ac:	4909      	ldr	r1, [pc, #36]	; (80016d4 <proc_ver_cmd+0x4c>)
 80016ae:	600a      	str	r2, [r1, #0]
 80016b0:	461a      	mov	r2, r3
 80016b2:	4909      	ldr	r1, [pc, #36]	; (80016d8 <proc_ver_cmd+0x50>)
 80016b4:	6878      	ldr	r0, [r7, #4]
 80016b6:	f006 fefb 	bl	80084b0 <siprintf>
		send_UART((char*) message);
 80016ba:	6878      	ldr	r0, [r7, #4]
 80016bc:	f001 faf8 	bl	8002cb0 <send_UART>
	}
	else
		send_UART("Invalid VER instruction syntax.");
}
 80016c0:	e002      	b.n	80016c8 <proc_ver_cmd+0x40>
		send_UART("Invalid VER instruction syntax.");
 80016c2:	4806      	ldr	r0, [pc, #24]	; (80016dc <proc_ver_cmd+0x54>)
 80016c4:	f001 faf4 	bl	8002cb0 <send_UART>
}
 80016c8:	bf00      	nop
 80016ca:	3708      	adds	r7, #8
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	20014594 	.word	0x20014594
 80016d4:	2000032c 	.word	0x2000032c
 80016d8:	0800cdbc 	.word	0x0800cdbc
 80016dc:	0800cdf0 	.word	0x0800cdf0

080016e0 <proc_sp_cmd>:

void proc_sp_cmd(char* message)
{
 80016e0:	b580      	push	{r7, lr}
 80016e2:	b084      	sub	sp, #16
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	6078      	str	r0, [r7, #4]
	unsigned int unit;
	char timeunit[2];

	if(sscanf((char*)message, "SP %s %d", timeunit, &unit) == 2)
 80016e8:	f107 030c 	add.w	r3, r7, #12
 80016ec:	f107 0208 	add.w	r2, r7, #8
 80016f0:	491f      	ldr	r1, [pc, #124]	; (8001770 <proc_sp_cmd+0x90>)
 80016f2:	6878      	ldr	r0, [r7, #4]
 80016f4:	f006 fefc 	bl	80084f0 <siscanf>
 80016f8:	4603      	mov	r3, r0
 80016fa:	2b02      	cmp	r3, #2
 80016fc:	d131      	bne.n	8001762 <proc_sp_cmd+0x82>
		{
			if(!strcmp(timeunit,"ms") == 0 || !strcmp(timeunit,"s") == 0 || !strcmp(timeunit,"us") == 0)
 80016fe:	f107 0308 	add.w	r3, r7, #8
 8001702:	491c      	ldr	r1, [pc, #112]	; (8001774 <proc_sp_cmd+0x94>)
 8001704:	4618      	mov	r0, r3
 8001706:	f7fe fd9b 	bl	8000240 <strcmp>
 800170a:	4603      	mov	r3, r0
 800170c:	2b00      	cmp	r3, #0
 800170e:	d111      	bne.n	8001734 <proc_sp_cmd+0x54>
 8001710:	f107 0308 	add.w	r3, r7, #8
 8001714:	4918      	ldr	r1, [pc, #96]	; (8001778 <proc_sp_cmd+0x98>)
 8001716:	4618      	mov	r0, r3
 8001718:	f7fe fd92 	bl	8000240 <strcmp>
 800171c:	4603      	mov	r3, r0
 800171e:	2b00      	cmp	r3, #0
 8001720:	d108      	bne.n	8001734 <proc_sp_cmd+0x54>
 8001722:	f107 0308 	add.w	r3, r7, #8
 8001726:	4915      	ldr	r1, [pc, #84]	; (800177c <proc_sp_cmd+0x9c>)
 8001728:	4618      	mov	r0, r3
 800172a:	f7fe fd89 	bl	8000240 <strcmp>
 800172e:	4603      	mov	r3, r0
 8001730:	2b00      	cmp	r3, #0
 8001732:	d012      	beq.n	800175a <proc_sp_cmd+0x7a>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001734:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001738:	6879      	ldr	r1, [r7, #4]
 800173a:	4811      	ldr	r0, [pc, #68]	; (8001780 <proc_sp_cmd+0xa0>)
 800173c:	f006 ff63 	bl	8008606 <strncpy>

				strcpy(sp_config.timeunit,timeunit);
 8001740:	f107 0308 	add.w	r3, r7, #8
 8001744:	4619      	mov	r1, r3
 8001746:	480f      	ldr	r0, [pc, #60]	; (8001784 <proc_sp_cmd+0xa4>)
 8001748:	f006 ff43 	bl	80085d2 <strcpy>
				sp_config.unit = unit;
 800174c:	68fb      	ldr	r3, [r7, #12]
 800174e:	4a0e      	ldr	r2, [pc, #56]	; (8001788 <proc_sp_cmd+0xa8>)
 8001750:	6053      	str	r3, [r2, #4]
				send_UART("Sampling timeunit and units changed with success.");
 8001752:	480e      	ldr	r0, [pc, #56]	; (800178c <proc_sp_cmd+0xac>)
 8001754:	f001 faac 	bl	8002cb0 <send_UART>
			else
				send_UART("Invalid Sample Period instruction argument values.");
		}
		else
			send_UART("Invalid Sample Period instruction syntax.");
}
 8001758:	e006      	b.n	8001768 <proc_sp_cmd+0x88>
				send_UART("Invalid Sample Period instruction argument values.");
 800175a:	480d      	ldr	r0, [pc, #52]	; (8001790 <proc_sp_cmd+0xb0>)
 800175c:	f001 faa8 	bl	8002cb0 <send_UART>
}
 8001760:	e002      	b.n	8001768 <proc_sp_cmd+0x88>
			send_UART("Invalid Sample Period instruction syntax.");
 8001762:	480c      	ldr	r0, [pc, #48]	; (8001794 <proc_sp_cmd+0xb4>)
 8001764:	f001 faa4 	bl	8002cb0 <send_UART>
}
 8001768:	bf00      	nop
 800176a:	3710      	adds	r7, #16
 800176c:	46bd      	mov	sp, r7
 800176e:	bd80      	pop	{r7, pc}
 8001770:	0800ce10 	.word	0x0800ce10
 8001774:	0800ce1c 	.word	0x0800ce1c
 8001778:	0800ce20 	.word	0x0800ce20
 800177c:	0800ce24 	.word	0x0800ce24
 8001780:	20014594 	.word	0x20014594
 8001784:	2000006c 	.word	0x2000006c
 8001788:	20000060 	.word	0x20000060
 800178c:	0800ce28 	.word	0x0800ce28
 8001790:	0800ce5c 	.word	0x0800ce5c
 8001794:	0800ce90 	.word	0x0800ce90

08001798 <proc_ac_cmd>:

void proc_ac_cmd(char* message)
{
 8001798:	b580      	push	{r7, lr}
 800179a:	b084      	sub	sp, #16
 800179c:	af00      	add	r7, sp, #0
 800179e:	6078      	str	r0, [r7, #4]
	unsigned int addr3;

	if(sscanf((char*)message, "AC %x", &addr3) == 1)
 80017a0:	f107 030c 	add.w	r3, r7, #12
 80017a4:	461a      	mov	r2, r3
 80017a6:	4912      	ldr	r1, [pc, #72]	; (80017f0 <proc_ac_cmd+0x58>)
 80017a8:	6878      	ldr	r0, [r7, #4]
 80017aa:	f006 fea1 	bl	80084f0 <siscanf>
 80017ae:	4603      	mov	r3, r0
 80017b0:	2b01      	cmp	r3, #1
 80017b2:	d116      	bne.n	80017e2 <proc_ac_cmd+0x4a>
	{
		if(addr3 > 0 && addr3 <= 0x0F)
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d00f      	beq.n	80017da <proc_ac_cmd+0x42>
 80017ba:	68fb      	ldr	r3, [r7, #12]
 80017bc:	2b0f      	cmp	r3, #15
 80017be:	d80c      	bhi.n	80017da <proc_ac_cmd+0x42>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80017c0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80017c4:	6879      	ldr	r1, [r7, #4]
 80017c6:	480b      	ldr	r0, [pc, #44]	; (80017f4 <proc_ac_cmd+0x5c>)
 80017c8:	f006 ff1d 	bl	8008606 <strncpy>

			sp_config.addr3 = addr3;
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	4a0a      	ldr	r2, [pc, #40]	; (80017f8 <proc_ac_cmd+0x60>)
 80017d0:	6013      	str	r3, [r2, #0]
			send_UART("Analog Channel for Sampling changed with success.");
 80017d2:	480a      	ldr	r0, [pc, #40]	; (80017fc <proc_ac_cmd+0x64>)
 80017d4:	f001 fa6c 	bl	8002cb0 <send_UART>
		else
			send_UART("Invalid Analog Channel instruction argument values.");
	}
	else
		send_UART("Invalid Analog Channel instruction syntax.");
}
 80017d8:	e006      	b.n	80017e8 <proc_ac_cmd+0x50>
			send_UART("Invalid Analog Channel instruction argument values.");
 80017da:	4809      	ldr	r0, [pc, #36]	; (8001800 <proc_ac_cmd+0x68>)
 80017dc:	f001 fa68 	bl	8002cb0 <send_UART>
}
 80017e0:	e002      	b.n	80017e8 <proc_ac_cmd+0x50>
		send_UART("Invalid Analog Channel instruction syntax.");
 80017e2:	4808      	ldr	r0, [pc, #32]	; (8001804 <proc_ac_cmd+0x6c>)
 80017e4:	f001 fa64 	bl	8002cb0 <send_UART>
}
 80017e8:	bf00      	nop
 80017ea:	3710      	adds	r7, #16
 80017ec:	46bd      	mov	sp, r7
 80017ee:	bd80      	pop	{r7, pc}
 80017f0:	0800cebc 	.word	0x0800cebc
 80017f4:	20014594 	.word	0x20014594
 80017f8:	20000060 	.word	0x20000060
 80017fc:	0800cec4 	.word	0x0800cec4
 8001800:	0800cef8 	.word	0x0800cef8
 8001804:	0800cf2c 	.word	0x0800cf2c

08001808 <proc_fni_cmd>:

void proc_fni_cmd(char* message)
{
 8001808:	b580      	push	{r7, lr}
 800180a:	b082      	sub	sp, #8
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	3303      	adds	r3, #3
 8001814:	781b      	ldrb	r3, [r3, #0]
 8001816:	2b0d      	cmp	r3, #13
 8001818:	d10c      	bne.n	8001834 <proc_fni_cmd+0x2c>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800181a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800181e:	6879      	ldr	r1, [r7, #4]
 8001820:	4808      	ldr	r0, [pc, #32]	; (8001844 <proc_fni_cmd+0x3c>)
 8001822:	f006 fef0 	bl	8008606 <strncpy>
		sp_config.filter_type = Inf;
 8001826:	4b08      	ldr	r3, [pc, #32]	; (8001848 <proc_fni_cmd+0x40>)
 8001828:	2201      	movs	r2, #1
 800182a:	739a      	strb	r2, [r3, #14]
		send_UART("Filter ON.");
 800182c:	4807      	ldr	r0, [pc, #28]	; (800184c <proc_fni_cmd+0x44>)
 800182e:	f001 fa3f 	bl	8002cb0 <send_UART>
	}
	else
		send_UART("Invalid IRR Filter On instruction syntax.");
}
 8001832:	e002      	b.n	800183a <proc_fni_cmd+0x32>
		send_UART("Invalid IRR Filter On instruction syntax.");
 8001834:	4806      	ldr	r0, [pc, #24]	; (8001850 <proc_fni_cmd+0x48>)
 8001836:	f001 fa3b 	bl	8002cb0 <send_UART>
}
 800183a:	bf00      	nop
 800183c:	3708      	adds	r7, #8
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}
 8001842:	bf00      	nop
 8001844:	20014594 	.word	0x20014594
 8001848:	20000060 	.word	0x20000060
 800184c:	0800cf58 	.word	0x0800cf58
 8001850:	0800cf64 	.word	0x0800cf64

08001854 <proc_ffi_cmd>:

void proc_ffi_cmd(char* message)
{
 8001854:	b580      	push	{r7, lr}
 8001856:	b082      	sub	sp, #8
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	3303      	adds	r3, #3
 8001860:	781b      	ldrb	r3, [r3, #0]
 8001862:	2b0d      	cmp	r3, #13
 8001864:	d114      	bne.n	8001890 <proc_ffi_cmd+0x3c>
	{
		if(sp_config.filter_type == Inf){
 8001866:	4b0e      	ldr	r3, [pc, #56]	; (80018a0 <proc_ffi_cmd+0x4c>)
 8001868:	7b9b      	ldrb	r3, [r3, #14]
 800186a:	2b01      	cmp	r3, #1
 800186c:	d10c      	bne.n	8001888 <proc_ffi_cmd+0x34>
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800186e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001872:	6879      	ldr	r1, [r7, #4]
 8001874:	480b      	ldr	r0, [pc, #44]	; (80018a4 <proc_ffi_cmd+0x50>)
 8001876:	f006 fec6 	bl	8008606 <strncpy>
			sp_config.filter_type = Nf;
 800187a:	4b09      	ldr	r3, [pc, #36]	; (80018a0 <proc_ffi_cmd+0x4c>)
 800187c:	2200      	movs	r2, #0
 800187e:	739a      	strb	r2, [r3, #14]
			send_UART("Filter OFF");
 8001880:	4809      	ldr	r0, [pc, #36]	; (80018a8 <proc_ffi_cmd+0x54>)
 8001882:	f001 fa15 	bl	8002cb0 <send_UART>
		else
			send_UART("IRR Filter is already off.");
	}
	else
		send_UART("Invalid IRR Filter Off instruction syntax.");
}
 8001886:	e006      	b.n	8001896 <proc_ffi_cmd+0x42>
			send_UART("IRR Filter is already off.");
 8001888:	4808      	ldr	r0, [pc, #32]	; (80018ac <proc_ffi_cmd+0x58>)
 800188a:	f001 fa11 	bl	8002cb0 <send_UART>
}
 800188e:	e002      	b.n	8001896 <proc_ffi_cmd+0x42>
		send_UART("Invalid IRR Filter Off instruction syntax.");
 8001890:	4807      	ldr	r0, [pc, #28]	; (80018b0 <proc_ffi_cmd+0x5c>)
 8001892:	f001 fa0d 	bl	8002cb0 <send_UART>
}
 8001896:	bf00      	nop
 8001898:	3708      	adds	r7, #8
 800189a:	46bd      	mov	sp, r7
 800189c:	bd80      	pop	{r7, pc}
 800189e:	bf00      	nop
 80018a0:	20000060 	.word	0x20000060
 80018a4:	20014594 	.word	0x20014594
 80018a8:	0800cf90 	.word	0x0800cf90
 80018ac:	0800cf9c 	.word	0x0800cf9c
 80018b0:	0800cfb8 	.word	0x0800cfb8

080018b4 <proc_fnf_cmd>:

void proc_fnf_cmd(char* message)
{
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b082      	sub	sp, #8
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 80018bc:	687b      	ldr	r3, [r7, #4]
 80018be:	3303      	adds	r3, #3
 80018c0:	781b      	ldrb	r3, [r3, #0]
 80018c2:	2b0d      	cmp	r3, #13
 80018c4:	d10c      	bne.n	80018e0 <proc_fnf_cmd+0x2c>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80018c6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80018ca:	6879      	ldr	r1, [r7, #4]
 80018cc:	4808      	ldr	r0, [pc, #32]	; (80018f0 <proc_fnf_cmd+0x3c>)
 80018ce:	f006 fe9a 	bl	8008606 <strncpy>
		sp_config.filter_type = Fin;
 80018d2:	4b08      	ldr	r3, [pc, #32]	; (80018f4 <proc_fnf_cmd+0x40>)
 80018d4:	2202      	movs	r2, #2
 80018d6:	739a      	strb	r2, [r3, #14]
		send_UART("Filter ON.");
 80018d8:	4807      	ldr	r0, [pc, #28]	; (80018f8 <proc_fnf_cmd+0x44>)
 80018da:	f001 f9e9 	bl	8002cb0 <send_UART>
	}
	else
		send_UART("Invalid FIR Filter On instruction syntax.");
}
 80018de:	e002      	b.n	80018e6 <proc_fnf_cmd+0x32>
		send_UART("Invalid FIR Filter On instruction syntax.");
 80018e0:	4806      	ldr	r0, [pc, #24]	; (80018fc <proc_fnf_cmd+0x48>)
 80018e2:	f001 f9e5 	bl	8002cb0 <send_UART>
}
 80018e6:	bf00      	nop
 80018e8:	3708      	adds	r7, #8
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	bf00      	nop
 80018f0:	20014594 	.word	0x20014594
 80018f4:	20000060 	.word	0x20000060
 80018f8:	0800cf58 	.word	0x0800cf58
 80018fc:	0800cfe4 	.word	0x0800cfe4

08001900 <proc_fff_cmd>:

void proc_fff_cmd(char* message)
{
 8001900:	b580      	push	{r7, lr}
 8001902:	b082      	sub	sp, #8
 8001904:	af00      	add	r7, sp, #0
 8001906:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	3303      	adds	r3, #3
 800190c:	781b      	ldrb	r3, [r3, #0]
 800190e:	2b0d      	cmp	r3, #13
 8001910:	d114      	bne.n	800193c <proc_fff_cmd+0x3c>
	{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001912:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001916:	6879      	ldr	r1, [r7, #4]
 8001918:	480c      	ldr	r0, [pc, #48]	; (800194c <proc_fff_cmd+0x4c>)
 800191a:	f006 fe74 	bl	8008606 <strncpy>
		if(sp_config.filter_type == Fin){
 800191e:	4b0c      	ldr	r3, [pc, #48]	; (8001950 <proc_fff_cmd+0x50>)
 8001920:	7b9b      	ldrb	r3, [r3, #14]
 8001922:	2b02      	cmp	r3, #2
 8001924:	d106      	bne.n	8001934 <proc_fff_cmd+0x34>
			sp_config.filter_type = Nf;
 8001926:	4b0a      	ldr	r3, [pc, #40]	; (8001950 <proc_fff_cmd+0x50>)
 8001928:	2200      	movs	r2, #0
 800192a:	739a      	strb	r2, [r3, #14]
			send_UART("Filter OFF");
 800192c:	4809      	ldr	r0, [pc, #36]	; (8001954 <proc_fff_cmd+0x54>)
 800192e:	f001 f9bf 	bl	8002cb0 <send_UART>
		else
			send_UART("FIR Filter is already off.");
	}
	else
		send_UART("Invalid FIR Filter Off instruction syntax.");
}
 8001932:	e006      	b.n	8001942 <proc_fff_cmd+0x42>
			send_UART("FIR Filter is already off.");
 8001934:	4808      	ldr	r0, [pc, #32]	; (8001958 <proc_fff_cmd+0x58>)
 8001936:	f001 f9bb 	bl	8002cb0 <send_UART>
}
 800193a:	e002      	b.n	8001942 <proc_fff_cmd+0x42>
		send_UART("Invalid FIR Filter Off instruction syntax.");
 800193c:	4807      	ldr	r0, [pc, #28]	; (800195c <proc_fff_cmd+0x5c>)
 800193e:	f001 f9b7 	bl	8002cb0 <send_UART>
}
 8001942:	bf00      	nop
 8001944:	3708      	adds	r7, #8
 8001946:	46bd      	mov	sp, r7
 8001948:	bd80      	pop	{r7, pc}
 800194a:	bf00      	nop
 800194c:	20014594 	.word	0x20014594
 8001950:	20000060 	.word	0x20000060
 8001954:	0800cf90 	.word	0x0800cf90
 8001958:	0800d010 	.word	0x0800d010
 800195c:	0800d02c 	.word	0x0800d02c

08001960 <proc_s_cmd>:

void proc_s_cmd(char* message)
{
 8001960:	b580      	push	{r7, lr}
 8001962:	b084      	sub	sp, #16
 8001964:	af00      	add	r7, sp, #0
 8001966:	6078      	str	r0, [r7, #4]
	unsigned int k_values;

	if(message[1] == '\r')
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	3301      	adds	r3, #1
 800196c:	781b      	ldrb	r3, [r3, #0]
 800196e:	2b0d      	cmp	r3, #13
 8001970:	d120      	bne.n	80019b4 <proc_s_cmd+0x54>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001972:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001976:	6879      	ldr	r1, [r7, #4]
 8001978:	4827      	ldr	r0, [pc, #156]	; (8001a18 <proc_s_cmd+0xb8>)
 800197a:	f006 fe44 	bl	8008606 <strncpy>

		reset_adc_buf();
 800197e:	f7ff f9a7 	bl	8000cd0 <reset_adc_buf>
		counter = 0;
 8001982:	4b26      	ldr	r3, [pc, #152]	; (8001a1c <proc_s_cmd+0xbc>)
 8001984:	2200      	movs	r2, #0
 8001986:	601a      	str	r2, [r3, #0]
		sp_config.sp_limit = 0;
 8001988:	4b25      	ldr	r3, [pc, #148]	; (8001a20 <proc_s_cmd+0xc0>)
 800198a:	2200      	movs	r2, #0
 800198c:	609a      	str	r2, [r3, #8]
		MX_ADC3_Init1(false);
 800198e:	2000      	movs	r0, #0
 8001990:	f7ff f82e 	bl	80009f0 <MX_ADC3_Init1>
		config_ADC(sp_config.addr3);
 8001994:	4b22      	ldr	r3, [pc, #136]	; (8001a20 <proc_s_cmd+0xc0>)
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	4618      	mov	r0, r3
 800199a:	f7ff f95b 	bl	8000c54 <config_ADC>
		MX_TIM1_Init1(sp_config);
 800199e:	4b20      	ldr	r3, [pc, #128]	; (8001a20 <proc_s_cmd+0xc0>)
 80019a0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019a2:	f000 ff6b 	bl	800287c <MX_TIM1_Init1>
		HAL_ADC_Start_IT(&hadc3);
 80019a6:	481f      	ldr	r0, [pc, #124]	; (8001a24 <proc_s_cmd+0xc4>)
 80019a8:	f001 fb40 	bl	800302c <HAL_ADC_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
 80019ac:	481e      	ldr	r0, [pc, #120]	; (8001a28 <proc_s_cmd+0xc8>)
 80019ae:	f003 fde3 	bl	8005578 <HAL_TIM_Base_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
	}
	else
		send_UART("Invalid Sample instruction syntax.");

}
 80019b2:	e02d      	b.n	8001a10 <proc_s_cmd+0xb0>
	else if(sscanf((char*)message, "S %d", &k_values) == 1)
 80019b4:	f107 030c 	add.w	r3, r7, #12
 80019b8:	461a      	mov	r2, r3
 80019ba:	491c      	ldr	r1, [pc, #112]	; (8001a2c <proc_s_cmd+0xcc>)
 80019bc:	6878      	ldr	r0, [r7, #4]
 80019be:	f006 fd97 	bl	80084f0 <siscanf>
 80019c2:	4603      	mov	r3, r0
 80019c4:	2b01      	cmp	r3, #1
 80019c6:	d120      	bne.n	8001a0a <proc_s_cmd+0xaa>
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80019c8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80019cc:	6879      	ldr	r1, [r7, #4]
 80019ce:	4812      	ldr	r0, [pc, #72]	; (8001a18 <proc_s_cmd+0xb8>)
 80019d0:	f006 fe19 	bl	8008606 <strncpy>
		reset_adc_buf();
 80019d4:	f7ff f97c 	bl	8000cd0 <reset_adc_buf>
		counter = 0;
 80019d8:	4b10      	ldr	r3, [pc, #64]	; (8001a1c <proc_s_cmd+0xbc>)
 80019da:	2200      	movs	r2, #0
 80019dc:	601a      	str	r2, [r3, #0]
		sp_config.sp_limit = k_values;
 80019de:	68fb      	ldr	r3, [r7, #12]
 80019e0:	4a0f      	ldr	r2, [pc, #60]	; (8001a20 <proc_s_cmd+0xc0>)
 80019e2:	6093      	str	r3, [r2, #8]
		MX_ADC3_Init1(false);
 80019e4:	2000      	movs	r0, #0
 80019e6:	f7ff f803 	bl	80009f0 <MX_ADC3_Init1>
		config_ADC(sp_config.addr3);
 80019ea:	4b0d      	ldr	r3, [pc, #52]	; (8001a20 <proc_s_cmd+0xc0>)
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	4618      	mov	r0, r3
 80019f0:	f7ff f930 	bl	8000c54 <config_ADC>
		MX_TIM1_Init1(sp_config);
 80019f4:	4b0a      	ldr	r3, [pc, #40]	; (8001a20 <proc_s_cmd+0xc0>)
 80019f6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019f8:	f000 ff40 	bl	800287c <MX_TIM1_Init1>
		HAL_ADC_Start_IT(&hadc3);
 80019fc:	4809      	ldr	r0, [pc, #36]	; (8001a24 <proc_s_cmd+0xc4>)
 80019fe:	f001 fb15 	bl	800302c <HAL_ADC_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
 8001a02:	4809      	ldr	r0, [pc, #36]	; (8001a28 <proc_s_cmd+0xc8>)
 8001a04:	f003 fdb8 	bl	8005578 <HAL_TIM_Base_Start_IT>
}
 8001a08:	e002      	b.n	8001a10 <proc_s_cmd+0xb0>
		send_UART("Invalid Sample instruction syntax.");
 8001a0a:	4809      	ldr	r0, [pc, #36]	; (8001a30 <proc_s_cmd+0xd0>)
 8001a0c:	f001 f950 	bl	8002cb0 <send_UART>
}
 8001a10:	bf00      	nop
 8001a12:	3710      	adds	r7, #16
 8001a14:	46bd      	mov	sp, r7
 8001a16:	bd80      	pop	{r7, pc}
 8001a18:	20014594 	.word	0x20014594
 8001a1c:	20000328 	.word	0x20000328
 8001a20:	20000060 	.word	0x20000060
 8001a24:	20010444 	.word	0x20010444
 8001a28:	200186b0 	.word	0x200186b0
 8001a2c:	0800d058 	.word	0x0800d058
 8001a30:	0800d060 	.word	0x0800d060

08001a34 <proc_st_cmd>:

void proc_st_cmd(char* message)
{
 8001a34:	b580      	push	{r7, lr}
 8001a36:	b082      	sub	sp, #8
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
	if(counter > 0)
 8001a3c:	4b15      	ldr	r3, [pc, #84]	; (8001a94 <proc_st_cmd+0x60>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	2b00      	cmp	r3, #0
 8001a42:	d01f      	beq.n	8001a84 <proc_st_cmd+0x50>
	{
		if(message[2] == '\r')
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	3302      	adds	r3, #2
 8001a48:	781b      	ldrb	r3, [r3, #0]
 8001a4a:	2b0d      	cmp	r3, #13
 8001a4c:	d116      	bne.n	8001a7c <proc_st_cmd+0x48>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001a4e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001a52:	6879      	ldr	r1, [r7, #4]
 8001a54:	4810      	ldr	r0, [pc, #64]	; (8001a98 <proc_st_cmd+0x64>)
 8001a56:	f006 fdd6 	bl	8008606 <strncpy>
			counter = 0;
 8001a5a:	4b0e      	ldr	r3, [pc, #56]	; (8001a94 <proc_st_cmd+0x60>)
 8001a5c:	2200      	movs	r2, #0
 8001a5e:	601a      	str	r2, [r3, #0]
			analog_write(0,0);
 8001a60:	2100      	movs	r1, #0
 8001a62:	2000      	movs	r0, #0
 8001a64:	f000 fa78 	bl	8001f58 <analog_write>
			HAL_ADC_Stop_IT(&hadc3);
 8001a68:	480c      	ldr	r0, [pc, #48]	; (8001a9c <proc_st_cmd+0x68>)
 8001a6a:	f001 fbb7 	bl	80031dc <HAL_ADC_Stop_IT>
			HAL_TIM_Base_Stop_IT(&htim1);
 8001a6e:	480c      	ldr	r0, [pc, #48]	; (8001aa0 <proc_st_cmd+0x6c>)
 8001a70:	f003 fdfa 	bl	8005668 <HAL_TIM_Base_Stop_IT>
			send_UART("Sampling Stopped.");
 8001a74:	480b      	ldr	r0, [pc, #44]	; (8001aa4 <proc_st_cmd+0x70>)
 8001a76:	f001 f91b 	bl	8002cb0 <send_UART>
		else
			send_UART("Invalid Stop Sampling instruction syntax.");
	}
	else
		send_UART("Sampling is not running.");
}
 8001a7a:	e006      	b.n	8001a8a <proc_st_cmd+0x56>
			send_UART("Invalid Stop Sampling instruction syntax.");
 8001a7c:	480a      	ldr	r0, [pc, #40]	; (8001aa8 <proc_st_cmd+0x74>)
 8001a7e:	f001 f917 	bl	8002cb0 <send_UART>
}
 8001a82:	e002      	b.n	8001a8a <proc_st_cmd+0x56>
		send_UART("Sampling is not running.");
 8001a84:	4809      	ldr	r0, [pc, #36]	; (8001aac <proc_st_cmd+0x78>)
 8001a86:	f001 f913 	bl	8002cb0 <send_UART>
}
 8001a8a:	bf00      	nop
 8001a8c:	3708      	adds	r7, #8
 8001a8e:	46bd      	mov	sp, r7
 8001a90:	bd80      	pop	{r7, pc}
 8001a92:	bf00      	nop
 8001a94:	20000328 	.word	0x20000328
 8001a98:	20014594 	.word	0x20014594
 8001a9c:	20010444 	.word	0x20010444
 8001aa0:	200186b0 	.word	0x200186b0
 8001aa4:	0800d084 	.word	0x0800d084
 8001aa8:	0800d098 	.word	0x0800d098
 8001aac:	0800d0c4 	.word	0x0800d0c4

08001ab0 <memory_read>:

//------------------------------------------------------------------------------------------------------------------


bool memory_read(unsigned int addr_r, unsigned int length, char* data)
{
 8001ab0:	b480      	push	{r7}
 8001ab2:	b087      	sub	sp, #28
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	60f8      	str	r0, [r7, #12]
 8001ab8:	60b9      	str	r1, [r7, #8]
 8001aba:	607a      	str	r2, [r7, #4]
	if(addr_r < 0 || addr_r > 0xFFFF || length < 0 || length > 0xFF)
 8001abc:	68fb      	ldr	r3, [r7, #12]
 8001abe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ac2:	d202      	bcs.n	8001aca <memory_read+0x1a>
 8001ac4:	68bb      	ldr	r3, [r7, #8]
 8001ac6:	2bff      	cmp	r3, #255	; 0xff
 8001ac8:	d901      	bls.n	8001ace <memory_read+0x1e>
		return false;
 8001aca:	2300      	movs	r3, #0
 8001acc:	e01b      	b.n	8001b06 <memory_read+0x56>

	if((0x10000 - addr_r) < length)
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
 8001ad4:	68ba      	ldr	r2, [r7, #8]
 8001ad6:	429a      	cmp	r2, r3
 8001ad8:	d901      	bls.n	8001ade <memory_read+0x2e>
		return false;
 8001ada:	2300      	movs	r3, #0
 8001adc:	e013      	b.n	8001b06 <memory_read+0x56>

	for(int i = 0; i < length; i++)
 8001ade:	2300      	movs	r3, #0
 8001ae0:	617b      	str	r3, [r7, #20]
 8001ae2:	e00b      	b.n	8001afc <memory_read+0x4c>
	{
		data[i] = memory[addr_r++];
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	1c5a      	adds	r2, r3, #1
 8001ae8:	60fa      	str	r2, [r7, #12]
 8001aea:	697a      	ldr	r2, [r7, #20]
 8001aec:	6879      	ldr	r1, [r7, #4]
 8001aee:	440a      	add	r2, r1
 8001af0:	4908      	ldr	r1, [pc, #32]	; (8001b14 <memory_read+0x64>)
 8001af2:	5ccb      	ldrb	r3, [r1, r3]
 8001af4:	7013      	strb	r3, [r2, #0]
	for(int i = 0; i < length; i++)
 8001af6:	697b      	ldr	r3, [r7, #20]
 8001af8:	3301      	adds	r3, #1
 8001afa:	617b      	str	r3, [r7, #20]
 8001afc:	697b      	ldr	r3, [r7, #20]
 8001afe:	68ba      	ldr	r2, [r7, #8]
 8001b00:	429a      	cmp	r2, r3
 8001b02:	d8ef      	bhi.n	8001ae4 <memory_read+0x34>
	}

	return true;
 8001b04:	2301      	movs	r3, #1
}
 8001b06:	4618      	mov	r0, r3
 8001b08:	371c      	adds	r7, #28
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b10:	4770      	bx	lr
 8001b12:	bf00      	nop
 8001b14:	20000440 	.word	0x20000440

08001b18 <memory_write>:


bool memory_write(unsigned int addr, unsigned int length, int data)
{
 8001b18:	b480      	push	{r7}
 8001b1a:	b087      	sub	sp, #28
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	60f8      	str	r0, [r7, #12]
 8001b20:	60b9      	str	r1, [r7, #8]
 8001b22:	607a      	str	r2, [r7, #4]
	if(addr < 0 || addr > 0xFFFF || length < 0 || length > 0xFF || data < 0 || data > 0xFF)
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b2a:	d208      	bcs.n	8001b3e <memory_write+0x26>
 8001b2c:	68bb      	ldr	r3, [r7, #8]
 8001b2e:	2bff      	cmp	r3, #255	; 0xff
 8001b30:	d805      	bhi.n	8001b3e <memory_write+0x26>
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	db02      	blt.n	8001b3e <memory_write+0x26>
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	2bff      	cmp	r3, #255	; 0xff
 8001b3c:	dd01      	ble.n	8001b42 <memory_write+0x2a>
		return false;
 8001b3e:	2300      	movs	r3, #0
 8001b40:	e019      	b.n	8001b76 <memory_write+0x5e>

	if((0x10000 - addr) < length)
 8001b42:	68fb      	ldr	r3, [r7, #12]
 8001b44:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
 8001b48:	68ba      	ldr	r2, [r7, #8]
 8001b4a:	429a      	cmp	r2, r3
 8001b4c:	d901      	bls.n	8001b52 <memory_write+0x3a>
		return false;
 8001b4e:	2300      	movs	r3, #0
 8001b50:	e011      	b.n	8001b76 <memory_write+0x5e>

	for(int i = 0; i < length; i++)
 8001b52:	2300      	movs	r3, #0
 8001b54:	617b      	str	r3, [r7, #20]
 8001b56:	e009      	b.n	8001b6c <memory_write+0x54>
	{
		memory[addr++] = data;
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	1c5a      	adds	r2, r3, #1
 8001b5c:	60fa      	str	r2, [r7, #12]
 8001b5e:	687a      	ldr	r2, [r7, #4]
 8001b60:	b2d1      	uxtb	r1, r2
 8001b62:	4a08      	ldr	r2, [pc, #32]	; (8001b84 <memory_write+0x6c>)
 8001b64:	54d1      	strb	r1, [r2, r3]
	for(int i = 0; i < length; i++)
 8001b66:	697b      	ldr	r3, [r7, #20]
 8001b68:	3301      	adds	r3, #1
 8001b6a:	617b      	str	r3, [r7, #20]
 8001b6c:	697b      	ldr	r3, [r7, #20]
 8001b6e:	68ba      	ldr	r2, [r7, #8]
 8001b70:	429a      	cmp	r2, r3
 8001b72:	d8f1      	bhi.n	8001b58 <memory_write+0x40>
	}

	return true;
 8001b74:	2301      	movs	r3, #1
}
 8001b76:	4618      	mov	r0, r3
 8001b78:	371c      	adds	r7, #28
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b80:	4770      	bx	lr
 8001b82:	bf00      	nop
 8001b84:	20000440 	.word	0x20000440

08001b88 <make_pin_input>:


bool make_pin_input(unsigned int port_addr, unsigned int pin_setting)
{
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b08e      	sub	sp, #56	; 0x38
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
 8001b90:	6039      	str	r1, [r7, #0]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	d009      	beq.n	8001bac <make_pin_input+0x24>
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	2b08      	cmp	r3, #8
 8001b9c:	d806      	bhi.n	8001bac <make_pin_input+0x24>
 8001b9e:	683b      	ldr	r3, [r7, #0]
 8001ba0:	2b00      	cmp	r3, #0
 8001ba2:	d003      	beq.n	8001bac <make_pin_input+0x24>
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001baa:	d301      	bcc.n	8001bb0 <make_pin_input+0x28>
		return false;
 8001bac:	2300      	movs	r3, #0
 8001bae:	e07f      	b.n	8001cb0 <make_pin_input+0x128>
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	3b05      	subs	r3, #5
 8001bb4:	2b06      	cmp	r3, #6
 8001bb6:	d85f      	bhi.n	8001c78 <make_pin_input+0xf0>
 8001bb8:	a201      	add	r2, pc, #4	; (adr r2, 8001bc0 <make_pin_input+0x38>)
 8001bba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001bbe:	bf00      	nop
 8001bc0:	08001bdd 	.word	0x08001bdd
 8001bc4:	08001c79 	.word	0x08001c79
 8001bc8:	08001bf7 	.word	0x08001bf7
 8001bcc:	08001c11 	.word	0x08001c11
 8001bd0:	08001c2b 	.word	0x08001c2b
 8001bd4:	08001c45 	.word	0x08001c45
 8001bd8:	08001c5f 	.word	0x08001c5f

	switch(port_addr)
	{
	case  5: __HAL_RCC_GPIOE_CLK_ENABLE(); break;
 8001bdc:	4b36      	ldr	r3, [pc, #216]	; (8001cb8 <make_pin_input+0x130>)
 8001bde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001be0:	4a35      	ldr	r2, [pc, #212]	; (8001cb8 <make_pin_input+0x130>)
 8001be2:	f043 0310 	orr.w	r3, r3, #16
 8001be6:	6313      	str	r3, [r2, #48]	; 0x30
 8001be8:	4b33      	ldr	r3, [pc, #204]	; (8001cb8 <make_pin_input+0x130>)
 8001bea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bec:	f003 0310 	and.w	r3, r3, #16
 8001bf0:	623b      	str	r3, [r7, #32]
 8001bf2:	6a3b      	ldr	r3, [r7, #32]
 8001bf4:	e040      	b.n	8001c78 <make_pin_input+0xf0>
	case  7: __HAL_RCC_GPIOG_CLK_ENABLE(); break;
 8001bf6:	4b30      	ldr	r3, [pc, #192]	; (8001cb8 <make_pin_input+0x130>)
 8001bf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bfa:	4a2f      	ldr	r2, [pc, #188]	; (8001cb8 <make_pin_input+0x130>)
 8001bfc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c00:	6313      	str	r3, [r2, #48]	; 0x30
 8001c02:	4b2d      	ldr	r3, [pc, #180]	; (8001cb8 <make_pin_input+0x130>)
 8001c04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c06:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c0a:	61fb      	str	r3, [r7, #28]
 8001c0c:	69fb      	ldr	r3, [r7, #28]
 8001c0e:	e033      	b.n	8001c78 <make_pin_input+0xf0>
	case  8: __HAL_RCC_GPIOH_CLK_ENABLE(); break;
 8001c10:	4b29      	ldr	r3, [pc, #164]	; (8001cb8 <make_pin_input+0x130>)
 8001c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c14:	4a28      	ldr	r2, [pc, #160]	; (8001cb8 <make_pin_input+0x130>)
 8001c16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001c1a:	6313      	str	r3, [r2, #48]	; 0x30
 8001c1c:	4b26      	ldr	r3, [pc, #152]	; (8001cb8 <make_pin_input+0x130>)
 8001c1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c24:	61bb      	str	r3, [r7, #24]
 8001c26:	69bb      	ldr	r3, [r7, #24]
 8001c28:	e026      	b.n	8001c78 <make_pin_input+0xf0>
	case  9: __HAL_RCC_GPIOI_CLK_ENABLE(); break;
 8001c2a:	4b23      	ldr	r3, [pc, #140]	; (8001cb8 <make_pin_input+0x130>)
 8001c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2e:	4a22      	ldr	r2, [pc, #136]	; (8001cb8 <make_pin_input+0x130>)
 8001c30:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c34:	6313      	str	r3, [r2, #48]	; 0x30
 8001c36:	4b20      	ldr	r3, [pc, #128]	; (8001cb8 <make_pin_input+0x130>)
 8001c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c3e:	617b      	str	r3, [r7, #20]
 8001c40:	697b      	ldr	r3, [r7, #20]
 8001c42:	e019      	b.n	8001c78 <make_pin_input+0xf0>
	case 10: __HAL_RCC_GPIOJ_CLK_ENABLE(); break;
 8001c44:	4b1c      	ldr	r3, [pc, #112]	; (8001cb8 <make_pin_input+0x130>)
 8001c46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c48:	4a1b      	ldr	r2, [pc, #108]	; (8001cb8 <make_pin_input+0x130>)
 8001c4a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c4e:	6313      	str	r3, [r2, #48]	; 0x30
 8001c50:	4b19      	ldr	r3, [pc, #100]	; (8001cb8 <make_pin_input+0x130>)
 8001c52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c54:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001c58:	613b      	str	r3, [r7, #16]
 8001c5a:	693b      	ldr	r3, [r7, #16]
 8001c5c:	e00c      	b.n	8001c78 <make_pin_input+0xf0>
	case 11: __HAL_RCC_GPIOK_CLK_ENABLE(); break;
 8001c5e:	4b16      	ldr	r3, [pc, #88]	; (8001cb8 <make_pin_input+0x130>)
 8001c60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c62:	4a15      	ldr	r2, [pc, #84]	; (8001cb8 <make_pin_input+0x130>)
 8001c64:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001c68:	6313      	str	r3, [r2, #48]	; 0x30
 8001c6a:	4b13      	ldr	r3, [pc, #76]	; (8001cb8 <make_pin_input+0x130>)
 8001c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c6e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c72:	60fb      	str	r3, [r7, #12]
 8001c74:	68fb      	ldr	r3, [r7, #12]
 8001c76:	bf00      	nop
	}

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c78:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	601a      	str	r2, [r3, #0]
 8001c80:	605a      	str	r2, [r3, #4]
 8001c82:	609a      	str	r2, [r3, #8]
 8001c84:	60da      	str	r2, [r3, #12]
 8001c86:	611a      	str	r2, [r3, #16]

	GPIO_InitStruct.Pin |= pin_setting;
 8001c88:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001c8a:	683b      	ldr	r3, [r7, #0]
 8001c8c:	4313      	orrs	r3, r2
 8001c8e:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001c90:	2300      	movs	r3, #0
 8001c92:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c94:	2300      	movs	r3, #0
 8001c96:	62fb      	str	r3, [r7, #44]	; 0x2c

	HAL_GPIO_Init((GPIO_TypeDef *) (AHB1PERIPH_BASE + (0x0400UL * (port_addr-1))), &GPIO_InitStruct);
 8001c98:	687a      	ldr	r2, [r7, #4]
 8001c9a:	4b08      	ldr	r3, [pc, #32]	; (8001cbc <make_pin_input+0x134>)
 8001c9c:	4413      	add	r3, r2
 8001c9e:	029b      	lsls	r3, r3, #10
 8001ca0:	461a      	mov	r2, r3
 8001ca2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001ca6:	4619      	mov	r1, r3
 8001ca8:	4610      	mov	r0, r2
 8001caa:	f002 f8ed 	bl	8003e88 <HAL_GPIO_Init>

	return true;
 8001cae:	2301      	movs	r3, #1
}
 8001cb0:	4618      	mov	r0, r3
 8001cb2:	3738      	adds	r7, #56	; 0x38
 8001cb4:	46bd      	mov	sp, r7
 8001cb6:	bd80      	pop	{r7, pc}
 8001cb8:	40023800 	.word	0x40023800
 8001cbc:	0010007f 	.word	0x0010007f

08001cc0 <make_pin_output>:


bool make_pin_output(unsigned int port_addr, unsigned int pin_setting)
{
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	b08e      	sub	sp, #56	; 0x38
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	6078      	str	r0, [r7, #4]
 8001cc8:	6039      	str	r1, [r7, #0]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	2b00      	cmp	r3, #0
 8001cce:	d009      	beq.n	8001ce4 <make_pin_output+0x24>
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	2b08      	cmp	r3, #8
 8001cd4:	d806      	bhi.n	8001ce4 <make_pin_output+0x24>
 8001cd6:	683b      	ldr	r3, [r7, #0]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d003      	beq.n	8001ce4 <make_pin_output+0x24>
 8001cdc:	683b      	ldr	r3, [r7, #0]
 8001cde:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ce2:	d301      	bcc.n	8001ce8 <make_pin_output+0x28>
		return false;
 8001ce4:	2300      	movs	r3, #0
 8001ce6:	e081      	b.n	8001dec <make_pin_output+0x12c>
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	3b05      	subs	r3, #5
 8001cec:	2b06      	cmp	r3, #6
 8001cee:	d85f      	bhi.n	8001db0 <make_pin_output+0xf0>
 8001cf0:	a201      	add	r2, pc, #4	; (adr r2, 8001cf8 <make_pin_output+0x38>)
 8001cf2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cf6:	bf00      	nop
 8001cf8:	08001d15 	.word	0x08001d15
 8001cfc:	08001db1 	.word	0x08001db1
 8001d00:	08001d2f 	.word	0x08001d2f
 8001d04:	08001d49 	.word	0x08001d49
 8001d08:	08001d63 	.word	0x08001d63
 8001d0c:	08001d7d 	.word	0x08001d7d
 8001d10:	08001d97 	.word	0x08001d97

	switch(port_addr)
	{
	case  5: __HAL_RCC_GPIOE_CLK_ENABLE(); break;
 8001d14:	4b37      	ldr	r3, [pc, #220]	; (8001df4 <make_pin_output+0x134>)
 8001d16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d18:	4a36      	ldr	r2, [pc, #216]	; (8001df4 <make_pin_output+0x134>)
 8001d1a:	f043 0310 	orr.w	r3, r3, #16
 8001d1e:	6313      	str	r3, [r2, #48]	; 0x30
 8001d20:	4b34      	ldr	r3, [pc, #208]	; (8001df4 <make_pin_output+0x134>)
 8001d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d24:	f003 0310 	and.w	r3, r3, #16
 8001d28:	623b      	str	r3, [r7, #32]
 8001d2a:	6a3b      	ldr	r3, [r7, #32]
 8001d2c:	e040      	b.n	8001db0 <make_pin_output+0xf0>
	case  7: __HAL_RCC_GPIOG_CLK_ENABLE(); break;
 8001d2e:	4b31      	ldr	r3, [pc, #196]	; (8001df4 <make_pin_output+0x134>)
 8001d30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d32:	4a30      	ldr	r2, [pc, #192]	; (8001df4 <make_pin_output+0x134>)
 8001d34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001d38:	6313      	str	r3, [r2, #48]	; 0x30
 8001d3a:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <make_pin_output+0x134>)
 8001d3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d42:	61fb      	str	r3, [r7, #28]
 8001d44:	69fb      	ldr	r3, [r7, #28]
 8001d46:	e033      	b.n	8001db0 <make_pin_output+0xf0>
	case  8: __HAL_RCC_GPIOH_CLK_ENABLE(); break;
 8001d48:	4b2a      	ldr	r3, [pc, #168]	; (8001df4 <make_pin_output+0x134>)
 8001d4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d4c:	4a29      	ldr	r2, [pc, #164]	; (8001df4 <make_pin_output+0x134>)
 8001d4e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d52:	6313      	str	r3, [r2, #48]	; 0x30
 8001d54:	4b27      	ldr	r3, [pc, #156]	; (8001df4 <make_pin_output+0x134>)
 8001d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d5c:	61bb      	str	r3, [r7, #24]
 8001d5e:	69bb      	ldr	r3, [r7, #24]
 8001d60:	e026      	b.n	8001db0 <make_pin_output+0xf0>
	case  9: __HAL_RCC_GPIOI_CLK_ENABLE(); break;
 8001d62:	4b24      	ldr	r3, [pc, #144]	; (8001df4 <make_pin_output+0x134>)
 8001d64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d66:	4a23      	ldr	r2, [pc, #140]	; (8001df4 <make_pin_output+0x134>)
 8001d68:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d6c:	6313      	str	r3, [r2, #48]	; 0x30
 8001d6e:	4b21      	ldr	r3, [pc, #132]	; (8001df4 <make_pin_output+0x134>)
 8001d70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d76:	617b      	str	r3, [r7, #20]
 8001d78:	697b      	ldr	r3, [r7, #20]
 8001d7a:	e019      	b.n	8001db0 <make_pin_output+0xf0>
	case 10: __HAL_RCC_GPIOJ_CLK_ENABLE(); break;
 8001d7c:	4b1d      	ldr	r3, [pc, #116]	; (8001df4 <make_pin_output+0x134>)
 8001d7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d80:	4a1c      	ldr	r2, [pc, #112]	; (8001df4 <make_pin_output+0x134>)
 8001d82:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d86:	6313      	str	r3, [r2, #48]	; 0x30
 8001d88:	4b1a      	ldr	r3, [pc, #104]	; (8001df4 <make_pin_output+0x134>)
 8001d8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d8c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001d90:	613b      	str	r3, [r7, #16]
 8001d92:	693b      	ldr	r3, [r7, #16]
 8001d94:	e00c      	b.n	8001db0 <make_pin_output+0xf0>
	case 11: __HAL_RCC_GPIOK_CLK_ENABLE(); break;
 8001d96:	4b17      	ldr	r3, [pc, #92]	; (8001df4 <make_pin_output+0x134>)
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	4a16      	ldr	r2, [pc, #88]	; (8001df4 <make_pin_output+0x134>)
 8001d9c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001da0:	6313      	str	r3, [r2, #48]	; 0x30
 8001da2:	4b14      	ldr	r3, [pc, #80]	; (8001df4 <make_pin_output+0x134>)
 8001da4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001da6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001daa:	60fb      	str	r3, [r7, #12]
 8001dac:	68fb      	ldr	r3, [r7, #12]
 8001dae:	bf00      	nop
	}

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001db0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001db4:	2200      	movs	r2, #0
 8001db6:	601a      	str	r2, [r3, #0]
 8001db8:	605a      	str	r2, [r3, #4]
 8001dba:	609a      	str	r2, [r3, #8]
 8001dbc:	60da      	str	r2, [r3, #12]
 8001dbe:	611a      	str	r2, [r3, #16]

	GPIO_InitStruct.Pin |= pin_setting;
 8001dc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001dc2:	683b      	ldr	r3, [r7, #0]
 8001dc4:	4313      	orrs	r3, r2
 8001dc6:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001dc8:	2301      	movs	r3, #1
 8001dca:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dcc:	2300      	movs	r3, #0
 8001dce:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dd0:	2300      	movs	r3, #0
 8001dd2:	633b      	str	r3, [r7, #48]	; 0x30

	// HAL_GPIO_WritePin(port_addr, GPIO_PIN_0, GPIO_PIN_RESET); reset antes de inicializar, pino a pino

	HAL_GPIO_Init((GPIO_TypeDef *) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1))), &GPIO_InitStruct);
 8001dd4:	687a      	ldr	r2, [r7, #4]
 8001dd6:	4b08      	ldr	r3, [pc, #32]	; (8001df8 <make_pin_output+0x138>)
 8001dd8:	4413      	add	r3, r2
 8001dda:	029b      	lsls	r3, r3, #10
 8001ddc:	461a      	mov	r2, r3
 8001dde:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001de2:	4619      	mov	r1, r3
 8001de4:	4610      	mov	r0, r2
 8001de6:	f002 f84f 	bl	8003e88 <HAL_GPIO_Init>

	return true;
 8001dea:	2301      	movs	r3, #1
}
 8001dec:	4618      	mov	r0, r3
 8001dee:	3738      	adds	r7, #56	; 0x38
 8001df0:	46bd      	mov	sp, r7
 8001df2:	bd80      	pop	{r7, pc}
 8001df4:	40023800 	.word	0x40023800
 8001df8:	0010007f 	.word	0x0010007f

08001dfc <read_dig_input>:

bool read_dig_input(unsigned int port_addr, unsigned int pin_setting, GPIO_PinState* pin_values)
{
 8001dfc:	b590      	push	{r4, r7, lr}
 8001dfe:	b089      	sub	sp, #36	; 0x24
 8001e00:	af00      	add	r7, sp, #0
 8001e02:	60f8      	str	r0, [r7, #12]
 8001e04:	60b9      	str	r1, [r7, #8]
 8001e06:	607a      	str	r2, [r7, #4]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d009      	beq.n	8001e22 <read_dig_input+0x26>
 8001e0e:	68fb      	ldr	r3, [r7, #12]
 8001e10:	2b08      	cmp	r3, #8
 8001e12:	d806      	bhi.n	8001e22 <read_dig_input+0x26>
 8001e14:	68bb      	ldr	r3, [r7, #8]
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d003      	beq.n	8001e22 <read_dig_input+0x26>
 8001e1a:	68bb      	ldr	r3, [r7, #8]
 8001e1c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001e20:	d301      	bcc.n	8001e26 <read_dig_input+0x2a>
		return false;
 8001e22:	2300      	movs	r3, #0
 8001e24:	e02d      	b.n	8001e82 <read_dig_input+0x86>

	int mask = 1;
 8001e26:	2301      	movs	r3, #1
 8001e28:	61fb      	str	r3, [r7, #28]

	for(int pin = 0; pin < 16; pin++)
 8001e2a:	2300      	movs	r3, #0
 8001e2c:	61bb      	str	r3, [r7, #24]
 8001e2e:	e024      	b.n	8001e7a <read_dig_input+0x7e>
	{
		if(pin_setting & mask)
 8001e30:	69fa      	ldr	r2, [r7, #28]
 8001e32:	68bb      	ldr	r3, [r7, #8]
 8001e34:	4013      	ands	r3, r2
 8001e36:	2b00      	cmp	r3, #0
 8001e38:	d014      	beq.n	8001e64 <read_dig_input+0x68>
		{
			GPIO_TypeDef* GPIOx = (GPIO_TypeDef*) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1)));
 8001e3a:	68fa      	ldr	r2, [r7, #12]
 8001e3c:	4b13      	ldr	r3, [pc, #76]	; (8001e8c <read_dig_input+0x90>)
 8001e3e:	4413      	add	r3, r2
 8001e40:	029b      	lsls	r3, r3, #10
 8001e42:	617b      	str	r3, [r7, #20]
			uint16_t GPIO_Pin = (1 << pin);
 8001e44:	2201      	movs	r2, #1
 8001e46:	69bb      	ldr	r3, [r7, #24]
 8001e48:	fa02 f303 	lsl.w	r3, r2, r3
 8001e4c:	827b      	strh	r3, [r7, #18]

			pin_values[pin] = HAL_GPIO_ReadPin(GPIOx, GPIO_Pin);
 8001e4e:	69bb      	ldr	r3, [r7, #24]
 8001e50:	687a      	ldr	r2, [r7, #4]
 8001e52:	18d4      	adds	r4, r2, r3
 8001e54:	8a7b      	ldrh	r3, [r7, #18]
 8001e56:	4619      	mov	r1, r3
 8001e58:	6978      	ldr	r0, [r7, #20]
 8001e5a:	f002 f9c1 	bl	80041e0 <HAL_GPIO_ReadPin>
 8001e5e:	4603      	mov	r3, r0
 8001e60:	7023      	strb	r3, [r4, #0]
 8001e62:	e004      	b.n	8001e6e <read_dig_input+0x72>
		}
		else
			pin_values[pin] = GPIO_PIN_RESET;
 8001e64:	69bb      	ldr	r3, [r7, #24]
 8001e66:	687a      	ldr	r2, [r7, #4]
 8001e68:	4413      	add	r3, r2
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	701a      	strb	r2, [r3, #0]

		mask <<= 1;
 8001e6e:	69fb      	ldr	r3, [r7, #28]
 8001e70:	005b      	lsls	r3, r3, #1
 8001e72:	61fb      	str	r3, [r7, #28]
	for(int pin = 0; pin < 16; pin++)
 8001e74:	69bb      	ldr	r3, [r7, #24]
 8001e76:	3301      	adds	r3, #1
 8001e78:	61bb      	str	r3, [r7, #24]
 8001e7a:	69bb      	ldr	r3, [r7, #24]
 8001e7c:	2b0f      	cmp	r3, #15
 8001e7e:	ddd7      	ble.n	8001e30 <read_dig_input+0x34>
	}

	return true;
 8001e80:	2301      	movs	r3, #1
}
 8001e82:	4618      	mov	r0, r3
 8001e84:	3724      	adds	r7, #36	; 0x24
 8001e86:	46bd      	mov	sp, r7
 8001e88:	bd90      	pop	{r4, r7, pc}
 8001e8a:	bf00      	nop
 8001e8c:	0010007f 	.word	0x0010007f

08001e90 <write_dig_output>:

bool write_dig_output(unsigned int port_addr, unsigned int pin_setting, unsigned int pin_values)
{
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b088      	sub	sp, #32
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	60f8      	str	r0, [r7, #12]
 8001e98:	60b9      	str	r1, [r7, #8]
 8001e9a:	607a      	str	r2, [r7, #4]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF || pin_values < 0 || pin_values > 0xFFFF)
 8001e9c:	68fb      	ldr	r3, [r7, #12]
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	d00d      	beq.n	8001ebe <write_dig_output+0x2e>
 8001ea2:	68fb      	ldr	r3, [r7, #12]
 8001ea4:	2b08      	cmp	r3, #8
 8001ea6:	d80a      	bhi.n	8001ebe <write_dig_output+0x2e>
 8001ea8:	68bb      	ldr	r3, [r7, #8]
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d007      	beq.n	8001ebe <write_dig_output+0x2e>
 8001eae:	68bb      	ldr	r3, [r7, #8]
 8001eb0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001eb4:	d203      	bcs.n	8001ebe <write_dig_output+0x2e>
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ebc:	d301      	bcc.n	8001ec2 <write_dig_output+0x32>
		return false;
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	e02a      	b.n	8001f18 <write_dig_output+0x88>

	int mask = 1;
 8001ec2:	2301      	movs	r3, #1
 8001ec4:	61fb      	str	r3, [r7, #28]

	for(int pin = 0; pin < 16; pin++)
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	61bb      	str	r3, [r7, #24]
 8001eca:	e021      	b.n	8001f10 <write_dig_output+0x80>
	{
		if(pin_setting & mask)
 8001ecc:	69fa      	ldr	r2, [r7, #28]
 8001ece:	68bb      	ldr	r3, [r7, #8]
 8001ed0:	4013      	ands	r3, r2
 8001ed2:	2b00      	cmp	r3, #0
 8001ed4:	d016      	beq.n	8001f04 <write_dig_output+0x74>
		{
			GPIO_TypeDef* GPIOx = (GPIO_TypeDef*) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1)));
 8001ed6:	68fa      	ldr	r2, [r7, #12]
 8001ed8:	4b11      	ldr	r3, [pc, #68]	; (8001f20 <write_dig_output+0x90>)
 8001eda:	4413      	add	r3, r2
 8001edc:	029b      	lsls	r3, r3, #10
 8001ede:	617b      	str	r3, [r7, #20]
			uint16_t GPIO_Pin = (1 << pin);
 8001ee0:	2201      	movs	r2, #1
 8001ee2:	69bb      	ldr	r3, [r7, #24]
 8001ee4:	fa02 f303 	lsl.w	r3, r2, r3
 8001ee8:	827b      	strh	r3, [r7, #18]
			GPIO_PinState PinState = (pin_values & mask) >> pin;
 8001eea:	69fa      	ldr	r2, [r7, #28]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	401a      	ands	r2, r3
 8001ef0:	69bb      	ldr	r3, [r7, #24]
 8001ef2:	fa22 f303 	lsr.w	r3, r2, r3
 8001ef6:	747b      	strb	r3, [r7, #17]

			HAL_GPIO_WritePin(GPIOx, GPIO_Pin, PinState);
 8001ef8:	7c7a      	ldrb	r2, [r7, #17]
 8001efa:	8a7b      	ldrh	r3, [r7, #18]
 8001efc:	4619      	mov	r1, r3
 8001efe:	6978      	ldr	r0, [r7, #20]
 8001f00:	f002 f986 	bl	8004210 <HAL_GPIO_WritePin>
		}
		mask <<= 1;
 8001f04:	69fb      	ldr	r3, [r7, #28]
 8001f06:	005b      	lsls	r3, r3, #1
 8001f08:	61fb      	str	r3, [r7, #28]
	for(int pin = 0; pin < 16; pin++)
 8001f0a:	69bb      	ldr	r3, [r7, #24]
 8001f0c:	3301      	adds	r3, #1
 8001f0e:	61bb      	str	r3, [r7, #24]
 8001f10:	69bb      	ldr	r3, [r7, #24]
 8001f12:	2b0f      	cmp	r3, #15
 8001f14:	ddda      	ble.n	8001ecc <write_dig_output+0x3c>
	}

	return true;
 8001f16:	2301      	movs	r3, #1
}
 8001f18:	4618      	mov	r0, r3
 8001f1a:	3720      	adds	r7, #32
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	bd80      	pop	{r7, pc}
 8001f20:	0010007f 	.word	0x0010007f

08001f24 <analog_read>:

bool analog_read(unsigned int addr3, unsigned int* value)
{
 8001f24:	b580      	push	{r7, lr}
 8001f26:	b082      	sub	sp, #8
 8001f28:	af00      	add	r7, sp, #0
 8001f2a:	6078      	str	r0, [r7, #4]
 8001f2c:	6039      	str	r1, [r7, #0]
	if(addr3 < 0 || addr3 > 0x0F)
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	2b0f      	cmp	r3, #15
 8001f32:	d901      	bls.n	8001f38 <analog_read+0x14>
		return false;
 8001f34:	2300      	movs	r3, #0
 8001f36:	e00b      	b.n	8001f50 <analog_read+0x2c>

	MX_ADC3_Init1(true);
 8001f38:	2001      	movs	r0, #1
 8001f3a:	f7fe fd59 	bl	80009f0 <MX_ADC3_Init1>
	config_ADC(addr3);
 8001f3e:	6878      	ldr	r0, [r7, #4]
 8001f40:	f7fe fe88 	bl	8000c54 <config_ADC>
	*value = read_ADC();
 8001f44:	f7fe fea4 	bl	8000c90 <read_ADC>
 8001f48:	4602      	mov	r2, r0
 8001f4a:	683b      	ldr	r3, [r7, #0]
 8001f4c:	601a      	str	r2, [r3, #0]

	return true;
 8001f4e:	2301      	movs	r3, #1
}
 8001f50:	4618      	mov	r0, r3
 8001f52:	3708      	adds	r7, #8
 8001f54:	46bd      	mov	sp, r7
 8001f56:	bd80      	pop	{r7, pc}

08001f58 <analog_write>:

bool analog_write(unsigned int addr3, uint32_t value)
{
 8001f58:	b580      	push	{r7, lr}
 8001f5a:	b082      	sub	sp, #8
 8001f5c:	af00      	add	r7, sp, #0
 8001f5e:	6078      	str	r0, [r7, #4]
 8001f60:	6039      	str	r1, [r7, #0]
	if(addr3 < 0 || addr3 > 0x01)
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	2b01      	cmp	r3, #1
 8001f66:	d901      	bls.n	8001f6c <analog_write+0x14>
		return false;
 8001f68:	2300      	movs	r3, #0
 8001f6a:	e01a      	b.n	8001fa2 <analog_write+0x4a>

	if(HAL_DAC_Start(&hdac, (addr3 ? DAC_CHANNEL_2 : DAC_CHANNEL_1)) == HAL_OK){
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d001      	beq.n	8001f76 <analog_write+0x1e>
 8001f72:	2310      	movs	r3, #16
 8001f74:	e000      	b.n	8001f78 <analog_write+0x20>
 8001f76:	2300      	movs	r3, #0
 8001f78:	4619      	mov	r1, r3
 8001f7a:	480c      	ldr	r0, [pc, #48]	; (8001fac <analog_write+0x54>)
 8001f7c:	f001 fe2b 	bl	8003bd6 <HAL_DAC_Start>
 8001f80:	4603      	mov	r3, r0
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d10c      	bne.n	8001fa0 <analog_write+0x48>
	    HAL_DAC_SetValue(&hdac, (addr3 ? DAC_CHANNEL_2 : DAC_CHANNEL_1), DAC_ALIGN_12B_R, value);
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	2b00      	cmp	r3, #0
 8001f8a:	d001      	beq.n	8001f90 <analog_write+0x38>
 8001f8c:	2110      	movs	r1, #16
 8001f8e:	e000      	b.n	8001f92 <analog_write+0x3a>
 8001f90:	2100      	movs	r1, #0
 8001f92:	683b      	ldr	r3, [r7, #0]
 8001f94:	2200      	movs	r2, #0
 8001f96:	4805      	ldr	r0, [pc, #20]	; (8001fac <analog_write+0x54>)
 8001f98:	f001 fe6f 	bl	8003c7a <HAL_DAC_SetValue>
	    return true;
 8001f9c:	2301      	movs	r3, #1
 8001f9e:	e000      	b.n	8001fa2 <analog_write+0x4a>
	}else
		return false;
 8001fa0:	2300      	movs	r3, #0
}
 8001fa2:	4618      	mov	r0, r3
 8001fa4:	3708      	adds	r7, #8
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bd80      	pop	{r7, pc}
 8001faa:	bf00      	nop
 8001fac:	2001869c 	.word	0x2001869c

08001fb0 <process_buf_nf>:
	process_buf_ff

};

void process_buf_nf(uint32_t* x_buf, int n)
{
 8001fb0:	b580      	push	{r7, lr}
 8001fb2:	b082      	sub	sp, #8
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	6039      	str	r1, [r7, #0]
	y_buf[n] = x_buf[n];
 8001fba:	683b      	ldr	r3, [r7, #0]
 8001fbc:	009b      	lsls	r3, r3, #2
 8001fbe:	687a      	ldr	r2, [r7, #4]
 8001fc0:	4413      	add	r3, r2
 8001fc2:	681a      	ldr	r2, [r3, #0]
 8001fc4:	4907      	ldr	r1, [pc, #28]	; (8001fe4 <process_buf_nf+0x34>)
 8001fc6:	683b      	ldr	r3, [r7, #0]
 8001fc8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	analog_write(0,y_buf[n]);
 8001fcc:	4a05      	ldr	r2, [pc, #20]	; (8001fe4 <process_buf_nf+0x34>)
 8001fce:	683b      	ldr	r3, [r7, #0]
 8001fd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001fd4:	4619      	mov	r1, r3
 8001fd6:	2000      	movs	r0, #0
 8001fd8:	f7ff ffbe 	bl	8001f58 <analog_write>
}
 8001fdc:	bf00      	nop
 8001fde:	3708      	adds	r7, #8
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	bd80      	pop	{r7, pc}
 8001fe4:	2001469c 	.word	0x2001469c

08001fe8 <process_buf_if>:

void process_buf_if(uint32_t* x_buf, int n)
{
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b084      	sub	sp, #16
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	6039      	str	r1, [r7, #0]
	unsigned int temp = 0;
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	60fb      	str	r3, [r7, #12]

	for(int i = 0 ; i < 10; i++)
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	60bb      	str	r3, [r7, #8]
 8001ffa:	e043      	b.n	8002084 <process_buf_if+0x9c>
		{
			temp += coef_ak[i] * y_buf[(n-i) & (ADC_BUF_SIZE - 1)];
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	ee07 3a90 	vmov	s15, r3
 8002002:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002006:	4a29      	ldr	r2, [pc, #164]	; (80020ac <process_buf_if+0xc4>)
 8002008:	68bb      	ldr	r3, [r7, #8]
 800200a:	009b      	lsls	r3, r3, #2
 800200c:	4413      	add	r3, r2
 800200e:	edd3 6a00 	vldr	s13, [r3]
 8002012:	683a      	ldr	r2, [r7, #0]
 8002014:	68bb      	ldr	r3, [r7, #8]
 8002016:	1ad3      	subs	r3, r2, r3
 8002018:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800201c:	4a24      	ldr	r2, [pc, #144]	; (80020b0 <process_buf_if+0xc8>)
 800201e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002022:	ee07 3a90 	vmov	s15, r3
 8002026:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800202a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800202e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002032:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002036:	ee17 3a90 	vmov	r3, s15
 800203a:	60fb      	str	r3, [r7, #12]
			temp += coef_bk[i] * x_buf[(n-i) & (ADC_BUF_SIZE - 1)];
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	ee07 3a90 	vmov	s15, r3
 8002042:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002046:	4a1b      	ldr	r2, [pc, #108]	; (80020b4 <process_buf_if+0xcc>)
 8002048:	68bb      	ldr	r3, [r7, #8]
 800204a:	009b      	lsls	r3, r3, #2
 800204c:	4413      	add	r3, r2
 800204e:	edd3 6a00 	vldr	s13, [r3]
 8002052:	683a      	ldr	r2, [r7, #0]
 8002054:	68bb      	ldr	r3, [r7, #8]
 8002056:	1ad3      	subs	r3, r2, r3
 8002058:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800205c:	009b      	lsls	r3, r3, #2
 800205e:	687a      	ldr	r2, [r7, #4]
 8002060:	4413      	add	r3, r2
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	ee07 3a90 	vmov	s15, r3
 8002068:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800206c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002070:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002074:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002078:	ee17 3a90 	vmov	r3, s15
 800207c:	60fb      	str	r3, [r7, #12]
	for(int i = 0 ; i < 10; i++)
 800207e:	68bb      	ldr	r3, [r7, #8]
 8002080:	3301      	adds	r3, #1
 8002082:	60bb      	str	r3, [r7, #8]
 8002084:	68bb      	ldr	r3, [r7, #8]
 8002086:	2b09      	cmp	r3, #9
 8002088:	ddb8      	ble.n	8001ffc <process_buf_if+0x14>
		}
	y_buf[n] = temp;
 800208a:	4909      	ldr	r1, [pc, #36]	; (80020b0 <process_buf_if+0xc8>)
 800208c:	683b      	ldr	r3, [r7, #0]
 800208e:	68fa      	ldr	r2, [r7, #12]
 8002090:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	analog_write(0,y_buf[n]);
 8002094:	4a06      	ldr	r2, [pc, #24]	; (80020b0 <process_buf_if+0xc8>)
 8002096:	683b      	ldr	r3, [r7, #0]
 8002098:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800209c:	4619      	mov	r1, r3
 800209e:	2000      	movs	r0, #0
 80020a0:	f7ff ff5a 	bl	8001f58 <analog_write>
}
 80020a4:	bf00      	nop
 80020a6:	3710      	adds	r7, #16
 80020a8:	46bd      	mov	sp, r7
 80020aa:	bd80      	pop	{r7, pc}
 80020ac:	200000d8 	.word	0x200000d8
 80020b0:	2001469c 	.word	0x2001469c
 80020b4:	20000100 	.word	0x20000100

080020b8 <process_buf_ff>:

void process_buf_ff(uint32_t* x_buf, int n)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b084      	sub	sp, #16
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
 80020c0:	6039      	str	r1, [r7, #0]
	unsigned int temp = 0;
 80020c2:	2300      	movs	r3, #0
 80020c4:	60fb      	str	r3, [r7, #12]

	for(int i = 0 ; i < M; i++)
 80020c6:	2300      	movs	r3, #0
 80020c8:	60bb      	str	r3, [r7, #8]
 80020ca:	e023      	b.n	8002114 <process_buf_ff+0x5c>
	{
		temp += coef[i] * x_buf[(n-i) & (ADC_BUF_SIZE - 1)];
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	ee07 3a90 	vmov	s15, r3
 80020d2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80020d6:	4a19      	ldr	r2, [pc, #100]	; (800213c <process_buf_ff+0x84>)
 80020d8:	68bb      	ldr	r3, [r7, #8]
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	4413      	add	r3, r2
 80020de:	edd3 6a00 	vldr	s13, [r3]
 80020e2:	683a      	ldr	r2, [r7, #0]
 80020e4:	68bb      	ldr	r3, [r7, #8]
 80020e6:	1ad3      	subs	r3, r2, r3
 80020e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80020ec:	009b      	lsls	r3, r3, #2
 80020ee:	687a      	ldr	r2, [r7, #4]
 80020f0:	4413      	add	r3, r2
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	ee07 3a90 	vmov	s15, r3
 80020f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80020fc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002100:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002104:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002108:	ee17 3a90 	vmov	r3, s15
 800210c:	60fb      	str	r3, [r7, #12]
	for(int i = 0 ; i < M; i++)
 800210e:	68bb      	ldr	r3, [r7, #8]
 8002110:	3301      	adds	r3, #1
 8002112:	60bb      	str	r3, [r7, #8]
 8002114:	68bb      	ldr	r3, [r7, #8]
 8002116:	2b19      	cmp	r3, #25
 8002118:	ddd8      	ble.n	80020cc <process_buf_ff+0x14>
	}
	y_buf[n] = temp;
 800211a:	4909      	ldr	r1, [pc, #36]	; (8002140 <process_buf_ff+0x88>)
 800211c:	683b      	ldr	r3, [r7, #0]
 800211e:	68fa      	ldr	r2, [r7, #12]
 8002120:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	analog_write(0,y_buf[n]);
 8002124:	4a06      	ldr	r2, [pc, #24]	; (8002140 <process_buf_ff+0x88>)
 8002126:	683b      	ldr	r3, [r7, #0]
 8002128:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800212c:	4619      	mov	r1, r3
 800212e:	2000      	movs	r0, #0
 8002130:	f7ff ff12 	bl	8001f58 <analog_write>
}
 8002134:	bf00      	nop
 8002136:	3710      	adds	r7, #16
 8002138:	46bd      	mov	sp, r7
 800213a:	bd80      	pop	{r7, pc}
 800213c:	20000070 	.word	0x20000070
 8002140:	2001469c 	.word	0x2001469c

08002144 <process_buf>:

void process_buf(uint32_t* x_buf, int n)
{
 8002144:	b580      	push	{r7, lr}
 8002146:	b08a      	sub	sp, #40	; 0x28
 8002148:	af02      	add	r7, sp, #8
 800214a:	6078      	str	r0, [r7, #4]
 800214c:	6039      	str	r1, [r7, #0]
	process_buf_func[sp_config.filter_type](x_buf,n);
 800214e:	4b2f      	ldr	r3, [pc, #188]	; (800220c <process_buf+0xc8>)
 8002150:	7b9b      	ldrb	r3, [r3, #14]
 8002152:	461a      	mov	r2, r3
 8002154:	4b2e      	ldr	r3, [pc, #184]	; (8002210 <process_buf+0xcc>)
 8002156:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800215a:	6839      	ldr	r1, [r7, #0]
 800215c:	6878      	ldr	r0, [r7, #4]
 800215e:	4798      	blx	r3

	counter ++;
 8002160:	4b2c      	ldr	r3, [pc, #176]	; (8002214 <process_buf+0xd0>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	3301      	adds	r3, #1
 8002166:	4a2b      	ldr	r2, [pc, #172]	; (8002214 <process_buf+0xd0>)
 8002168:	6013      	str	r3, [r2, #0]

	if(sp_config.sp_limit > 0)
 800216a:	4b28      	ldr	r3, [pc, #160]	; (800220c <process_buf+0xc8>)
 800216c:	689b      	ldr	r3, [r3, #8]
 800216e:	2b00      	cmp	r3, #0
 8002170:	d047      	beq.n	8002202 <process_buf+0xbe>
	{
		char message[22] = {"\0"};
 8002172:	2300      	movs	r3, #0
 8002174:	60bb      	str	r3, [r7, #8]
 8002176:	f107 030c 	add.w	r3, r7, #12
 800217a:	2200      	movs	r2, #0
 800217c:	601a      	str	r2, [r3, #0]
 800217e:	605a      	str	r2, [r3, #4]
 8002180:	609a      	str	r2, [r3, #8]
 8002182:	60da      	str	r2, [r3, #12]
 8002184:	821a      	strh	r2, [r3, #16]
		sprintf(message, "%d;%lu;%lu;", counter , x_buf[n], y_buf[n]);
 8002186:	4b23      	ldr	r3, [pc, #140]	; (8002214 <process_buf+0xd0>)
 8002188:	6819      	ldr	r1, [r3, #0]
 800218a:	683b      	ldr	r3, [r7, #0]
 800218c:	009b      	lsls	r3, r3, #2
 800218e:	687a      	ldr	r2, [r7, #4]
 8002190:	4413      	add	r3, r2
 8002192:	681a      	ldr	r2, [r3, #0]
 8002194:	4820      	ldr	r0, [pc, #128]	; (8002218 <process_buf+0xd4>)
 8002196:	683b      	ldr	r3, [r7, #0]
 8002198:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800219c:	f107 0008 	add.w	r0, r7, #8
 80021a0:	9300      	str	r3, [sp, #0]
 80021a2:	4613      	mov	r3, r2
 80021a4:	460a      	mov	r2, r1
 80021a6:	491d      	ldr	r1, [pc, #116]	; (800221c <process_buf+0xd8>)
 80021a8:	f006 f982 	bl	80084b0 <siprintf>
		send_UART(message);
 80021ac:	f107 0308 	add.w	r3, r7, #8
 80021b0:	4618      	mov	r0, r3
 80021b2:	f000 fd7d 	bl	8002cb0 <send_UART>

		if(counter == sp_config.sp_limit)
 80021b6:	4b15      	ldr	r3, [pc, #84]	; (800220c <process_buf+0xc8>)
 80021b8:	689a      	ldr	r2, [r3, #8]
 80021ba:	4b16      	ldr	r3, [pc, #88]	; (8002214 <process_buf+0xd0>)
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	429a      	cmp	r2, r3
 80021c0:	d11f      	bne.n	8002202 <process_buf+0xbe>
		{
			counter = 0;
 80021c2:	4b14      	ldr	r3, [pc, #80]	; (8002214 <process_buf+0xd0>)
 80021c4:	2200      	movs	r2, #0
 80021c6:	601a      	str	r2, [r3, #0]
			analog_write(0,0);
 80021c8:	2100      	movs	r1, #0
 80021ca:	2000      	movs	r0, #0
 80021cc:	f7ff fec4 	bl	8001f58 <analog_write>
			HAL_ADC_Stop_IT(&hadc3);
 80021d0:	4813      	ldr	r0, [pc, #76]	; (8002220 <process_buf+0xdc>)
 80021d2:	f001 f803 	bl	80031dc <HAL_ADC_Stop_IT>
			HAL_TIM_Base_Stop_IT(&htim1);
 80021d6:	4813      	ldr	r0, [pc, #76]	; (8002224 <process_buf+0xe0>)
 80021d8:	f003 fa46 	bl	8005668 <HAL_TIM_Base_Stop_IT>
		    HAL_NVIC_SetPriority(ADC_IRQn, 1, 0);
 80021dc:	2200      	movs	r2, #0
 80021de:	2101      	movs	r1, #1
 80021e0:	2012      	movs	r0, #18
 80021e2:	f001 fca0 	bl	8003b26 <HAL_NVIC_SetPriority>
			while(is_transmitting_to_UART());
 80021e6:	bf00      	nop
 80021e8:	f000 fd3e 	bl	8002c68 <is_transmitting_to_UART>
 80021ec:	4603      	mov	r3, r0
 80021ee:	2b00      	cmp	r3, #0
 80021f0:	d1fa      	bne.n	80021e8 <process_buf+0xa4>
			HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 80021f2:	2200      	movs	r2, #0
 80021f4:	2100      	movs	r1, #0
 80021f6:	2012      	movs	r0, #18
 80021f8:	f001 fc95 	bl	8003b26 <HAL_NVIC_SetPriority>
			send_UART("Sampling Stopped.\n>");
 80021fc:	480a      	ldr	r0, [pc, #40]	; (8002228 <process_buf+0xe4>)
 80021fe:	f000 fd57 	bl	8002cb0 <send_UART>
		}
	}
}
 8002202:	bf00      	nop
 8002204:	3720      	adds	r7, #32
 8002206:	46bd      	mov	sp, r7
 8002208:	bd80      	pop	{r7, pc}
 800220a:	bf00      	nop
 800220c:	20000060 	.word	0x20000060
 8002210:	20000054 	.word	0x20000054
 8002214:	20000328 	.word	0x20000328
 8002218:	2001469c 	.word	0x2001469c
 800221c:	0800d0e0 	.word	0x0800d0e0
 8002220:	20010444 	.word	0x20010444
 8002224:	200186b0 	.word	0x200186b0
 8002228:	0800d0ec 	.word	0x0800d0ec

0800222c <MX_DAC_Init>:
 800222c:	b580      	push	{r7, lr}
 800222e:	b082      	sub	sp, #8
 8002230:	af00      	add	r7, sp, #0
 8002232:	463b      	mov	r3, r7
 8002234:	2200      	movs	r2, #0
 8002236:	601a      	str	r2, [r3, #0]
 8002238:	605a      	str	r2, [r3, #4]
 800223a:	4b14      	ldr	r3, [pc, #80]	; (800228c <MX_DAC_Init+0x60>)
 800223c:	4a14      	ldr	r2, [pc, #80]	; (8002290 <MX_DAC_Init+0x64>)
 800223e:	601a      	str	r2, [r3, #0]
 8002240:	4812      	ldr	r0, [pc, #72]	; (800228c <MX_DAC_Init+0x60>)
 8002242:	f001 fca6 	bl	8003b92 <HAL_DAC_Init>
 8002246:	4603      	mov	r3, r0
 8002248:	2b00      	cmp	r3, #0
 800224a:	d001      	beq.n	8002250 <MX_DAC_Init+0x24>
 800224c:	f000 f9cc 	bl	80025e8 <Error_Handler>
 8002250:	2300      	movs	r3, #0
 8002252:	603b      	str	r3, [r7, #0]
 8002254:	2300      	movs	r3, #0
 8002256:	607b      	str	r3, [r7, #4]
 8002258:	463b      	mov	r3, r7
 800225a:	2200      	movs	r2, #0
 800225c:	4619      	mov	r1, r3
 800225e:	480b      	ldr	r0, [pc, #44]	; (800228c <MX_DAC_Init+0x60>)
 8002260:	f001 fd30 	bl	8003cc4 <HAL_DAC_ConfigChannel>
 8002264:	4603      	mov	r3, r0
 8002266:	2b00      	cmp	r3, #0
 8002268:	d001      	beq.n	800226e <MX_DAC_Init+0x42>
 800226a:	f000 f9bd 	bl	80025e8 <Error_Handler>
 800226e:	463b      	mov	r3, r7
 8002270:	2210      	movs	r2, #16
 8002272:	4619      	mov	r1, r3
 8002274:	4805      	ldr	r0, [pc, #20]	; (800228c <MX_DAC_Init+0x60>)
 8002276:	f001 fd25 	bl	8003cc4 <HAL_DAC_ConfigChannel>
 800227a:	4603      	mov	r3, r0
 800227c:	2b00      	cmp	r3, #0
 800227e:	d001      	beq.n	8002284 <MX_DAC_Init+0x58>
 8002280:	f000 f9b2 	bl	80025e8 <Error_Handler>
 8002284:	bf00      	nop
 8002286:	3708      	adds	r7, #8
 8002288:	46bd      	mov	sp, r7
 800228a:	bd80      	pop	{r7, pc}
 800228c:	2001869c 	.word	0x2001869c
 8002290:	40007400 	.word	0x40007400

08002294 <HAL_DAC_MspInit>:
 8002294:	b580      	push	{r7, lr}
 8002296:	b08a      	sub	sp, #40	; 0x28
 8002298:	af00      	add	r7, sp, #0
 800229a:	6078      	str	r0, [r7, #4]
 800229c:	f107 0314 	add.w	r3, r7, #20
 80022a0:	2200      	movs	r2, #0
 80022a2:	601a      	str	r2, [r3, #0]
 80022a4:	605a      	str	r2, [r3, #4]
 80022a6:	609a      	str	r2, [r3, #8]
 80022a8:	60da      	str	r2, [r3, #12]
 80022aa:	611a      	str	r2, [r3, #16]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4a15      	ldr	r2, [pc, #84]	; (8002308 <HAL_DAC_MspInit+0x74>)
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d123      	bne.n	80022fe <HAL_DAC_MspInit+0x6a>
 80022b6:	4b15      	ldr	r3, [pc, #84]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022ba:	4a14      	ldr	r2, [pc, #80]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022bc:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80022c0:	6413      	str	r3, [r2, #64]	; 0x40
 80022c2:	4b12      	ldr	r3, [pc, #72]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022c6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80022ca:	613b      	str	r3, [r7, #16]
 80022cc:	693b      	ldr	r3, [r7, #16]
 80022ce:	4b0f      	ldr	r3, [pc, #60]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d2:	4a0e      	ldr	r2, [pc, #56]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022d4:	f043 0301 	orr.w	r3, r3, #1
 80022d8:	6313      	str	r3, [r2, #48]	; 0x30
 80022da:	4b0c      	ldr	r3, [pc, #48]	; (800230c <HAL_DAC_MspInit+0x78>)
 80022dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022de:	f003 0301 	and.w	r3, r3, #1
 80022e2:	60fb      	str	r3, [r7, #12]
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	2330      	movs	r3, #48	; 0x30
 80022e8:	617b      	str	r3, [r7, #20]
 80022ea:	2303      	movs	r3, #3
 80022ec:	61bb      	str	r3, [r7, #24]
 80022ee:	2300      	movs	r3, #0
 80022f0:	61fb      	str	r3, [r7, #28]
 80022f2:	f107 0314 	add.w	r3, r7, #20
 80022f6:	4619      	mov	r1, r3
 80022f8:	4805      	ldr	r0, [pc, #20]	; (8002310 <HAL_DAC_MspInit+0x7c>)
 80022fa:	f001 fdc5 	bl	8003e88 <HAL_GPIO_Init>
 80022fe:	bf00      	nop
 8002300:	3728      	adds	r7, #40	; 0x28
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}
 8002306:	bf00      	nop
 8002308:	40007400 	.word	0x40007400
 800230c:	40023800 	.word	0x40023800
 8002310:	40020000 	.word	0x40020000

08002314 <MX_GPIO_Init>:
 8002314:	b580      	push	{r7, lr}
 8002316:	b08a      	sub	sp, #40	; 0x28
 8002318:	af00      	add	r7, sp, #0
 800231a:	f107 0314 	add.w	r3, r7, #20
 800231e:	2200      	movs	r2, #0
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	605a      	str	r2, [r3, #4]
 8002324:	609a      	str	r2, [r3, #8]
 8002326:	60da      	str	r2, [r3, #12]
 8002328:	611a      	str	r2, [r3, #16]
 800232a:	4b29      	ldr	r3, [pc, #164]	; (80023d0 <MX_GPIO_Init+0xbc>)
 800232c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800232e:	4a28      	ldr	r2, [pc, #160]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002330:	f043 0320 	orr.w	r3, r3, #32
 8002334:	6313      	str	r3, [r2, #48]	; 0x30
 8002336:	4b26      	ldr	r3, [pc, #152]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800233a:	f003 0320 	and.w	r3, r3, #32
 800233e:	613b      	str	r3, [r7, #16]
 8002340:	693b      	ldr	r3, [r7, #16]
 8002342:	4b23      	ldr	r3, [pc, #140]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002346:	4a22      	ldr	r2, [pc, #136]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002348:	f043 0304 	orr.w	r3, r3, #4
 800234c:	6313      	str	r3, [r2, #48]	; 0x30
 800234e:	4b20      	ldr	r3, [pc, #128]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002352:	f003 0304 	and.w	r3, r3, #4
 8002356:	60fb      	str	r3, [r7, #12]
 8002358:	68fb      	ldr	r3, [r7, #12]
 800235a:	4b1d      	ldr	r3, [pc, #116]	; (80023d0 <MX_GPIO_Init+0xbc>)
 800235c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800235e:	4a1c      	ldr	r2, [pc, #112]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002360:	f043 0301 	orr.w	r3, r3, #1
 8002364:	6313      	str	r3, [r2, #48]	; 0x30
 8002366:	4b1a      	ldr	r3, [pc, #104]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800236a:	f003 0301 	and.w	r3, r3, #1
 800236e:	60bb      	str	r3, [r7, #8]
 8002370:	68bb      	ldr	r3, [r7, #8]
 8002372:	4b17      	ldr	r3, [pc, #92]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002376:	4a16      	ldr	r2, [pc, #88]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002378:	f043 0302 	orr.w	r3, r3, #2
 800237c:	6313      	str	r3, [r2, #48]	; 0x30
 800237e:	4b14      	ldr	r3, [pc, #80]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002382:	f003 0302 	and.w	r3, r3, #2
 8002386:	607b      	str	r3, [r7, #4]
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	4b11      	ldr	r3, [pc, #68]	; (80023d0 <MX_GPIO_Init+0xbc>)
 800238c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800238e:	4a10      	ldr	r2, [pc, #64]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002390:	f043 0308 	orr.w	r3, r3, #8
 8002394:	6313      	str	r3, [r2, #48]	; 0x30
 8002396:	4b0e      	ldr	r3, [pc, #56]	; (80023d0 <MX_GPIO_Init+0xbc>)
 8002398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800239a:	f003 0308 	and.w	r3, r3, #8
 800239e:	603b      	str	r3, [r7, #0]
 80023a0:	683b      	ldr	r3, [r7, #0]
 80023a2:	2200      	movs	r2, #0
 80023a4:	2101      	movs	r1, #1
 80023a6:	480b      	ldr	r0, [pc, #44]	; (80023d4 <MX_GPIO_Init+0xc0>)
 80023a8:	f001 ff32 	bl	8004210 <HAL_GPIO_WritePin>
 80023ac:	2301      	movs	r3, #1
 80023ae:	617b      	str	r3, [r7, #20]
 80023b0:	2301      	movs	r3, #1
 80023b2:	61bb      	str	r3, [r7, #24]
 80023b4:	2300      	movs	r3, #0
 80023b6:	61fb      	str	r3, [r7, #28]
 80023b8:	2300      	movs	r3, #0
 80023ba:	623b      	str	r3, [r7, #32]
 80023bc:	f107 0314 	add.w	r3, r7, #20
 80023c0:	4619      	mov	r1, r3
 80023c2:	4804      	ldr	r0, [pc, #16]	; (80023d4 <MX_GPIO_Init+0xc0>)
 80023c4:	f001 fd60 	bl	8003e88 <HAL_GPIO_Init>
 80023c8:	bf00      	nop
 80023ca:	3728      	adds	r7, #40	; 0x28
 80023cc:	46bd      	mov	sp, r7
 80023ce:	bd80      	pop	{r7, pc}
 80023d0:	40023800 	.word	0x40023800
 80023d4:	40020400 	.word	0x40020400

080023d8 <is_GPIO_pin_free>:
 80023d8:	b480      	push	{r7}
 80023da:	b083      	sub	sp, #12
 80023dc:	af00      	add	r7, sp, #0
 80023de:	6078      	str	r0, [r7, #4]
 80023e0:	6039      	str	r1, [r7, #0]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	2b01      	cmp	r3, #1
 80023e6:	d107      	bne.n	80023f8 <is_GPIO_pin_free+0x20>
 80023e8:	683a      	ldr	r2, [r7, #0]
 80023ea:	f246 033f 	movw	r3, #24639	; 0x603f
 80023ee:	4013      	ands	r3, r2
 80023f0:	2b00      	cmp	r3, #0
 80023f2:	d001      	beq.n	80023f8 <is_GPIO_pin_free+0x20>
 80023f4:	2300      	movs	r3, #0
 80023f6:	e028      	b.n	800244a <is_GPIO_pin_free+0x72>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	2b03      	cmp	r3, #3
 80023fc:	d106      	bne.n	800240c <is_GPIO_pin_free+0x34>
 80023fe:	683b      	ldr	r3, [r7, #0]
 8002400:	f003 030f 	and.w	r3, r3, #15
 8002404:	2b00      	cmp	r3, #0
 8002406:	d001      	beq.n	800240c <is_GPIO_pin_free+0x34>
 8002408:	2300      	movs	r3, #0
 800240a:	e01e      	b.n	800244a <is_GPIO_pin_free+0x72>
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	2b06      	cmp	r3, #6
 8002410:	d106      	bne.n	8002420 <is_GPIO_pin_free+0x48>
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	f403 737f 	and.w	r3, r3, #1020	; 0x3fc
 8002418:	2b00      	cmp	r3, #0
 800241a:	d001      	beq.n	8002420 <is_GPIO_pin_free+0x48>
 800241c:	2300      	movs	r3, #0
 800241e:	e014      	b.n	800244a <is_GPIO_pin_free+0x72>
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	2b04      	cmp	r3, #4
 8002424:	d106      	bne.n	8002434 <is_GPIO_pin_free+0x5c>
 8002426:	683b      	ldr	r3, [r7, #0]
 8002428:	f403 73c0 	and.w	r3, r3, #384	; 0x180
 800242c:	2b00      	cmp	r3, #0
 800242e:	d001      	beq.n	8002434 <is_GPIO_pin_free+0x5c>
 8002430:	2300      	movs	r3, #0
 8002432:	e00a      	b.n	800244a <is_GPIO_pin_free+0x72>
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	2b02      	cmp	r3, #2
 8002438:	d106      	bne.n	8002448 <is_GPIO_pin_free+0x70>
 800243a:	683b      	ldr	r3, [r7, #0]
 800243c:	f003 0301 	and.w	r3, r3, #1
 8002440:	2b00      	cmp	r3, #0
 8002442:	d001      	beq.n	8002448 <is_GPIO_pin_free+0x70>
 8002444:	2300      	movs	r3, #0
 8002446:	e000      	b.n	800244a <is_GPIO_pin_free+0x72>
 8002448:	2301      	movs	r3, #1
 800244a:	4618      	mov	r0, r3
 800244c:	370c      	adds	r7, #12
 800244e:	46bd      	mov	sp, r7
 8002450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002454:	4770      	bx	lr
	...

08002458 <blink_LED>:
 8002458:	b580      	push	{r7, lr}
 800245a:	af00      	add	r7, sp, #0
 800245c:	2101      	movs	r1, #1
 800245e:	4806      	ldr	r0, [pc, #24]	; (8002478 <blink_LED+0x20>)
 8002460:	f001 feef 	bl	8004242 <HAL_GPIO_TogglePin>
 8002464:	20c8      	movs	r0, #200	; 0xc8
 8002466:	f000 fd79 	bl	8002f5c <HAL_Delay>
 800246a:	2101      	movs	r1, #1
 800246c:	4802      	ldr	r0, [pc, #8]	; (8002478 <blink_LED+0x20>)
 800246e:	f001 fee8 	bl	8004242 <HAL_GPIO_TogglePin>
 8002472:	bf00      	nop
 8002474:	bd80      	pop	{r7, pc}
 8002476:	bf00      	nop
 8002478:	40020400 	.word	0x40020400

0800247c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800247c:	b580      	push	{r7, lr}
 800247e:	b0c2      	sub	sp, #264	; 0x108
 8002480:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002482:	f000 fd0e 	bl	8002ea2 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002486:	f000 f841 	bl	800250c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800248a:	f7ff ff43 	bl	8002314 <MX_GPIO_Init>
  MX_USART3_UART_Init();
 800248e:	f000 fb2d 	bl	8002aec <MX_USART3_UART_Init>
  MX_ADC3_Init();
 8002492:	f7fe fb11 	bl	8000ab8 <MX_ADC3_Init>
  MX_TIM1_Init();
 8002496:	f000 fa97 	bl	80029c8 <MX_TIM1_Init>
  MX_DAC_Init();
 800249a:	f7ff fec7 	bl	800222c <MX_DAC_Init>
  /* USER CODE BEGIN 2 */

  HAL_UART_Receive_IT(&huart3, UART_RX_buffer, 1);
 800249e:	2201      	movs	r2, #1
 80024a0:	4916      	ldr	r1, [pc, #88]	; (80024fc <main+0x80>)
 80024a2:	4817      	ldr	r0, [pc, #92]	; (8002500 <main+0x84>)
 80024a4:	f003 fea2 	bl	80061ec <HAL_UART_Receive_IT>
  send_UART(PROMPT);
 80024a8:	4816      	ldr	r0, [pc, #88]	; (8002504 <main+0x88>)
 80024aa:	f000 fc01 	bl	8002cb0 <send_UART>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(has_message_from_UART())
 80024ae:	f000 fbcf 	bl	8002c50 <has_message_from_UART>
 80024b2:	4603      	mov	r3, r0
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d0fa      	beq.n	80024ae <main+0x32>
	  {
		  blink_LED();
 80024b8:	f7ff ffce 	bl	8002458 <blink_LED>

		  uint8_t message[BUFFER_SIZE];

		  read_UART((char*) message);
 80024bc:	1d3b      	adds	r3, r7, #4
 80024be:	4618      	mov	r0, r3
 80024c0:	f000 fc20 	bl	8002d04 <read_UART>

		  unsigned char cmd = check_command((char*) message);
 80024c4:	1d3b      	adds	r3, r7, #4
 80024c6:	4618      	mov	r0, r3
 80024c8:	f7fe fc64 	bl	8000d94 <check_command>
 80024cc:	4603      	mov	r3, r0
 80024ce:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
		  exec_command[cmd]((char*) message);
 80024d2:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 80024d6:	4a0c      	ldr	r2, [pc, #48]	; (8002508 <main+0x8c>)
 80024d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80024dc:	1d3a      	adds	r2, r7, #4
 80024de:	4610      	mov	r0, r2
 80024e0:	4798      	blx	r3

		  while(is_transmitting_to_UART());
 80024e2:	bf00      	nop
 80024e4:	f000 fbc0 	bl	8002c68 <is_transmitting_to_UART>
 80024e8:	4603      	mov	r3, r0
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d1fa      	bne.n	80024e4 <main+0x68>

		  reset_UART();
 80024ee:	f000 fbc7 	bl	8002c80 <reset_UART>
		  send_UART(PROMPT);
 80024f2:	4804      	ldr	r0, [pc, #16]	; (8002504 <main+0x88>)
 80024f4:	f000 fbdc 	bl	8002cb0 <send_UART>
	  if(has_message_from_UART())
 80024f8:	e7d9      	b.n	80024ae <main+0x32>
 80024fa:	bf00      	nop
 80024fc:	2000033c 	.word	0x2000033c
 8002500:	200186fc 	.word	0x200186fc
 8002504:	0800d100 	.word	0x0800d100
 8002508:	20000000 	.word	0x20000000

0800250c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800250c:	b580      	push	{r7, lr}
 800250e:	b094      	sub	sp, #80	; 0x50
 8002510:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002512:	f107 031c 	add.w	r3, r7, #28
 8002516:	2234      	movs	r2, #52	; 0x34
 8002518:	2100      	movs	r1, #0
 800251a:	4618      	mov	r0, r3
 800251c:	f005 f974 	bl	8007808 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002520:	f107 0308 	add.w	r3, r7, #8
 8002524:	2200      	movs	r2, #0
 8002526:	601a      	str	r2, [r3, #0]
 8002528:	605a      	str	r2, [r3, #4]
 800252a:	609a      	str	r2, [r3, #8]
 800252c:	60da      	str	r2, [r3, #12]
 800252e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002530:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <SystemClock_Config+0xd4>)
 8002532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002534:	4a2a      	ldr	r2, [pc, #168]	; (80025e0 <SystemClock_Config+0xd4>)
 8002536:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800253a:	6413      	str	r3, [r2, #64]	; 0x40
 800253c:	4b28      	ldr	r3, [pc, #160]	; (80025e0 <SystemClock_Config+0xd4>)
 800253e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002540:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002544:	607b      	str	r3, [r7, #4]
 8002546:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002548:	4b26      	ldr	r3, [pc, #152]	; (80025e4 <SystemClock_Config+0xd8>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	4a25      	ldr	r2, [pc, #148]	; (80025e4 <SystemClock_Config+0xd8>)
 800254e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002552:	6013      	str	r3, [r2, #0]
 8002554:	4b23      	ldr	r3, [pc, #140]	; (80025e4 <SystemClock_Config+0xd8>)
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800255c:	603b      	str	r3, [r7, #0]
 800255e:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002560:	2302      	movs	r3, #2
 8002562:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002564:	2301      	movs	r3, #1
 8002566:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002568:	2310      	movs	r3, #16
 800256a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800256c:	2302      	movs	r3, #2
 800256e:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002570:	2300      	movs	r3, #0
 8002572:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002574:	2308      	movs	r3, #8
 8002576:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 192;
 8002578:	23c0      	movs	r3, #192	; 0xc0
 800257a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800257c:	2302      	movs	r3, #2
 800257e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002580:	2304      	movs	r3, #4
 8002582:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8002584:	2302      	movs	r3, #2
 8002586:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002588:	f107 031c 	add.w	r3, r7, #28
 800258c:	4618      	mov	r0, r3
 800258e:	f001 fec3 	bl	8004318 <HAL_RCC_OscConfig>
 8002592:	4603      	mov	r3, r0
 8002594:	2b00      	cmp	r3, #0
 8002596:	d001      	beq.n	800259c <SystemClock_Config+0x90>
  {
    Error_Handler();
 8002598:	f000 f826 	bl	80025e8 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800259c:	f001 fe6c 	bl	8004278 <HAL_PWREx_EnableOverDrive>
 80025a0:	4603      	mov	r3, r0
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	d001      	beq.n	80025aa <SystemClock_Config+0x9e>
  {
    Error_Handler();
 80025a6:	f000 f81f 	bl	80025e8 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80025aa:	230f      	movs	r3, #15
 80025ac:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80025ae:	2302      	movs	r3, #2
 80025b0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80025b2:	2300      	movs	r3, #0
 80025b4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80025b6:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80025ba:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 80025bc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80025c0:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80025c2:	f107 0308 	add.w	r3, r7, #8
 80025c6:	2106      	movs	r1, #6
 80025c8:	4618      	mov	r0, r3
 80025ca:	f002 f953 	bl	8004874 <HAL_RCC_ClockConfig>
 80025ce:	4603      	mov	r3, r0
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d001      	beq.n	80025d8 <SystemClock_Config+0xcc>
  {
    Error_Handler();
 80025d4:	f000 f808 	bl	80025e8 <Error_Handler>
  }
}
 80025d8:	bf00      	nop
 80025da:	3750      	adds	r7, #80	; 0x50
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	40023800 	.word	0x40023800
 80025e4:	40007000 	.word	0x40007000

080025e8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80025e8:	b480      	push	{r7}
 80025ea:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80025ec:	b672      	cpsid	i
}
 80025ee:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80025f0:	e7fe      	b.n	80025f0 <Error_Handler+0x8>
	...

080025f4 <HAL_MspInit>:
 80025f4:	b580      	push	{r7, lr}
 80025f6:	b082      	sub	sp, #8
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	4b0f      	ldr	r3, [pc, #60]	; (8002638 <HAL_MspInit+0x44>)
 80025fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025fe:	4a0e      	ldr	r2, [pc, #56]	; (8002638 <HAL_MspInit+0x44>)
 8002600:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002604:	6413      	str	r3, [r2, #64]	; 0x40
 8002606:	4b0c      	ldr	r3, [pc, #48]	; (8002638 <HAL_MspInit+0x44>)
 8002608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800260a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800260e:	607b      	str	r3, [r7, #4]
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	4b09      	ldr	r3, [pc, #36]	; (8002638 <HAL_MspInit+0x44>)
 8002614:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002616:	4a08      	ldr	r2, [pc, #32]	; (8002638 <HAL_MspInit+0x44>)
 8002618:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800261c:	6453      	str	r3, [r2, #68]	; 0x44
 800261e:	4b06      	ldr	r3, [pc, #24]	; (8002638 <HAL_MspInit+0x44>)
 8002620:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002622:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002626:	603b      	str	r3, [r7, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	2006      	movs	r0, #6
 800262c:	f001 fa70 	bl	8003b10 <HAL_NVIC_SetPriorityGrouping>
 8002630:	bf00      	nop
 8002632:	3708      	adds	r7, #8
 8002634:	46bd      	mov	sp, r7
 8002636:	bd80      	pop	{r7, pc}
 8002638:	40023800 	.word	0x40023800

0800263c <NMI_Handler>:
 800263c:	b480      	push	{r7}
 800263e:	af00      	add	r7, sp, #0
 8002640:	e7fe      	b.n	8002640 <NMI_Handler+0x4>

08002642 <HardFault_Handler>:
 8002642:	b480      	push	{r7}
 8002644:	af00      	add	r7, sp, #0
 8002646:	e7fe      	b.n	8002646 <HardFault_Handler+0x4>

08002648 <MemManage_Handler>:
 8002648:	b480      	push	{r7}
 800264a:	af00      	add	r7, sp, #0
 800264c:	e7fe      	b.n	800264c <MemManage_Handler+0x4>

0800264e <BusFault_Handler>:
 800264e:	b480      	push	{r7}
 8002650:	af00      	add	r7, sp, #0
 8002652:	e7fe      	b.n	8002652 <BusFault_Handler+0x4>

08002654 <UsageFault_Handler>:
 8002654:	b480      	push	{r7}
 8002656:	af00      	add	r7, sp, #0
 8002658:	e7fe      	b.n	8002658 <UsageFault_Handler+0x4>

0800265a <SVC_Handler>:
 800265a:	b480      	push	{r7}
 800265c:	af00      	add	r7, sp, #0
 800265e:	bf00      	nop
 8002660:	46bd      	mov	sp, r7
 8002662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002666:	4770      	bx	lr

08002668 <DebugMon_Handler>:
 8002668:	b480      	push	{r7}
 800266a:	af00      	add	r7, sp, #0
 800266c:	bf00      	nop
 800266e:	46bd      	mov	sp, r7
 8002670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002674:	4770      	bx	lr

08002676 <PendSV_Handler>:
 8002676:	b480      	push	{r7}
 8002678:	af00      	add	r7, sp, #0
 800267a:	bf00      	nop
 800267c:	46bd      	mov	sp, r7
 800267e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002682:	4770      	bx	lr

08002684 <SysTick_Handler>:
 8002684:	b580      	push	{r7, lr}
 8002686:	af00      	add	r7, sp, #0
 8002688:	f000 fc48 	bl	8002f1c <HAL_IncTick>
 800268c:	bf00      	nop
 800268e:	bd80      	pop	{r7, pc}

08002690 <ADC_IRQHandler>:
 8002690:	b580      	push	{r7, lr}
 8002692:	af00      	add	r7, sp, #0
 8002694:	4802      	ldr	r0, [pc, #8]	; (80026a0 <ADC_IRQHandler+0x10>)
 8002696:	f000 fddf 	bl	8003258 <HAL_ADC_IRQHandler>
 800269a:	bf00      	nop
 800269c:	bd80      	pop	{r7, pc}
 800269e:	bf00      	nop
 80026a0:	20010444 	.word	0x20010444

080026a4 <TIM1_UP_TIM10_IRQHandler>:
 80026a4:	b580      	push	{r7, lr}
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	4802      	ldr	r0, [pc, #8]	; (80026b4 <TIM1_UP_TIM10_IRQHandler+0x10>)
 80026aa:	f003 f80c 	bl	80056c6 <HAL_TIM_IRQHandler>
 80026ae:	bf00      	nop
 80026b0:	bd80      	pop	{r7, pc}
 80026b2:	bf00      	nop
 80026b4:	200186b0 	.word	0x200186b0

080026b8 <USART3_IRQHandler>:
 80026b8:	b580      	push	{r7, lr}
 80026ba:	af00      	add	r7, sp, #0
 80026bc:	4802      	ldr	r0, [pc, #8]	; (80026c8 <USART3_IRQHandler+0x10>)
 80026be:	f003 fde3 	bl	8006288 <HAL_UART_IRQHandler>
 80026c2:	bf00      	nop
 80026c4:	bd80      	pop	{r7, pc}
 80026c6:	bf00      	nop
 80026c8:	200186fc 	.word	0x200186fc

080026cc <_getpid>:
 80026cc:	b480      	push	{r7}
 80026ce:	af00      	add	r7, sp, #0
 80026d0:	2301      	movs	r3, #1
 80026d2:	4618      	mov	r0, r3
 80026d4:	46bd      	mov	sp, r7
 80026d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026da:	4770      	bx	lr

080026dc <_kill>:
 80026dc:	b580      	push	{r7, lr}
 80026de:	b082      	sub	sp, #8
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
 80026e4:	6039      	str	r1, [r7, #0]
 80026e6:	f005 f865 	bl	80077b4 <__errno>
 80026ea:	4603      	mov	r3, r0
 80026ec:	2216      	movs	r2, #22
 80026ee:	601a      	str	r2, [r3, #0]
 80026f0:	f04f 33ff 	mov.w	r3, #4294967295
 80026f4:	4618      	mov	r0, r3
 80026f6:	3708      	adds	r7, #8
 80026f8:	46bd      	mov	sp, r7
 80026fa:	bd80      	pop	{r7, pc}

080026fc <_exit>:
 80026fc:	b580      	push	{r7, lr}
 80026fe:	b082      	sub	sp, #8
 8002700:	af00      	add	r7, sp, #0
 8002702:	6078      	str	r0, [r7, #4]
 8002704:	f04f 31ff 	mov.w	r1, #4294967295
 8002708:	6878      	ldr	r0, [r7, #4]
 800270a:	f7ff ffe7 	bl	80026dc <_kill>
 800270e:	e7fe      	b.n	800270e <_exit+0x12>

08002710 <_read>:
 8002710:	b580      	push	{r7, lr}
 8002712:	b086      	sub	sp, #24
 8002714:	af00      	add	r7, sp, #0
 8002716:	60f8      	str	r0, [r7, #12]
 8002718:	60b9      	str	r1, [r7, #8]
 800271a:	607a      	str	r2, [r7, #4]
 800271c:	2300      	movs	r3, #0
 800271e:	617b      	str	r3, [r7, #20]
 8002720:	e00a      	b.n	8002738 <_read+0x28>
 8002722:	f3af 8000 	nop.w
 8002726:	4601      	mov	r1, r0
 8002728:	68bb      	ldr	r3, [r7, #8]
 800272a:	1c5a      	adds	r2, r3, #1
 800272c:	60ba      	str	r2, [r7, #8]
 800272e:	b2ca      	uxtb	r2, r1
 8002730:	701a      	strb	r2, [r3, #0]
 8002732:	697b      	ldr	r3, [r7, #20]
 8002734:	3301      	adds	r3, #1
 8002736:	617b      	str	r3, [r7, #20]
 8002738:	697a      	ldr	r2, [r7, #20]
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	429a      	cmp	r2, r3
 800273e:	dbf0      	blt.n	8002722 <_read+0x12>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	4618      	mov	r0, r3
 8002744:	3718      	adds	r7, #24
 8002746:	46bd      	mov	sp, r7
 8002748:	bd80      	pop	{r7, pc}

0800274a <_write>:
 800274a:	b580      	push	{r7, lr}
 800274c:	b086      	sub	sp, #24
 800274e:	af00      	add	r7, sp, #0
 8002750:	60f8      	str	r0, [r7, #12]
 8002752:	60b9      	str	r1, [r7, #8]
 8002754:	607a      	str	r2, [r7, #4]
 8002756:	2300      	movs	r3, #0
 8002758:	617b      	str	r3, [r7, #20]
 800275a:	e009      	b.n	8002770 <_write+0x26>
 800275c:	68bb      	ldr	r3, [r7, #8]
 800275e:	1c5a      	adds	r2, r3, #1
 8002760:	60ba      	str	r2, [r7, #8]
 8002762:	781b      	ldrb	r3, [r3, #0]
 8002764:	4618      	mov	r0, r3
 8002766:	f3af 8000 	nop.w
 800276a:	697b      	ldr	r3, [r7, #20]
 800276c:	3301      	adds	r3, #1
 800276e:	617b      	str	r3, [r7, #20]
 8002770:	697a      	ldr	r2, [r7, #20]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	429a      	cmp	r2, r3
 8002776:	dbf1      	blt.n	800275c <_write+0x12>
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	4618      	mov	r0, r3
 800277c:	3718      	adds	r7, #24
 800277e:	46bd      	mov	sp, r7
 8002780:	bd80      	pop	{r7, pc}

08002782 <_close>:
 8002782:	b480      	push	{r7}
 8002784:	b083      	sub	sp, #12
 8002786:	af00      	add	r7, sp, #0
 8002788:	6078      	str	r0, [r7, #4]
 800278a:	f04f 33ff 	mov.w	r3, #4294967295
 800278e:	4618      	mov	r0, r3
 8002790:	370c      	adds	r7, #12
 8002792:	46bd      	mov	sp, r7
 8002794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002798:	4770      	bx	lr

0800279a <_fstat>:
 800279a:	b480      	push	{r7}
 800279c:	b083      	sub	sp, #12
 800279e:	af00      	add	r7, sp, #0
 80027a0:	6078      	str	r0, [r7, #4]
 80027a2:	6039      	str	r1, [r7, #0]
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80027aa:	605a      	str	r2, [r3, #4]
 80027ac:	2300      	movs	r3, #0
 80027ae:	4618      	mov	r0, r3
 80027b0:	370c      	adds	r7, #12
 80027b2:	46bd      	mov	sp, r7
 80027b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b8:	4770      	bx	lr

080027ba <_isatty>:
 80027ba:	b480      	push	{r7}
 80027bc:	b083      	sub	sp, #12
 80027be:	af00      	add	r7, sp, #0
 80027c0:	6078      	str	r0, [r7, #4]
 80027c2:	2301      	movs	r3, #1
 80027c4:	4618      	mov	r0, r3
 80027c6:	370c      	adds	r7, #12
 80027c8:	46bd      	mov	sp, r7
 80027ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ce:	4770      	bx	lr

080027d0 <_lseek>:
 80027d0:	b480      	push	{r7}
 80027d2:	b085      	sub	sp, #20
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	60f8      	str	r0, [r7, #12]
 80027d8:	60b9      	str	r1, [r7, #8]
 80027da:	607a      	str	r2, [r7, #4]
 80027dc:	2300      	movs	r3, #0
 80027de:	4618      	mov	r0, r3
 80027e0:	3714      	adds	r7, #20
 80027e2:	46bd      	mov	sp, r7
 80027e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e8:	4770      	bx	lr
	...

080027ec <_sbrk>:
 80027ec:	b580      	push	{r7, lr}
 80027ee:	b086      	sub	sp, #24
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	6078      	str	r0, [r7, #4]
 80027f4:	4a14      	ldr	r2, [pc, #80]	; (8002848 <_sbrk+0x5c>)
 80027f6:	4b15      	ldr	r3, [pc, #84]	; (800284c <_sbrk+0x60>)
 80027f8:	1ad3      	subs	r3, r2, r3
 80027fa:	617b      	str	r3, [r7, #20]
 80027fc:	697b      	ldr	r3, [r7, #20]
 80027fe:	613b      	str	r3, [r7, #16]
 8002800:	4b13      	ldr	r3, [pc, #76]	; (8002850 <_sbrk+0x64>)
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	2b00      	cmp	r3, #0
 8002806:	d102      	bne.n	800280e <_sbrk+0x22>
 8002808:	4b11      	ldr	r3, [pc, #68]	; (8002850 <_sbrk+0x64>)
 800280a:	4a12      	ldr	r2, [pc, #72]	; (8002854 <_sbrk+0x68>)
 800280c:	601a      	str	r2, [r3, #0]
 800280e:	4b10      	ldr	r3, [pc, #64]	; (8002850 <_sbrk+0x64>)
 8002810:	681a      	ldr	r2, [r3, #0]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	4413      	add	r3, r2
 8002816:	693a      	ldr	r2, [r7, #16]
 8002818:	429a      	cmp	r2, r3
 800281a:	d207      	bcs.n	800282c <_sbrk+0x40>
 800281c:	f004 ffca 	bl	80077b4 <__errno>
 8002820:	4603      	mov	r3, r0
 8002822:	220c      	movs	r2, #12
 8002824:	601a      	str	r2, [r3, #0]
 8002826:	f04f 33ff 	mov.w	r3, #4294967295
 800282a:	e009      	b.n	8002840 <_sbrk+0x54>
 800282c:	4b08      	ldr	r3, [pc, #32]	; (8002850 <_sbrk+0x64>)
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	60fb      	str	r3, [r7, #12]
 8002832:	4b07      	ldr	r3, [pc, #28]	; (8002850 <_sbrk+0x64>)
 8002834:	681a      	ldr	r2, [r3, #0]
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	4413      	add	r3, r2
 800283a:	4a05      	ldr	r2, [pc, #20]	; (8002850 <_sbrk+0x64>)
 800283c:	6013      	str	r3, [r2, #0]
 800283e:	68fb      	ldr	r3, [r7, #12]
 8002840:	4618      	mov	r0, r3
 8002842:	3718      	adds	r7, #24
 8002844:	46bd      	mov	sp, r7
 8002846:	bd80      	pop	{r7, pc}
 8002848:	20080000 	.word	0x20080000
 800284c:	00000400 	.word	0x00000400
 8002850:	20000330 	.word	0x20000330
 8002854:	20018798 	.word	0x20018798

08002858 <SystemInit>:
 8002858:	b480      	push	{r7}
 800285a:	af00      	add	r7, sp, #0
 800285c:	4b06      	ldr	r3, [pc, #24]	; (8002878 <SystemInit+0x20>)
 800285e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002862:	4a05      	ldr	r2, [pc, #20]	; (8002878 <SystemInit+0x20>)
 8002864:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002868:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800286c:	bf00      	nop
 800286e:	46bd      	mov	sp, r7
 8002870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002874:	4770      	bx	lr
 8002876:	bf00      	nop
 8002878:	e000ed00 	.word	0xe000ed00

0800287c <MX_TIM1_Init1>:
/* Includes ------------------------------------------------------------------*/
#include "tim.h"

/* USER CODE BEGIN 0 */
void MX_TIM1_Init1(struct sp_config_t sp_config)
{
 800287c:	b590      	push	{r4, r7, lr}
 800287e:	b093      	sub	sp, #76	; 0x4c
 8002880:	af00      	add	r7, sp, #0
 8002882:	463c      	mov	r4, r7
 8002884:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002888:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800288c:	2200      	movs	r2, #0
 800288e:	601a      	str	r2, [r3, #0]
 8002890:	605a      	str	r2, [r3, #4]
 8002892:	609a      	str	r2, [r3, #8]
 8002894:	60da      	str	r2, [r3, #12]
	TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8002896:	f107 031c 	add.w	r3, r7, #28
 800289a:	2200      	movs	r2, #0
 800289c:	601a      	str	r2, [r3, #0]
 800289e:	605a      	str	r2, [r3, #4]
 80028a0:	609a      	str	r2, [r3, #8]
 80028a2:	60da      	str	r2, [r3, #12]
 80028a4:	611a      	str	r2, [r3, #16]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028a6:	f107 0310 	add.w	r3, r7, #16
 80028aa:	2200      	movs	r2, #0
 80028ac:	601a      	str	r2, [r3, #0]
 80028ae:	605a      	str	r2, [r3, #4]
 80028b0:	609a      	str	r2, [r3, #8]

	unsigned int mul1 = 1, mul2 = 1;
 80028b2:	2301      	movs	r3, #1
 80028b4:	647b      	str	r3, [r7, #68]	; 0x44
 80028b6:	2301      	movs	r3, #1
 80028b8:	643b      	str	r3, [r7, #64]	; 0x40

	if(!strncmp(sp_config.timeunit,"us",2))
 80028ba:	463b      	mov	r3, r7
 80028bc:	330c      	adds	r3, #12
 80028be:	2202      	movs	r2, #2
 80028c0:	493c      	ldr	r1, [pc, #240]	; (80029b4 <MX_TIM1_Init1+0x138>)
 80028c2:	4618      	mov	r0, r3
 80028c4:	f005 fe8d 	bl	80085e2 <strncmp>
 80028c8:	4603      	mov	r3, r0
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d018      	beq.n	8002900 <MX_TIM1_Init1+0x84>
	{
	}
	else if(!strncmp(sp_config.timeunit,"ms",2))
 80028ce:	463b      	mov	r3, r7
 80028d0:	330c      	adds	r3, #12
 80028d2:	2202      	movs	r2, #2
 80028d4:	4938      	ldr	r1, [pc, #224]	; (80029b8 <MX_TIM1_Init1+0x13c>)
 80028d6:	4618      	mov	r0, r3
 80028d8:	f005 fe83 	bl	80085e2 <strncmp>
 80028dc:	4603      	mov	r3, r0
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d103      	bne.n	80028ea <MX_TIM1_Init1+0x6e>
	{
		mul1 = 1000;
 80028e2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80028e6:	647b      	str	r3, [r7, #68]	; 0x44
 80028e8:	e00a      	b.n	8002900 <MX_TIM1_Init1+0x84>
	}
	else if(!strncmp(sp_config.timeunit,"s",1))
 80028ea:	7b3a      	ldrb	r2, [r7, #12]
 80028ec:	4b33      	ldr	r3, [pc, #204]	; (80029bc <MX_TIM1_Init1+0x140>)
 80028ee:	781b      	ldrb	r3, [r3, #0]
 80028f0:	1ad3      	subs	r3, r2, r3
 80028f2:	2b00      	cmp	r3, #0
 80028f4:	d104      	bne.n	8002900 <MX_TIM1_Init1+0x84>
	{
		mul1 = 10000;
 80028f6:	f242 7310 	movw	r3, #10000	; 0x2710
 80028fa:	647b      	str	r3, [r7, #68]	; 0x44
		mul2 = 100;
 80028fc:	2364      	movs	r3, #100	; 0x64
 80028fe:	643b      	str	r3, [r7, #64]	; 0x40
	}

	htim1.Instance = TIM1;
 8002900:	4b2f      	ldr	r3, [pc, #188]	; (80029c0 <MX_TIM1_Init1+0x144>)
 8002902:	4a30      	ldr	r2, [pc, #192]	; (80029c4 <MX_TIM1_Init1+0x148>)
 8002904:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 2 * mul1;
 8002906:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002908:	005b      	lsls	r3, r3, #1
 800290a:	4a2d      	ldr	r2, [pc, #180]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800290c:	6053      	str	r3, [r2, #4]
  	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800290e:	4b2c      	ldr	r3, [pc, #176]	; (80029c0 <MX_TIM1_Init1+0x144>)
 8002910:	2200      	movs	r2, #0
 8002912:	609a      	str	r2, [r3, #8]
  	htim1.Init.Period = ((sp_config.unit * 48 * mul2)-1) & 65535;
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002918:	fb02 f203 	mul.w	r2, r2, r3
 800291c:	4613      	mov	r3, r2
 800291e:	005b      	lsls	r3, r3, #1
 8002920:	4413      	add	r3, r2
 8002922:	011b      	lsls	r3, r3, #4
 8002924:	3b01      	subs	r3, #1
 8002926:	b29b      	uxth	r3, r3
 8002928:	4a25      	ldr	r2, [pc, #148]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800292a:	60d3      	str	r3, [r2, #12]
  	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800292c:	4b24      	ldr	r3, [pc, #144]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800292e:	2200      	movs	r2, #0
 8002930:	611a      	str	r2, [r3, #16]
  	htim1.Init.RepetitionCounter = 0;
 8002932:	4b23      	ldr	r3, [pc, #140]	; (80029c0 <MX_TIM1_Init1+0x144>)
 8002934:	2200      	movs	r2, #0
 8002936:	615a      	str	r2, [r3, #20]
  	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002938:	4b21      	ldr	r3, [pc, #132]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800293a:	2200      	movs	r2, #0
 800293c:	619a      	str	r2, [r3, #24]
  	if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800293e:	4820      	ldr	r0, [pc, #128]	; (80029c0 <MX_TIM1_Init1+0x144>)
 8002940:	f002 fdc2 	bl	80054c8 <HAL_TIM_Base_Init>
 8002944:	4603      	mov	r3, r0
 8002946:	2b00      	cmp	r3, #0
 8002948:	d001      	beq.n	800294e <MX_TIM1_Init1+0xd2>
  	{
  		Error_Handler();
 800294a:	f7ff fe4d 	bl	80025e8 <Error_Handler>
  	}
  	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800294e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002952:	633b      	str	r3, [r7, #48]	; 0x30
  	if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002954:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002958:	4619      	mov	r1, r3
 800295a:	4819      	ldr	r0, [pc, #100]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800295c:	f002 ffd2 	bl	8005904 <HAL_TIM_ConfigClockSource>
 8002960:	4603      	mov	r3, r0
 8002962:	2b00      	cmp	r3, #0
 8002964:	d001      	beq.n	800296a <MX_TIM1_Init1+0xee>
  	{
  		Error_Handler();
 8002966:	f7ff fe3f 	bl	80025e8 <Error_Handler>
  	}
  	sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 800296a:	2300      	movs	r3, #0
 800296c:	61fb      	str	r3, [r7, #28]
  	sSlaveConfig.InputTrigger = TIM_TS_ITR1;
 800296e:	2310      	movs	r3, #16
 8002970:	623b      	str	r3, [r7, #32]
  	if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8002972:	f107 031c 	add.w	r3, r7, #28
 8002976:	4619      	mov	r1, r3
 8002978:	4811      	ldr	r0, [pc, #68]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800297a:	f003 f88d 	bl	8005a98 <HAL_TIM_SlaveConfigSynchro>
 800297e:	4603      	mov	r3, r0
 8002980:	2b00      	cmp	r3, #0
 8002982:	d001      	beq.n	8002988 <MX_TIM1_Init1+0x10c>
  	{
  		Error_Handler();
 8002984:	f7ff fe30 	bl	80025e8 <Error_Handler>
  	}
  	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8002988:	2320      	movs	r3, #32
 800298a:	613b      	str	r3, [r7, #16]
  	sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800298c:	2300      	movs	r3, #0
 800298e:	617b      	str	r3, [r7, #20]
  	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002990:	2300      	movs	r3, #0
 8002992:	61bb      	str	r3, [r7, #24]
  	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002994:	f107 0310 	add.w	r3, r7, #16
 8002998:	4619      	mov	r1, r3
 800299a:	4809      	ldr	r0, [pc, #36]	; (80029c0 <MX_TIM1_Init1+0x144>)
 800299c:	f003 fabe 	bl	8005f1c <HAL_TIMEx_MasterConfigSynchronization>
 80029a0:	4603      	mov	r3, r0
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d001      	beq.n	80029aa <MX_TIM1_Init1+0x12e>
  	{
  		Error_Handler();
 80029a6:	f7ff fe1f 	bl	80025e8 <Error_Handler>
  	}
}
 80029aa:	bf00      	nop
 80029ac:	374c      	adds	r7, #76	; 0x4c
 80029ae:	46bd      	mov	sp, r7
 80029b0:	bd90      	pop	{r4, r7, pc}
 80029b2:	bf00      	nop
 80029b4:	0800d104 	.word	0x0800d104
 80029b8:	0800d108 	.word	0x0800d108
 80029bc:	0800d10c 	.word	0x0800d10c
 80029c0:	200186b0 	.word	0x200186b0
 80029c4:	40010000 	.word	0x40010000

080029c8 <MX_TIM1_Init>:

TIM_HandleTypeDef htim1;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b08c      	sub	sp, #48	; 0x30
 80029cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80029ce:	f107 0320 	add.w	r3, r7, #32
 80029d2:	2200      	movs	r2, #0
 80029d4:	601a      	str	r2, [r3, #0]
 80029d6:	605a      	str	r2, [r3, #4]
 80029d8:	609a      	str	r2, [r3, #8]
 80029da:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80029dc:	f107 030c 	add.w	r3, r7, #12
 80029e0:	2200      	movs	r2, #0
 80029e2:	601a      	str	r2, [r3, #0]
 80029e4:	605a      	str	r2, [r3, #4]
 80029e6:	609a      	str	r2, [r3, #8]
 80029e8:	60da      	str	r2, [r3, #12]
 80029ea:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80029ec:	463b      	mov	r3, r7
 80029ee:	2200      	movs	r2, #0
 80029f0:	601a      	str	r2, [r3, #0]
 80029f2:	605a      	str	r2, [r3, #4]
 80029f4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80029f6:	4b28      	ldr	r3, [pc, #160]	; (8002a98 <MX_TIM1_Init+0xd0>)
 80029f8:	4a28      	ldr	r2, [pc, #160]	; (8002a9c <MX_TIM1_Init+0xd4>)
 80029fa:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 9600;
 80029fc:	4b26      	ldr	r3, [pc, #152]	; (8002a98 <MX_TIM1_Init+0xd0>)
 80029fe:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8002a02:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002a04:	4b24      	ldr	r3, [pc, #144]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a06:	2200      	movs	r2, #0
 8002a08:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1000-1;
 8002a0a:	4b23      	ldr	r3, [pc, #140]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a0c:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002a10:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002a12:	4b21      	ldr	r3, [pc, #132]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a14:	2200      	movs	r2, #0
 8002a16:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002a18:	4b1f      	ldr	r3, [pc, #124]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002a1e:	4b1e      	ldr	r3, [pc, #120]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a20:	2200      	movs	r2, #0
 8002a22:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8002a24:	481c      	ldr	r0, [pc, #112]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a26:	f002 fd4f 	bl	80054c8 <HAL_TIM_Base_Init>
 8002a2a:	4603      	mov	r3, r0
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d001      	beq.n	8002a34 <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 8002a30:	f7ff fdda 	bl	80025e8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002a34:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002a38:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002a3a:	f107 0320 	add.w	r3, r7, #32
 8002a3e:	4619      	mov	r1, r3
 8002a40:	4815      	ldr	r0, [pc, #84]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a42:	f002 ff5f 	bl	8005904 <HAL_TIM_ConfigClockSource>
 8002a46:	4603      	mov	r3, r0
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d001      	beq.n	8002a50 <MX_TIM1_Init+0x88>
  {
    Error_Handler();
 8002a4c:	f7ff fdcc 	bl	80025e8 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 8002a50:	2300      	movs	r3, #0
 8002a52:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR1;
 8002a54:	2310      	movs	r3, #16
 8002a56:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8002a58:	f107 030c 	add.w	r3, r7, #12
 8002a5c:	4619      	mov	r1, r3
 8002a5e:	480e      	ldr	r0, [pc, #56]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a60:	f003 f81a 	bl	8005a98 <HAL_TIM_SlaveConfigSynchro>
 8002a64:	4603      	mov	r3, r0
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d001      	beq.n	8002a6e <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8002a6a:	f7ff fdbd 	bl	80025e8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8002a6e:	2320      	movs	r3, #32
 8002a70:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8002a72:	2300      	movs	r3, #0
 8002a74:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002a76:	2300      	movs	r3, #0
 8002a78:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002a7a:	463b      	mov	r3, r7
 8002a7c:	4619      	mov	r1, r3
 8002a7e:	4806      	ldr	r0, [pc, #24]	; (8002a98 <MX_TIM1_Init+0xd0>)
 8002a80:	f003 fa4c 	bl	8005f1c <HAL_TIMEx_MasterConfigSynchronization>
 8002a84:	4603      	mov	r3, r0
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d001      	beq.n	8002a8e <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8002a8a:	f7ff fdad 	bl	80025e8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8002a8e:	bf00      	nop
 8002a90:	3730      	adds	r7, #48	; 0x30
 8002a92:	46bd      	mov	sp, r7
 8002a94:	bd80      	pop	{r7, pc}
 8002a96:	bf00      	nop
 8002a98:	200186b0 	.word	0x200186b0
 8002a9c:	40010000 	.word	0x40010000

08002aa0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002aa0:	b580      	push	{r7, lr}
 8002aa2:	b084      	sub	sp, #16
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	4a0d      	ldr	r2, [pc, #52]	; (8002ae4 <HAL_TIM_Base_MspInit+0x44>)
 8002aae:	4293      	cmp	r3, r2
 8002ab0:	d113      	bne.n	8002ada <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002ab2:	4b0d      	ldr	r3, [pc, #52]	; (8002ae8 <HAL_TIM_Base_MspInit+0x48>)
 8002ab4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ab6:	4a0c      	ldr	r2, [pc, #48]	; (8002ae8 <HAL_TIM_Base_MspInit+0x48>)
 8002ab8:	f043 0301 	orr.w	r3, r3, #1
 8002abc:	6453      	str	r3, [r2, #68]	; 0x44
 8002abe:	4b0a      	ldr	r3, [pc, #40]	; (8002ae8 <HAL_TIM_Base_MspInit+0x48>)
 8002ac0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ac2:	f003 0301 	and.w	r3, r3, #1
 8002ac6:	60fb      	str	r3, [r7, #12]
 8002ac8:	68fb      	ldr	r3, [r7, #12]

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 8002aca:	2200      	movs	r2, #0
 8002acc:	2100      	movs	r1, #0
 8002ace:	2019      	movs	r0, #25
 8002ad0:	f001 f829 	bl	8003b26 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8002ad4:	2019      	movs	r0, #25
 8002ad6:	f001 f842 	bl	8003b5e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8002ada:	bf00      	nop
 8002adc:	3710      	adds	r7, #16
 8002ade:	46bd      	mov	sp, r7
 8002ae0:	bd80      	pop	{r7, pc}
 8002ae2:	bf00      	nop
 8002ae4:	40010000 	.word	0x40010000
 8002ae8:	40023800 	.word	0x40023800

08002aec <MX_USART3_UART_Init>:
UART_HandleTypeDef huart3;

/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 8002aec:	b580      	push	{r7, lr}
 8002aee:	af00      	add	r7, sp, #0

  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  flagCPP = false;
 8002af0:	4b1b      	ldr	r3, [pc, #108]	; (8002b60 <MX_USART3_UART_Init+0x74>)
 8002af2:	2200      	movs	r2, #0
 8002af4:	701a      	strb	r2, [r3, #0]
  flagCPE = false;
 8002af6:	4b1b      	ldr	r3, [pc, #108]	; (8002b64 <MX_USART3_UART_Init+0x78>)
 8002af8:	2200      	movs	r2, #0
 8002afa:	701a      	strb	r2, [r3, #0]
  UART_RX_index = 0;
 8002afc:	4b1a      	ldr	r3, [pc, #104]	; (8002b68 <MX_USART3_UART_Init+0x7c>)
 8002afe:	2200      	movs	r2, #0
 8002b00:	601a      	str	r2, [r3, #0]
  UART_TX_index = 0;
 8002b02:	4b1a      	ldr	r3, [pc, #104]	; (8002b6c <MX_USART3_UART_Init+0x80>)
 8002b04:	2200      	movs	r2, #0
 8002b06:	601a      	str	r2, [r3, #0]
  UART_TX_buffer[0] = '\r';
 8002b08:	4b19      	ldr	r3, [pc, #100]	; (8002b70 <MX_USART3_UART_Init+0x84>)
 8002b0a:	220d      	movs	r2, #13
 8002b0c:	701a      	strb	r2, [r3, #0]

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8002b0e:	4b19      	ldr	r3, [pc, #100]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b10:	4a19      	ldr	r2, [pc, #100]	; (8002b78 <MX_USART3_UART_Init+0x8c>)
 8002b12:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 2000000;
 8002b14:	4b17      	ldr	r3, [pc, #92]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b16:	4a19      	ldr	r2, [pc, #100]	; (8002b7c <MX_USART3_UART_Init+0x90>)
 8002b18:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002b1a:	4b16      	ldr	r3, [pc, #88]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b1c:	2200      	movs	r2, #0
 8002b1e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002b20:	4b14      	ldr	r3, [pc, #80]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b22:	2200      	movs	r2, #0
 8002b24:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8002b26:	4b13      	ldr	r3, [pc, #76]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b28:	2200      	movs	r2, #0
 8002b2a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8002b2c:	4b11      	ldr	r3, [pc, #68]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b2e:	220c      	movs	r2, #12
 8002b30:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002b32:	4b10      	ldr	r3, [pc, #64]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b34:	2200      	movs	r2, #0
 8002b36:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8002b38:	4b0e      	ldr	r3, [pc, #56]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002b3e:	4b0d      	ldr	r3, [pc, #52]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b40:	2200      	movs	r2, #0
 8002b42:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002b44:	4b0b      	ldr	r3, [pc, #44]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b46:	2200      	movs	r2, #0
 8002b48:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8002b4a:	480a      	ldr	r0, [pc, #40]	; (8002b74 <MX_USART3_UART_Init+0x88>)
 8002b4c:	f003 fa92 	bl	8006074 <HAL_UART_Init>
 8002b50:	4603      	mov	r3, r0
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d001      	beq.n	8002b5a <MX_USART3_UART_Init+0x6e>
  {
    Error_Handler();
 8002b56:	f7ff fd47 	bl	80025e8 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8002b5a:	bf00      	nop
 8002b5c:	bd80      	pop	{r7, pc}
 8002b5e:	bf00      	nop
 8002b60:	20010490 	.word	0x20010490
 8002b64:	20014694 	.word	0x20014694
 8002b68:	2001048c 	.word	0x2001048c
 8002b6c:	20014698 	.word	0x20014698
 8002b70:	20010494 	.word	0x20010494
 8002b74:	200186fc 	.word	0x200186fc
 8002b78:	40004800 	.word	0x40004800
 8002b7c:	001e8480 	.word	0x001e8480

08002b80 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002b80:	b580      	push	{r7, lr}
 8002b82:	b0ae      	sub	sp, #184	; 0xb8
 8002b84:	af00      	add	r7, sp, #0
 8002b86:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b88:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	601a      	str	r2, [r3, #0]
 8002b90:	605a      	str	r2, [r3, #4]
 8002b92:	609a      	str	r2, [r3, #8]
 8002b94:	60da      	str	r2, [r3, #12]
 8002b96:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002b98:	f107 0314 	add.w	r3, r7, #20
 8002b9c:	2290      	movs	r2, #144	; 0x90
 8002b9e:	2100      	movs	r1, #0
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f004 fe31 	bl	8007808 <memset>
  if(uartHandle->Instance==USART3)
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	4a26      	ldr	r2, [pc, #152]	; (8002c44 <HAL_UART_MspInit+0xc4>)
 8002bac:	4293      	cmp	r3, r2
 8002bae:	d144      	bne.n	8002c3a <HAL_UART_MspInit+0xba>
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8002bb0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002bb4:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8002bb6:	2300      	movs	r3, #0
 8002bb8:	663b      	str	r3, [r7, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002bba:	f107 0314 	add.w	r3, r7, #20
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	f002 f85a 	bl	8004c78 <HAL_RCCEx_PeriphCLKConfig>
 8002bc4:	4603      	mov	r3, r0
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	d001      	beq.n	8002bce <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 8002bca:	f7ff fd0d 	bl	80025e8 <Error_Handler>
    }

    /* USART3 clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8002bce:	4b1e      	ldr	r3, [pc, #120]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd2:	4a1d      	ldr	r2, [pc, #116]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002bd4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002bd8:	6413      	str	r3, [r2, #64]	; 0x40
 8002bda:	4b1b      	ldr	r3, [pc, #108]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002bdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bde:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002be2:	613b      	str	r3, [r7, #16]
 8002be4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002be6:	4b18      	ldr	r3, [pc, #96]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bea:	4a17      	ldr	r2, [pc, #92]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002bec:	f043 0308 	orr.w	r3, r3, #8
 8002bf0:	6313      	str	r3, [r2, #48]	; 0x30
 8002bf2:	4b15      	ldr	r3, [pc, #84]	; (8002c48 <HAL_UART_MspInit+0xc8>)
 8002bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bf6:	f003 0308 	and.w	r3, r3, #8
 8002bfa:	60fb      	str	r3, [r7, #12]
 8002bfc:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration
    PD8     ------> USART3_TX
    PD9     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002bfe:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002c02:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c06:	2302      	movs	r3, #2
 8002c08:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c12:	2303      	movs	r3, #3
 8002c14:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8002c18:	2307      	movs	r3, #7
 8002c1a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002c1e:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8002c22:	4619      	mov	r1, r3
 8002c24:	4809      	ldr	r0, [pc, #36]	; (8002c4c <HAL_UART_MspInit+0xcc>)
 8002c26:	f001 f92f 	bl	8003e88 <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8002c2a:	2200      	movs	r2, #0
 8002c2c:	2100      	movs	r1, #0
 8002c2e:	2027      	movs	r0, #39	; 0x27
 8002c30:	f000 ff79 	bl	8003b26 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002c34:	2027      	movs	r0, #39	; 0x27
 8002c36:	f000 ff92 	bl	8003b5e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 8002c3a:	bf00      	nop
 8002c3c:	37b8      	adds	r7, #184	; 0xb8
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bd80      	pop	{r7, pc}
 8002c42:	bf00      	nop
 8002c44:	40004800 	.word	0x40004800
 8002c48:	40023800 	.word	0x40023800
 8002c4c:	40020c00 	.word	0x40020c00

08002c50 <has_message_from_UART>:
}

/* USER CODE BEGIN 1 */

bool has_message_from_UART()
{
 8002c50:	b480      	push	{r7}
 8002c52:	af00      	add	r7, sp, #0
	return flagCPP;
 8002c54:	4b03      	ldr	r3, [pc, #12]	; (8002c64 <has_message_from_UART+0x14>)
 8002c56:	781b      	ldrb	r3, [r3, #0]
}
 8002c58:	4618      	mov	r0, r3
 8002c5a:	46bd      	mov	sp, r7
 8002c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c60:	4770      	bx	lr
 8002c62:	bf00      	nop
 8002c64:	20010490 	.word	0x20010490

08002c68 <is_transmitting_to_UART>:

bool is_transmitting_to_UART()
{
 8002c68:	b480      	push	{r7}
 8002c6a:	af00      	add	r7, sp, #0
	return flagCPE;
 8002c6c:	4b03      	ldr	r3, [pc, #12]	; (8002c7c <is_transmitting_to_UART+0x14>)
 8002c6e:	781b      	ldrb	r3, [r3, #0]
}
 8002c70:	4618      	mov	r0, r3
 8002c72:	46bd      	mov	sp, r7
 8002c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c78:	4770      	bx	lr
 8002c7a:	bf00      	nop
 8002c7c:	20014694 	.word	0x20014694

08002c80 <reset_UART>:

void reset_UART()
{
 8002c80:	b580      	push	{r7, lr}
 8002c82:	af00      	add	r7, sp, #0
	memset(UART_RX_buffer, 0, BUFFER_SIZE);
 8002c84:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c88:	2100      	movs	r1, #0
 8002c8a:	4806      	ldr	r0, [pc, #24]	; (8002ca4 <reset_UART+0x24>)
 8002c8c:	f004 fdbc 	bl	8007808 <memset>

	HAL_UART_Receive_IT(&huart3, UART_RX_buffer, 1);
 8002c90:	2201      	movs	r2, #1
 8002c92:	4904      	ldr	r1, [pc, #16]	; (8002ca4 <reset_UART+0x24>)
 8002c94:	4804      	ldr	r0, [pc, #16]	; (8002ca8 <reset_UART+0x28>)
 8002c96:	f003 faa9 	bl	80061ec <HAL_UART_Receive_IT>
	flagCPP = false;
 8002c9a:	4b04      	ldr	r3, [pc, #16]	; (8002cac <reset_UART+0x2c>)
 8002c9c:	2200      	movs	r2, #0
 8002c9e:	701a      	strb	r2, [r3, #0]
}
 8002ca0:	bf00      	nop
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	2000033c 	.word	0x2000033c
 8002ca8:	200186fc 	.word	0x200186fc
 8002cac:	20010490 	.word	0x20010490

08002cb0 <send_UART>:

void send_UART(const char* msg_to_send)
{
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b082      	sub	sp, #8
 8002cb4:	af00      	add	r7, sp, #0
 8002cb6:	6078      	str	r0, [r7, #4]
	strncpy((char*) UART_TX_buffer, msg_to_send, BUFFER_SIZE);
 8002cb8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cbc:	6879      	ldr	r1, [r7, #4]
 8002cbe:	480d      	ldr	r0, [pc, #52]	; (8002cf4 <send_UART+0x44>)
 8002cc0:	f005 fca1 	bl	8008606 <strncpy>
	strcat((char*) UART_TX_buffer, "\r");
 8002cc4:	480b      	ldr	r0, [pc, #44]	; (8002cf4 <send_UART+0x44>)
 8002cc6:	f7fd fac5 	bl	8000254 <strlen>
 8002cca:	4603      	mov	r3, r0
 8002ccc:	461a      	mov	r2, r3
 8002cce:	4b09      	ldr	r3, [pc, #36]	; (8002cf4 <send_UART+0x44>)
 8002cd0:	4413      	add	r3, r2
 8002cd2:	4909      	ldr	r1, [pc, #36]	; (8002cf8 <send_UART+0x48>)
 8002cd4:	461a      	mov	r2, r3
 8002cd6:	460b      	mov	r3, r1
 8002cd8:	881b      	ldrh	r3, [r3, #0]
 8002cda:	8013      	strh	r3, [r2, #0]

	flagCPE = true;
 8002cdc:	4b07      	ldr	r3, [pc, #28]	; (8002cfc <send_UART+0x4c>)
 8002cde:	2201      	movs	r2, #1
 8002ce0:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit_IT(&huart3, UART_TX_buffer, 1);
 8002ce2:	2201      	movs	r2, #1
 8002ce4:	4903      	ldr	r1, [pc, #12]	; (8002cf4 <send_UART+0x44>)
 8002ce6:	4806      	ldr	r0, [pc, #24]	; (8002d00 <send_UART+0x50>)
 8002ce8:	f003 fa12 	bl	8006110 <HAL_UART_Transmit_IT>
}
 8002cec:	bf00      	nop
 8002cee:	3708      	adds	r7, #8
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	bd80      	pop	{r7, pc}
 8002cf4:	20010494 	.word	0x20010494
 8002cf8:	0800d110 	.word	0x0800d110
 8002cfc:	20014694 	.word	0x20014694
 8002d00:	200186fc 	.word	0x200186fc

08002d04 <read_UART>:

void read_UART(char* msg_to_read)
{
 8002d04:	b580      	push	{r7, lr}
 8002d06:	b082      	sub	sp, #8
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	6078      	str	r0, [r7, #4]
	strncpy((char*) msg_to_read, (char*) UART_RX_buffer, BUFFER_SIZE);
 8002d0c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002d10:	4903      	ldr	r1, [pc, #12]	; (8002d20 <read_UART+0x1c>)
 8002d12:	6878      	ldr	r0, [r7, #4]
 8002d14:	f005 fc77 	bl	8008606 <strncpy>
}
 8002d18:	bf00      	nop
 8002d1a:	3708      	adds	r7, #8
 8002d1c:	46bd      	mov	sp, r7
 8002d1e:	bd80      	pop	{r7, pc}
 8002d20:	2000033c 	.word	0x2000033c

08002d24 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart)
{
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b082      	sub	sp, #8
 8002d28:	af00      	add	r7, sp, #0
 8002d2a:	6078      	str	r0, [r7, #4]
	if(flagCPP)
 8002d2c:	4b27      	ldr	r3, [pc, #156]	; (8002dcc <HAL_UART_RxCpltCallback+0xa8>)
 8002d2e:	781b      	ldrb	r3, [r3, #0]
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d146      	bne.n	8002dc2 <HAL_UART_RxCpltCallback+0x9e>
		return;

	if(UART_RX_buffer[UART_RX_index] == '\r') //		CARRIAGE RETURN
 8002d34:	4b26      	ldr	r3, [pc, #152]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	4a26      	ldr	r2, [pc, #152]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002d3a:	5cd3      	ldrb	r3, [r2, r3]
 8002d3c:	2b0d      	cmp	r3, #13
 8002d3e:	d106      	bne.n	8002d4e <HAL_UART_RxCpltCallback+0x2a>
	{
		UART_RX_index = 0;
 8002d40:	4b23      	ldr	r3, [pc, #140]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d42:	2200      	movs	r2, #0
 8002d44:	601a      	str	r2, [r3, #0]
		flagCPP = true;
 8002d46:	4b21      	ldr	r3, [pc, #132]	; (8002dcc <HAL_UART_RxCpltCallback+0xa8>)
 8002d48:	2201      	movs	r2, #1
 8002d4a:	701a      	strb	r2, [r3, #0]
 8002d4c:	e03a      	b.n	8002dc4 <HAL_UART_RxCpltCallback+0xa0>
	}
	else
	{
		if(UART_RX_buffer[UART_RX_index] == 0x08) //	BACKSPACE
 8002d4e:	4b20      	ldr	r3, [pc, #128]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	4a20      	ldr	r2, [pc, #128]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002d54:	5cd3      	ldrb	r3, [r2, r3]
 8002d56:	2b08      	cmp	r3, #8
 8002d58:	d10e      	bne.n	8002d78 <HAL_UART_RxCpltCallback+0x54>
		{
			if(UART_RX_index == 0)
 8002d5a:	4b1d      	ldr	r3, [pc, #116]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d105      	bne.n	8002d6e <HAL_UART_RxCpltCallback+0x4a>
				UART_RX_index--;
 8002d62:	4b1b      	ldr	r3, [pc, #108]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	3b01      	subs	r3, #1
 8002d68:	4a19      	ldr	r2, [pc, #100]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d6a:	6013      	str	r3, [r2, #0]
 8002d6c:	e004      	b.n	8002d78 <HAL_UART_RxCpltCallback+0x54>
			else
				UART_RX_index -= 2;
 8002d6e:	4b18      	ldr	r3, [pc, #96]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	3b02      	subs	r3, #2
 8002d74:	4a16      	ldr	r2, [pc, #88]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d76:	6013      	str	r3, [r2, #0]
		}

		if(UART_RX_buffer[UART_RX_index] == 0x1B) //	ESCAPE
 8002d78:	4b15      	ldr	r3, [pc, #84]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	4a15      	ldr	r2, [pc, #84]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002d7e:	5cd3      	ldrb	r3, [r2, r3]
 8002d80:	2b1b      	cmp	r3, #27
 8002d82:	d103      	bne.n	8002d8c <HAL_UART_RxCpltCallback+0x68>
			UART_RX_index = -1;
 8002d84:	4b12      	ldr	r3, [pc, #72]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d86:	f04f 32ff 	mov.w	r2, #4294967295
 8002d8a:	601a      	str	r2, [r3, #0]

		if(UART_RX_buffer[UART_RX_index] == '$') //		$
 8002d8c:	4b10      	ldr	r3, [pc, #64]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	4a10      	ldr	r2, [pc, #64]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002d92:	5cd3      	ldrb	r3, [r2, r3]
 8002d94:	2b24      	cmp	r3, #36	; 0x24
 8002d96:	d105      	bne.n	8002da4 <HAL_UART_RxCpltCallback+0x80>
		{
			UART_RX_index = 0;
 8002d98:	4b0d      	ldr	r3, [pc, #52]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002d9a:	2200      	movs	r2, #0
 8002d9c:	601a      	str	r2, [r3, #0]
			UART_RX_buffer[0] = '$';
 8002d9e:	4b0d      	ldr	r3, [pc, #52]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002da0:	2224      	movs	r2, #36	; 0x24
 8002da2:	701a      	strb	r2, [r3, #0]
		}

		HAL_UART_Receive_IT(&huart3, &UART_RX_buffer[++UART_RX_index], 1);
 8002da4:	4b0a      	ldr	r3, [pc, #40]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	3301      	adds	r3, #1
 8002daa:	4a09      	ldr	r2, [pc, #36]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002dac:	6013      	str	r3, [r2, #0]
 8002dae:	4b08      	ldr	r3, [pc, #32]	; (8002dd0 <HAL_UART_RxCpltCallback+0xac>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	4a08      	ldr	r2, [pc, #32]	; (8002dd4 <HAL_UART_RxCpltCallback+0xb0>)
 8002db4:	4413      	add	r3, r2
 8002db6:	2201      	movs	r2, #1
 8002db8:	4619      	mov	r1, r3
 8002dba:	4807      	ldr	r0, [pc, #28]	; (8002dd8 <HAL_UART_RxCpltCallback+0xb4>)
 8002dbc:	f003 fa16 	bl	80061ec <HAL_UART_Receive_IT>
 8002dc0:	e000      	b.n	8002dc4 <HAL_UART_RxCpltCallback+0xa0>
		return;
 8002dc2:	bf00      	nop
	}
}
 8002dc4:	3708      	adds	r7, #8
 8002dc6:	46bd      	mov	sp, r7
 8002dc8:	bd80      	pop	{r7, pc}
 8002dca:	bf00      	nop
 8002dcc:	20010490 	.word	0x20010490
 8002dd0:	2001048c 	.word	0x2001048c
 8002dd4:	2000033c 	.word	0x2000033c
 8002dd8:	200186fc 	.word	0x200186fc

08002ddc <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef* huart)
{
 8002ddc:	b580      	push	{r7, lr}
 8002dde:	b082      	sub	sp, #8
 8002de0:	af00      	add	r7, sp, #0
 8002de2:	6078      	str	r0, [r7, #4]
	if(!flagCPE)
 8002de4:	4b16      	ldr	r3, [pc, #88]	; (8002e40 <HAL_UART_TxCpltCallback+0x64>)
 8002de6:	781b      	ldrb	r3, [r3, #0]
 8002de8:	f083 0301 	eor.w	r3, r3, #1
 8002dec:	b2db      	uxtb	r3, r3
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d122      	bne.n	8002e38 <HAL_UART_TxCpltCallback+0x5c>
		return;

	if(UART_TX_buffer[UART_TX_index] == '\r' && UART_TX_buffer[UART_TX_index-1] != '\n')
 8002df2:	4b14      	ldr	r3, [pc, #80]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	4a14      	ldr	r2, [pc, #80]	; (8002e48 <HAL_UART_TxCpltCallback+0x6c>)
 8002df8:	5cd3      	ldrb	r3, [r2, r3]
 8002dfa:	2b0d      	cmp	r3, #13
 8002dfc:	d10d      	bne.n	8002e1a <HAL_UART_TxCpltCallback+0x3e>
 8002dfe:	4b11      	ldr	r3, [pc, #68]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	3b01      	subs	r3, #1
 8002e04:	4a10      	ldr	r2, [pc, #64]	; (8002e48 <HAL_UART_TxCpltCallback+0x6c>)
 8002e06:	5cd3      	ldrb	r3, [r2, r3]
 8002e08:	2b0a      	cmp	r3, #10
 8002e0a:	d006      	beq.n	8002e1a <HAL_UART_TxCpltCallback+0x3e>
	{
		UART_TX_index = 0;
 8002e0c:	4b0d      	ldr	r3, [pc, #52]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002e0e:	2200      	movs	r2, #0
 8002e10:	601a      	str	r2, [r3, #0]
		flagCPE = false;
 8002e12:	4b0b      	ldr	r3, [pc, #44]	; (8002e40 <HAL_UART_TxCpltCallback+0x64>)
 8002e14:	2200      	movs	r2, #0
 8002e16:	701a      	strb	r2, [r3, #0]
 8002e18:	e00f      	b.n	8002e3a <HAL_UART_TxCpltCallback+0x5e>
	}
	else
		HAL_UART_Transmit_IT(&huart3, (uint8_t*) &UART_TX_buffer[++UART_TX_index], 1);
 8002e1a:	4b0a      	ldr	r3, [pc, #40]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	3301      	adds	r3, #1
 8002e20:	4a08      	ldr	r2, [pc, #32]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002e22:	6013      	str	r3, [r2, #0]
 8002e24:	4b07      	ldr	r3, [pc, #28]	; (8002e44 <HAL_UART_TxCpltCallback+0x68>)
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	4a07      	ldr	r2, [pc, #28]	; (8002e48 <HAL_UART_TxCpltCallback+0x6c>)
 8002e2a:	4413      	add	r3, r2
 8002e2c:	2201      	movs	r2, #1
 8002e2e:	4619      	mov	r1, r3
 8002e30:	4806      	ldr	r0, [pc, #24]	; (8002e4c <HAL_UART_TxCpltCallback+0x70>)
 8002e32:	f003 f96d 	bl	8006110 <HAL_UART_Transmit_IT>
 8002e36:	e000      	b.n	8002e3a <HAL_UART_TxCpltCallback+0x5e>
		return;
 8002e38:	bf00      	nop
}
 8002e3a:	3708      	adds	r7, #8
 8002e3c:	46bd      	mov	sp, r7
 8002e3e:	bd80      	pop	{r7, pc}
 8002e40:	20014694 	.word	0x20014694
 8002e44:	20014698 	.word	0x20014698
 8002e48:	20010494 	.word	0x20010494
 8002e4c:	200186fc 	.word	0x200186fc

08002e50 <Reset_Handler>:
 8002e50:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002e88 <LoopFillZerobss+0x12>
 8002e54:	480d      	ldr	r0, [pc, #52]	; (8002e8c <LoopFillZerobss+0x16>)
 8002e56:	490e      	ldr	r1, [pc, #56]	; (8002e90 <LoopFillZerobss+0x1a>)
 8002e58:	4a0e      	ldr	r2, [pc, #56]	; (8002e94 <LoopFillZerobss+0x1e>)
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	e002      	b.n	8002e64 <LoopCopyDataInit>

08002e5e <CopyDataInit>:
 8002e5e:	58d4      	ldr	r4, [r2, r3]
 8002e60:	50c4      	str	r4, [r0, r3]
 8002e62:	3304      	adds	r3, #4

08002e64 <LoopCopyDataInit>:
 8002e64:	18c4      	adds	r4, r0, r3
 8002e66:	428c      	cmp	r4, r1
 8002e68:	d3f9      	bcc.n	8002e5e <CopyDataInit>
 8002e6a:	4a0b      	ldr	r2, [pc, #44]	; (8002e98 <LoopFillZerobss+0x22>)
 8002e6c:	4c0b      	ldr	r4, [pc, #44]	; (8002e9c <LoopFillZerobss+0x26>)
 8002e6e:	2300      	movs	r3, #0
 8002e70:	e001      	b.n	8002e76 <LoopFillZerobss>

08002e72 <FillZerobss>:
 8002e72:	6013      	str	r3, [r2, #0]
 8002e74:	3204      	adds	r2, #4

08002e76 <LoopFillZerobss>:
 8002e76:	42a2      	cmp	r2, r4
 8002e78:	d3fb      	bcc.n	8002e72 <FillZerobss>
 8002e7a:	f7ff fced 	bl	8002858 <SystemInit>
 8002e7e:	f004 fc9f 	bl	80077c0 <__libc_init_array>
 8002e82:	f7ff fafb 	bl	800247c <main>
 8002e86:	4770      	bx	lr
 8002e88:	20080000 	.word	0x20080000
 8002e8c:	20000000 	.word	0x20000000
 8002e90:	20000308 	.word	0x20000308
 8002e94:	0800d614 	.word	0x0800d614
 8002e98:	20000308 	.word	0x20000308
 8002e9c:	20018794 	.word	0x20018794

08002ea0 <CAN1_RX0_IRQHandler>:
 8002ea0:	e7fe      	b.n	8002ea0 <CAN1_RX0_IRQHandler>

08002ea2 <HAL_Init>:
 8002ea2:	b580      	push	{r7, lr}
 8002ea4:	af00      	add	r7, sp, #0
 8002ea6:	2003      	movs	r0, #3
 8002ea8:	f000 fe32 	bl	8003b10 <HAL_NVIC_SetPriorityGrouping>
 8002eac:	2000      	movs	r0, #0
 8002eae:	f000 f805 	bl	8002ebc <HAL_InitTick>
 8002eb2:	f7ff fb9f 	bl	80025f4 <HAL_MspInit>
 8002eb6:	2300      	movs	r3, #0
 8002eb8:	4618      	mov	r0, r3
 8002eba:	bd80      	pop	{r7, pc}

08002ebc <HAL_InitTick>:
 8002ebc:	b580      	push	{r7, lr}
 8002ebe:	b082      	sub	sp, #8
 8002ec0:	af00      	add	r7, sp, #0
 8002ec2:	6078      	str	r0, [r7, #4]
 8002ec4:	4b12      	ldr	r3, [pc, #72]	; (8002f10 <HAL_InitTick+0x54>)
 8002ec6:	681a      	ldr	r2, [r3, #0]
 8002ec8:	4b12      	ldr	r3, [pc, #72]	; (8002f14 <HAL_InitTick+0x58>)
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	4619      	mov	r1, r3
 8002ece:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ed2:	fbb3 f3f1 	udiv	r3, r3, r1
 8002ed6:	fbb2 f3f3 	udiv	r3, r2, r3
 8002eda:	4618      	mov	r0, r3
 8002edc:	f000 fe4d 	bl	8003b7a <HAL_SYSTICK_Config>
 8002ee0:	4603      	mov	r3, r0
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d001      	beq.n	8002eea <HAL_InitTick+0x2e>
 8002ee6:	2301      	movs	r3, #1
 8002ee8:	e00e      	b.n	8002f08 <HAL_InitTick+0x4c>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	2b0f      	cmp	r3, #15
 8002eee:	d80a      	bhi.n	8002f06 <HAL_InitTick+0x4a>
 8002ef0:	2200      	movs	r2, #0
 8002ef2:	6879      	ldr	r1, [r7, #4]
 8002ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ef8:	f000 fe15 	bl	8003b26 <HAL_NVIC_SetPriority>
 8002efc:	4a06      	ldr	r2, [pc, #24]	; (8002f18 <HAL_InitTick+0x5c>)
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	6013      	str	r3, [r2, #0]
 8002f02:	2300      	movs	r3, #0
 8002f04:	e000      	b.n	8002f08 <HAL_InitTick+0x4c>
 8002f06:	2301      	movs	r3, #1
 8002f08:	4618      	mov	r0, r3
 8002f0a:	3708      	adds	r7, #8
 8002f0c:	46bd      	mov	sp, r7
 8002f0e:	bd80      	pop	{r7, pc}
 8002f10:	20000128 	.word	0x20000128
 8002f14:	20000130 	.word	0x20000130
 8002f18:	2000012c 	.word	0x2000012c

08002f1c <HAL_IncTick>:
 8002f1c:	b480      	push	{r7}
 8002f1e:	af00      	add	r7, sp, #0
 8002f20:	4b06      	ldr	r3, [pc, #24]	; (8002f3c <HAL_IncTick+0x20>)
 8002f22:	781b      	ldrb	r3, [r3, #0]
 8002f24:	461a      	mov	r2, r3
 8002f26:	4b06      	ldr	r3, [pc, #24]	; (8002f40 <HAL_IncTick+0x24>)
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	4413      	add	r3, r2
 8002f2c:	4a04      	ldr	r2, [pc, #16]	; (8002f40 <HAL_IncTick+0x24>)
 8002f2e:	6013      	str	r3, [r2, #0]
 8002f30:	bf00      	nop
 8002f32:	46bd      	mov	sp, r7
 8002f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f38:	4770      	bx	lr
 8002f3a:	bf00      	nop
 8002f3c:	20000130 	.word	0x20000130
 8002f40:	20018780 	.word	0x20018780

08002f44 <HAL_GetTick>:
 8002f44:	b480      	push	{r7}
 8002f46:	af00      	add	r7, sp, #0
 8002f48:	4b03      	ldr	r3, [pc, #12]	; (8002f58 <HAL_GetTick+0x14>)
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	4618      	mov	r0, r3
 8002f4e:	46bd      	mov	sp, r7
 8002f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f54:	4770      	bx	lr
 8002f56:	bf00      	nop
 8002f58:	20018780 	.word	0x20018780

08002f5c <HAL_Delay>:
 8002f5c:	b580      	push	{r7, lr}
 8002f5e:	b084      	sub	sp, #16
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	6078      	str	r0, [r7, #4]
 8002f64:	f7ff ffee 	bl	8002f44 <HAL_GetTick>
 8002f68:	60b8      	str	r0, [r7, #8]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	60fb      	str	r3, [r7, #12]
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f74:	d005      	beq.n	8002f82 <HAL_Delay+0x26>
 8002f76:	4b0a      	ldr	r3, [pc, #40]	; (8002fa0 <HAL_Delay+0x44>)
 8002f78:	781b      	ldrb	r3, [r3, #0]
 8002f7a:	461a      	mov	r2, r3
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	4413      	add	r3, r2
 8002f80:	60fb      	str	r3, [r7, #12]
 8002f82:	bf00      	nop
 8002f84:	f7ff ffde 	bl	8002f44 <HAL_GetTick>
 8002f88:	4602      	mov	r2, r0
 8002f8a:	68bb      	ldr	r3, [r7, #8]
 8002f8c:	1ad3      	subs	r3, r2, r3
 8002f8e:	68fa      	ldr	r2, [r7, #12]
 8002f90:	429a      	cmp	r2, r3
 8002f92:	d8f7      	bhi.n	8002f84 <HAL_Delay+0x28>
 8002f94:	bf00      	nop
 8002f96:	bf00      	nop
 8002f98:	3710      	adds	r7, #16
 8002f9a:	46bd      	mov	sp, r7
 8002f9c:	bd80      	pop	{r7, pc}
 8002f9e:	bf00      	nop
 8002fa0:	20000130 	.word	0x20000130

08002fa4 <HAL_ADC_Init>:
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b084      	sub	sp, #16
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
 8002fac:	2300      	movs	r3, #0
 8002fae:	73fb      	strb	r3, [r7, #15]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d101      	bne.n	8002fba <HAL_ADC_Init+0x16>
 8002fb6:	2301      	movs	r3, #1
 8002fb8:	e031      	b.n	800301e <HAL_ADC_Init+0x7a>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	d109      	bne.n	8002fd6 <HAL_ADC_Init+0x32>
 8002fc2:	6878      	ldr	r0, [r7, #4]
 8002fc4:	f7fd fdca 	bl	8000b5c <HAL_ADC_MspInit>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	2200      	movs	r2, #0
 8002fcc:	645a      	str	r2, [r3, #68]	; 0x44
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fda:	f003 0310 	and.w	r3, r3, #16
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d116      	bne.n	8003010 <HAL_ADC_Init+0x6c>
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002fe6:	4b10      	ldr	r3, [pc, #64]	; (8003028 <HAL_ADC_Init+0x84>)
 8002fe8:	4013      	ands	r3, r2
 8002fea:	f043 0202 	orr.w	r2, r3, #2
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	641a      	str	r2, [r3, #64]	; 0x40
 8002ff2:	6878      	ldr	r0, [r7, #4]
 8002ff4:	f000 fbb8 	bl	8003768 <ADC_Init>
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	2200      	movs	r2, #0
 8002ffc:	645a      	str	r2, [r3, #68]	; 0x44
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003002:	f023 0303 	bic.w	r3, r3, #3
 8003006:	f043 0201 	orr.w	r2, r3, #1
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	641a      	str	r2, [r3, #64]	; 0x40
 800300e:	e001      	b.n	8003014 <HAL_ADC_Init+0x70>
 8003010:	2301      	movs	r3, #1
 8003012:	73fb      	strb	r3, [r7, #15]
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	2200      	movs	r2, #0
 8003018:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800301c:	7bfb      	ldrb	r3, [r7, #15]
 800301e:	4618      	mov	r0, r3
 8003020:	3710      	adds	r7, #16
 8003022:	46bd      	mov	sp, r7
 8003024:	bd80      	pop	{r7, pc}
 8003026:	bf00      	nop
 8003028:	ffffeefd 	.word	0xffffeefd

0800302c <HAL_ADC_Start_IT>:
 800302c:	b480      	push	{r7}
 800302e:	b085      	sub	sp, #20
 8003030:	af00      	add	r7, sp, #0
 8003032:	6078      	str	r0, [r7, #4]
 8003034:	2300      	movs	r3, #0
 8003036:	60fb      	str	r3, [r7, #12]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800303e:	2b01      	cmp	r3, #1
 8003040:	d101      	bne.n	8003046 <HAL_ADC_Start_IT+0x1a>
 8003042:	2302      	movs	r3, #2
 8003044:	e0b5      	b.n	80031b2 <HAL_ADC_Start_IT+0x186>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	2201      	movs	r2, #1
 800304a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	689b      	ldr	r3, [r3, #8]
 8003054:	f003 0301 	and.w	r3, r3, #1
 8003058:	2b01      	cmp	r3, #1
 800305a:	d018      	beq.n	800308e <HAL_ADC_Start_IT+0x62>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	689a      	ldr	r2, [r3, #8]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	f042 0201 	orr.w	r2, r2, #1
 800306a:	609a      	str	r2, [r3, #8]
 800306c:	4b54      	ldr	r3, [pc, #336]	; (80031c0 <HAL_ADC_Start_IT+0x194>)
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	4a54      	ldr	r2, [pc, #336]	; (80031c4 <HAL_ADC_Start_IT+0x198>)
 8003072:	fba2 2303 	umull	r2, r3, r2, r3
 8003076:	0c9a      	lsrs	r2, r3, #18
 8003078:	4613      	mov	r3, r2
 800307a:	005b      	lsls	r3, r3, #1
 800307c:	4413      	add	r3, r2
 800307e:	60fb      	str	r3, [r7, #12]
 8003080:	e002      	b.n	8003088 <HAL_ADC_Start_IT+0x5c>
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	3b01      	subs	r3, #1
 8003086:	60fb      	str	r3, [r7, #12]
 8003088:	68fb      	ldr	r3, [r7, #12]
 800308a:	2b00      	cmp	r3, #0
 800308c:	d1f9      	bne.n	8003082 <HAL_ADC_Start_IT+0x56>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	689b      	ldr	r3, [r3, #8]
 8003094:	f003 0301 	and.w	r3, r3, #1
 8003098:	2b01      	cmp	r3, #1
 800309a:	d17d      	bne.n	8003198 <HAL_ADC_Start_IT+0x16c>
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80030a0:	4b49      	ldr	r3, [pc, #292]	; (80031c8 <HAL_ADC_Start_IT+0x19c>)
 80030a2:	4013      	ands	r3, r2
 80030a4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	641a      	str	r2, [r3, #64]	; 0x40
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	685b      	ldr	r3, [r3, #4]
 80030b2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d007      	beq.n	80030ca <HAL_ADC_Start_IT+0x9e>
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030be:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80030c2:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	641a      	str	r2, [r3, #64]	; 0x40
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030ce:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80030d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80030d6:	d106      	bne.n	80030e6 <HAL_ADC_Start_IT+0xba>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80030dc:	f023 0206 	bic.w	r2, r3, #6
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	645a      	str	r2, [r3, #68]	; 0x44
 80030e4:	e002      	b.n	80030ec <HAL_ADC_Start_IT+0xc0>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	2200      	movs	r2, #0
 80030ea:	645a      	str	r2, [r3, #68]	; 0x44
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	2200      	movs	r2, #0
 80030f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80030fc:	601a      	str	r2, [r3, #0]
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	6859      	ldr	r1, [r3, #4]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681a      	ldr	r2, [r3, #0]
 8003108:	4b30      	ldr	r3, [pc, #192]	; (80031cc <HAL_ADC_Start_IT+0x1a0>)
 800310a:	430b      	orrs	r3, r1
 800310c:	6053      	str	r3, [r2, #4]
 800310e:	4b30      	ldr	r3, [pc, #192]	; (80031d0 <HAL_ADC_Start_IT+0x1a4>)
 8003110:	685b      	ldr	r3, [r3, #4]
 8003112:	f003 031f 	and.w	r3, r3, #31
 8003116:	2b00      	cmp	r3, #0
 8003118:	d10f      	bne.n	800313a <HAL_ADC_Start_IT+0x10e>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	689b      	ldr	r3, [r3, #8]
 8003120:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003124:	2b00      	cmp	r3, #0
 8003126:	d143      	bne.n	80031b0 <HAL_ADC_Start_IT+0x184>
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	689a      	ldr	r2, [r3, #8]
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003136:	609a      	str	r2, [r3, #8]
 8003138:	e03a      	b.n	80031b0 <HAL_ADC_Start_IT+0x184>
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	4a25      	ldr	r2, [pc, #148]	; (80031d4 <HAL_ADC_Start_IT+0x1a8>)
 8003140:	4293      	cmp	r3, r2
 8003142:	d10e      	bne.n	8003162 <HAL_ADC_Start_IT+0x136>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	689b      	ldr	r3, [r3, #8]
 800314a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800314e:	2b00      	cmp	r3, #0
 8003150:	d107      	bne.n	8003162 <HAL_ADC_Start_IT+0x136>
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	689a      	ldr	r2, [r3, #8]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003160:	609a      	str	r2, [r3, #8]
 8003162:	4b1b      	ldr	r3, [pc, #108]	; (80031d0 <HAL_ADC_Start_IT+0x1a4>)
 8003164:	685b      	ldr	r3, [r3, #4]
 8003166:	f003 0310 	and.w	r3, r3, #16
 800316a:	2b00      	cmp	r3, #0
 800316c:	d120      	bne.n	80031b0 <HAL_ADC_Start_IT+0x184>
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	4a19      	ldr	r2, [pc, #100]	; (80031d8 <HAL_ADC_Start_IT+0x1ac>)
 8003174:	4293      	cmp	r3, r2
 8003176:	d11b      	bne.n	80031b0 <HAL_ADC_Start_IT+0x184>
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	689b      	ldr	r3, [r3, #8]
 800317e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003182:	2b00      	cmp	r3, #0
 8003184:	d114      	bne.n	80031b0 <HAL_ADC_Start_IT+0x184>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	681b      	ldr	r3, [r3, #0]
 800318a:	689a      	ldr	r2, [r3, #8]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003194:	609a      	str	r2, [r3, #8]
 8003196:	e00b      	b.n	80031b0 <HAL_ADC_Start_IT+0x184>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800319c:	f043 0210 	orr.w	r2, r3, #16
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	641a      	str	r2, [r3, #64]	; 0x40
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80031a8:	f043 0201 	orr.w	r2, r3, #1
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	645a      	str	r2, [r3, #68]	; 0x44
 80031b0:	2300      	movs	r3, #0
 80031b2:	4618      	mov	r0, r3
 80031b4:	3714      	adds	r7, #20
 80031b6:	46bd      	mov	sp, r7
 80031b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031bc:	4770      	bx	lr
 80031be:	bf00      	nop
 80031c0:	20000128 	.word	0x20000128
 80031c4:	431bde83 	.word	0x431bde83
 80031c8:	fffff8fe 	.word	0xfffff8fe
 80031cc:	04000020 	.word	0x04000020
 80031d0:	40012300 	.word	0x40012300
 80031d4:	40012000 	.word	0x40012000
 80031d8:	40012200 	.word	0x40012200

080031dc <HAL_ADC_Stop_IT>:
 80031dc:	b480      	push	{r7}
 80031de:	b083      	sub	sp, #12
 80031e0:	af00      	add	r7, sp, #0
 80031e2:	6078      	str	r0, [r7, #4]
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031ea:	2b01      	cmp	r3, #1
 80031ec:	d101      	bne.n	80031f2 <HAL_ADC_Stop_IT+0x16>
 80031ee:	2302      	movs	r3, #2
 80031f0:	e027      	b.n	8003242 <HAL_ADC_Stop_IT+0x66>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	2201      	movs	r2, #1
 80031f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	689a      	ldr	r2, [r3, #8]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	f022 0201 	bic.w	r2, r2, #1
 8003208:	609a      	str	r2, [r3, #8]
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	689b      	ldr	r3, [r3, #8]
 8003210:	f003 0301 	and.w	r3, r3, #1
 8003214:	2b00      	cmp	r3, #0
 8003216:	d10f      	bne.n	8003238 <HAL_ADC_Stop_IT+0x5c>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	6859      	ldr	r1, [r3, #4]
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681a      	ldr	r2, [r3, #0]
 8003222:	4b0b      	ldr	r3, [pc, #44]	; (8003250 <HAL_ADC_Stop_IT+0x74>)
 8003224:	400b      	ands	r3, r1
 8003226:	6053      	str	r3, [r2, #4]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800322c:	4b09      	ldr	r3, [pc, #36]	; (8003254 <HAL_ADC_Stop_IT+0x78>)
 800322e:	4013      	ands	r3, r2
 8003230:	f043 0201 	orr.w	r2, r3, #1
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	641a      	str	r2, [r3, #64]	; 0x40
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	2200      	movs	r2, #0
 800323c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003240:	2300      	movs	r3, #0
 8003242:	4618      	mov	r0, r3
 8003244:	370c      	adds	r7, #12
 8003246:	46bd      	mov	sp, r7
 8003248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324c:	4770      	bx	lr
 800324e:	bf00      	nop
 8003250:	fbffffdf 	.word	0xfbffffdf
 8003254:	ffffeefe 	.word	0xffffeefe

08003258 <HAL_ADC_IRQHandler>:
 8003258:	b580      	push	{r7, lr}
 800325a:	b086      	sub	sp, #24
 800325c:	af00      	add	r7, sp, #0
 800325e:	6078      	str	r0, [r7, #4]
 8003260:	2300      	movs	r3, #0
 8003262:	617b      	str	r3, [r7, #20]
 8003264:	2300      	movs	r3, #0
 8003266:	613b      	str	r3, [r7, #16]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	60fb      	str	r3, [r7, #12]
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	685b      	ldr	r3, [r3, #4]
 8003276:	60bb      	str	r3, [r7, #8]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	f003 0302 	and.w	r3, r3, #2
 800327e:	617b      	str	r3, [r7, #20]
 8003280:	68bb      	ldr	r3, [r7, #8]
 8003282:	f003 0320 	and.w	r3, r3, #32
 8003286:	613b      	str	r3, [r7, #16]
 8003288:	697b      	ldr	r3, [r7, #20]
 800328a:	2b00      	cmp	r3, #0
 800328c:	d049      	beq.n	8003322 <HAL_ADC_IRQHandler+0xca>
 800328e:	693b      	ldr	r3, [r7, #16]
 8003290:	2b00      	cmp	r3, #0
 8003292:	d046      	beq.n	8003322 <HAL_ADC_IRQHandler+0xca>
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003298:	f003 0310 	and.w	r3, r3, #16
 800329c:	2b00      	cmp	r3, #0
 800329e:	d105      	bne.n	80032ac <HAL_ADC_IRQHandler+0x54>
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032a4:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	641a      	str	r2, [r3, #64]	; 0x40
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	689b      	ldr	r3, [r3, #8]
 80032b2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d12b      	bne.n	8003312 <HAL_ADC_IRQHandler+0xba>
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	699b      	ldr	r3, [r3, #24]
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d127      	bne.n	8003312 <HAL_ADC_IRQHandler+0xba>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032c8:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d006      	beq.n	80032de <HAL_ADC_IRQHandler+0x86>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80032da:	2b00      	cmp	r3, #0
 80032dc:	d119      	bne.n	8003312 <HAL_ADC_IRQHandler+0xba>
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	685a      	ldr	r2, [r3, #4]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	f022 0220 	bic.w	r2, r2, #32
 80032ec:	605a      	str	r2, [r3, #4]
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032f2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	641a      	str	r2, [r3, #64]	; 0x40
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032fe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003302:	2b00      	cmp	r3, #0
 8003304:	d105      	bne.n	8003312 <HAL_ADC_IRQHandler+0xba>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800330a:	f043 0201 	orr.w	r2, r3, #1
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	641a      	str	r2, [r3, #64]	; 0x40
 8003312:	6878      	ldr	r0, [r7, #4]
 8003314:	f7fd fcfc 	bl	8000d10 <HAL_ADC_ConvCpltCallback>
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	f06f 0212 	mvn.w	r2, #18
 8003320:	601a      	str	r2, [r3, #0]
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	f003 0304 	and.w	r3, r3, #4
 8003328:	617b      	str	r3, [r7, #20]
 800332a:	68bb      	ldr	r3, [r7, #8]
 800332c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003330:	613b      	str	r3, [r7, #16]
 8003332:	697b      	ldr	r3, [r7, #20]
 8003334:	2b00      	cmp	r3, #0
 8003336:	d057      	beq.n	80033e8 <HAL_ADC_IRQHandler+0x190>
 8003338:	693b      	ldr	r3, [r7, #16]
 800333a:	2b00      	cmp	r3, #0
 800333c:	d054      	beq.n	80033e8 <HAL_ADC_IRQHandler+0x190>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	2b00      	cmp	r3, #0
 8003348:	d105      	bne.n	8003356 <HAL_ADC_IRQHandler+0xfe>
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800334e:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	641a      	str	r2, [r3, #64]	; 0x40
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	689b      	ldr	r3, [r3, #8]
 800335c:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 8003360:	2b00      	cmp	r3, #0
 8003362:	d139      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800336a:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800336e:	2b00      	cmp	r3, #0
 8003370:	d006      	beq.n	8003380 <HAL_ADC_IRQHandler+0x128>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	689b      	ldr	r3, [r3, #8]
 8003378:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800337c:	2b00      	cmp	r3, #0
 800337e:	d12b      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	685b      	ldr	r3, [r3, #4]
 8003386:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800338a:	2b00      	cmp	r3, #0
 800338c:	d124      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	689b      	ldr	r3, [r3, #8]
 8003394:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003398:	2b00      	cmp	r3, #0
 800339a:	d11d      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	699b      	ldr	r3, [r3, #24]
 80033a0:	2b00      	cmp	r3, #0
 80033a2:	d119      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	685a      	ldr	r2, [r3, #4]
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80033b2:	605a      	str	r2, [r3, #4]
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033b8:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	641a      	str	r2, [r3, #64]	; 0x40
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d105      	bne.n	80033d8 <HAL_ADC_IRQHandler+0x180>
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033d0:	f043 0201 	orr.w	r2, r3, #1
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	641a      	str	r2, [r3, #64]	; 0x40
 80033d8:	6878      	ldr	r0, [r7, #4]
 80033da:	f000 fabf 	bl	800395c <HAL_ADCEx_InjectedConvCpltCallback>
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	f06f 020c 	mvn.w	r2, #12
 80033e6:	601a      	str	r2, [r3, #0]
 80033e8:	68fb      	ldr	r3, [r7, #12]
 80033ea:	f003 0301 	and.w	r3, r3, #1
 80033ee:	617b      	str	r3, [r7, #20]
 80033f0:	68bb      	ldr	r3, [r7, #8]
 80033f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80033f6:	613b      	str	r3, [r7, #16]
 80033f8:	697b      	ldr	r3, [r7, #20]
 80033fa:	2b00      	cmp	r3, #0
 80033fc:	d017      	beq.n	800342e <HAL_ADC_IRQHandler+0x1d6>
 80033fe:	693b      	ldr	r3, [r7, #16]
 8003400:	2b00      	cmp	r3, #0
 8003402:	d014      	beq.n	800342e <HAL_ADC_IRQHandler+0x1d6>
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	681b      	ldr	r3, [r3, #0]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	f003 0301 	and.w	r3, r3, #1
 800340e:	2b01      	cmp	r3, #1
 8003410:	d10d      	bne.n	800342e <HAL_ADC_IRQHandler+0x1d6>
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003416:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	641a      	str	r2, [r3, #64]	; 0x40
 800341e:	6878      	ldr	r0, [r7, #4]
 8003420:	f000 f837 	bl	8003492 <HAL_ADC_LevelOutOfWindowCallback>
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	f06f 0201 	mvn.w	r2, #1
 800342c:	601a      	str	r2, [r3, #0]
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	f003 0320 	and.w	r3, r3, #32
 8003434:	617b      	str	r3, [r7, #20]
 8003436:	68bb      	ldr	r3, [r7, #8]
 8003438:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800343c:	613b      	str	r3, [r7, #16]
 800343e:	697b      	ldr	r3, [r7, #20]
 8003440:	2b00      	cmp	r3, #0
 8003442:	d015      	beq.n	8003470 <HAL_ADC_IRQHandler+0x218>
 8003444:	693b      	ldr	r3, [r7, #16]
 8003446:	2b00      	cmp	r3, #0
 8003448:	d012      	beq.n	8003470 <HAL_ADC_IRQHandler+0x218>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800344e:	f043 0202 	orr.w	r2, r3, #2
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	645a      	str	r2, [r3, #68]	; 0x44
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f06f 0220 	mvn.w	r2, #32
 800345e:	601a      	str	r2, [r3, #0]
 8003460:	6878      	ldr	r0, [r7, #4]
 8003462:	f000 f820 	bl	80034a6 <HAL_ADC_ErrorCallback>
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	f06f 0220 	mvn.w	r2, #32
 800346e:	601a      	str	r2, [r3, #0]
 8003470:	bf00      	nop
 8003472:	3718      	adds	r7, #24
 8003474:	46bd      	mov	sp, r7
 8003476:	bd80      	pop	{r7, pc}

08003478 <HAL_ADC_GetValue>:
 8003478:	b480      	push	{r7}
 800347a:	b083      	sub	sp, #12
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003486:	4618      	mov	r0, r3
 8003488:	370c      	adds	r7, #12
 800348a:	46bd      	mov	sp, r7
 800348c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003490:	4770      	bx	lr

08003492 <HAL_ADC_LevelOutOfWindowCallback>:
 8003492:	b480      	push	{r7}
 8003494:	b083      	sub	sp, #12
 8003496:	af00      	add	r7, sp, #0
 8003498:	6078      	str	r0, [r7, #4]
 800349a:	bf00      	nop
 800349c:	370c      	adds	r7, #12
 800349e:	46bd      	mov	sp, r7
 80034a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a4:	4770      	bx	lr

080034a6 <HAL_ADC_ErrorCallback>:
 80034a6:	b480      	push	{r7}
 80034a8:	b083      	sub	sp, #12
 80034aa:	af00      	add	r7, sp, #0
 80034ac:	6078      	str	r0, [r7, #4]
 80034ae:	bf00      	nop
 80034b0:	370c      	adds	r7, #12
 80034b2:	46bd      	mov	sp, r7
 80034b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034b8:	4770      	bx	lr
	...

080034bc <HAL_ADC_ConfigChannel>:
 80034bc:	b480      	push	{r7}
 80034be:	b085      	sub	sp, #20
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	6078      	str	r0, [r7, #4]
 80034c4:	6039      	str	r1, [r7, #0]
 80034c6:	2300      	movs	r3, #0
 80034c8:	60fb      	str	r3, [r7, #12]
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80034d0:	2b01      	cmp	r3, #1
 80034d2:	d101      	bne.n	80034d8 <HAL_ADC_ConfigChannel+0x1c>
 80034d4:	2302      	movs	r3, #2
 80034d6:	e136      	b.n	8003746 <HAL_ADC_ConfigChannel+0x28a>
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	2201      	movs	r2, #1
 80034dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80034e0:	683b      	ldr	r3, [r7, #0]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	2b09      	cmp	r3, #9
 80034e6:	d93a      	bls.n	800355e <HAL_ADC_ConfigChannel+0xa2>
 80034e8:	683b      	ldr	r3, [r7, #0]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80034f0:	d035      	beq.n	800355e <HAL_ADC_ConfigChannel+0xa2>
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	68d9      	ldr	r1, [r3, #12]
 80034f8:	683b      	ldr	r3, [r7, #0]
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	b29b      	uxth	r3, r3
 80034fe:	461a      	mov	r2, r3
 8003500:	4613      	mov	r3, r2
 8003502:	005b      	lsls	r3, r3, #1
 8003504:	4413      	add	r3, r2
 8003506:	3b1e      	subs	r3, #30
 8003508:	2207      	movs	r2, #7
 800350a:	fa02 f303 	lsl.w	r3, r2, r3
 800350e:	43da      	mvns	r2, r3
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	400a      	ands	r2, r1
 8003516:	60da      	str	r2, [r3, #12]
 8003518:	683b      	ldr	r3, [r7, #0]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	4a8d      	ldr	r2, [pc, #564]	; (8003754 <HAL_ADC_ConfigChannel+0x298>)
 800351e:	4293      	cmp	r3, r2
 8003520:	d10a      	bne.n	8003538 <HAL_ADC_ConfigChannel+0x7c>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	68d9      	ldr	r1, [r3, #12]
 8003528:	683b      	ldr	r3, [r7, #0]
 800352a:	689b      	ldr	r3, [r3, #8]
 800352c:	061a      	lsls	r2, r3, #24
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	430a      	orrs	r2, r1
 8003534:	60da      	str	r2, [r3, #12]
 8003536:	e035      	b.n	80035a4 <HAL_ADC_ConfigChannel+0xe8>
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	68d9      	ldr	r1, [r3, #12]
 800353e:	683b      	ldr	r3, [r7, #0]
 8003540:	689a      	ldr	r2, [r3, #8]
 8003542:	683b      	ldr	r3, [r7, #0]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	b29b      	uxth	r3, r3
 8003548:	4618      	mov	r0, r3
 800354a:	4603      	mov	r3, r0
 800354c:	005b      	lsls	r3, r3, #1
 800354e:	4403      	add	r3, r0
 8003550:	3b1e      	subs	r3, #30
 8003552:	409a      	lsls	r2, r3
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	430a      	orrs	r2, r1
 800355a:	60da      	str	r2, [r3, #12]
 800355c:	e022      	b.n	80035a4 <HAL_ADC_ConfigChannel+0xe8>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	6919      	ldr	r1, [r3, #16]
 8003564:	683b      	ldr	r3, [r7, #0]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	b29b      	uxth	r3, r3
 800356a:	461a      	mov	r2, r3
 800356c:	4613      	mov	r3, r2
 800356e:	005b      	lsls	r3, r3, #1
 8003570:	4413      	add	r3, r2
 8003572:	2207      	movs	r2, #7
 8003574:	fa02 f303 	lsl.w	r3, r2, r3
 8003578:	43da      	mvns	r2, r3
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	400a      	ands	r2, r1
 8003580:	611a      	str	r2, [r3, #16]
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	6919      	ldr	r1, [r3, #16]
 8003588:	683b      	ldr	r3, [r7, #0]
 800358a:	689a      	ldr	r2, [r3, #8]
 800358c:	683b      	ldr	r3, [r7, #0]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	b29b      	uxth	r3, r3
 8003592:	4618      	mov	r0, r3
 8003594:	4603      	mov	r3, r0
 8003596:	005b      	lsls	r3, r3, #1
 8003598:	4403      	add	r3, r0
 800359a:	409a      	lsls	r2, r3
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	430a      	orrs	r2, r1
 80035a2:	611a      	str	r2, [r3, #16]
 80035a4:	683b      	ldr	r3, [r7, #0]
 80035a6:	685b      	ldr	r3, [r3, #4]
 80035a8:	2b06      	cmp	r3, #6
 80035aa:	d824      	bhi.n	80035f6 <HAL_ADC_ConfigChannel+0x13a>
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80035b2:	683b      	ldr	r3, [r7, #0]
 80035b4:	685a      	ldr	r2, [r3, #4]
 80035b6:	4613      	mov	r3, r2
 80035b8:	009b      	lsls	r3, r3, #2
 80035ba:	4413      	add	r3, r2
 80035bc:	3b05      	subs	r3, #5
 80035be:	221f      	movs	r2, #31
 80035c0:	fa02 f303 	lsl.w	r3, r2, r3
 80035c4:	43da      	mvns	r2, r3
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	400a      	ands	r2, r1
 80035cc:	635a      	str	r2, [r3, #52]	; 0x34
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80035d4:	683b      	ldr	r3, [r7, #0]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	b29b      	uxth	r3, r3
 80035da:	4618      	mov	r0, r3
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	685a      	ldr	r2, [r3, #4]
 80035e0:	4613      	mov	r3, r2
 80035e2:	009b      	lsls	r3, r3, #2
 80035e4:	4413      	add	r3, r2
 80035e6:	3b05      	subs	r3, #5
 80035e8:	fa00 f203 	lsl.w	r2, r0, r3
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	430a      	orrs	r2, r1
 80035f2:	635a      	str	r2, [r3, #52]	; 0x34
 80035f4:	e04c      	b.n	8003690 <HAL_ADC_ConfigChannel+0x1d4>
 80035f6:	683b      	ldr	r3, [r7, #0]
 80035f8:	685b      	ldr	r3, [r3, #4]
 80035fa:	2b0c      	cmp	r3, #12
 80035fc:	d824      	bhi.n	8003648 <HAL_ADC_ConfigChannel+0x18c>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003604:	683b      	ldr	r3, [r7, #0]
 8003606:	685a      	ldr	r2, [r3, #4]
 8003608:	4613      	mov	r3, r2
 800360a:	009b      	lsls	r3, r3, #2
 800360c:	4413      	add	r3, r2
 800360e:	3b23      	subs	r3, #35	; 0x23
 8003610:	221f      	movs	r2, #31
 8003612:	fa02 f303 	lsl.w	r3, r2, r3
 8003616:	43da      	mvns	r2, r3
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	400a      	ands	r2, r1
 800361e:	631a      	str	r2, [r3, #48]	; 0x30
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003626:	683b      	ldr	r3, [r7, #0]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	b29b      	uxth	r3, r3
 800362c:	4618      	mov	r0, r3
 800362e:	683b      	ldr	r3, [r7, #0]
 8003630:	685a      	ldr	r2, [r3, #4]
 8003632:	4613      	mov	r3, r2
 8003634:	009b      	lsls	r3, r3, #2
 8003636:	4413      	add	r3, r2
 8003638:	3b23      	subs	r3, #35	; 0x23
 800363a:	fa00 f203 	lsl.w	r2, r0, r3
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	430a      	orrs	r2, r1
 8003644:	631a      	str	r2, [r3, #48]	; 0x30
 8003646:	e023      	b.n	8003690 <HAL_ADC_ConfigChannel+0x1d4>
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800364e:	683b      	ldr	r3, [r7, #0]
 8003650:	685a      	ldr	r2, [r3, #4]
 8003652:	4613      	mov	r3, r2
 8003654:	009b      	lsls	r3, r3, #2
 8003656:	4413      	add	r3, r2
 8003658:	3b41      	subs	r3, #65	; 0x41
 800365a:	221f      	movs	r2, #31
 800365c:	fa02 f303 	lsl.w	r3, r2, r3
 8003660:	43da      	mvns	r2, r3
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	681b      	ldr	r3, [r3, #0]
 8003666:	400a      	ands	r2, r1
 8003668:	62da      	str	r2, [r3, #44]	; 0x2c
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003670:	683b      	ldr	r3, [r7, #0]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	b29b      	uxth	r3, r3
 8003676:	4618      	mov	r0, r3
 8003678:	683b      	ldr	r3, [r7, #0]
 800367a:	685a      	ldr	r2, [r3, #4]
 800367c:	4613      	mov	r3, r2
 800367e:	009b      	lsls	r3, r3, #2
 8003680:	4413      	add	r3, r2
 8003682:	3b41      	subs	r3, #65	; 0x41
 8003684:	fa00 f203 	lsl.w	r2, r0, r3
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	430a      	orrs	r2, r1
 800368e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	4a30      	ldr	r2, [pc, #192]	; (8003758 <HAL_ADC_ConfigChannel+0x29c>)
 8003696:	4293      	cmp	r3, r2
 8003698:	d10a      	bne.n	80036b0 <HAL_ADC_ConfigChannel+0x1f4>
 800369a:	683b      	ldr	r3, [r7, #0]
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80036a2:	d105      	bne.n	80036b0 <HAL_ADC_ConfigChannel+0x1f4>
 80036a4:	4b2d      	ldr	r3, [pc, #180]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036a6:	685b      	ldr	r3, [r3, #4]
 80036a8:	4a2c      	ldr	r2, [pc, #176]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036aa:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80036ae:	6053      	str	r3, [r2, #4]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	4a28      	ldr	r2, [pc, #160]	; (8003758 <HAL_ADC_ConfigChannel+0x29c>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d10f      	bne.n	80036da <HAL_ADC_ConfigChannel+0x21e>
 80036ba:	683b      	ldr	r3, [r7, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	2b12      	cmp	r3, #18
 80036c0:	d10b      	bne.n	80036da <HAL_ADC_ConfigChannel+0x21e>
 80036c2:	4b26      	ldr	r3, [pc, #152]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036c4:	685b      	ldr	r3, [r3, #4]
 80036c6:	4a25      	ldr	r2, [pc, #148]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036c8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80036cc:	6053      	str	r3, [r2, #4]
 80036ce:	4b23      	ldr	r3, [pc, #140]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036d0:	685b      	ldr	r3, [r3, #4]
 80036d2:	4a22      	ldr	r2, [pc, #136]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036d4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80036d8:	6053      	str	r3, [r2, #4]
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	4a1e      	ldr	r2, [pc, #120]	; (8003758 <HAL_ADC_ConfigChannel+0x29c>)
 80036e0:	4293      	cmp	r3, r2
 80036e2:	d12b      	bne.n	800373c <HAL_ADC_ConfigChannel+0x280>
 80036e4:	683b      	ldr	r3, [r7, #0]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	4a1a      	ldr	r2, [pc, #104]	; (8003754 <HAL_ADC_ConfigChannel+0x298>)
 80036ea:	4293      	cmp	r3, r2
 80036ec:	d003      	beq.n	80036f6 <HAL_ADC_ConfigChannel+0x23a>
 80036ee:	683b      	ldr	r3, [r7, #0]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	2b11      	cmp	r3, #17
 80036f4:	d122      	bne.n	800373c <HAL_ADC_ConfigChannel+0x280>
 80036f6:	4b19      	ldr	r3, [pc, #100]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036f8:	685b      	ldr	r3, [r3, #4]
 80036fa:	4a18      	ldr	r2, [pc, #96]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 80036fc:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8003700:	6053      	str	r3, [r2, #4]
 8003702:	4b16      	ldr	r3, [pc, #88]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 8003704:	685b      	ldr	r3, [r3, #4]
 8003706:	4a15      	ldr	r2, [pc, #84]	; (800375c <HAL_ADC_ConfigChannel+0x2a0>)
 8003708:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800370c:	6053      	str	r3, [r2, #4]
 800370e:	683b      	ldr	r3, [r7, #0]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	4a10      	ldr	r2, [pc, #64]	; (8003754 <HAL_ADC_ConfigChannel+0x298>)
 8003714:	4293      	cmp	r3, r2
 8003716:	d111      	bne.n	800373c <HAL_ADC_ConfigChannel+0x280>
 8003718:	4b11      	ldr	r3, [pc, #68]	; (8003760 <HAL_ADC_ConfigChannel+0x2a4>)
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	4a11      	ldr	r2, [pc, #68]	; (8003764 <HAL_ADC_ConfigChannel+0x2a8>)
 800371e:	fba2 2303 	umull	r2, r3, r2, r3
 8003722:	0c9a      	lsrs	r2, r3, #18
 8003724:	4613      	mov	r3, r2
 8003726:	009b      	lsls	r3, r3, #2
 8003728:	4413      	add	r3, r2
 800372a:	005b      	lsls	r3, r3, #1
 800372c:	60fb      	str	r3, [r7, #12]
 800372e:	e002      	b.n	8003736 <HAL_ADC_ConfigChannel+0x27a>
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	3b01      	subs	r3, #1
 8003734:	60fb      	str	r3, [r7, #12]
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	2b00      	cmp	r3, #0
 800373a:	d1f9      	bne.n	8003730 <HAL_ADC_ConfigChannel+0x274>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	2200      	movs	r2, #0
 8003740:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003744:	2300      	movs	r3, #0
 8003746:	4618      	mov	r0, r3
 8003748:	3714      	adds	r7, #20
 800374a:	46bd      	mov	sp, r7
 800374c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003750:	4770      	bx	lr
 8003752:	bf00      	nop
 8003754:	10000012 	.word	0x10000012
 8003758:	40012000 	.word	0x40012000
 800375c:	40012300 	.word	0x40012300
 8003760:	20000128 	.word	0x20000128
 8003764:	431bde83 	.word	0x431bde83

08003768 <ADC_Init>:
 8003768:	b480      	push	{r7}
 800376a:	b083      	sub	sp, #12
 800376c:	af00      	add	r7, sp, #0
 800376e:	6078      	str	r0, [r7, #4]
 8003770:	4b78      	ldr	r3, [pc, #480]	; (8003954 <ADC_Init+0x1ec>)
 8003772:	685b      	ldr	r3, [r3, #4]
 8003774:	4a77      	ldr	r2, [pc, #476]	; (8003954 <ADC_Init+0x1ec>)
 8003776:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800377a:	6053      	str	r3, [r2, #4]
 800377c:	4b75      	ldr	r3, [pc, #468]	; (8003954 <ADC_Init+0x1ec>)
 800377e:	685a      	ldr	r2, [r3, #4]
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	685b      	ldr	r3, [r3, #4]
 8003784:	4973      	ldr	r1, [pc, #460]	; (8003954 <ADC_Init+0x1ec>)
 8003786:	4313      	orrs	r3, r2
 8003788:	604b      	str	r3, [r1, #4]
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	685a      	ldr	r2, [r3, #4]
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003798:	605a      	str	r2, [r3, #4]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	6859      	ldr	r1, [r3, #4]
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	691b      	ldr	r3, [r3, #16]
 80037a4:	021a      	lsls	r2, r3, #8
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	430a      	orrs	r2, r1
 80037ac:	605a      	str	r2, [r3, #4]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	685a      	ldr	r2, [r3, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80037bc:	605a      	str	r2, [r3, #4]
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	6859      	ldr	r1, [r3, #4]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	689a      	ldr	r2, [r3, #8]
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	430a      	orrs	r2, r1
 80037ce:	605a      	str	r2, [r3, #4]
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	689a      	ldr	r2, [r3, #8]
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80037de:	609a      	str	r2, [r3, #8]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	6899      	ldr	r1, [r3, #8]
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	68da      	ldr	r2, [r3, #12]
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	430a      	orrs	r2, r1
 80037f0:	609a      	str	r2, [r3, #8]
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80037f6:	4a58      	ldr	r2, [pc, #352]	; (8003958 <ADC_Init+0x1f0>)
 80037f8:	4293      	cmp	r3, r2
 80037fa:	d022      	beq.n	8003842 <ADC_Init+0xda>
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	689a      	ldr	r2, [r3, #8]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800380a:	609a      	str	r2, [r3, #8]
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	6899      	ldr	r1, [r3, #8]
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	430a      	orrs	r2, r1
 800381c:	609a      	str	r2, [r3, #8]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	689a      	ldr	r2, [r3, #8]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800382c:	609a      	str	r2, [r3, #8]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	6899      	ldr	r1, [r3, #8]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	430a      	orrs	r2, r1
 800383e:	609a      	str	r2, [r3, #8]
 8003840:	e00f      	b.n	8003862 <ADC_Init+0xfa>
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	689a      	ldr	r2, [r3, #8]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003850:	609a      	str	r2, [r3, #8]
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	689a      	ldr	r2, [r3, #8]
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003860:	609a      	str	r2, [r3, #8]
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	689a      	ldr	r2, [r3, #8]
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	f022 0202 	bic.w	r2, r2, #2
 8003870:	609a      	str	r2, [r3, #8]
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	6899      	ldr	r1, [r3, #8]
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	699b      	ldr	r3, [r3, #24]
 800387c:	005a      	lsls	r2, r3, #1
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	430a      	orrs	r2, r1
 8003884:	609a      	str	r2, [r3, #8]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	f893 3020 	ldrb.w	r3, [r3, #32]
 800388c:	2b00      	cmp	r3, #0
 800388e:	d01b      	beq.n	80038c8 <ADC_Init+0x160>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	685a      	ldr	r2, [r3, #4]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800389e:	605a      	str	r2, [r3, #4]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	685a      	ldr	r2, [r3, #4]
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80038ae:	605a      	str	r2, [r3, #4]
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	6859      	ldr	r1, [r3, #4]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038ba:	3b01      	subs	r3, #1
 80038bc:	035a      	lsls	r2, r3, #13
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	430a      	orrs	r2, r1
 80038c4:	605a      	str	r2, [r3, #4]
 80038c6:	e007      	b.n	80038d8 <ADC_Init+0x170>
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	685a      	ldr	r2, [r3, #4]
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80038d6:	605a      	str	r2, [r3, #4]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80038e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	69db      	ldr	r3, [r3, #28]
 80038f2:	3b01      	subs	r3, #1
 80038f4:	051a      	lsls	r2, r3, #20
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	430a      	orrs	r2, r1
 80038fc:	62da      	str	r2, [r3, #44]	; 0x2c
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	689a      	ldr	r2, [r3, #8]
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800390c:	609a      	str	r2, [r3, #8]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	6899      	ldr	r1, [r3, #8]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800391a:	025a      	lsls	r2, r3, #9
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	430a      	orrs	r2, r1
 8003922:	609a      	str	r2, [r3, #8]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	689a      	ldr	r2, [r3, #8]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003932:	609a      	str	r2, [r3, #8]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	6899      	ldr	r1, [r3, #8]
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	695b      	ldr	r3, [r3, #20]
 800393e:	029a      	lsls	r2, r3, #10
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	430a      	orrs	r2, r1
 8003946:	609a      	str	r2, [r3, #8]
 8003948:	bf00      	nop
 800394a:	370c      	adds	r7, #12
 800394c:	46bd      	mov	sp, r7
 800394e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003952:	4770      	bx	lr
 8003954:	40012300 	.word	0x40012300
 8003958:	0f000001 	.word	0x0f000001

0800395c <HAL_ADCEx_InjectedConvCpltCallback>:
 800395c:	b480      	push	{r7}
 800395e:	b083      	sub	sp, #12
 8003960:	af00      	add	r7, sp, #0
 8003962:	6078      	str	r0, [r7, #4]
 8003964:	bf00      	nop
 8003966:	370c      	adds	r7, #12
 8003968:	46bd      	mov	sp, r7
 800396a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800396e:	4770      	bx	lr

08003970 <__NVIC_SetPriorityGrouping>:
 8003970:	b480      	push	{r7}
 8003972:	b085      	sub	sp, #20
 8003974:	af00      	add	r7, sp, #0
 8003976:	6078      	str	r0, [r7, #4]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	f003 0307 	and.w	r3, r3, #7
 800397e:	60fb      	str	r3, [r7, #12]
 8003980:	4b0b      	ldr	r3, [pc, #44]	; (80039b0 <__NVIC_SetPriorityGrouping+0x40>)
 8003982:	68db      	ldr	r3, [r3, #12]
 8003984:	60bb      	str	r3, [r7, #8]
 8003986:	68ba      	ldr	r2, [r7, #8]
 8003988:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800398c:	4013      	ands	r3, r2
 800398e:	60bb      	str	r3, [r7, #8]
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	021a      	lsls	r2, r3, #8
 8003994:	68bb      	ldr	r3, [r7, #8]
 8003996:	431a      	orrs	r2, r3
 8003998:	4b06      	ldr	r3, [pc, #24]	; (80039b4 <__NVIC_SetPriorityGrouping+0x44>)
 800399a:	4313      	orrs	r3, r2
 800399c:	60bb      	str	r3, [r7, #8]
 800399e:	4a04      	ldr	r2, [pc, #16]	; (80039b0 <__NVIC_SetPriorityGrouping+0x40>)
 80039a0:	68bb      	ldr	r3, [r7, #8]
 80039a2:	60d3      	str	r3, [r2, #12]
 80039a4:	bf00      	nop
 80039a6:	3714      	adds	r7, #20
 80039a8:	46bd      	mov	sp, r7
 80039aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ae:	4770      	bx	lr
 80039b0:	e000ed00 	.word	0xe000ed00
 80039b4:	05fa0000 	.word	0x05fa0000

080039b8 <__NVIC_GetPriorityGrouping>:
 80039b8:	b480      	push	{r7}
 80039ba:	af00      	add	r7, sp, #0
 80039bc:	4b04      	ldr	r3, [pc, #16]	; (80039d0 <__NVIC_GetPriorityGrouping+0x18>)
 80039be:	68db      	ldr	r3, [r3, #12]
 80039c0:	0a1b      	lsrs	r3, r3, #8
 80039c2:	f003 0307 	and.w	r3, r3, #7
 80039c6:	4618      	mov	r0, r3
 80039c8:	46bd      	mov	sp, r7
 80039ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ce:	4770      	bx	lr
 80039d0:	e000ed00 	.word	0xe000ed00

080039d4 <__NVIC_EnableIRQ>:
 80039d4:	b480      	push	{r7}
 80039d6:	b083      	sub	sp, #12
 80039d8:	af00      	add	r7, sp, #0
 80039da:	4603      	mov	r3, r0
 80039dc:	71fb      	strb	r3, [r7, #7]
 80039de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	db0b      	blt.n	80039fe <__NVIC_EnableIRQ+0x2a>
 80039e6:	79fb      	ldrb	r3, [r7, #7]
 80039e8:	f003 021f 	and.w	r2, r3, #31
 80039ec:	4907      	ldr	r1, [pc, #28]	; (8003a0c <__NVIC_EnableIRQ+0x38>)
 80039ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039f2:	095b      	lsrs	r3, r3, #5
 80039f4:	2001      	movs	r0, #1
 80039f6:	fa00 f202 	lsl.w	r2, r0, r2
 80039fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80039fe:	bf00      	nop
 8003a00:	370c      	adds	r7, #12
 8003a02:	46bd      	mov	sp, r7
 8003a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	e000e100 	.word	0xe000e100

08003a10 <__NVIC_SetPriority>:
 8003a10:	b480      	push	{r7}
 8003a12:	b083      	sub	sp, #12
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	4603      	mov	r3, r0
 8003a18:	6039      	str	r1, [r7, #0]
 8003a1a:	71fb      	strb	r3, [r7, #7]
 8003a1c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	db0a      	blt.n	8003a3a <__NVIC_SetPriority+0x2a>
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	b2da      	uxtb	r2, r3
 8003a28:	490c      	ldr	r1, [pc, #48]	; (8003a5c <__NVIC_SetPriority+0x4c>)
 8003a2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a2e:	0112      	lsls	r2, r2, #4
 8003a30:	b2d2      	uxtb	r2, r2
 8003a32:	440b      	add	r3, r1
 8003a34:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003a38:	e00a      	b.n	8003a50 <__NVIC_SetPriority+0x40>
 8003a3a:	683b      	ldr	r3, [r7, #0]
 8003a3c:	b2da      	uxtb	r2, r3
 8003a3e:	4908      	ldr	r1, [pc, #32]	; (8003a60 <__NVIC_SetPriority+0x50>)
 8003a40:	79fb      	ldrb	r3, [r7, #7]
 8003a42:	f003 030f 	and.w	r3, r3, #15
 8003a46:	3b04      	subs	r3, #4
 8003a48:	0112      	lsls	r2, r2, #4
 8003a4a:	b2d2      	uxtb	r2, r2
 8003a4c:	440b      	add	r3, r1
 8003a4e:	761a      	strb	r2, [r3, #24]
 8003a50:	bf00      	nop
 8003a52:	370c      	adds	r7, #12
 8003a54:	46bd      	mov	sp, r7
 8003a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a5a:	4770      	bx	lr
 8003a5c:	e000e100 	.word	0xe000e100
 8003a60:	e000ed00 	.word	0xe000ed00

08003a64 <NVIC_EncodePriority>:
 8003a64:	b480      	push	{r7}
 8003a66:	b089      	sub	sp, #36	; 0x24
 8003a68:	af00      	add	r7, sp, #0
 8003a6a:	60f8      	str	r0, [r7, #12]
 8003a6c:	60b9      	str	r1, [r7, #8]
 8003a6e:	607a      	str	r2, [r7, #4]
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	f003 0307 	and.w	r3, r3, #7
 8003a76:	61fb      	str	r3, [r7, #28]
 8003a78:	69fb      	ldr	r3, [r7, #28]
 8003a7a:	f1c3 0307 	rsb	r3, r3, #7
 8003a7e:	2b04      	cmp	r3, #4
 8003a80:	bf28      	it	cs
 8003a82:	2304      	movcs	r3, #4
 8003a84:	61bb      	str	r3, [r7, #24]
 8003a86:	69fb      	ldr	r3, [r7, #28]
 8003a88:	3304      	adds	r3, #4
 8003a8a:	2b06      	cmp	r3, #6
 8003a8c:	d902      	bls.n	8003a94 <NVIC_EncodePriority+0x30>
 8003a8e:	69fb      	ldr	r3, [r7, #28]
 8003a90:	3b03      	subs	r3, #3
 8003a92:	e000      	b.n	8003a96 <NVIC_EncodePriority+0x32>
 8003a94:	2300      	movs	r3, #0
 8003a96:	617b      	str	r3, [r7, #20]
 8003a98:	f04f 32ff 	mov.w	r2, #4294967295
 8003a9c:	69bb      	ldr	r3, [r7, #24]
 8003a9e:	fa02 f303 	lsl.w	r3, r2, r3
 8003aa2:	43da      	mvns	r2, r3
 8003aa4:	68bb      	ldr	r3, [r7, #8]
 8003aa6:	401a      	ands	r2, r3
 8003aa8:	697b      	ldr	r3, [r7, #20]
 8003aaa:	409a      	lsls	r2, r3
 8003aac:	f04f 31ff 	mov.w	r1, #4294967295
 8003ab0:	697b      	ldr	r3, [r7, #20]
 8003ab2:	fa01 f303 	lsl.w	r3, r1, r3
 8003ab6:	43d9      	mvns	r1, r3
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	400b      	ands	r3, r1
 8003abc:	4313      	orrs	r3, r2
 8003abe:	4618      	mov	r0, r3
 8003ac0:	3724      	adds	r7, #36	; 0x24
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ac8:	4770      	bx	lr
	...

08003acc <SysTick_Config>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b082      	sub	sp, #8
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	3b01      	subs	r3, #1
 8003ad8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003adc:	d301      	bcc.n	8003ae2 <SysTick_Config+0x16>
 8003ade:	2301      	movs	r3, #1
 8003ae0:	e00f      	b.n	8003b02 <SysTick_Config+0x36>
 8003ae2:	4a0a      	ldr	r2, [pc, #40]	; (8003b0c <SysTick_Config+0x40>)
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	3b01      	subs	r3, #1
 8003ae8:	6053      	str	r3, [r2, #4]
 8003aea:	210f      	movs	r1, #15
 8003aec:	f04f 30ff 	mov.w	r0, #4294967295
 8003af0:	f7ff ff8e 	bl	8003a10 <__NVIC_SetPriority>
 8003af4:	4b05      	ldr	r3, [pc, #20]	; (8003b0c <SysTick_Config+0x40>)
 8003af6:	2200      	movs	r2, #0
 8003af8:	609a      	str	r2, [r3, #8]
 8003afa:	4b04      	ldr	r3, [pc, #16]	; (8003b0c <SysTick_Config+0x40>)
 8003afc:	2207      	movs	r2, #7
 8003afe:	601a      	str	r2, [r3, #0]
 8003b00:	2300      	movs	r3, #0
 8003b02:	4618      	mov	r0, r3
 8003b04:	3708      	adds	r7, #8
 8003b06:	46bd      	mov	sp, r7
 8003b08:	bd80      	pop	{r7, pc}
 8003b0a:	bf00      	nop
 8003b0c:	e000e010 	.word	0xe000e010

08003b10 <HAL_NVIC_SetPriorityGrouping>:
 8003b10:	b580      	push	{r7, lr}
 8003b12:	b082      	sub	sp, #8
 8003b14:	af00      	add	r7, sp, #0
 8003b16:	6078      	str	r0, [r7, #4]
 8003b18:	6878      	ldr	r0, [r7, #4]
 8003b1a:	f7ff ff29 	bl	8003970 <__NVIC_SetPriorityGrouping>
 8003b1e:	bf00      	nop
 8003b20:	3708      	adds	r7, #8
 8003b22:	46bd      	mov	sp, r7
 8003b24:	bd80      	pop	{r7, pc}

08003b26 <HAL_NVIC_SetPriority>:
 8003b26:	b580      	push	{r7, lr}
 8003b28:	b086      	sub	sp, #24
 8003b2a:	af00      	add	r7, sp, #0
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	60b9      	str	r1, [r7, #8]
 8003b30:	607a      	str	r2, [r7, #4]
 8003b32:	73fb      	strb	r3, [r7, #15]
 8003b34:	2300      	movs	r3, #0
 8003b36:	617b      	str	r3, [r7, #20]
 8003b38:	f7ff ff3e 	bl	80039b8 <__NVIC_GetPriorityGrouping>
 8003b3c:	6178      	str	r0, [r7, #20]
 8003b3e:	687a      	ldr	r2, [r7, #4]
 8003b40:	68b9      	ldr	r1, [r7, #8]
 8003b42:	6978      	ldr	r0, [r7, #20]
 8003b44:	f7ff ff8e 	bl	8003a64 <NVIC_EncodePriority>
 8003b48:	4602      	mov	r2, r0
 8003b4a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003b4e:	4611      	mov	r1, r2
 8003b50:	4618      	mov	r0, r3
 8003b52:	f7ff ff5d 	bl	8003a10 <__NVIC_SetPriority>
 8003b56:	bf00      	nop
 8003b58:	3718      	adds	r7, #24
 8003b5a:	46bd      	mov	sp, r7
 8003b5c:	bd80      	pop	{r7, pc}

08003b5e <HAL_NVIC_EnableIRQ>:
 8003b5e:	b580      	push	{r7, lr}
 8003b60:	b082      	sub	sp, #8
 8003b62:	af00      	add	r7, sp, #0
 8003b64:	4603      	mov	r3, r0
 8003b66:	71fb      	strb	r3, [r7, #7]
 8003b68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b6c:	4618      	mov	r0, r3
 8003b6e:	f7ff ff31 	bl	80039d4 <__NVIC_EnableIRQ>
 8003b72:	bf00      	nop
 8003b74:	3708      	adds	r7, #8
 8003b76:	46bd      	mov	sp, r7
 8003b78:	bd80      	pop	{r7, pc}

08003b7a <HAL_SYSTICK_Config>:
 8003b7a:	b580      	push	{r7, lr}
 8003b7c:	b082      	sub	sp, #8
 8003b7e:	af00      	add	r7, sp, #0
 8003b80:	6078      	str	r0, [r7, #4]
 8003b82:	6878      	ldr	r0, [r7, #4]
 8003b84:	f7ff ffa2 	bl	8003acc <SysTick_Config>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	3708      	adds	r7, #8
 8003b8e:	46bd      	mov	sp, r7
 8003b90:	bd80      	pop	{r7, pc}

08003b92 <HAL_DAC_Init>:
 8003b92:	b580      	push	{r7, lr}
 8003b94:	b082      	sub	sp, #8
 8003b96:	af00      	add	r7, sp, #0
 8003b98:	6078      	str	r0, [r7, #4]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d101      	bne.n	8003ba4 <HAL_DAC_Init+0x12>
 8003ba0:	2301      	movs	r3, #1
 8003ba2:	e014      	b.n	8003bce <HAL_DAC_Init+0x3c>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	791b      	ldrb	r3, [r3, #4]
 8003ba8:	b2db      	uxtb	r3, r3
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d105      	bne.n	8003bba <HAL_DAC_Init+0x28>
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	715a      	strb	r2, [r3, #5]
 8003bb4:	6878      	ldr	r0, [r7, #4]
 8003bb6:	f7fe fb6d 	bl	8002294 <HAL_DAC_MspInit>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	2202      	movs	r2, #2
 8003bbe:	711a      	strb	r2, [r3, #4]
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	2200      	movs	r2, #0
 8003bc4:	611a      	str	r2, [r3, #16]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	2201      	movs	r2, #1
 8003bca:	711a      	strb	r2, [r3, #4]
 8003bcc:	2300      	movs	r3, #0
 8003bce:	4618      	mov	r0, r3
 8003bd0:	3708      	adds	r7, #8
 8003bd2:	46bd      	mov	sp, r7
 8003bd4:	bd80      	pop	{r7, pc}

08003bd6 <HAL_DAC_Start>:
 8003bd6:	b480      	push	{r7}
 8003bd8:	b083      	sub	sp, #12
 8003bda:	af00      	add	r7, sp, #0
 8003bdc:	6078      	str	r0, [r7, #4]
 8003bde:	6039      	str	r1, [r7, #0]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	795b      	ldrb	r3, [r3, #5]
 8003be4:	2b01      	cmp	r3, #1
 8003be6:	d101      	bne.n	8003bec <HAL_DAC_Start+0x16>
 8003be8:	2302      	movs	r3, #2
 8003bea:	e040      	b.n	8003c6e <HAL_DAC_Start+0x98>
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2201      	movs	r2, #1
 8003bf0:	715a      	strb	r2, [r3, #5]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	2202      	movs	r2, #2
 8003bf6:	711a      	strb	r2, [r3, #4]
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	6819      	ldr	r1, [r3, #0]
 8003bfe:	683b      	ldr	r3, [r7, #0]
 8003c00:	f003 0310 	and.w	r3, r3, #16
 8003c04:	2201      	movs	r2, #1
 8003c06:	409a      	lsls	r2, r3
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	430a      	orrs	r2, r1
 8003c0e:	601a      	str	r2, [r3, #0]
 8003c10:	683b      	ldr	r3, [r7, #0]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d10f      	bne.n	8003c36 <HAL_DAC_Start+0x60>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	f003 033c 	and.w	r3, r3, #60	; 0x3c
 8003c20:	2b3c      	cmp	r3, #60	; 0x3c
 8003c22:	d11d      	bne.n	8003c60 <HAL_DAC_Start+0x8a>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	685a      	ldr	r2, [r3, #4]
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	f042 0201 	orr.w	r2, r2, #1
 8003c32:	605a      	str	r2, [r3, #4]
 8003c34:	e014      	b.n	8003c60 <HAL_DAC_Start+0x8a>
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003c40:	683b      	ldr	r3, [r7, #0]
 8003c42:	f003 0310 	and.w	r3, r3, #16
 8003c46:	213c      	movs	r1, #60	; 0x3c
 8003c48:	fa01 f303 	lsl.w	r3, r1, r3
 8003c4c:	429a      	cmp	r2, r3
 8003c4e:	d107      	bne.n	8003c60 <HAL_DAC_Start+0x8a>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	685a      	ldr	r2, [r3, #4]
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	f042 0202 	orr.w	r2, r2, #2
 8003c5e:	605a      	str	r2, [r3, #4]
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	2201      	movs	r2, #1
 8003c64:	711a      	strb	r2, [r3, #4]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	2200      	movs	r2, #0
 8003c6a:	715a      	strb	r2, [r3, #5]
 8003c6c:	2300      	movs	r3, #0
 8003c6e:	4618      	mov	r0, r3
 8003c70:	370c      	adds	r7, #12
 8003c72:	46bd      	mov	sp, r7
 8003c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c78:	4770      	bx	lr

08003c7a <HAL_DAC_SetValue>:
 8003c7a:	b480      	push	{r7}
 8003c7c:	b087      	sub	sp, #28
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	60f8      	str	r0, [r7, #12]
 8003c82:	60b9      	str	r1, [r7, #8]
 8003c84:	607a      	str	r2, [r7, #4]
 8003c86:	603b      	str	r3, [r7, #0]
 8003c88:	2300      	movs	r3, #0
 8003c8a:	617b      	str	r3, [r7, #20]
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	617b      	str	r3, [r7, #20]
 8003c92:	68bb      	ldr	r3, [r7, #8]
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d105      	bne.n	8003ca4 <HAL_DAC_SetValue+0x2a>
 8003c98:	697a      	ldr	r2, [r7, #20]
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	4413      	add	r3, r2
 8003c9e:	3308      	adds	r3, #8
 8003ca0:	617b      	str	r3, [r7, #20]
 8003ca2:	e004      	b.n	8003cae <HAL_DAC_SetValue+0x34>
 8003ca4:	697a      	ldr	r2, [r7, #20]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	4413      	add	r3, r2
 8003caa:	3314      	adds	r3, #20
 8003cac:	617b      	str	r3, [r7, #20]
 8003cae:	697b      	ldr	r3, [r7, #20]
 8003cb0:	461a      	mov	r2, r3
 8003cb2:	683b      	ldr	r3, [r7, #0]
 8003cb4:	6013      	str	r3, [r2, #0]
 8003cb6:	2300      	movs	r3, #0
 8003cb8:	4618      	mov	r0, r3
 8003cba:	371c      	adds	r7, #28
 8003cbc:	46bd      	mov	sp, r7
 8003cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cc2:	4770      	bx	lr

08003cc4 <HAL_DAC_ConfigChannel>:
 8003cc4:	b480      	push	{r7}
 8003cc6:	b087      	sub	sp, #28
 8003cc8:	af00      	add	r7, sp, #0
 8003cca:	60f8      	str	r0, [r7, #12]
 8003ccc:	60b9      	str	r1, [r7, #8]
 8003cce:	607a      	str	r2, [r7, #4]
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	795b      	ldrb	r3, [r3, #5]
 8003cd4:	2b01      	cmp	r3, #1
 8003cd6:	d101      	bne.n	8003cdc <HAL_DAC_ConfigChannel+0x18>
 8003cd8:	2302      	movs	r3, #2
 8003cda:	e03c      	b.n	8003d56 <HAL_DAC_ConfigChannel+0x92>
 8003cdc:	68fb      	ldr	r3, [r7, #12]
 8003cde:	2201      	movs	r2, #1
 8003ce0:	715a      	strb	r2, [r3, #5]
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	2202      	movs	r2, #2
 8003ce6:	711a      	strb	r2, [r3, #4]
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	617b      	str	r3, [r7, #20]
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	f003 0310 	and.w	r3, r3, #16
 8003cf6:	f640 72fe 	movw	r2, #4094	; 0xffe
 8003cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8003cfe:	43db      	mvns	r3, r3
 8003d00:	697a      	ldr	r2, [r7, #20]
 8003d02:	4013      	ands	r3, r2
 8003d04:	617b      	str	r3, [r7, #20]
 8003d06:	68bb      	ldr	r3, [r7, #8]
 8003d08:	681a      	ldr	r2, [r3, #0]
 8003d0a:	68bb      	ldr	r3, [r7, #8]
 8003d0c:	685b      	ldr	r3, [r3, #4]
 8003d0e:	4313      	orrs	r3, r2
 8003d10:	613b      	str	r3, [r7, #16]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	f003 0310 	and.w	r3, r3, #16
 8003d18:	693a      	ldr	r2, [r7, #16]
 8003d1a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d1e:	697a      	ldr	r2, [r7, #20]
 8003d20:	4313      	orrs	r3, r2
 8003d22:	617b      	str	r3, [r7, #20]
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	697a      	ldr	r2, [r7, #20]
 8003d2a:	601a      	str	r2, [r3, #0]
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	6819      	ldr	r1, [r3, #0]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	f003 0310 	and.w	r3, r3, #16
 8003d38:	22c0      	movs	r2, #192	; 0xc0
 8003d3a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d3e:	43da      	mvns	r2, r3
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	400a      	ands	r2, r1
 8003d46:	601a      	str	r2, [r3, #0]
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	2201      	movs	r2, #1
 8003d4c:	711a      	strb	r2, [r3, #4]
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	2200      	movs	r2, #0
 8003d52:	715a      	strb	r2, [r3, #5]
 8003d54:	2300      	movs	r3, #0
 8003d56:	4618      	mov	r0, r3
 8003d58:	371c      	adds	r7, #28
 8003d5a:	46bd      	mov	sp, r7
 8003d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d60:	4770      	bx	lr

08003d62 <HAL_DMA_Abort>:
 8003d62:	b580      	push	{r7, lr}
 8003d64:	b084      	sub	sp, #16
 8003d66:	af00      	add	r7, sp, #0
 8003d68:	6078      	str	r0, [r7, #4]
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003d6e:	60fb      	str	r3, [r7, #12]
 8003d70:	f7ff f8e8 	bl	8002f44 <HAL_GetTick>
 8003d74:	60b8      	str	r0, [r7, #8]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003d7c:	b2db      	uxtb	r3, r3
 8003d7e:	2b02      	cmp	r3, #2
 8003d80:	d008      	beq.n	8003d94 <HAL_DMA_Abort+0x32>
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2280      	movs	r2, #128	; 0x80
 8003d86:	655a      	str	r2, [r3, #84]	; 0x54
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d90:	2301      	movs	r3, #1
 8003d92:	e052      	b.n	8003e3a <HAL_DMA_Abort+0xd8>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	681a      	ldr	r2, [r3, #0]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	f022 0216 	bic.w	r2, r2, #22
 8003da2:	601a      	str	r2, [r3, #0]
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	695a      	ldr	r2, [r3, #20]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003db2:	615a      	str	r2, [r3, #20]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d103      	bne.n	8003dc4 <HAL_DMA_Abort+0x62>
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d007      	beq.n	8003dd4 <HAL_DMA_Abort+0x72>
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	681a      	ldr	r2, [r3, #0]
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	f022 0208 	bic.w	r2, r2, #8
 8003dd2:	601a      	str	r2, [r3, #0]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	681a      	ldr	r2, [r3, #0]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	f022 0201 	bic.w	r2, r2, #1
 8003de2:	601a      	str	r2, [r3, #0]
 8003de4:	e013      	b.n	8003e0e <HAL_DMA_Abort+0xac>
 8003de6:	f7ff f8ad 	bl	8002f44 <HAL_GetTick>
 8003dea:	4602      	mov	r2, r0
 8003dec:	68bb      	ldr	r3, [r7, #8]
 8003dee:	1ad3      	subs	r3, r2, r3
 8003df0:	2b05      	cmp	r3, #5
 8003df2:	d90c      	bls.n	8003e0e <HAL_DMA_Abort+0xac>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	2220      	movs	r2, #32
 8003df8:	655a      	str	r2, [r3, #84]	; 0x54
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	2203      	movs	r2, #3
 8003dfe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	2200      	movs	r2, #0
 8003e06:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003e0a:	2303      	movs	r3, #3
 8003e0c:	e015      	b.n	8003e3a <HAL_DMA_Abort+0xd8>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	f003 0301 	and.w	r3, r3, #1
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d1e4      	bne.n	8003de6 <HAL_DMA_Abort+0x84>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003e20:	223f      	movs	r2, #63	; 0x3f
 8003e22:	409a      	lsls	r2, r3
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	609a      	str	r2, [r3, #8]
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	2201      	movs	r2, #1
 8003e2c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	2200      	movs	r2, #0
 8003e34:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003e38:	2300      	movs	r3, #0
 8003e3a:	4618      	mov	r0, r3
 8003e3c:	3710      	adds	r7, #16
 8003e3e:	46bd      	mov	sp, r7
 8003e40:	bd80      	pop	{r7, pc}

08003e42 <HAL_DMA_Abort_IT>:
 8003e42:	b480      	push	{r7}
 8003e44:	b083      	sub	sp, #12
 8003e46:	af00      	add	r7, sp, #0
 8003e48:	6078      	str	r0, [r7, #4]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003e50:	b2db      	uxtb	r3, r3
 8003e52:	2b02      	cmp	r3, #2
 8003e54:	d004      	beq.n	8003e60 <HAL_DMA_Abort_IT+0x1e>
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	2280      	movs	r2, #128	; 0x80
 8003e5a:	655a      	str	r2, [r3, #84]	; 0x54
 8003e5c:	2301      	movs	r3, #1
 8003e5e:	e00c      	b.n	8003e7a <HAL_DMA_Abort_IT+0x38>
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	2205      	movs	r2, #5
 8003e64:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	681a      	ldr	r2, [r3, #0]
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f022 0201 	bic.w	r2, r2, #1
 8003e76:	601a      	str	r2, [r3, #0]
 8003e78:	2300      	movs	r3, #0
 8003e7a:	4618      	mov	r0, r3
 8003e7c:	370c      	adds	r7, #12
 8003e7e:	46bd      	mov	sp, r7
 8003e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e84:	4770      	bx	lr
	...

08003e88 <HAL_GPIO_Init>:
 8003e88:	b480      	push	{r7}
 8003e8a:	b089      	sub	sp, #36	; 0x24
 8003e8c:	af00      	add	r7, sp, #0
 8003e8e:	6078      	str	r0, [r7, #4]
 8003e90:	6039      	str	r1, [r7, #0]
 8003e92:	2300      	movs	r3, #0
 8003e94:	61fb      	str	r3, [r7, #28]
 8003e96:	2300      	movs	r3, #0
 8003e98:	617b      	str	r3, [r7, #20]
 8003e9a:	2300      	movs	r3, #0
 8003e9c:	613b      	str	r3, [r7, #16]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	61bb      	str	r3, [r7, #24]
 8003ea2:	2300      	movs	r3, #0
 8003ea4:	61fb      	str	r3, [r7, #28]
 8003ea6:	e175      	b.n	8004194 <HAL_GPIO_Init+0x30c>
 8003ea8:	2201      	movs	r2, #1
 8003eaa:	69fb      	ldr	r3, [r7, #28]
 8003eac:	fa02 f303 	lsl.w	r3, r2, r3
 8003eb0:	617b      	str	r3, [r7, #20]
 8003eb2:	683b      	ldr	r3, [r7, #0]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	697a      	ldr	r2, [r7, #20]
 8003eb8:	4013      	ands	r3, r2
 8003eba:	613b      	str	r3, [r7, #16]
 8003ebc:	693a      	ldr	r2, [r7, #16]
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	429a      	cmp	r2, r3
 8003ec2:	f040 8164 	bne.w	800418e <HAL_GPIO_Init+0x306>
 8003ec6:	683b      	ldr	r3, [r7, #0]
 8003ec8:	685b      	ldr	r3, [r3, #4]
 8003eca:	f003 0303 	and.w	r3, r3, #3
 8003ece:	2b01      	cmp	r3, #1
 8003ed0:	d005      	beq.n	8003ede <HAL_GPIO_Init+0x56>
 8003ed2:	683b      	ldr	r3, [r7, #0]
 8003ed4:	685b      	ldr	r3, [r3, #4]
 8003ed6:	f003 0303 	and.w	r3, r3, #3
 8003eda:	2b02      	cmp	r3, #2
 8003edc:	d130      	bne.n	8003f40 <HAL_GPIO_Init+0xb8>
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	689b      	ldr	r3, [r3, #8]
 8003ee2:	61bb      	str	r3, [r7, #24]
 8003ee4:	69fb      	ldr	r3, [r7, #28]
 8003ee6:	005b      	lsls	r3, r3, #1
 8003ee8:	2203      	movs	r2, #3
 8003eea:	fa02 f303 	lsl.w	r3, r2, r3
 8003eee:	43db      	mvns	r3, r3
 8003ef0:	69ba      	ldr	r2, [r7, #24]
 8003ef2:	4013      	ands	r3, r2
 8003ef4:	61bb      	str	r3, [r7, #24]
 8003ef6:	683b      	ldr	r3, [r7, #0]
 8003ef8:	68da      	ldr	r2, [r3, #12]
 8003efa:	69fb      	ldr	r3, [r7, #28]
 8003efc:	005b      	lsls	r3, r3, #1
 8003efe:	fa02 f303 	lsl.w	r3, r2, r3
 8003f02:	69ba      	ldr	r2, [r7, #24]
 8003f04:	4313      	orrs	r3, r2
 8003f06:	61bb      	str	r3, [r7, #24]
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	69ba      	ldr	r2, [r7, #24]
 8003f0c:	609a      	str	r2, [r3, #8]
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	685b      	ldr	r3, [r3, #4]
 8003f12:	61bb      	str	r3, [r7, #24]
 8003f14:	2201      	movs	r2, #1
 8003f16:	69fb      	ldr	r3, [r7, #28]
 8003f18:	fa02 f303 	lsl.w	r3, r2, r3
 8003f1c:	43db      	mvns	r3, r3
 8003f1e:	69ba      	ldr	r2, [r7, #24]
 8003f20:	4013      	ands	r3, r2
 8003f22:	61bb      	str	r3, [r7, #24]
 8003f24:	683b      	ldr	r3, [r7, #0]
 8003f26:	685b      	ldr	r3, [r3, #4]
 8003f28:	091b      	lsrs	r3, r3, #4
 8003f2a:	f003 0201 	and.w	r2, r3, #1
 8003f2e:	69fb      	ldr	r3, [r7, #28]
 8003f30:	fa02 f303 	lsl.w	r3, r2, r3
 8003f34:	69ba      	ldr	r2, [r7, #24]
 8003f36:	4313      	orrs	r3, r2
 8003f38:	61bb      	str	r3, [r7, #24]
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	69ba      	ldr	r2, [r7, #24]
 8003f3e:	605a      	str	r2, [r3, #4]
 8003f40:	683b      	ldr	r3, [r7, #0]
 8003f42:	685b      	ldr	r3, [r3, #4]
 8003f44:	f003 0303 	and.w	r3, r3, #3
 8003f48:	2b03      	cmp	r3, #3
 8003f4a:	d017      	beq.n	8003f7c <HAL_GPIO_Init+0xf4>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	68db      	ldr	r3, [r3, #12]
 8003f50:	61bb      	str	r3, [r7, #24]
 8003f52:	69fb      	ldr	r3, [r7, #28]
 8003f54:	005b      	lsls	r3, r3, #1
 8003f56:	2203      	movs	r2, #3
 8003f58:	fa02 f303 	lsl.w	r3, r2, r3
 8003f5c:	43db      	mvns	r3, r3
 8003f5e:	69ba      	ldr	r2, [r7, #24]
 8003f60:	4013      	ands	r3, r2
 8003f62:	61bb      	str	r3, [r7, #24]
 8003f64:	683b      	ldr	r3, [r7, #0]
 8003f66:	689a      	ldr	r2, [r3, #8]
 8003f68:	69fb      	ldr	r3, [r7, #28]
 8003f6a:	005b      	lsls	r3, r3, #1
 8003f6c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f70:	69ba      	ldr	r2, [r7, #24]
 8003f72:	4313      	orrs	r3, r2
 8003f74:	61bb      	str	r3, [r7, #24]
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	69ba      	ldr	r2, [r7, #24]
 8003f7a:	60da      	str	r2, [r3, #12]
 8003f7c:	683b      	ldr	r3, [r7, #0]
 8003f7e:	685b      	ldr	r3, [r3, #4]
 8003f80:	f003 0303 	and.w	r3, r3, #3
 8003f84:	2b02      	cmp	r3, #2
 8003f86:	d123      	bne.n	8003fd0 <HAL_GPIO_Init+0x148>
 8003f88:	69fb      	ldr	r3, [r7, #28]
 8003f8a:	08da      	lsrs	r2, r3, #3
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	3208      	adds	r2, #8
 8003f90:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003f94:	61bb      	str	r3, [r7, #24]
 8003f96:	69fb      	ldr	r3, [r7, #28]
 8003f98:	f003 0307 	and.w	r3, r3, #7
 8003f9c:	009b      	lsls	r3, r3, #2
 8003f9e:	220f      	movs	r2, #15
 8003fa0:	fa02 f303 	lsl.w	r3, r2, r3
 8003fa4:	43db      	mvns	r3, r3
 8003fa6:	69ba      	ldr	r2, [r7, #24]
 8003fa8:	4013      	ands	r3, r2
 8003faa:	61bb      	str	r3, [r7, #24]
 8003fac:	683b      	ldr	r3, [r7, #0]
 8003fae:	691a      	ldr	r2, [r3, #16]
 8003fb0:	69fb      	ldr	r3, [r7, #28]
 8003fb2:	f003 0307 	and.w	r3, r3, #7
 8003fb6:	009b      	lsls	r3, r3, #2
 8003fb8:	fa02 f303 	lsl.w	r3, r2, r3
 8003fbc:	69ba      	ldr	r2, [r7, #24]
 8003fbe:	4313      	orrs	r3, r2
 8003fc0:	61bb      	str	r3, [r7, #24]
 8003fc2:	69fb      	ldr	r3, [r7, #28]
 8003fc4:	08da      	lsrs	r2, r3, #3
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	3208      	adds	r2, #8
 8003fca:	69b9      	ldr	r1, [r7, #24]
 8003fcc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	61bb      	str	r3, [r7, #24]
 8003fd6:	69fb      	ldr	r3, [r7, #28]
 8003fd8:	005b      	lsls	r3, r3, #1
 8003fda:	2203      	movs	r2, #3
 8003fdc:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe0:	43db      	mvns	r3, r3
 8003fe2:	69ba      	ldr	r2, [r7, #24]
 8003fe4:	4013      	ands	r3, r2
 8003fe6:	61bb      	str	r3, [r7, #24]
 8003fe8:	683b      	ldr	r3, [r7, #0]
 8003fea:	685b      	ldr	r3, [r3, #4]
 8003fec:	f003 0203 	and.w	r2, r3, #3
 8003ff0:	69fb      	ldr	r3, [r7, #28]
 8003ff2:	005b      	lsls	r3, r3, #1
 8003ff4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ff8:	69ba      	ldr	r2, [r7, #24]
 8003ffa:	4313      	orrs	r3, r2
 8003ffc:	61bb      	str	r3, [r7, #24]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	69ba      	ldr	r2, [r7, #24]
 8004002:	601a      	str	r2, [r3, #0]
 8004004:	683b      	ldr	r3, [r7, #0]
 8004006:	685b      	ldr	r3, [r3, #4]
 8004008:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800400c:	2b00      	cmp	r3, #0
 800400e:	f000 80be 	beq.w	800418e <HAL_GPIO_Init+0x306>
 8004012:	4b66      	ldr	r3, [pc, #408]	; (80041ac <HAL_GPIO_Init+0x324>)
 8004014:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004016:	4a65      	ldr	r2, [pc, #404]	; (80041ac <HAL_GPIO_Init+0x324>)
 8004018:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800401c:	6453      	str	r3, [r2, #68]	; 0x44
 800401e:	4b63      	ldr	r3, [pc, #396]	; (80041ac <HAL_GPIO_Init+0x324>)
 8004020:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004022:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004026:	60fb      	str	r3, [r7, #12]
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	4a61      	ldr	r2, [pc, #388]	; (80041b0 <HAL_GPIO_Init+0x328>)
 800402c:	69fb      	ldr	r3, [r7, #28]
 800402e:	089b      	lsrs	r3, r3, #2
 8004030:	3302      	adds	r3, #2
 8004032:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004036:	61bb      	str	r3, [r7, #24]
 8004038:	69fb      	ldr	r3, [r7, #28]
 800403a:	f003 0303 	and.w	r3, r3, #3
 800403e:	009b      	lsls	r3, r3, #2
 8004040:	220f      	movs	r2, #15
 8004042:	fa02 f303 	lsl.w	r3, r2, r3
 8004046:	43db      	mvns	r3, r3
 8004048:	69ba      	ldr	r2, [r7, #24]
 800404a:	4013      	ands	r3, r2
 800404c:	61bb      	str	r3, [r7, #24]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	4a58      	ldr	r2, [pc, #352]	; (80041b4 <HAL_GPIO_Init+0x32c>)
 8004052:	4293      	cmp	r3, r2
 8004054:	d037      	beq.n	80040c6 <HAL_GPIO_Init+0x23e>
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	4a57      	ldr	r2, [pc, #348]	; (80041b8 <HAL_GPIO_Init+0x330>)
 800405a:	4293      	cmp	r3, r2
 800405c:	d031      	beq.n	80040c2 <HAL_GPIO_Init+0x23a>
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	4a56      	ldr	r2, [pc, #344]	; (80041bc <HAL_GPIO_Init+0x334>)
 8004062:	4293      	cmp	r3, r2
 8004064:	d02b      	beq.n	80040be <HAL_GPIO_Init+0x236>
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	4a55      	ldr	r2, [pc, #340]	; (80041c0 <HAL_GPIO_Init+0x338>)
 800406a:	4293      	cmp	r3, r2
 800406c:	d025      	beq.n	80040ba <HAL_GPIO_Init+0x232>
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	4a54      	ldr	r2, [pc, #336]	; (80041c4 <HAL_GPIO_Init+0x33c>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d01f      	beq.n	80040b6 <HAL_GPIO_Init+0x22e>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	4a53      	ldr	r2, [pc, #332]	; (80041c8 <HAL_GPIO_Init+0x340>)
 800407a:	4293      	cmp	r3, r2
 800407c:	d019      	beq.n	80040b2 <HAL_GPIO_Init+0x22a>
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	4a52      	ldr	r2, [pc, #328]	; (80041cc <HAL_GPIO_Init+0x344>)
 8004082:	4293      	cmp	r3, r2
 8004084:	d013      	beq.n	80040ae <HAL_GPIO_Init+0x226>
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	4a51      	ldr	r2, [pc, #324]	; (80041d0 <HAL_GPIO_Init+0x348>)
 800408a:	4293      	cmp	r3, r2
 800408c:	d00d      	beq.n	80040aa <HAL_GPIO_Init+0x222>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	4a50      	ldr	r2, [pc, #320]	; (80041d4 <HAL_GPIO_Init+0x34c>)
 8004092:	4293      	cmp	r3, r2
 8004094:	d007      	beq.n	80040a6 <HAL_GPIO_Init+0x21e>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	4a4f      	ldr	r2, [pc, #316]	; (80041d8 <HAL_GPIO_Init+0x350>)
 800409a:	4293      	cmp	r3, r2
 800409c:	d101      	bne.n	80040a2 <HAL_GPIO_Init+0x21a>
 800409e:	2309      	movs	r3, #9
 80040a0:	e012      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040a2:	230a      	movs	r3, #10
 80040a4:	e010      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040a6:	2308      	movs	r3, #8
 80040a8:	e00e      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040aa:	2307      	movs	r3, #7
 80040ac:	e00c      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040ae:	2306      	movs	r3, #6
 80040b0:	e00a      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040b2:	2305      	movs	r3, #5
 80040b4:	e008      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040b6:	2304      	movs	r3, #4
 80040b8:	e006      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040ba:	2303      	movs	r3, #3
 80040bc:	e004      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040be:	2302      	movs	r3, #2
 80040c0:	e002      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040c2:	2301      	movs	r3, #1
 80040c4:	e000      	b.n	80040c8 <HAL_GPIO_Init+0x240>
 80040c6:	2300      	movs	r3, #0
 80040c8:	69fa      	ldr	r2, [r7, #28]
 80040ca:	f002 0203 	and.w	r2, r2, #3
 80040ce:	0092      	lsls	r2, r2, #2
 80040d0:	4093      	lsls	r3, r2
 80040d2:	69ba      	ldr	r2, [r7, #24]
 80040d4:	4313      	orrs	r3, r2
 80040d6:	61bb      	str	r3, [r7, #24]
 80040d8:	4935      	ldr	r1, [pc, #212]	; (80041b0 <HAL_GPIO_Init+0x328>)
 80040da:	69fb      	ldr	r3, [r7, #28]
 80040dc:	089b      	lsrs	r3, r3, #2
 80040de:	3302      	adds	r3, #2
 80040e0:	69ba      	ldr	r2, [r7, #24]
 80040e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80040e6:	4b3d      	ldr	r3, [pc, #244]	; (80041dc <HAL_GPIO_Init+0x354>)
 80040e8:	689b      	ldr	r3, [r3, #8]
 80040ea:	61bb      	str	r3, [r7, #24]
 80040ec:	693b      	ldr	r3, [r7, #16]
 80040ee:	43db      	mvns	r3, r3
 80040f0:	69ba      	ldr	r2, [r7, #24]
 80040f2:	4013      	ands	r3, r2
 80040f4:	61bb      	str	r3, [r7, #24]
 80040f6:	683b      	ldr	r3, [r7, #0]
 80040f8:	685b      	ldr	r3, [r3, #4]
 80040fa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d003      	beq.n	800410a <HAL_GPIO_Init+0x282>
 8004102:	69ba      	ldr	r2, [r7, #24]
 8004104:	693b      	ldr	r3, [r7, #16]
 8004106:	4313      	orrs	r3, r2
 8004108:	61bb      	str	r3, [r7, #24]
 800410a:	4a34      	ldr	r2, [pc, #208]	; (80041dc <HAL_GPIO_Init+0x354>)
 800410c:	69bb      	ldr	r3, [r7, #24]
 800410e:	6093      	str	r3, [r2, #8]
 8004110:	4b32      	ldr	r3, [pc, #200]	; (80041dc <HAL_GPIO_Init+0x354>)
 8004112:	68db      	ldr	r3, [r3, #12]
 8004114:	61bb      	str	r3, [r7, #24]
 8004116:	693b      	ldr	r3, [r7, #16]
 8004118:	43db      	mvns	r3, r3
 800411a:	69ba      	ldr	r2, [r7, #24]
 800411c:	4013      	ands	r3, r2
 800411e:	61bb      	str	r3, [r7, #24]
 8004120:	683b      	ldr	r3, [r7, #0]
 8004122:	685b      	ldr	r3, [r3, #4]
 8004124:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004128:	2b00      	cmp	r3, #0
 800412a:	d003      	beq.n	8004134 <HAL_GPIO_Init+0x2ac>
 800412c:	69ba      	ldr	r2, [r7, #24]
 800412e:	693b      	ldr	r3, [r7, #16]
 8004130:	4313      	orrs	r3, r2
 8004132:	61bb      	str	r3, [r7, #24]
 8004134:	4a29      	ldr	r2, [pc, #164]	; (80041dc <HAL_GPIO_Init+0x354>)
 8004136:	69bb      	ldr	r3, [r7, #24]
 8004138:	60d3      	str	r3, [r2, #12]
 800413a:	4b28      	ldr	r3, [pc, #160]	; (80041dc <HAL_GPIO_Init+0x354>)
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	61bb      	str	r3, [r7, #24]
 8004140:	693b      	ldr	r3, [r7, #16]
 8004142:	43db      	mvns	r3, r3
 8004144:	69ba      	ldr	r2, [r7, #24]
 8004146:	4013      	ands	r3, r2
 8004148:	61bb      	str	r3, [r7, #24]
 800414a:	683b      	ldr	r3, [r7, #0]
 800414c:	685b      	ldr	r3, [r3, #4]
 800414e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004152:	2b00      	cmp	r3, #0
 8004154:	d003      	beq.n	800415e <HAL_GPIO_Init+0x2d6>
 8004156:	69ba      	ldr	r2, [r7, #24]
 8004158:	693b      	ldr	r3, [r7, #16]
 800415a:	4313      	orrs	r3, r2
 800415c:	61bb      	str	r3, [r7, #24]
 800415e:	4a1f      	ldr	r2, [pc, #124]	; (80041dc <HAL_GPIO_Init+0x354>)
 8004160:	69bb      	ldr	r3, [r7, #24]
 8004162:	6053      	str	r3, [r2, #4]
 8004164:	4b1d      	ldr	r3, [pc, #116]	; (80041dc <HAL_GPIO_Init+0x354>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	61bb      	str	r3, [r7, #24]
 800416a:	693b      	ldr	r3, [r7, #16]
 800416c:	43db      	mvns	r3, r3
 800416e:	69ba      	ldr	r2, [r7, #24]
 8004170:	4013      	ands	r3, r2
 8004172:	61bb      	str	r3, [r7, #24]
 8004174:	683b      	ldr	r3, [r7, #0]
 8004176:	685b      	ldr	r3, [r3, #4]
 8004178:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800417c:	2b00      	cmp	r3, #0
 800417e:	d003      	beq.n	8004188 <HAL_GPIO_Init+0x300>
 8004180:	69ba      	ldr	r2, [r7, #24]
 8004182:	693b      	ldr	r3, [r7, #16]
 8004184:	4313      	orrs	r3, r2
 8004186:	61bb      	str	r3, [r7, #24]
 8004188:	4a14      	ldr	r2, [pc, #80]	; (80041dc <HAL_GPIO_Init+0x354>)
 800418a:	69bb      	ldr	r3, [r7, #24]
 800418c:	6013      	str	r3, [r2, #0]
 800418e:	69fb      	ldr	r3, [r7, #28]
 8004190:	3301      	adds	r3, #1
 8004192:	61fb      	str	r3, [r7, #28]
 8004194:	69fb      	ldr	r3, [r7, #28]
 8004196:	2b0f      	cmp	r3, #15
 8004198:	f67f ae86 	bls.w	8003ea8 <HAL_GPIO_Init+0x20>
 800419c:	bf00      	nop
 800419e:	bf00      	nop
 80041a0:	3724      	adds	r7, #36	; 0x24
 80041a2:	46bd      	mov	sp, r7
 80041a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a8:	4770      	bx	lr
 80041aa:	bf00      	nop
 80041ac:	40023800 	.word	0x40023800
 80041b0:	40013800 	.word	0x40013800
 80041b4:	40020000 	.word	0x40020000
 80041b8:	40020400 	.word	0x40020400
 80041bc:	40020800 	.word	0x40020800
 80041c0:	40020c00 	.word	0x40020c00
 80041c4:	40021000 	.word	0x40021000
 80041c8:	40021400 	.word	0x40021400
 80041cc:	40021800 	.word	0x40021800
 80041d0:	40021c00 	.word	0x40021c00
 80041d4:	40022000 	.word	0x40022000
 80041d8:	40022400 	.word	0x40022400
 80041dc:	40013c00 	.word	0x40013c00

080041e0 <HAL_GPIO_ReadPin>:
 80041e0:	b480      	push	{r7}
 80041e2:	b085      	sub	sp, #20
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	6078      	str	r0, [r7, #4]
 80041e8:	460b      	mov	r3, r1
 80041ea:	807b      	strh	r3, [r7, #2]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	691a      	ldr	r2, [r3, #16]
 80041f0:	887b      	ldrh	r3, [r7, #2]
 80041f2:	4013      	ands	r3, r2
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d002      	beq.n	80041fe <HAL_GPIO_ReadPin+0x1e>
 80041f8:	2301      	movs	r3, #1
 80041fa:	73fb      	strb	r3, [r7, #15]
 80041fc:	e001      	b.n	8004202 <HAL_GPIO_ReadPin+0x22>
 80041fe:	2300      	movs	r3, #0
 8004200:	73fb      	strb	r3, [r7, #15]
 8004202:	7bfb      	ldrb	r3, [r7, #15]
 8004204:	4618      	mov	r0, r3
 8004206:	3714      	adds	r7, #20
 8004208:	46bd      	mov	sp, r7
 800420a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800420e:	4770      	bx	lr

08004210 <HAL_GPIO_WritePin>:
 8004210:	b480      	push	{r7}
 8004212:	b083      	sub	sp, #12
 8004214:	af00      	add	r7, sp, #0
 8004216:	6078      	str	r0, [r7, #4]
 8004218:	460b      	mov	r3, r1
 800421a:	807b      	strh	r3, [r7, #2]
 800421c:	4613      	mov	r3, r2
 800421e:	707b      	strb	r3, [r7, #1]
 8004220:	787b      	ldrb	r3, [r7, #1]
 8004222:	2b00      	cmp	r3, #0
 8004224:	d003      	beq.n	800422e <HAL_GPIO_WritePin+0x1e>
 8004226:	887a      	ldrh	r2, [r7, #2]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	619a      	str	r2, [r3, #24]
 800422c:	e003      	b.n	8004236 <HAL_GPIO_WritePin+0x26>
 800422e:	887b      	ldrh	r3, [r7, #2]
 8004230:	041a      	lsls	r2, r3, #16
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	619a      	str	r2, [r3, #24]
 8004236:	bf00      	nop
 8004238:	370c      	adds	r7, #12
 800423a:	46bd      	mov	sp, r7
 800423c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004240:	4770      	bx	lr

08004242 <HAL_GPIO_TogglePin>:
 8004242:	b480      	push	{r7}
 8004244:	b085      	sub	sp, #20
 8004246:	af00      	add	r7, sp, #0
 8004248:	6078      	str	r0, [r7, #4]
 800424a:	460b      	mov	r3, r1
 800424c:	807b      	strh	r3, [r7, #2]
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	695b      	ldr	r3, [r3, #20]
 8004252:	60fb      	str	r3, [r7, #12]
 8004254:	887a      	ldrh	r2, [r7, #2]
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	4013      	ands	r3, r2
 800425a:	041a      	lsls	r2, r3, #16
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	43d9      	mvns	r1, r3
 8004260:	887b      	ldrh	r3, [r7, #2]
 8004262:	400b      	ands	r3, r1
 8004264:	431a      	orrs	r2, r3
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	619a      	str	r2, [r3, #24]
 800426a:	bf00      	nop
 800426c:	3714      	adds	r7, #20
 800426e:	46bd      	mov	sp, r7
 8004270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004274:	4770      	bx	lr
	...

08004278 <HAL_PWREx_EnableOverDrive>:
 8004278:	b580      	push	{r7, lr}
 800427a:	b082      	sub	sp, #8
 800427c:	af00      	add	r7, sp, #0
 800427e:	2300      	movs	r3, #0
 8004280:	607b      	str	r3, [r7, #4]
 8004282:	4b23      	ldr	r3, [pc, #140]	; (8004310 <HAL_PWREx_EnableOverDrive+0x98>)
 8004284:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004286:	4a22      	ldr	r2, [pc, #136]	; (8004310 <HAL_PWREx_EnableOverDrive+0x98>)
 8004288:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800428c:	6413      	str	r3, [r2, #64]	; 0x40
 800428e:	4b20      	ldr	r3, [pc, #128]	; (8004310 <HAL_PWREx_EnableOverDrive+0x98>)
 8004290:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004292:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004296:	603b      	str	r3, [r7, #0]
 8004298:	683b      	ldr	r3, [r7, #0]
 800429a:	4b1e      	ldr	r3, [pc, #120]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 800429c:	681b      	ldr	r3, [r3, #0]
 800429e:	4a1d      	ldr	r2, [pc, #116]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042a0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80042a4:	6013      	str	r3, [r2, #0]
 80042a6:	f7fe fe4d 	bl	8002f44 <HAL_GetTick>
 80042aa:	6078      	str	r0, [r7, #4]
 80042ac:	e009      	b.n	80042c2 <HAL_PWREx_EnableOverDrive+0x4a>
 80042ae:	f7fe fe49 	bl	8002f44 <HAL_GetTick>
 80042b2:	4602      	mov	r2, r0
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	1ad3      	subs	r3, r2, r3
 80042b8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80042bc:	d901      	bls.n	80042c2 <HAL_PWREx_EnableOverDrive+0x4a>
 80042be:	2303      	movs	r3, #3
 80042c0:	e022      	b.n	8004308 <HAL_PWREx_EnableOverDrive+0x90>
 80042c2:	4b14      	ldr	r3, [pc, #80]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042c4:	685b      	ldr	r3, [r3, #4]
 80042c6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80042ca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80042ce:	d1ee      	bne.n	80042ae <HAL_PWREx_EnableOverDrive+0x36>
 80042d0:	4b10      	ldr	r3, [pc, #64]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	4a0f      	ldr	r2, [pc, #60]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042d6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80042da:	6013      	str	r3, [r2, #0]
 80042dc:	f7fe fe32 	bl	8002f44 <HAL_GetTick>
 80042e0:	6078      	str	r0, [r7, #4]
 80042e2:	e009      	b.n	80042f8 <HAL_PWREx_EnableOverDrive+0x80>
 80042e4:	f7fe fe2e 	bl	8002f44 <HAL_GetTick>
 80042e8:	4602      	mov	r2, r0
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	1ad3      	subs	r3, r2, r3
 80042ee:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80042f2:	d901      	bls.n	80042f8 <HAL_PWREx_EnableOverDrive+0x80>
 80042f4:	2303      	movs	r3, #3
 80042f6:	e007      	b.n	8004308 <HAL_PWREx_EnableOverDrive+0x90>
 80042f8:	4b06      	ldr	r3, [pc, #24]	; (8004314 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042fa:	685b      	ldr	r3, [r3, #4]
 80042fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004300:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004304:	d1ee      	bne.n	80042e4 <HAL_PWREx_EnableOverDrive+0x6c>
 8004306:	2300      	movs	r3, #0
 8004308:	4618      	mov	r0, r3
 800430a:	3708      	adds	r7, #8
 800430c:	46bd      	mov	sp, r7
 800430e:	bd80      	pop	{r7, pc}
 8004310:	40023800 	.word	0x40023800
 8004314:	40007000 	.word	0x40007000

08004318 <HAL_RCC_OscConfig>:
 8004318:	b580      	push	{r7, lr}
 800431a:	b086      	sub	sp, #24
 800431c:	af00      	add	r7, sp, #0
 800431e:	6078      	str	r0, [r7, #4]
 8004320:	2300      	movs	r3, #0
 8004322:	75fb      	strb	r3, [r7, #23]
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	2b00      	cmp	r3, #0
 8004328:	d101      	bne.n	800432e <HAL_RCC_OscConfig+0x16>
 800432a:	2301      	movs	r3, #1
 800432c:	e29b      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	f003 0301 	and.w	r3, r3, #1
 8004336:	2b00      	cmp	r3, #0
 8004338:	f000 8087 	beq.w	800444a <HAL_RCC_OscConfig+0x132>
 800433c:	4b96      	ldr	r3, [pc, #600]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800433e:	689b      	ldr	r3, [r3, #8]
 8004340:	f003 030c 	and.w	r3, r3, #12
 8004344:	2b04      	cmp	r3, #4
 8004346:	d00c      	beq.n	8004362 <HAL_RCC_OscConfig+0x4a>
 8004348:	4b93      	ldr	r3, [pc, #588]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800434a:	689b      	ldr	r3, [r3, #8]
 800434c:	f003 030c 	and.w	r3, r3, #12
 8004350:	2b08      	cmp	r3, #8
 8004352:	d112      	bne.n	800437a <HAL_RCC_OscConfig+0x62>
 8004354:	4b90      	ldr	r3, [pc, #576]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004356:	685b      	ldr	r3, [r3, #4]
 8004358:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800435c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004360:	d10b      	bne.n	800437a <HAL_RCC_OscConfig+0x62>
 8004362:	4b8d      	ldr	r3, [pc, #564]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800436a:	2b00      	cmp	r3, #0
 800436c:	d06c      	beq.n	8004448 <HAL_RCC_OscConfig+0x130>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	685b      	ldr	r3, [r3, #4]
 8004372:	2b00      	cmp	r3, #0
 8004374:	d168      	bne.n	8004448 <HAL_RCC_OscConfig+0x130>
 8004376:	2301      	movs	r3, #1
 8004378:	e275      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	685b      	ldr	r3, [r3, #4]
 800437e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004382:	d106      	bne.n	8004392 <HAL_RCC_OscConfig+0x7a>
 8004384:	4b84      	ldr	r3, [pc, #528]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004386:	681b      	ldr	r3, [r3, #0]
 8004388:	4a83      	ldr	r2, [pc, #524]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800438a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800438e:	6013      	str	r3, [r2, #0]
 8004390:	e02e      	b.n	80043f0 <HAL_RCC_OscConfig+0xd8>
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	685b      	ldr	r3, [r3, #4]
 8004396:	2b00      	cmp	r3, #0
 8004398:	d10c      	bne.n	80043b4 <HAL_RCC_OscConfig+0x9c>
 800439a:	4b7f      	ldr	r3, [pc, #508]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4a7e      	ldr	r2, [pc, #504]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043a0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80043a4:	6013      	str	r3, [r2, #0]
 80043a6:	4b7c      	ldr	r3, [pc, #496]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043a8:	681b      	ldr	r3, [r3, #0]
 80043aa:	4a7b      	ldr	r2, [pc, #492]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043ac:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80043b0:	6013      	str	r3, [r2, #0]
 80043b2:	e01d      	b.n	80043f0 <HAL_RCC_OscConfig+0xd8>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	685b      	ldr	r3, [r3, #4]
 80043b8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80043bc:	d10c      	bne.n	80043d8 <HAL_RCC_OscConfig+0xc0>
 80043be:	4b76      	ldr	r3, [pc, #472]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	4a75      	ldr	r2, [pc, #468]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043c4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80043c8:	6013      	str	r3, [r2, #0]
 80043ca:	4b73      	ldr	r3, [pc, #460]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	4a72      	ldr	r2, [pc, #456]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043d0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80043d4:	6013      	str	r3, [r2, #0]
 80043d6:	e00b      	b.n	80043f0 <HAL_RCC_OscConfig+0xd8>
 80043d8:	4b6f      	ldr	r3, [pc, #444]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	4a6e      	ldr	r2, [pc, #440]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043de:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80043e2:	6013      	str	r3, [r2, #0]
 80043e4:	4b6c      	ldr	r3, [pc, #432]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	4a6b      	ldr	r2, [pc, #428]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80043ea:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80043ee:	6013      	str	r3, [r2, #0]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	685b      	ldr	r3, [r3, #4]
 80043f4:	2b00      	cmp	r3, #0
 80043f6:	d013      	beq.n	8004420 <HAL_RCC_OscConfig+0x108>
 80043f8:	f7fe fda4 	bl	8002f44 <HAL_GetTick>
 80043fc:	6138      	str	r0, [r7, #16]
 80043fe:	e008      	b.n	8004412 <HAL_RCC_OscConfig+0xfa>
 8004400:	f7fe fda0 	bl	8002f44 <HAL_GetTick>
 8004404:	4602      	mov	r2, r0
 8004406:	693b      	ldr	r3, [r7, #16]
 8004408:	1ad3      	subs	r3, r2, r3
 800440a:	2b64      	cmp	r3, #100	; 0x64
 800440c:	d901      	bls.n	8004412 <HAL_RCC_OscConfig+0xfa>
 800440e:	2303      	movs	r3, #3
 8004410:	e229      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004412:	4b61      	ldr	r3, [pc, #388]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800441a:	2b00      	cmp	r3, #0
 800441c:	d0f0      	beq.n	8004400 <HAL_RCC_OscConfig+0xe8>
 800441e:	e014      	b.n	800444a <HAL_RCC_OscConfig+0x132>
 8004420:	f7fe fd90 	bl	8002f44 <HAL_GetTick>
 8004424:	6138      	str	r0, [r7, #16]
 8004426:	e008      	b.n	800443a <HAL_RCC_OscConfig+0x122>
 8004428:	f7fe fd8c 	bl	8002f44 <HAL_GetTick>
 800442c:	4602      	mov	r2, r0
 800442e:	693b      	ldr	r3, [r7, #16]
 8004430:	1ad3      	subs	r3, r2, r3
 8004432:	2b64      	cmp	r3, #100	; 0x64
 8004434:	d901      	bls.n	800443a <HAL_RCC_OscConfig+0x122>
 8004436:	2303      	movs	r3, #3
 8004438:	e215      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 800443a:	4b57      	ldr	r3, [pc, #348]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004442:	2b00      	cmp	r3, #0
 8004444:	d1f0      	bne.n	8004428 <HAL_RCC_OscConfig+0x110>
 8004446:	e000      	b.n	800444a <HAL_RCC_OscConfig+0x132>
 8004448:	bf00      	nop
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	f003 0302 	and.w	r3, r3, #2
 8004452:	2b00      	cmp	r3, #0
 8004454:	d069      	beq.n	800452a <HAL_RCC_OscConfig+0x212>
 8004456:	4b50      	ldr	r3, [pc, #320]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004458:	689b      	ldr	r3, [r3, #8]
 800445a:	f003 030c 	and.w	r3, r3, #12
 800445e:	2b00      	cmp	r3, #0
 8004460:	d00b      	beq.n	800447a <HAL_RCC_OscConfig+0x162>
 8004462:	4b4d      	ldr	r3, [pc, #308]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004464:	689b      	ldr	r3, [r3, #8]
 8004466:	f003 030c 	and.w	r3, r3, #12
 800446a:	2b08      	cmp	r3, #8
 800446c:	d11c      	bne.n	80044a8 <HAL_RCC_OscConfig+0x190>
 800446e:	4b4a      	ldr	r3, [pc, #296]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004470:	685b      	ldr	r3, [r3, #4]
 8004472:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004476:	2b00      	cmp	r3, #0
 8004478:	d116      	bne.n	80044a8 <HAL_RCC_OscConfig+0x190>
 800447a:	4b47      	ldr	r3, [pc, #284]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	f003 0302 	and.w	r3, r3, #2
 8004482:	2b00      	cmp	r3, #0
 8004484:	d005      	beq.n	8004492 <HAL_RCC_OscConfig+0x17a>
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	68db      	ldr	r3, [r3, #12]
 800448a:	2b01      	cmp	r3, #1
 800448c:	d001      	beq.n	8004492 <HAL_RCC_OscConfig+0x17a>
 800448e:	2301      	movs	r3, #1
 8004490:	e1e9      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004492:	4b41      	ldr	r3, [pc, #260]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	691b      	ldr	r3, [r3, #16]
 800449e:	00db      	lsls	r3, r3, #3
 80044a0:	493d      	ldr	r1, [pc, #244]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044a2:	4313      	orrs	r3, r2
 80044a4:	600b      	str	r3, [r1, #0]
 80044a6:	e040      	b.n	800452a <HAL_RCC_OscConfig+0x212>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	68db      	ldr	r3, [r3, #12]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d023      	beq.n	80044f8 <HAL_RCC_OscConfig+0x1e0>
 80044b0:	4b39      	ldr	r3, [pc, #228]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a38      	ldr	r2, [pc, #224]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044b6:	f043 0301 	orr.w	r3, r3, #1
 80044ba:	6013      	str	r3, [r2, #0]
 80044bc:	f7fe fd42 	bl	8002f44 <HAL_GetTick>
 80044c0:	6138      	str	r0, [r7, #16]
 80044c2:	e008      	b.n	80044d6 <HAL_RCC_OscConfig+0x1be>
 80044c4:	f7fe fd3e 	bl	8002f44 <HAL_GetTick>
 80044c8:	4602      	mov	r2, r0
 80044ca:	693b      	ldr	r3, [r7, #16]
 80044cc:	1ad3      	subs	r3, r2, r3
 80044ce:	2b02      	cmp	r3, #2
 80044d0:	d901      	bls.n	80044d6 <HAL_RCC_OscConfig+0x1be>
 80044d2:	2303      	movs	r3, #3
 80044d4:	e1c7      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 80044d6:	4b30      	ldr	r3, [pc, #192]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	f003 0302 	and.w	r3, r3, #2
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d0f0      	beq.n	80044c4 <HAL_RCC_OscConfig+0x1ac>
 80044e2:	4b2d      	ldr	r3, [pc, #180]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	691b      	ldr	r3, [r3, #16]
 80044ee:	00db      	lsls	r3, r3, #3
 80044f0:	4929      	ldr	r1, [pc, #164]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044f2:	4313      	orrs	r3, r2
 80044f4:	600b      	str	r3, [r1, #0]
 80044f6:	e018      	b.n	800452a <HAL_RCC_OscConfig+0x212>
 80044f8:	4b27      	ldr	r3, [pc, #156]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a26      	ldr	r2, [pc, #152]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 80044fe:	f023 0301 	bic.w	r3, r3, #1
 8004502:	6013      	str	r3, [r2, #0]
 8004504:	f7fe fd1e 	bl	8002f44 <HAL_GetTick>
 8004508:	6138      	str	r0, [r7, #16]
 800450a:	e008      	b.n	800451e <HAL_RCC_OscConfig+0x206>
 800450c:	f7fe fd1a 	bl	8002f44 <HAL_GetTick>
 8004510:	4602      	mov	r2, r0
 8004512:	693b      	ldr	r3, [r7, #16]
 8004514:	1ad3      	subs	r3, r2, r3
 8004516:	2b02      	cmp	r3, #2
 8004518:	d901      	bls.n	800451e <HAL_RCC_OscConfig+0x206>
 800451a:	2303      	movs	r3, #3
 800451c:	e1a3      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 800451e:	4b1e      	ldr	r3, [pc, #120]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	f003 0302 	and.w	r3, r3, #2
 8004526:	2b00      	cmp	r3, #0
 8004528:	d1f0      	bne.n	800450c <HAL_RCC_OscConfig+0x1f4>
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	f003 0308 	and.w	r3, r3, #8
 8004532:	2b00      	cmp	r3, #0
 8004534:	d038      	beq.n	80045a8 <HAL_RCC_OscConfig+0x290>
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	695b      	ldr	r3, [r3, #20]
 800453a:	2b00      	cmp	r3, #0
 800453c:	d019      	beq.n	8004572 <HAL_RCC_OscConfig+0x25a>
 800453e:	4b16      	ldr	r3, [pc, #88]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004540:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004542:	4a15      	ldr	r2, [pc, #84]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004544:	f043 0301 	orr.w	r3, r3, #1
 8004548:	6753      	str	r3, [r2, #116]	; 0x74
 800454a:	f7fe fcfb 	bl	8002f44 <HAL_GetTick>
 800454e:	6138      	str	r0, [r7, #16]
 8004550:	e008      	b.n	8004564 <HAL_RCC_OscConfig+0x24c>
 8004552:	f7fe fcf7 	bl	8002f44 <HAL_GetTick>
 8004556:	4602      	mov	r2, r0
 8004558:	693b      	ldr	r3, [r7, #16]
 800455a:	1ad3      	subs	r3, r2, r3
 800455c:	2b02      	cmp	r3, #2
 800455e:	d901      	bls.n	8004564 <HAL_RCC_OscConfig+0x24c>
 8004560:	2303      	movs	r3, #3
 8004562:	e180      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004564:	4b0c      	ldr	r3, [pc, #48]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004566:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004568:	f003 0302 	and.w	r3, r3, #2
 800456c:	2b00      	cmp	r3, #0
 800456e:	d0f0      	beq.n	8004552 <HAL_RCC_OscConfig+0x23a>
 8004570:	e01a      	b.n	80045a8 <HAL_RCC_OscConfig+0x290>
 8004572:	4b09      	ldr	r3, [pc, #36]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004574:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004576:	4a08      	ldr	r2, [pc, #32]	; (8004598 <HAL_RCC_OscConfig+0x280>)
 8004578:	f023 0301 	bic.w	r3, r3, #1
 800457c:	6753      	str	r3, [r2, #116]	; 0x74
 800457e:	f7fe fce1 	bl	8002f44 <HAL_GetTick>
 8004582:	6138      	str	r0, [r7, #16]
 8004584:	e00a      	b.n	800459c <HAL_RCC_OscConfig+0x284>
 8004586:	f7fe fcdd 	bl	8002f44 <HAL_GetTick>
 800458a:	4602      	mov	r2, r0
 800458c:	693b      	ldr	r3, [r7, #16]
 800458e:	1ad3      	subs	r3, r2, r3
 8004590:	2b02      	cmp	r3, #2
 8004592:	d903      	bls.n	800459c <HAL_RCC_OscConfig+0x284>
 8004594:	2303      	movs	r3, #3
 8004596:	e166      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004598:	40023800 	.word	0x40023800
 800459c:	4b92      	ldr	r3, [pc, #584]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800459e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80045a0:	f003 0302 	and.w	r3, r3, #2
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d1ee      	bne.n	8004586 <HAL_RCC_OscConfig+0x26e>
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	f003 0304 	and.w	r3, r3, #4
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	f000 80a4 	beq.w	80046fe <HAL_RCC_OscConfig+0x3e6>
 80045b6:	4b8c      	ldr	r3, [pc, #560]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80045b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d10d      	bne.n	80045de <HAL_RCC_OscConfig+0x2c6>
 80045c2:	4b89      	ldr	r3, [pc, #548]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80045c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045c6:	4a88      	ldr	r2, [pc, #544]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80045c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80045cc:	6413      	str	r3, [r2, #64]	; 0x40
 80045ce:	4b86      	ldr	r3, [pc, #536]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80045d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80045d6:	60bb      	str	r3, [r7, #8]
 80045d8:	68bb      	ldr	r3, [r7, #8]
 80045da:	2301      	movs	r3, #1
 80045dc:	75fb      	strb	r3, [r7, #23]
 80045de:	4b83      	ldr	r3, [pc, #524]	; (80047ec <HAL_RCC_OscConfig+0x4d4>)
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80045e6:	2b00      	cmp	r3, #0
 80045e8:	d118      	bne.n	800461c <HAL_RCC_OscConfig+0x304>
 80045ea:	4b80      	ldr	r3, [pc, #512]	; (80047ec <HAL_RCC_OscConfig+0x4d4>)
 80045ec:	681b      	ldr	r3, [r3, #0]
 80045ee:	4a7f      	ldr	r2, [pc, #508]	; (80047ec <HAL_RCC_OscConfig+0x4d4>)
 80045f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045f4:	6013      	str	r3, [r2, #0]
 80045f6:	f7fe fca5 	bl	8002f44 <HAL_GetTick>
 80045fa:	6138      	str	r0, [r7, #16]
 80045fc:	e008      	b.n	8004610 <HAL_RCC_OscConfig+0x2f8>
 80045fe:	f7fe fca1 	bl	8002f44 <HAL_GetTick>
 8004602:	4602      	mov	r2, r0
 8004604:	693b      	ldr	r3, [r7, #16]
 8004606:	1ad3      	subs	r3, r2, r3
 8004608:	2b64      	cmp	r3, #100	; 0x64
 800460a:	d901      	bls.n	8004610 <HAL_RCC_OscConfig+0x2f8>
 800460c:	2303      	movs	r3, #3
 800460e:	e12a      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004610:	4b76      	ldr	r3, [pc, #472]	; (80047ec <HAL_RCC_OscConfig+0x4d4>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004618:	2b00      	cmp	r3, #0
 800461a:	d0f0      	beq.n	80045fe <HAL_RCC_OscConfig+0x2e6>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	689b      	ldr	r3, [r3, #8]
 8004620:	2b01      	cmp	r3, #1
 8004622:	d106      	bne.n	8004632 <HAL_RCC_OscConfig+0x31a>
 8004624:	4b70      	ldr	r3, [pc, #448]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004626:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004628:	4a6f      	ldr	r2, [pc, #444]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800462a:	f043 0301 	orr.w	r3, r3, #1
 800462e:	6713      	str	r3, [r2, #112]	; 0x70
 8004630:	e02d      	b.n	800468e <HAL_RCC_OscConfig+0x376>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	689b      	ldr	r3, [r3, #8]
 8004636:	2b00      	cmp	r3, #0
 8004638:	d10c      	bne.n	8004654 <HAL_RCC_OscConfig+0x33c>
 800463a:	4b6b      	ldr	r3, [pc, #428]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800463c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800463e:	4a6a      	ldr	r2, [pc, #424]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004640:	f023 0301 	bic.w	r3, r3, #1
 8004644:	6713      	str	r3, [r2, #112]	; 0x70
 8004646:	4b68      	ldr	r3, [pc, #416]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004648:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800464a:	4a67      	ldr	r2, [pc, #412]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800464c:	f023 0304 	bic.w	r3, r3, #4
 8004650:	6713      	str	r3, [r2, #112]	; 0x70
 8004652:	e01c      	b.n	800468e <HAL_RCC_OscConfig+0x376>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	689b      	ldr	r3, [r3, #8]
 8004658:	2b05      	cmp	r3, #5
 800465a:	d10c      	bne.n	8004676 <HAL_RCC_OscConfig+0x35e>
 800465c:	4b62      	ldr	r3, [pc, #392]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800465e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004660:	4a61      	ldr	r2, [pc, #388]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004662:	f043 0304 	orr.w	r3, r3, #4
 8004666:	6713      	str	r3, [r2, #112]	; 0x70
 8004668:	4b5f      	ldr	r3, [pc, #380]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800466a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800466c:	4a5e      	ldr	r2, [pc, #376]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800466e:	f043 0301 	orr.w	r3, r3, #1
 8004672:	6713      	str	r3, [r2, #112]	; 0x70
 8004674:	e00b      	b.n	800468e <HAL_RCC_OscConfig+0x376>
 8004676:	4b5c      	ldr	r3, [pc, #368]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004678:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800467a:	4a5b      	ldr	r2, [pc, #364]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800467c:	f023 0301 	bic.w	r3, r3, #1
 8004680:	6713      	str	r3, [r2, #112]	; 0x70
 8004682:	4b59      	ldr	r3, [pc, #356]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004684:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004686:	4a58      	ldr	r2, [pc, #352]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004688:	f023 0304 	bic.w	r3, r3, #4
 800468c:	6713      	str	r3, [r2, #112]	; 0x70
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	689b      	ldr	r3, [r3, #8]
 8004692:	2b00      	cmp	r3, #0
 8004694:	d015      	beq.n	80046c2 <HAL_RCC_OscConfig+0x3aa>
 8004696:	f7fe fc55 	bl	8002f44 <HAL_GetTick>
 800469a:	6138      	str	r0, [r7, #16]
 800469c:	e00a      	b.n	80046b4 <HAL_RCC_OscConfig+0x39c>
 800469e:	f7fe fc51 	bl	8002f44 <HAL_GetTick>
 80046a2:	4602      	mov	r2, r0
 80046a4:	693b      	ldr	r3, [r7, #16]
 80046a6:	1ad3      	subs	r3, r2, r3
 80046a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80046ac:	4293      	cmp	r3, r2
 80046ae:	d901      	bls.n	80046b4 <HAL_RCC_OscConfig+0x39c>
 80046b0:	2303      	movs	r3, #3
 80046b2:	e0d8      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 80046b4:	4b4c      	ldr	r3, [pc, #304]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80046b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046b8:	f003 0302 	and.w	r3, r3, #2
 80046bc:	2b00      	cmp	r3, #0
 80046be:	d0ee      	beq.n	800469e <HAL_RCC_OscConfig+0x386>
 80046c0:	e014      	b.n	80046ec <HAL_RCC_OscConfig+0x3d4>
 80046c2:	f7fe fc3f 	bl	8002f44 <HAL_GetTick>
 80046c6:	6138      	str	r0, [r7, #16]
 80046c8:	e00a      	b.n	80046e0 <HAL_RCC_OscConfig+0x3c8>
 80046ca:	f7fe fc3b 	bl	8002f44 <HAL_GetTick>
 80046ce:	4602      	mov	r2, r0
 80046d0:	693b      	ldr	r3, [r7, #16]
 80046d2:	1ad3      	subs	r3, r2, r3
 80046d4:	f241 3288 	movw	r2, #5000	; 0x1388
 80046d8:	4293      	cmp	r3, r2
 80046da:	d901      	bls.n	80046e0 <HAL_RCC_OscConfig+0x3c8>
 80046dc:	2303      	movs	r3, #3
 80046de:	e0c2      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 80046e0:	4b41      	ldr	r3, [pc, #260]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80046e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046e4:	f003 0302 	and.w	r3, r3, #2
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d1ee      	bne.n	80046ca <HAL_RCC_OscConfig+0x3b2>
 80046ec:	7dfb      	ldrb	r3, [r7, #23]
 80046ee:	2b01      	cmp	r3, #1
 80046f0:	d105      	bne.n	80046fe <HAL_RCC_OscConfig+0x3e6>
 80046f2:	4b3d      	ldr	r3, [pc, #244]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80046f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046f6:	4a3c      	ldr	r2, [pc, #240]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80046f8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80046fc:	6413      	str	r3, [r2, #64]	; 0x40
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	699b      	ldr	r3, [r3, #24]
 8004702:	2b00      	cmp	r3, #0
 8004704:	f000 80ae 	beq.w	8004864 <HAL_RCC_OscConfig+0x54c>
 8004708:	4b37      	ldr	r3, [pc, #220]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800470a:	689b      	ldr	r3, [r3, #8]
 800470c:	f003 030c 	and.w	r3, r3, #12
 8004710:	2b08      	cmp	r3, #8
 8004712:	d06d      	beq.n	80047f0 <HAL_RCC_OscConfig+0x4d8>
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	699b      	ldr	r3, [r3, #24]
 8004718:	2b02      	cmp	r3, #2
 800471a:	d14b      	bne.n	80047b4 <HAL_RCC_OscConfig+0x49c>
 800471c:	4b32      	ldr	r3, [pc, #200]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4a31      	ldr	r2, [pc, #196]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004722:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004726:	6013      	str	r3, [r2, #0]
 8004728:	f7fe fc0c 	bl	8002f44 <HAL_GetTick>
 800472c:	6138      	str	r0, [r7, #16]
 800472e:	e008      	b.n	8004742 <HAL_RCC_OscConfig+0x42a>
 8004730:	f7fe fc08 	bl	8002f44 <HAL_GetTick>
 8004734:	4602      	mov	r2, r0
 8004736:	693b      	ldr	r3, [r7, #16]
 8004738:	1ad3      	subs	r3, r2, r3
 800473a:	2b02      	cmp	r3, #2
 800473c:	d901      	bls.n	8004742 <HAL_RCC_OscConfig+0x42a>
 800473e:	2303      	movs	r3, #3
 8004740:	e091      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004742:	4b29      	ldr	r3, [pc, #164]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800474a:	2b00      	cmp	r3, #0
 800474c:	d1f0      	bne.n	8004730 <HAL_RCC_OscConfig+0x418>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	69da      	ldr	r2, [r3, #28]
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6a1b      	ldr	r3, [r3, #32]
 8004756:	431a      	orrs	r2, r3
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800475c:	019b      	lsls	r3, r3, #6
 800475e:	431a      	orrs	r2, r3
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004764:	085b      	lsrs	r3, r3, #1
 8004766:	3b01      	subs	r3, #1
 8004768:	041b      	lsls	r3, r3, #16
 800476a:	431a      	orrs	r2, r3
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004770:	061b      	lsls	r3, r3, #24
 8004772:	431a      	orrs	r2, r3
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004778:	071b      	lsls	r3, r3, #28
 800477a:	491b      	ldr	r1, [pc, #108]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 800477c:	4313      	orrs	r3, r2
 800477e:	604b      	str	r3, [r1, #4]
 8004780:	4b19      	ldr	r3, [pc, #100]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	4a18      	ldr	r2, [pc, #96]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 8004786:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800478a:	6013      	str	r3, [r2, #0]
 800478c:	f7fe fbda 	bl	8002f44 <HAL_GetTick>
 8004790:	6138      	str	r0, [r7, #16]
 8004792:	e008      	b.n	80047a6 <HAL_RCC_OscConfig+0x48e>
 8004794:	f7fe fbd6 	bl	8002f44 <HAL_GetTick>
 8004798:	4602      	mov	r2, r0
 800479a:	693b      	ldr	r3, [r7, #16]
 800479c:	1ad3      	subs	r3, r2, r3
 800479e:	2b02      	cmp	r3, #2
 80047a0:	d901      	bls.n	80047a6 <HAL_RCC_OscConfig+0x48e>
 80047a2:	2303      	movs	r3, #3
 80047a4:	e05f      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 80047a6:	4b10      	ldr	r3, [pc, #64]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047ae:	2b00      	cmp	r3, #0
 80047b0:	d0f0      	beq.n	8004794 <HAL_RCC_OscConfig+0x47c>
 80047b2:	e057      	b.n	8004864 <HAL_RCC_OscConfig+0x54c>
 80047b4:	4b0c      	ldr	r3, [pc, #48]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	4a0b      	ldr	r2, [pc, #44]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80047ba:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80047be:	6013      	str	r3, [r2, #0]
 80047c0:	f7fe fbc0 	bl	8002f44 <HAL_GetTick>
 80047c4:	6138      	str	r0, [r7, #16]
 80047c6:	e008      	b.n	80047da <HAL_RCC_OscConfig+0x4c2>
 80047c8:	f7fe fbbc 	bl	8002f44 <HAL_GetTick>
 80047cc:	4602      	mov	r2, r0
 80047ce:	693b      	ldr	r3, [r7, #16]
 80047d0:	1ad3      	subs	r3, r2, r3
 80047d2:	2b02      	cmp	r3, #2
 80047d4:	d901      	bls.n	80047da <HAL_RCC_OscConfig+0x4c2>
 80047d6:	2303      	movs	r3, #3
 80047d8:	e045      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 80047da:	4b03      	ldr	r3, [pc, #12]	; (80047e8 <HAL_RCC_OscConfig+0x4d0>)
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047e2:	2b00      	cmp	r3, #0
 80047e4:	d1f0      	bne.n	80047c8 <HAL_RCC_OscConfig+0x4b0>
 80047e6:	e03d      	b.n	8004864 <HAL_RCC_OscConfig+0x54c>
 80047e8:	40023800 	.word	0x40023800
 80047ec:	40007000 	.word	0x40007000
 80047f0:	4b1f      	ldr	r3, [pc, #124]	; (8004870 <HAL_RCC_OscConfig+0x558>)
 80047f2:	685b      	ldr	r3, [r3, #4]
 80047f4:	60fb      	str	r3, [r7, #12]
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	699b      	ldr	r3, [r3, #24]
 80047fa:	2b01      	cmp	r3, #1
 80047fc:	d030      	beq.n	8004860 <HAL_RCC_OscConfig+0x548>
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	69db      	ldr	r3, [r3, #28]
 8004808:	429a      	cmp	r2, r3
 800480a:	d129      	bne.n	8004860 <HAL_RCC_OscConfig+0x548>
 800480c:	68fb      	ldr	r3, [r7, #12]
 800480e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	6a1b      	ldr	r3, [r3, #32]
 8004816:	429a      	cmp	r2, r3
 8004818:	d122      	bne.n	8004860 <HAL_RCC_OscConfig+0x548>
 800481a:	68fa      	ldr	r2, [r7, #12]
 800481c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004820:	4013      	ands	r3, r2
 8004822:	687a      	ldr	r2, [r7, #4]
 8004824:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004826:	0192      	lsls	r2, r2, #6
 8004828:	4293      	cmp	r3, r2
 800482a:	d119      	bne.n	8004860 <HAL_RCC_OscConfig+0x548>
 800482c:	68fb      	ldr	r3, [r7, #12]
 800482e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004836:	085b      	lsrs	r3, r3, #1
 8004838:	3b01      	subs	r3, #1
 800483a:	041b      	lsls	r3, r3, #16
 800483c:	429a      	cmp	r2, r3
 800483e:	d10f      	bne.n	8004860 <HAL_RCC_OscConfig+0x548>
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800484a:	061b      	lsls	r3, r3, #24
 800484c:	429a      	cmp	r2, r3
 800484e:	d107      	bne.n	8004860 <HAL_RCC_OscConfig+0x548>
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800485a:	071b      	lsls	r3, r3, #28
 800485c:	429a      	cmp	r2, r3
 800485e:	d001      	beq.n	8004864 <HAL_RCC_OscConfig+0x54c>
 8004860:	2301      	movs	r3, #1
 8004862:	e000      	b.n	8004866 <HAL_RCC_OscConfig+0x54e>
 8004864:	2300      	movs	r3, #0
 8004866:	4618      	mov	r0, r3
 8004868:	3718      	adds	r7, #24
 800486a:	46bd      	mov	sp, r7
 800486c:	bd80      	pop	{r7, pc}
 800486e:	bf00      	nop
 8004870:	40023800 	.word	0x40023800

08004874 <HAL_RCC_ClockConfig>:
 8004874:	b580      	push	{r7, lr}
 8004876:	b084      	sub	sp, #16
 8004878:	af00      	add	r7, sp, #0
 800487a:	6078      	str	r0, [r7, #4]
 800487c:	6039      	str	r1, [r7, #0]
 800487e:	2300      	movs	r3, #0
 8004880:	60fb      	str	r3, [r7, #12]
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	2b00      	cmp	r3, #0
 8004886:	d101      	bne.n	800488c <HAL_RCC_ClockConfig+0x18>
 8004888:	2301      	movs	r3, #1
 800488a:	e0d0      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 800488c:	4b6a      	ldr	r3, [pc, #424]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	f003 030f 	and.w	r3, r3, #15
 8004894:	683a      	ldr	r2, [r7, #0]
 8004896:	429a      	cmp	r2, r3
 8004898:	d910      	bls.n	80048bc <HAL_RCC_ClockConfig+0x48>
 800489a:	4b67      	ldr	r3, [pc, #412]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f023 020f 	bic.w	r2, r3, #15
 80048a2:	4965      	ldr	r1, [pc, #404]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 80048a4:	683b      	ldr	r3, [r7, #0]
 80048a6:	4313      	orrs	r3, r2
 80048a8:	600b      	str	r3, [r1, #0]
 80048aa:	4b63      	ldr	r3, [pc, #396]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	f003 030f 	and.w	r3, r3, #15
 80048b2:	683a      	ldr	r2, [r7, #0]
 80048b4:	429a      	cmp	r2, r3
 80048b6:	d001      	beq.n	80048bc <HAL_RCC_ClockConfig+0x48>
 80048b8:	2301      	movs	r3, #1
 80048ba:	e0b8      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	f003 0302 	and.w	r3, r3, #2
 80048c4:	2b00      	cmp	r3, #0
 80048c6:	d020      	beq.n	800490a <HAL_RCC_ClockConfig+0x96>
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	f003 0304 	and.w	r3, r3, #4
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d005      	beq.n	80048e0 <HAL_RCC_ClockConfig+0x6c>
 80048d4:	4b59      	ldr	r3, [pc, #356]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80048d6:	689b      	ldr	r3, [r3, #8]
 80048d8:	4a58      	ldr	r2, [pc, #352]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80048da:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80048de:	6093      	str	r3, [r2, #8]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	f003 0308 	and.w	r3, r3, #8
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d005      	beq.n	80048f8 <HAL_RCC_ClockConfig+0x84>
 80048ec:	4b53      	ldr	r3, [pc, #332]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80048ee:	689b      	ldr	r3, [r3, #8]
 80048f0:	4a52      	ldr	r2, [pc, #328]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80048f2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80048f6:	6093      	str	r3, [r2, #8]
 80048f8:	4b50      	ldr	r3, [pc, #320]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80048fa:	689b      	ldr	r3, [r3, #8]
 80048fc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	689b      	ldr	r3, [r3, #8]
 8004904:	494d      	ldr	r1, [pc, #308]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004906:	4313      	orrs	r3, r2
 8004908:	608b      	str	r3, [r1, #8]
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	f003 0301 	and.w	r3, r3, #1
 8004912:	2b00      	cmp	r3, #0
 8004914:	d040      	beq.n	8004998 <HAL_RCC_ClockConfig+0x124>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	685b      	ldr	r3, [r3, #4]
 800491a:	2b01      	cmp	r3, #1
 800491c:	d107      	bne.n	800492e <HAL_RCC_ClockConfig+0xba>
 800491e:	4b47      	ldr	r3, [pc, #284]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004926:	2b00      	cmp	r3, #0
 8004928:	d115      	bne.n	8004956 <HAL_RCC_ClockConfig+0xe2>
 800492a:	2301      	movs	r3, #1
 800492c:	e07f      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	685b      	ldr	r3, [r3, #4]
 8004932:	2b02      	cmp	r3, #2
 8004934:	d107      	bne.n	8004946 <HAL_RCC_ClockConfig+0xd2>
 8004936:	4b41      	ldr	r3, [pc, #260]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800493e:	2b00      	cmp	r3, #0
 8004940:	d109      	bne.n	8004956 <HAL_RCC_ClockConfig+0xe2>
 8004942:	2301      	movs	r3, #1
 8004944:	e073      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 8004946:	4b3d      	ldr	r3, [pc, #244]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f003 0302 	and.w	r3, r3, #2
 800494e:	2b00      	cmp	r3, #0
 8004950:	d101      	bne.n	8004956 <HAL_RCC_ClockConfig+0xe2>
 8004952:	2301      	movs	r3, #1
 8004954:	e06b      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 8004956:	4b39      	ldr	r3, [pc, #228]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004958:	689b      	ldr	r3, [r3, #8]
 800495a:	f023 0203 	bic.w	r2, r3, #3
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	685b      	ldr	r3, [r3, #4]
 8004962:	4936      	ldr	r1, [pc, #216]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004964:	4313      	orrs	r3, r2
 8004966:	608b      	str	r3, [r1, #8]
 8004968:	f7fe faec 	bl	8002f44 <HAL_GetTick>
 800496c:	60f8      	str	r0, [r7, #12]
 800496e:	e00a      	b.n	8004986 <HAL_RCC_ClockConfig+0x112>
 8004970:	f7fe fae8 	bl	8002f44 <HAL_GetTick>
 8004974:	4602      	mov	r2, r0
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	1ad3      	subs	r3, r2, r3
 800497a:	f241 3288 	movw	r2, #5000	; 0x1388
 800497e:	4293      	cmp	r3, r2
 8004980:	d901      	bls.n	8004986 <HAL_RCC_ClockConfig+0x112>
 8004982:	2303      	movs	r3, #3
 8004984:	e053      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 8004986:	4b2d      	ldr	r3, [pc, #180]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004988:	689b      	ldr	r3, [r3, #8]
 800498a:	f003 020c 	and.w	r2, r3, #12
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	685b      	ldr	r3, [r3, #4]
 8004992:	009b      	lsls	r3, r3, #2
 8004994:	429a      	cmp	r2, r3
 8004996:	d1eb      	bne.n	8004970 <HAL_RCC_ClockConfig+0xfc>
 8004998:	4b27      	ldr	r3, [pc, #156]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	f003 030f 	and.w	r3, r3, #15
 80049a0:	683a      	ldr	r2, [r7, #0]
 80049a2:	429a      	cmp	r2, r3
 80049a4:	d210      	bcs.n	80049c8 <HAL_RCC_ClockConfig+0x154>
 80049a6:	4b24      	ldr	r3, [pc, #144]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	f023 020f 	bic.w	r2, r3, #15
 80049ae:	4922      	ldr	r1, [pc, #136]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 80049b0:	683b      	ldr	r3, [r7, #0]
 80049b2:	4313      	orrs	r3, r2
 80049b4:	600b      	str	r3, [r1, #0]
 80049b6:	4b20      	ldr	r3, [pc, #128]	; (8004a38 <HAL_RCC_ClockConfig+0x1c4>)
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f003 030f 	and.w	r3, r3, #15
 80049be:	683a      	ldr	r2, [r7, #0]
 80049c0:	429a      	cmp	r2, r3
 80049c2:	d001      	beq.n	80049c8 <HAL_RCC_ClockConfig+0x154>
 80049c4:	2301      	movs	r3, #1
 80049c6:	e032      	b.n	8004a2e <HAL_RCC_ClockConfig+0x1ba>
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f003 0304 	and.w	r3, r3, #4
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d008      	beq.n	80049e6 <HAL_RCC_ClockConfig+0x172>
 80049d4:	4b19      	ldr	r3, [pc, #100]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80049d6:	689b      	ldr	r3, [r3, #8]
 80049d8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	68db      	ldr	r3, [r3, #12]
 80049e0:	4916      	ldr	r1, [pc, #88]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80049e2:	4313      	orrs	r3, r2
 80049e4:	608b      	str	r3, [r1, #8]
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f003 0308 	and.w	r3, r3, #8
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d009      	beq.n	8004a06 <HAL_RCC_ClockConfig+0x192>
 80049f2:	4b12      	ldr	r3, [pc, #72]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 80049f4:	689b      	ldr	r3, [r3, #8]
 80049f6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	691b      	ldr	r3, [r3, #16]
 80049fe:	00db      	lsls	r3, r3, #3
 8004a00:	490e      	ldr	r1, [pc, #56]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004a02:	4313      	orrs	r3, r2
 8004a04:	608b      	str	r3, [r1, #8]
 8004a06:	f000 f821 	bl	8004a4c <HAL_RCC_GetSysClockFreq>
 8004a0a:	4602      	mov	r2, r0
 8004a0c:	4b0b      	ldr	r3, [pc, #44]	; (8004a3c <HAL_RCC_ClockConfig+0x1c8>)
 8004a0e:	689b      	ldr	r3, [r3, #8]
 8004a10:	091b      	lsrs	r3, r3, #4
 8004a12:	f003 030f 	and.w	r3, r3, #15
 8004a16:	490a      	ldr	r1, [pc, #40]	; (8004a40 <HAL_RCC_ClockConfig+0x1cc>)
 8004a18:	5ccb      	ldrb	r3, [r1, r3]
 8004a1a:	fa22 f303 	lsr.w	r3, r2, r3
 8004a1e:	4a09      	ldr	r2, [pc, #36]	; (8004a44 <HAL_RCC_ClockConfig+0x1d0>)
 8004a20:	6013      	str	r3, [r2, #0]
 8004a22:	4b09      	ldr	r3, [pc, #36]	; (8004a48 <HAL_RCC_ClockConfig+0x1d4>)
 8004a24:	681b      	ldr	r3, [r3, #0]
 8004a26:	4618      	mov	r0, r3
 8004a28:	f7fe fa48 	bl	8002ebc <HAL_InitTick>
 8004a2c:	2300      	movs	r3, #0
 8004a2e:	4618      	mov	r0, r3
 8004a30:	3710      	adds	r7, #16
 8004a32:	46bd      	mov	sp, r7
 8004a34:	bd80      	pop	{r7, pc}
 8004a36:	bf00      	nop
 8004a38:	40023c00 	.word	0x40023c00
 8004a3c:	40023800 	.word	0x40023800
 8004a40:	0800d120 	.word	0x0800d120
 8004a44:	20000128 	.word	0x20000128
 8004a48:	2000012c 	.word	0x2000012c

08004a4c <HAL_RCC_GetSysClockFreq>:
 8004a4c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004a50:	b084      	sub	sp, #16
 8004a52:	af00      	add	r7, sp, #0
 8004a54:	2300      	movs	r3, #0
 8004a56:	607b      	str	r3, [r7, #4]
 8004a58:	2300      	movs	r3, #0
 8004a5a:	60fb      	str	r3, [r7, #12]
 8004a5c:	2300      	movs	r3, #0
 8004a5e:	603b      	str	r3, [r7, #0]
 8004a60:	2300      	movs	r3, #0
 8004a62:	60bb      	str	r3, [r7, #8]
 8004a64:	4b67      	ldr	r3, [pc, #412]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004a66:	689b      	ldr	r3, [r3, #8]
 8004a68:	f003 030c 	and.w	r3, r3, #12
 8004a6c:	2b08      	cmp	r3, #8
 8004a6e:	d00d      	beq.n	8004a8c <HAL_RCC_GetSysClockFreq+0x40>
 8004a70:	2b08      	cmp	r3, #8
 8004a72:	f200 80bd 	bhi.w	8004bf0 <HAL_RCC_GetSysClockFreq+0x1a4>
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d002      	beq.n	8004a80 <HAL_RCC_GetSysClockFreq+0x34>
 8004a7a:	2b04      	cmp	r3, #4
 8004a7c:	d003      	beq.n	8004a86 <HAL_RCC_GetSysClockFreq+0x3a>
 8004a7e:	e0b7      	b.n	8004bf0 <HAL_RCC_GetSysClockFreq+0x1a4>
 8004a80:	4b61      	ldr	r3, [pc, #388]	; (8004c08 <HAL_RCC_GetSysClockFreq+0x1bc>)
 8004a82:	60bb      	str	r3, [r7, #8]
 8004a84:	e0b7      	b.n	8004bf6 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004a86:	4b61      	ldr	r3, [pc, #388]	; (8004c0c <HAL_RCC_GetSysClockFreq+0x1c0>)
 8004a88:	60bb      	str	r3, [r7, #8]
 8004a8a:	e0b4      	b.n	8004bf6 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004a8c:	4b5d      	ldr	r3, [pc, #372]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004a8e:	685b      	ldr	r3, [r3, #4]
 8004a90:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004a94:	607b      	str	r3, [r7, #4]
 8004a96:	4b5b      	ldr	r3, [pc, #364]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004a98:	685b      	ldr	r3, [r3, #4]
 8004a9a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d04d      	beq.n	8004b3e <HAL_RCC_GetSysClockFreq+0xf2>
 8004aa2:	4b58      	ldr	r3, [pc, #352]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	099b      	lsrs	r3, r3, #6
 8004aa8:	461a      	mov	r2, r3
 8004aaa:	f04f 0300 	mov.w	r3, #0
 8004aae:	f240 10ff 	movw	r0, #511	; 0x1ff
 8004ab2:	f04f 0100 	mov.w	r1, #0
 8004ab6:	ea02 0800 	and.w	r8, r2, r0
 8004aba:	ea03 0901 	and.w	r9, r3, r1
 8004abe:	4640      	mov	r0, r8
 8004ac0:	4649      	mov	r1, r9
 8004ac2:	f04f 0200 	mov.w	r2, #0
 8004ac6:	f04f 0300 	mov.w	r3, #0
 8004aca:	014b      	lsls	r3, r1, #5
 8004acc:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8004ad0:	0142      	lsls	r2, r0, #5
 8004ad2:	4610      	mov	r0, r2
 8004ad4:	4619      	mov	r1, r3
 8004ad6:	ebb0 0008 	subs.w	r0, r0, r8
 8004ada:	eb61 0109 	sbc.w	r1, r1, r9
 8004ade:	f04f 0200 	mov.w	r2, #0
 8004ae2:	f04f 0300 	mov.w	r3, #0
 8004ae6:	018b      	lsls	r3, r1, #6
 8004ae8:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8004aec:	0182      	lsls	r2, r0, #6
 8004aee:	1a12      	subs	r2, r2, r0
 8004af0:	eb63 0301 	sbc.w	r3, r3, r1
 8004af4:	f04f 0000 	mov.w	r0, #0
 8004af8:	f04f 0100 	mov.w	r1, #0
 8004afc:	00d9      	lsls	r1, r3, #3
 8004afe:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8004b02:	00d0      	lsls	r0, r2, #3
 8004b04:	4602      	mov	r2, r0
 8004b06:	460b      	mov	r3, r1
 8004b08:	eb12 0208 	adds.w	r2, r2, r8
 8004b0c:	eb43 0309 	adc.w	r3, r3, r9
 8004b10:	f04f 0000 	mov.w	r0, #0
 8004b14:	f04f 0100 	mov.w	r1, #0
 8004b18:	0259      	lsls	r1, r3, #9
 8004b1a:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 8004b1e:	0250      	lsls	r0, r2, #9
 8004b20:	4602      	mov	r2, r0
 8004b22:	460b      	mov	r3, r1
 8004b24:	4610      	mov	r0, r2
 8004b26:	4619      	mov	r1, r3
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	461a      	mov	r2, r3
 8004b2c:	f04f 0300 	mov.w	r3, #0
 8004b30:	f7fb fdaa 	bl	8000688 <__aeabi_uldivmod>
 8004b34:	4602      	mov	r2, r0
 8004b36:	460b      	mov	r3, r1
 8004b38:	4613      	mov	r3, r2
 8004b3a:	60fb      	str	r3, [r7, #12]
 8004b3c:	e04a      	b.n	8004bd4 <HAL_RCC_GetSysClockFreq+0x188>
 8004b3e:	4b31      	ldr	r3, [pc, #196]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004b40:	685b      	ldr	r3, [r3, #4]
 8004b42:	099b      	lsrs	r3, r3, #6
 8004b44:	461a      	mov	r2, r3
 8004b46:	f04f 0300 	mov.w	r3, #0
 8004b4a:	f240 10ff 	movw	r0, #511	; 0x1ff
 8004b4e:	f04f 0100 	mov.w	r1, #0
 8004b52:	ea02 0400 	and.w	r4, r2, r0
 8004b56:	ea03 0501 	and.w	r5, r3, r1
 8004b5a:	4620      	mov	r0, r4
 8004b5c:	4629      	mov	r1, r5
 8004b5e:	f04f 0200 	mov.w	r2, #0
 8004b62:	f04f 0300 	mov.w	r3, #0
 8004b66:	014b      	lsls	r3, r1, #5
 8004b68:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8004b6c:	0142      	lsls	r2, r0, #5
 8004b6e:	4610      	mov	r0, r2
 8004b70:	4619      	mov	r1, r3
 8004b72:	1b00      	subs	r0, r0, r4
 8004b74:	eb61 0105 	sbc.w	r1, r1, r5
 8004b78:	f04f 0200 	mov.w	r2, #0
 8004b7c:	f04f 0300 	mov.w	r3, #0
 8004b80:	018b      	lsls	r3, r1, #6
 8004b82:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8004b86:	0182      	lsls	r2, r0, #6
 8004b88:	1a12      	subs	r2, r2, r0
 8004b8a:	eb63 0301 	sbc.w	r3, r3, r1
 8004b8e:	f04f 0000 	mov.w	r0, #0
 8004b92:	f04f 0100 	mov.w	r1, #0
 8004b96:	00d9      	lsls	r1, r3, #3
 8004b98:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8004b9c:	00d0      	lsls	r0, r2, #3
 8004b9e:	4602      	mov	r2, r0
 8004ba0:	460b      	mov	r3, r1
 8004ba2:	1912      	adds	r2, r2, r4
 8004ba4:	eb45 0303 	adc.w	r3, r5, r3
 8004ba8:	f04f 0000 	mov.w	r0, #0
 8004bac:	f04f 0100 	mov.w	r1, #0
 8004bb0:	0299      	lsls	r1, r3, #10
 8004bb2:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8004bb6:	0290      	lsls	r0, r2, #10
 8004bb8:	4602      	mov	r2, r0
 8004bba:	460b      	mov	r3, r1
 8004bbc:	4610      	mov	r0, r2
 8004bbe:	4619      	mov	r1, r3
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	461a      	mov	r2, r3
 8004bc4:	f04f 0300 	mov.w	r3, #0
 8004bc8:	f7fb fd5e 	bl	8000688 <__aeabi_uldivmod>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	4613      	mov	r3, r2
 8004bd2:	60fb      	str	r3, [r7, #12]
 8004bd4:	4b0b      	ldr	r3, [pc, #44]	; (8004c04 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004bd6:	685b      	ldr	r3, [r3, #4]
 8004bd8:	0c1b      	lsrs	r3, r3, #16
 8004bda:	f003 0303 	and.w	r3, r3, #3
 8004bde:	3301      	adds	r3, #1
 8004be0:	005b      	lsls	r3, r3, #1
 8004be2:	603b      	str	r3, [r7, #0]
 8004be4:	68fa      	ldr	r2, [r7, #12]
 8004be6:	683b      	ldr	r3, [r7, #0]
 8004be8:	fbb2 f3f3 	udiv	r3, r2, r3
 8004bec:	60bb      	str	r3, [r7, #8]
 8004bee:	e002      	b.n	8004bf6 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004bf0:	4b05      	ldr	r3, [pc, #20]	; (8004c08 <HAL_RCC_GetSysClockFreq+0x1bc>)
 8004bf2:	60bb      	str	r3, [r7, #8]
 8004bf4:	bf00      	nop
 8004bf6:	68bb      	ldr	r3, [r7, #8]
 8004bf8:	4618      	mov	r0, r3
 8004bfa:	3710      	adds	r7, #16
 8004bfc:	46bd      	mov	sp, r7
 8004bfe:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004c02:	bf00      	nop
 8004c04:	40023800 	.word	0x40023800
 8004c08:	00f42400 	.word	0x00f42400
 8004c0c:	007a1200 	.word	0x007a1200

08004c10 <HAL_RCC_GetHCLKFreq>:
 8004c10:	b480      	push	{r7}
 8004c12:	af00      	add	r7, sp, #0
 8004c14:	4b03      	ldr	r3, [pc, #12]	; (8004c24 <HAL_RCC_GetHCLKFreq+0x14>)
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4618      	mov	r0, r3
 8004c1a:	46bd      	mov	sp, r7
 8004c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c20:	4770      	bx	lr
 8004c22:	bf00      	nop
 8004c24:	20000128 	.word	0x20000128

08004c28 <HAL_RCC_GetPCLK1Freq>:
 8004c28:	b580      	push	{r7, lr}
 8004c2a:	af00      	add	r7, sp, #0
 8004c2c:	f7ff fff0 	bl	8004c10 <HAL_RCC_GetHCLKFreq>
 8004c30:	4602      	mov	r2, r0
 8004c32:	4b05      	ldr	r3, [pc, #20]	; (8004c48 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004c34:	689b      	ldr	r3, [r3, #8]
 8004c36:	0a9b      	lsrs	r3, r3, #10
 8004c38:	f003 0307 	and.w	r3, r3, #7
 8004c3c:	4903      	ldr	r1, [pc, #12]	; (8004c4c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004c3e:	5ccb      	ldrb	r3, [r1, r3]
 8004c40:	fa22 f303 	lsr.w	r3, r2, r3
 8004c44:	4618      	mov	r0, r3
 8004c46:	bd80      	pop	{r7, pc}
 8004c48:	40023800 	.word	0x40023800
 8004c4c:	0800d130 	.word	0x0800d130

08004c50 <HAL_RCC_GetPCLK2Freq>:
 8004c50:	b580      	push	{r7, lr}
 8004c52:	af00      	add	r7, sp, #0
 8004c54:	f7ff ffdc 	bl	8004c10 <HAL_RCC_GetHCLKFreq>
 8004c58:	4602      	mov	r2, r0
 8004c5a:	4b05      	ldr	r3, [pc, #20]	; (8004c70 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004c5c:	689b      	ldr	r3, [r3, #8]
 8004c5e:	0b5b      	lsrs	r3, r3, #13
 8004c60:	f003 0307 	and.w	r3, r3, #7
 8004c64:	4903      	ldr	r1, [pc, #12]	; (8004c74 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004c66:	5ccb      	ldrb	r3, [r1, r3]
 8004c68:	fa22 f303 	lsr.w	r3, r2, r3
 8004c6c:	4618      	mov	r0, r3
 8004c6e:	bd80      	pop	{r7, pc}
 8004c70:	40023800 	.word	0x40023800
 8004c74:	0800d130 	.word	0x0800d130

08004c78 <HAL_RCCEx_PeriphCLKConfig>:
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b088      	sub	sp, #32
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
 8004c80:	2300      	movs	r3, #0
 8004c82:	617b      	str	r3, [r7, #20]
 8004c84:	2300      	movs	r3, #0
 8004c86:	613b      	str	r3, [r7, #16]
 8004c88:	2300      	movs	r3, #0
 8004c8a:	60fb      	str	r3, [r7, #12]
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	61fb      	str	r3, [r7, #28]
 8004c90:	2300      	movs	r3, #0
 8004c92:	61bb      	str	r3, [r7, #24]
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	f003 0301 	and.w	r3, r3, #1
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d012      	beq.n	8004cc6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8004ca0:	4b69      	ldr	r3, [pc, #420]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004ca2:	689b      	ldr	r3, [r3, #8]
 8004ca4:	4a68      	ldr	r2, [pc, #416]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004ca6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004caa:	6093      	str	r3, [r2, #8]
 8004cac:	4b66      	ldr	r3, [pc, #408]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004cae:	689a      	ldr	r2, [r3, #8]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004cb4:	4964      	ldr	r1, [pc, #400]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004cb6:	4313      	orrs	r3, r2
 8004cb8:	608b      	str	r3, [r1, #8]
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d101      	bne.n	8004cc6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8004cc2:	2301      	movs	r3, #1
 8004cc4:	61fb      	str	r3, [r7, #28]
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	d017      	beq.n	8004d02 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8004cd2:	4b5d      	ldr	r3, [pc, #372]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004cd4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004cd8:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ce0:	4959      	ldr	r1, [pc, #356]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004ce2:	4313      	orrs	r3, r2
 8004ce4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004cec:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004cf0:	d101      	bne.n	8004cf6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	61fb      	str	r3, [r7, #28]
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d101      	bne.n	8004d02 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8004cfe:	2301      	movs	r3, #1
 8004d00:	61bb      	str	r3, [r7, #24]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	d017      	beq.n	8004d3e <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8004d0e:	4b4e      	ldr	r3, [pc, #312]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004d10:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004d14:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d1c:	494a      	ldr	r1, [pc, #296]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004d1e:	4313      	orrs	r3, r2
 8004d20:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d28:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004d2c:	d101      	bne.n	8004d32 <HAL_RCCEx_PeriphCLKConfig+0xba>
 8004d2e:	2301      	movs	r3, #1
 8004d30:	61fb      	str	r3, [r7, #28]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	d101      	bne.n	8004d3e <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8004d3a:	2301      	movs	r3, #1
 8004d3c:	61bb      	str	r3, [r7, #24]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004d46:	2b00      	cmp	r3, #0
 8004d48:	d001      	beq.n	8004d4e <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8004d4a:	2301      	movs	r3, #1
 8004d4c:	61fb      	str	r3, [r7, #28]
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	f003 0320 	and.w	r3, r3, #32
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	f000 808b 	beq.w	8004e72 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8004d5c:	4b3a      	ldr	r3, [pc, #232]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004d5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d60:	4a39      	ldr	r2, [pc, #228]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004d62:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004d66:	6413      	str	r3, [r2, #64]	; 0x40
 8004d68:	4b37      	ldr	r3, [pc, #220]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004d6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d6c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004d70:	60bb      	str	r3, [r7, #8]
 8004d72:	68bb      	ldr	r3, [r7, #8]
 8004d74:	4b35      	ldr	r3, [pc, #212]	; (8004e4c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	4a34      	ldr	r2, [pc, #208]	; (8004e4c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8004d7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004d7e:	6013      	str	r3, [r2, #0]
 8004d80:	f7fe f8e0 	bl	8002f44 <HAL_GetTick>
 8004d84:	6178      	str	r0, [r7, #20]
 8004d86:	e008      	b.n	8004d9a <HAL_RCCEx_PeriphCLKConfig+0x122>
 8004d88:	f7fe f8dc 	bl	8002f44 <HAL_GetTick>
 8004d8c:	4602      	mov	r2, r0
 8004d8e:	697b      	ldr	r3, [r7, #20]
 8004d90:	1ad3      	subs	r3, r2, r3
 8004d92:	2b64      	cmp	r3, #100	; 0x64
 8004d94:	d901      	bls.n	8004d9a <HAL_RCCEx_PeriphCLKConfig+0x122>
 8004d96:	2303      	movs	r3, #3
 8004d98:	e38f      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 8004d9a:	4b2c      	ldr	r3, [pc, #176]	; (8004e4c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	d0f0      	beq.n	8004d88 <HAL_RCCEx_PeriphCLKConfig+0x110>
 8004da6:	4b28      	ldr	r3, [pc, #160]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004da8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004daa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004dae:	613b      	str	r3, [r7, #16]
 8004db0:	693b      	ldr	r3, [r7, #16]
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d035      	beq.n	8004e22 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004dba:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004dbe:	693a      	ldr	r2, [r7, #16]
 8004dc0:	429a      	cmp	r2, r3
 8004dc2:	d02e      	beq.n	8004e22 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004dc4:	4b20      	ldr	r3, [pc, #128]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004dc6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004dc8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004dcc:	613b      	str	r3, [r7, #16]
 8004dce:	4b1e      	ldr	r3, [pc, #120]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004dd0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004dd2:	4a1d      	ldr	r2, [pc, #116]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004dd4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004dd8:	6713      	str	r3, [r2, #112]	; 0x70
 8004dda:	4b1b      	ldr	r3, [pc, #108]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004ddc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004dde:	4a1a      	ldr	r2, [pc, #104]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004de0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004de4:	6713      	str	r3, [r2, #112]	; 0x70
 8004de6:	4a18      	ldr	r2, [pc, #96]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004de8:	693b      	ldr	r3, [r7, #16]
 8004dea:	6713      	str	r3, [r2, #112]	; 0x70
 8004dec:	4b16      	ldr	r3, [pc, #88]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004dee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004df0:	f003 0301 	and.w	r3, r3, #1
 8004df4:	2b01      	cmp	r3, #1
 8004df6:	d114      	bne.n	8004e22 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8004df8:	f7fe f8a4 	bl	8002f44 <HAL_GetTick>
 8004dfc:	6178      	str	r0, [r7, #20]
 8004dfe:	e00a      	b.n	8004e16 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8004e00:	f7fe f8a0 	bl	8002f44 <HAL_GetTick>
 8004e04:	4602      	mov	r2, r0
 8004e06:	697b      	ldr	r3, [r7, #20]
 8004e08:	1ad3      	subs	r3, r2, r3
 8004e0a:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e0e:	4293      	cmp	r3, r2
 8004e10:	d901      	bls.n	8004e16 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8004e12:	2303      	movs	r3, #3
 8004e14:	e351      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 8004e16:	4b0c      	ldr	r3, [pc, #48]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004e18:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e1a:	f003 0302 	and.w	r3, r3, #2
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d0ee      	beq.n	8004e00 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e26:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004e2a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004e2e:	d111      	bne.n	8004e54 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8004e30:	4b05      	ldr	r3, [pc, #20]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004e32:	689b      	ldr	r3, [r3, #8]
 8004e34:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8004e3c:	4b04      	ldr	r3, [pc, #16]	; (8004e50 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8004e3e:	400b      	ands	r3, r1
 8004e40:	4901      	ldr	r1, [pc, #4]	; (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8004e42:	4313      	orrs	r3, r2
 8004e44:	608b      	str	r3, [r1, #8]
 8004e46:	e00b      	b.n	8004e60 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8004e48:	40023800 	.word	0x40023800
 8004e4c:	40007000 	.word	0x40007000
 8004e50:	0ffffcff 	.word	0x0ffffcff
 8004e54:	4bb3      	ldr	r3, [pc, #716]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e56:	689b      	ldr	r3, [r3, #8]
 8004e58:	4ab2      	ldr	r2, [pc, #712]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e5a:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8004e5e:	6093      	str	r3, [r2, #8]
 8004e60:	4bb0      	ldr	r3, [pc, #704]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e62:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e6c:	49ad      	ldr	r1, [pc, #692]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e6e:	4313      	orrs	r3, r2
 8004e70:	670b      	str	r3, [r1, #112]	; 0x70
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	f003 0310 	and.w	r3, r3, #16
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d010      	beq.n	8004ea0 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8004e7e:	4ba9      	ldr	r3, [pc, #676]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004e84:	4aa7      	ldr	r2, [pc, #668]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e86:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004e8a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8004e8e:	4ba5      	ldr	r3, [pc, #660]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e90:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e98:	49a2      	ldr	r1, [pc, #648]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004e9a:	4313      	orrs	r3, r2
 8004e9c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d00a      	beq.n	8004ec2 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8004eac:	4b9d      	ldr	r3, [pc, #628]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004eae:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004eb2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004eba:	499a      	ldr	r1, [pc, #616]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004ebc:	4313      	orrs	r3, r2
 8004ebe:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d00a      	beq.n	8004ee4 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8004ece:	4b95      	ldr	r3, [pc, #596]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004ed0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ed4:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8004edc:	4991      	ldr	r1, [pc, #580]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004ede:	4313      	orrs	r3, r2
 8004ee0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d00a      	beq.n	8004f06 <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8004ef0:	4b8c      	ldr	r3, [pc, #560]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004ef2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ef6:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004efe:	4989      	ldr	r1, [pc, #548]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f00:	4313      	orrs	r3, r2
 8004f02:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d00a      	beq.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8004f12:	4b84      	ldr	r3, [pc, #528]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f14:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f18:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004f20:	4980      	ldr	r1, [pc, #512]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f22:	4313      	orrs	r3, r2
 8004f24:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d00a      	beq.n	8004f4a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8004f34:	4b7b      	ldr	r3, [pc, #492]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f36:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f3a:	f023 0203 	bic.w	r2, r3, #3
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004f42:	4978      	ldr	r1, [pc, #480]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f44:	4313      	orrs	r3, r2
 8004f46:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d00a      	beq.n	8004f6c <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8004f56:	4b73      	ldr	r3, [pc, #460]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f5c:	f023 020c 	bic.w	r2, r3, #12
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004f64:	496f      	ldr	r1, [pc, #444]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f66:	4313      	orrs	r3, r2
 8004f68:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	d00a      	beq.n	8004f8e <HAL_RCCEx_PeriphCLKConfig+0x316>
 8004f78:	4b6a      	ldr	r3, [pc, #424]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f7a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f7e:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f86:	4967      	ldr	r1, [pc, #412]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f88:	4313      	orrs	r3, r2
 8004f8a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d00a      	beq.n	8004fb0 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8004f9a:	4b62      	ldr	r3, [pc, #392]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004f9c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004fa0:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004fa8:	495e      	ldr	r1, [pc, #376]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004faa:	4313      	orrs	r3, r2
 8004fac:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d00a      	beq.n	8004fd2 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8004fbc:	4b59      	ldr	r3, [pc, #356]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004fbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004fc2:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004fca:	4956      	ldr	r1, [pc, #344]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004fcc:	4313      	orrs	r3, r2
 8004fce:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d00a      	beq.n	8004ff4 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8004fde:	4b51      	ldr	r3, [pc, #324]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004fe0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004fe4:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004fec:	494d      	ldr	r1, [pc, #308]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8004fee:	4313      	orrs	r3, r2
 8004ff0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004ffc:	2b00      	cmp	r3, #0
 8004ffe:	d00a      	beq.n	8005016 <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8005000:	4b48      	ldr	r3, [pc, #288]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005002:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005006:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800500e:	4945      	ldr	r1, [pc, #276]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005010:	4313      	orrs	r3, r2
 8005012:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800501e:	2b00      	cmp	r3, #0
 8005020:	d00a      	beq.n	8005038 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8005022:	4b40      	ldr	r3, [pc, #256]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005024:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005028:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005030:	493c      	ldr	r1, [pc, #240]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005032:	4313      	orrs	r3, r2
 8005034:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005040:	2b00      	cmp	r3, #0
 8005042:	d00a      	beq.n	800505a <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8005044:	4b37      	ldr	r3, [pc, #220]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005046:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800504a:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005052:	4934      	ldr	r1, [pc, #208]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005054:	4313      	orrs	r3, r2
 8005056:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005062:	2b00      	cmp	r3, #0
 8005064:	d011      	beq.n	800508a <HAL_RCCEx_PeriphCLKConfig+0x412>
 8005066:	4b2f      	ldr	r3, [pc, #188]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005068:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800506c:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005074:	492b      	ldr	r1, [pc, #172]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005076:	4313      	orrs	r3, r2
 8005078:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005080:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005084:	d101      	bne.n	800508a <HAL_RCCEx_PeriphCLKConfig+0x412>
 8005086:	2301      	movs	r3, #1
 8005088:	61bb      	str	r3, [r7, #24]
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	f003 0308 	and.w	r3, r3, #8
 8005092:	2b00      	cmp	r3, #0
 8005094:	d001      	beq.n	800509a <HAL_RCCEx_PeriphCLKConfig+0x422>
 8005096:	2301      	movs	r3, #1
 8005098:	61bb      	str	r3, [r7, #24]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d00a      	beq.n	80050bc <HAL_RCCEx_PeriphCLKConfig+0x444>
 80050a6:	4b1f      	ldr	r3, [pc, #124]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050a8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80050ac:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80050b4:	491b      	ldr	r1, [pc, #108]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050b6:	4313      	orrs	r3, r2
 80050b8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80050c4:	2b00      	cmp	r3, #0
 80050c6:	d00b      	beq.n	80050e0 <HAL_RCCEx_PeriphCLKConfig+0x468>
 80050c8:	4b16      	ldr	r3, [pc, #88]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050ca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80050ce:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80050d8:	4912      	ldr	r1, [pc, #72]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050da:	4313      	orrs	r3, r2
 80050dc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	d00b      	beq.n	8005104 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80050ec:	4b0d      	ldr	r3, [pc, #52]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80050f2:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80050fc:	4909      	ldr	r1, [pc, #36]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80050fe:	4313      	orrs	r3, r2
 8005100:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800510c:	2b00      	cmp	r3, #0
 800510e:	d00f      	beq.n	8005130 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 8005110:	4b04      	ldr	r3, [pc, #16]	; (8005124 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005112:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005116:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005120:	e002      	b.n	8005128 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8005122:	bf00      	nop
 8005124:	40023800 	.word	0x40023800
 8005128:	4986      	ldr	r1, [pc, #536]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800512a:	4313      	orrs	r3, r2
 800512c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005138:	2b00      	cmp	r3, #0
 800513a:	d00b      	beq.n	8005154 <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 800513c:	4b81      	ldr	r3, [pc, #516]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800513e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005142:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800514c:	497d      	ldr	r1, [pc, #500]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800514e:	4313      	orrs	r3, r2
 8005150:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005154:	69fb      	ldr	r3, [r7, #28]
 8005156:	2b01      	cmp	r3, #1
 8005158:	d006      	beq.n	8005168 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005162:	2b00      	cmp	r3, #0
 8005164:	f000 80d6 	beq.w	8005314 <HAL_RCCEx_PeriphCLKConfig+0x69c>
 8005168:	4b76      	ldr	r3, [pc, #472]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	4a75      	ldr	r2, [pc, #468]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800516e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005172:	6013      	str	r3, [r2, #0]
 8005174:	f7fd fee6 	bl	8002f44 <HAL_GetTick>
 8005178:	6178      	str	r0, [r7, #20]
 800517a:	e008      	b.n	800518e <HAL_RCCEx_PeriphCLKConfig+0x516>
 800517c:	f7fd fee2 	bl	8002f44 <HAL_GetTick>
 8005180:	4602      	mov	r2, r0
 8005182:	697b      	ldr	r3, [r7, #20]
 8005184:	1ad3      	subs	r3, r2, r3
 8005186:	2b64      	cmp	r3, #100	; 0x64
 8005188:	d901      	bls.n	800518e <HAL_RCCEx_PeriphCLKConfig+0x516>
 800518a:	2303      	movs	r3, #3
 800518c:	e195      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 800518e:	4b6d      	ldr	r3, [pc, #436]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005196:	2b00      	cmp	r3, #0
 8005198:	d1f0      	bne.n	800517c <HAL_RCCEx_PeriphCLKConfig+0x504>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	f003 0301 	and.w	r3, r3, #1
 80051a2:	2b00      	cmp	r3, #0
 80051a4:	d021      	beq.n	80051ea <HAL_RCCEx_PeriphCLKConfig+0x572>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80051aa:	2b00      	cmp	r3, #0
 80051ac:	d11d      	bne.n	80051ea <HAL_RCCEx_PeriphCLKConfig+0x572>
 80051ae:	4b65      	ldr	r3, [pc, #404]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80051b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80051b4:	0c1b      	lsrs	r3, r3, #16
 80051b6:	f003 0303 	and.w	r3, r3, #3
 80051ba:	613b      	str	r3, [r7, #16]
 80051bc:	4b61      	ldr	r3, [pc, #388]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80051be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80051c2:	0e1b      	lsrs	r3, r3, #24
 80051c4:	f003 030f 	and.w	r3, r3, #15
 80051c8:	60fb      	str	r3, [r7, #12]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	685b      	ldr	r3, [r3, #4]
 80051ce:	019a      	lsls	r2, r3, #6
 80051d0:	693b      	ldr	r3, [r7, #16]
 80051d2:	041b      	lsls	r3, r3, #16
 80051d4:	431a      	orrs	r2, r3
 80051d6:	68fb      	ldr	r3, [r7, #12]
 80051d8:	061b      	lsls	r3, r3, #24
 80051da:	431a      	orrs	r2, r3
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	689b      	ldr	r3, [r3, #8]
 80051e0:	071b      	lsls	r3, r3, #28
 80051e2:	4958      	ldr	r1, [pc, #352]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80051e4:	4313      	orrs	r3, r2
 80051e6:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d004      	beq.n	8005200 <HAL_RCCEx_PeriphCLKConfig+0x588>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051fa:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80051fe:	d00a      	beq.n	8005216 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005208:	2b00      	cmp	r3, #0
 800520a:	d02e      	beq.n	800526a <HAL_RCCEx_PeriphCLKConfig+0x5f2>
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005210:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005214:	d129      	bne.n	800526a <HAL_RCCEx_PeriphCLKConfig+0x5f2>
 8005216:	4b4b      	ldr	r3, [pc, #300]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005218:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800521c:	0c1b      	lsrs	r3, r3, #16
 800521e:	f003 0303 	and.w	r3, r3, #3
 8005222:	613b      	str	r3, [r7, #16]
 8005224:	4b47      	ldr	r3, [pc, #284]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005226:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800522a:	0f1b      	lsrs	r3, r3, #28
 800522c:	f003 0307 	and.w	r3, r3, #7
 8005230:	60fb      	str	r3, [r7, #12]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	685b      	ldr	r3, [r3, #4]
 8005236:	019a      	lsls	r2, r3, #6
 8005238:	693b      	ldr	r3, [r7, #16]
 800523a:	041b      	lsls	r3, r3, #16
 800523c:	431a      	orrs	r2, r3
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	68db      	ldr	r3, [r3, #12]
 8005242:	061b      	lsls	r3, r3, #24
 8005244:	431a      	orrs	r2, r3
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	071b      	lsls	r3, r3, #28
 800524a:	493e      	ldr	r1, [pc, #248]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800524c:	4313      	orrs	r3, r2
 800524e:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005252:	4b3c      	ldr	r3, [pc, #240]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005254:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005258:	f023 021f 	bic.w	r2, r3, #31
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005260:	3b01      	subs	r3, #1
 8005262:	4938      	ldr	r1, [pc, #224]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005264:	4313      	orrs	r3, r2
 8005266:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005272:	2b00      	cmp	r3, #0
 8005274:	d01d      	beq.n	80052b2 <HAL_RCCEx_PeriphCLKConfig+0x63a>
 8005276:	4b33      	ldr	r3, [pc, #204]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005278:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800527c:	0e1b      	lsrs	r3, r3, #24
 800527e:	f003 030f 	and.w	r3, r3, #15
 8005282:	613b      	str	r3, [r7, #16]
 8005284:	4b2f      	ldr	r3, [pc, #188]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005286:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800528a:	0f1b      	lsrs	r3, r3, #28
 800528c:	f003 0307 	and.w	r3, r3, #7
 8005290:	60fb      	str	r3, [r7, #12]
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	685b      	ldr	r3, [r3, #4]
 8005296:	019a      	lsls	r2, r3, #6
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	691b      	ldr	r3, [r3, #16]
 800529c:	041b      	lsls	r3, r3, #16
 800529e:	431a      	orrs	r2, r3
 80052a0:	693b      	ldr	r3, [r7, #16]
 80052a2:	061b      	lsls	r3, r3, #24
 80052a4:	431a      	orrs	r2, r3
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	071b      	lsls	r3, r3, #28
 80052aa:	4926      	ldr	r1, [pc, #152]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80052ac:	4313      	orrs	r3, r2
 80052ae:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80052ba:	2b00      	cmp	r3, #0
 80052bc:	d011      	beq.n	80052e2 <HAL_RCCEx_PeriphCLKConfig+0x66a>
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	685b      	ldr	r3, [r3, #4]
 80052c2:	019a      	lsls	r2, r3, #6
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	691b      	ldr	r3, [r3, #16]
 80052c8:	041b      	lsls	r3, r3, #16
 80052ca:	431a      	orrs	r2, r3
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	68db      	ldr	r3, [r3, #12]
 80052d0:	061b      	lsls	r3, r3, #24
 80052d2:	431a      	orrs	r2, r3
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	689b      	ldr	r3, [r3, #8]
 80052d8:	071b      	lsls	r3, r3, #28
 80052da:	491a      	ldr	r1, [pc, #104]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80052dc:	4313      	orrs	r3, r2
 80052de:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80052e2:	4b18      	ldr	r3, [pc, #96]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	4a17      	ldr	r2, [pc, #92]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80052e8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80052ec:	6013      	str	r3, [r2, #0]
 80052ee:	f7fd fe29 	bl	8002f44 <HAL_GetTick>
 80052f2:	6178      	str	r0, [r7, #20]
 80052f4:	e008      	b.n	8005308 <HAL_RCCEx_PeriphCLKConfig+0x690>
 80052f6:	f7fd fe25 	bl	8002f44 <HAL_GetTick>
 80052fa:	4602      	mov	r2, r0
 80052fc:	697b      	ldr	r3, [r7, #20]
 80052fe:	1ad3      	subs	r3, r2, r3
 8005300:	2b64      	cmp	r3, #100	; 0x64
 8005302:	d901      	bls.n	8005308 <HAL_RCCEx_PeriphCLKConfig+0x690>
 8005304:	2303      	movs	r3, #3
 8005306:	e0d8      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005308:	4b0e      	ldr	r3, [pc, #56]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005310:	2b00      	cmp	r3, #0
 8005312:	d0f0      	beq.n	80052f6 <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8005314:	69bb      	ldr	r3, [r7, #24]
 8005316:	2b01      	cmp	r3, #1
 8005318:	f040 80ce 	bne.w	80054b8 <HAL_RCCEx_PeriphCLKConfig+0x840>
 800531c:	4b09      	ldr	r3, [pc, #36]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	4a08      	ldr	r2, [pc, #32]	; (8005344 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005322:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005326:	6013      	str	r3, [r2, #0]
 8005328:	f7fd fe0c 	bl	8002f44 <HAL_GetTick>
 800532c:	6178      	str	r0, [r7, #20]
 800532e:	e00b      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
 8005330:	f7fd fe08 	bl	8002f44 <HAL_GetTick>
 8005334:	4602      	mov	r2, r0
 8005336:	697b      	ldr	r3, [r7, #20]
 8005338:	1ad3      	subs	r3, r2, r3
 800533a:	2b64      	cmp	r3, #100	; 0x64
 800533c:	d904      	bls.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
 800533e:	2303      	movs	r3, #3
 8005340:	e0bb      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005342:	bf00      	nop
 8005344:	40023800 	.word	0x40023800
 8005348:	4b5e      	ldr	r3, [pc, #376]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005350:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005354:	d0ec      	beq.n	8005330 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800535e:	2b00      	cmp	r3, #0
 8005360:	d003      	beq.n	800536a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005366:	2b00      	cmp	r3, #0
 8005368:	d009      	beq.n	800537e <HAL_RCCEx_PeriphCLKConfig+0x706>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005372:	2b00      	cmp	r3, #0
 8005374:	d02e      	beq.n	80053d4 <HAL_RCCEx_PeriphCLKConfig+0x75c>
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800537a:	2b00      	cmp	r3, #0
 800537c:	d12a      	bne.n	80053d4 <HAL_RCCEx_PeriphCLKConfig+0x75c>
 800537e:	4b51      	ldr	r3, [pc, #324]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005380:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005384:	0c1b      	lsrs	r3, r3, #16
 8005386:	f003 0303 	and.w	r3, r3, #3
 800538a:	613b      	str	r3, [r7, #16]
 800538c:	4b4d      	ldr	r3, [pc, #308]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 800538e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005392:	0f1b      	lsrs	r3, r3, #28
 8005394:	f003 0307 	and.w	r3, r3, #7
 8005398:	60fb      	str	r3, [r7, #12]
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	695b      	ldr	r3, [r3, #20]
 800539e:	019a      	lsls	r2, r3, #6
 80053a0:	693b      	ldr	r3, [r7, #16]
 80053a2:	041b      	lsls	r3, r3, #16
 80053a4:	431a      	orrs	r2, r3
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	699b      	ldr	r3, [r3, #24]
 80053aa:	061b      	lsls	r3, r3, #24
 80053ac:	431a      	orrs	r2, r3
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	071b      	lsls	r3, r3, #28
 80053b2:	4944      	ldr	r1, [pc, #272]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80053b4:	4313      	orrs	r3, r2
 80053b6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80053ba:	4b42      	ldr	r3, [pc, #264]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80053bc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80053c0:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80053c8:	3b01      	subs	r3, #1
 80053ca:	021b      	lsls	r3, r3, #8
 80053cc:	493d      	ldr	r1, [pc, #244]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80053ce:	4313      	orrs	r3, r2
 80053d0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d022      	beq.n	8005426 <HAL_RCCEx_PeriphCLKConfig+0x7ae>
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80053e4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80053e8:	d11d      	bne.n	8005426 <HAL_RCCEx_PeriphCLKConfig+0x7ae>
 80053ea:	4b36      	ldr	r3, [pc, #216]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80053ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053f0:	0e1b      	lsrs	r3, r3, #24
 80053f2:	f003 030f 	and.w	r3, r3, #15
 80053f6:	613b      	str	r3, [r7, #16]
 80053f8:	4b32      	ldr	r3, [pc, #200]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80053fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053fe:	0f1b      	lsrs	r3, r3, #28
 8005400:	f003 0307 	and.w	r3, r3, #7
 8005404:	60fb      	str	r3, [r7, #12]
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	695b      	ldr	r3, [r3, #20]
 800540a:	019a      	lsls	r2, r3, #6
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	6a1b      	ldr	r3, [r3, #32]
 8005410:	041b      	lsls	r3, r3, #16
 8005412:	431a      	orrs	r2, r3
 8005414:	693b      	ldr	r3, [r7, #16]
 8005416:	061b      	lsls	r3, r3, #24
 8005418:	431a      	orrs	r2, r3
 800541a:	68fb      	ldr	r3, [r7, #12]
 800541c:	071b      	lsls	r3, r3, #28
 800541e:	4929      	ldr	r1, [pc, #164]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005420:	4313      	orrs	r3, r2
 8005422:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	f003 0308 	and.w	r3, r3, #8
 800542e:	2b00      	cmp	r3, #0
 8005430:	d028      	beq.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x80c>
 8005432:	4b24      	ldr	r3, [pc, #144]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005434:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005438:	0e1b      	lsrs	r3, r3, #24
 800543a:	f003 030f 	and.w	r3, r3, #15
 800543e:	613b      	str	r3, [r7, #16]
 8005440:	4b20      	ldr	r3, [pc, #128]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005442:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005446:	0c1b      	lsrs	r3, r3, #16
 8005448:	f003 0303 	and.w	r3, r3, #3
 800544c:	60fb      	str	r3, [r7, #12]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	695b      	ldr	r3, [r3, #20]
 8005452:	019a      	lsls	r2, r3, #6
 8005454:	68fb      	ldr	r3, [r7, #12]
 8005456:	041b      	lsls	r3, r3, #16
 8005458:	431a      	orrs	r2, r3
 800545a:	693b      	ldr	r3, [r7, #16]
 800545c:	061b      	lsls	r3, r3, #24
 800545e:	431a      	orrs	r2, r3
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	69db      	ldr	r3, [r3, #28]
 8005464:	071b      	lsls	r3, r3, #28
 8005466:	4917      	ldr	r1, [pc, #92]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005468:	4313      	orrs	r3, r2
 800546a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800546e:	4b15      	ldr	r3, [pc, #84]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005470:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005474:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800547c:	4911      	ldr	r1, [pc, #68]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 800547e:	4313      	orrs	r3, r2
 8005480:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005484:	4b0f      	ldr	r3, [pc, #60]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005486:	681b      	ldr	r3, [r3, #0]
 8005488:	4a0e      	ldr	r2, [pc, #56]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 800548a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800548e:	6013      	str	r3, [r2, #0]
 8005490:	f7fd fd58 	bl	8002f44 <HAL_GetTick>
 8005494:	6178      	str	r0, [r7, #20]
 8005496:	e008      	b.n	80054aa <HAL_RCCEx_PeriphCLKConfig+0x832>
 8005498:	f7fd fd54 	bl	8002f44 <HAL_GetTick>
 800549c:	4602      	mov	r2, r0
 800549e:	697b      	ldr	r3, [r7, #20]
 80054a0:	1ad3      	subs	r3, r2, r3
 80054a2:	2b64      	cmp	r3, #100	; 0x64
 80054a4:	d901      	bls.n	80054aa <HAL_RCCEx_PeriphCLKConfig+0x832>
 80054a6:	2303      	movs	r3, #3
 80054a8:	e007      	b.n	80054ba <HAL_RCCEx_PeriphCLKConfig+0x842>
 80054aa:	4b06      	ldr	r3, [pc, #24]	; (80054c4 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80054b2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80054b6:	d1ef      	bne.n	8005498 <HAL_RCCEx_PeriphCLKConfig+0x820>
 80054b8:	2300      	movs	r3, #0
 80054ba:	4618      	mov	r0, r3
 80054bc:	3720      	adds	r7, #32
 80054be:	46bd      	mov	sp, r7
 80054c0:	bd80      	pop	{r7, pc}
 80054c2:	bf00      	nop
 80054c4:	40023800 	.word	0x40023800

080054c8 <HAL_TIM_Base_Init>:
 80054c8:	b580      	push	{r7, lr}
 80054ca:	b082      	sub	sp, #8
 80054cc:	af00      	add	r7, sp, #0
 80054ce:	6078      	str	r0, [r7, #4]
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d101      	bne.n	80054da <HAL_TIM_Base_Init+0x12>
 80054d6:	2301      	movs	r3, #1
 80054d8:	e049      	b.n	800556e <HAL_TIM_Base_Init+0xa6>
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80054e0:	b2db      	uxtb	r3, r3
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d106      	bne.n	80054f4 <HAL_TIM_Base_Init+0x2c>
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	2200      	movs	r2, #0
 80054ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80054ee:	6878      	ldr	r0, [r7, #4]
 80054f0:	f7fd fad6 	bl	8002aa0 <HAL_TIM_Base_MspInit>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	2202      	movs	r2, #2
 80054f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681a      	ldr	r2, [r3, #0]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	3304      	adds	r3, #4
 8005504:	4619      	mov	r1, r3
 8005506:	4610      	mov	r0, r2
 8005508:	f000 fb3a 	bl	8005b80 <TIM_Base_SetConfig>
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	2201      	movs	r2, #1
 8005510:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	2201      	movs	r2, #1
 8005518:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	2201      	movs	r2, #1
 8005520:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	2201      	movs	r2, #1
 8005528:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	2201      	movs	r2, #1
 8005530:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	2201      	movs	r2, #1
 8005538:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	2201      	movs	r2, #1
 8005540:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	2201      	movs	r2, #1
 8005548:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	2201      	movs	r2, #1
 8005550:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	2201      	movs	r2, #1
 8005558:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	2201      	movs	r2, #1
 8005560:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	2201      	movs	r2, #1
 8005568:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800556c:	2300      	movs	r3, #0
 800556e:	4618      	mov	r0, r3
 8005570:	3708      	adds	r7, #8
 8005572:	46bd      	mov	sp, r7
 8005574:	bd80      	pop	{r7, pc}
	...

08005578 <HAL_TIM_Base_Start_IT>:
 8005578:	b480      	push	{r7}
 800557a:	b085      	sub	sp, #20
 800557c:	af00      	add	r7, sp, #0
 800557e:	6078      	str	r0, [r7, #4]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005586:	b2db      	uxtb	r3, r3
 8005588:	2b01      	cmp	r3, #1
 800558a:	d001      	beq.n	8005590 <HAL_TIM_Base_Start_IT+0x18>
 800558c:	2301      	movs	r3, #1
 800558e:	e054      	b.n	800563a <HAL_TIM_Base_Start_IT+0xc2>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	2202      	movs	r2, #2
 8005594:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	68da      	ldr	r2, [r3, #12]
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	681b      	ldr	r3, [r3, #0]
 80055a2:	f042 0201 	orr.w	r2, r2, #1
 80055a6:	60da      	str	r2, [r3, #12]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	4a26      	ldr	r2, [pc, #152]	; (8005648 <HAL_TIM_Base_Start_IT+0xd0>)
 80055ae:	4293      	cmp	r3, r2
 80055b0:	d022      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80055ba:	d01d      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	4a22      	ldr	r2, [pc, #136]	; (800564c <HAL_TIM_Base_Start_IT+0xd4>)
 80055c2:	4293      	cmp	r3, r2
 80055c4:	d018      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	4a21      	ldr	r2, [pc, #132]	; (8005650 <HAL_TIM_Base_Start_IT+0xd8>)
 80055cc:	4293      	cmp	r3, r2
 80055ce:	d013      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	681b      	ldr	r3, [r3, #0]
 80055d4:	4a1f      	ldr	r2, [pc, #124]	; (8005654 <HAL_TIM_Base_Start_IT+0xdc>)
 80055d6:	4293      	cmp	r3, r2
 80055d8:	d00e      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	681b      	ldr	r3, [r3, #0]
 80055de:	4a1e      	ldr	r2, [pc, #120]	; (8005658 <HAL_TIM_Base_Start_IT+0xe0>)
 80055e0:	4293      	cmp	r3, r2
 80055e2:	d009      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	4a1c      	ldr	r2, [pc, #112]	; (800565c <HAL_TIM_Base_Start_IT+0xe4>)
 80055ea:	4293      	cmp	r3, r2
 80055ec:	d004      	beq.n	80055f8 <HAL_TIM_Base_Start_IT+0x80>
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	4a1b      	ldr	r2, [pc, #108]	; (8005660 <HAL_TIM_Base_Start_IT+0xe8>)
 80055f4:	4293      	cmp	r3, r2
 80055f6:	d115      	bne.n	8005624 <HAL_TIM_Base_Start_IT+0xac>
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	681b      	ldr	r3, [r3, #0]
 80055fc:	689a      	ldr	r2, [r3, #8]
 80055fe:	4b19      	ldr	r3, [pc, #100]	; (8005664 <HAL_TIM_Base_Start_IT+0xec>)
 8005600:	4013      	ands	r3, r2
 8005602:	60fb      	str	r3, [r7, #12]
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	2b06      	cmp	r3, #6
 8005608:	d015      	beq.n	8005636 <HAL_TIM_Base_Start_IT+0xbe>
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005610:	d011      	beq.n	8005636 <HAL_TIM_Base_Start_IT+0xbe>
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	681a      	ldr	r2, [r3, #0]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f042 0201 	orr.w	r2, r2, #1
 8005620:	601a      	str	r2, [r3, #0]
 8005622:	e008      	b.n	8005636 <HAL_TIM_Base_Start_IT+0xbe>
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	681a      	ldr	r2, [r3, #0]
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	f042 0201 	orr.w	r2, r2, #1
 8005632:	601a      	str	r2, [r3, #0]
 8005634:	e000      	b.n	8005638 <HAL_TIM_Base_Start_IT+0xc0>
 8005636:	bf00      	nop
 8005638:	2300      	movs	r3, #0
 800563a:	4618      	mov	r0, r3
 800563c:	3714      	adds	r7, #20
 800563e:	46bd      	mov	sp, r7
 8005640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005644:	4770      	bx	lr
 8005646:	bf00      	nop
 8005648:	40010000 	.word	0x40010000
 800564c:	40000400 	.word	0x40000400
 8005650:	40000800 	.word	0x40000800
 8005654:	40000c00 	.word	0x40000c00
 8005658:	40010400 	.word	0x40010400
 800565c:	40014000 	.word	0x40014000
 8005660:	40001800 	.word	0x40001800
 8005664:	00010007 	.word	0x00010007

08005668 <HAL_TIM_Base_Stop_IT>:
 8005668:	b480      	push	{r7}
 800566a:	b083      	sub	sp, #12
 800566c:	af00      	add	r7, sp, #0
 800566e:	6078      	str	r0, [r7, #4]
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	68da      	ldr	r2, [r3, #12]
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	f022 0201 	bic.w	r2, r2, #1
 800567e:	60da      	str	r2, [r3, #12]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	6a1a      	ldr	r2, [r3, #32]
 8005686:	f241 1311 	movw	r3, #4369	; 0x1111
 800568a:	4013      	ands	r3, r2
 800568c:	2b00      	cmp	r3, #0
 800568e:	d10f      	bne.n	80056b0 <HAL_TIM_Base_Stop_IT+0x48>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	6a1a      	ldr	r2, [r3, #32]
 8005696:	f240 4344 	movw	r3, #1092	; 0x444
 800569a:	4013      	ands	r3, r2
 800569c:	2b00      	cmp	r3, #0
 800569e:	d107      	bne.n	80056b0 <HAL_TIM_Base_Stop_IT+0x48>
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	681b      	ldr	r3, [r3, #0]
 80056a4:	681a      	ldr	r2, [r3, #0]
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	f022 0201 	bic.w	r2, r2, #1
 80056ae:	601a      	str	r2, [r3, #0]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	2201      	movs	r2, #1
 80056b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80056b8:	2300      	movs	r3, #0
 80056ba:	4618      	mov	r0, r3
 80056bc:	370c      	adds	r7, #12
 80056be:	46bd      	mov	sp, r7
 80056c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c4:	4770      	bx	lr

080056c6 <HAL_TIM_IRQHandler>:
 80056c6:	b580      	push	{r7, lr}
 80056c8:	b082      	sub	sp, #8
 80056ca:	af00      	add	r7, sp, #0
 80056cc:	6078      	str	r0, [r7, #4]
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	691b      	ldr	r3, [r3, #16]
 80056d4:	f003 0302 	and.w	r3, r3, #2
 80056d8:	2b02      	cmp	r3, #2
 80056da:	d122      	bne.n	8005722 <HAL_TIM_IRQHandler+0x5c>
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	68db      	ldr	r3, [r3, #12]
 80056e2:	f003 0302 	and.w	r3, r3, #2
 80056e6:	2b02      	cmp	r3, #2
 80056e8:	d11b      	bne.n	8005722 <HAL_TIM_IRQHandler+0x5c>
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	681b      	ldr	r3, [r3, #0]
 80056ee:	f06f 0202 	mvn.w	r2, #2
 80056f2:	611a      	str	r2, [r3, #16]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	2201      	movs	r2, #1
 80056f8:	771a      	strb	r2, [r3, #28]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	699b      	ldr	r3, [r3, #24]
 8005700:	f003 0303 	and.w	r3, r3, #3
 8005704:	2b00      	cmp	r3, #0
 8005706:	d003      	beq.n	8005710 <HAL_TIM_IRQHandler+0x4a>
 8005708:	6878      	ldr	r0, [r7, #4]
 800570a:	f000 fa1b 	bl	8005b44 <HAL_TIM_IC_CaptureCallback>
 800570e:	e005      	b.n	800571c <HAL_TIM_IRQHandler+0x56>
 8005710:	6878      	ldr	r0, [r7, #4]
 8005712:	f000 fa0d 	bl	8005b30 <HAL_TIM_OC_DelayElapsedCallback>
 8005716:	6878      	ldr	r0, [r7, #4]
 8005718:	f000 fa1e 	bl	8005b58 <HAL_TIM_PWM_PulseFinishedCallback>
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	2200      	movs	r2, #0
 8005720:	771a      	strb	r2, [r3, #28]
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	691b      	ldr	r3, [r3, #16]
 8005728:	f003 0304 	and.w	r3, r3, #4
 800572c:	2b04      	cmp	r3, #4
 800572e:	d122      	bne.n	8005776 <HAL_TIM_IRQHandler+0xb0>
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	68db      	ldr	r3, [r3, #12]
 8005736:	f003 0304 	and.w	r3, r3, #4
 800573a:	2b04      	cmp	r3, #4
 800573c:	d11b      	bne.n	8005776 <HAL_TIM_IRQHandler+0xb0>
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	f06f 0204 	mvn.w	r2, #4
 8005746:	611a      	str	r2, [r3, #16]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	2202      	movs	r2, #2
 800574c:	771a      	strb	r2, [r3, #28]
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	699b      	ldr	r3, [r3, #24]
 8005754:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005758:	2b00      	cmp	r3, #0
 800575a:	d003      	beq.n	8005764 <HAL_TIM_IRQHandler+0x9e>
 800575c:	6878      	ldr	r0, [r7, #4]
 800575e:	f000 f9f1 	bl	8005b44 <HAL_TIM_IC_CaptureCallback>
 8005762:	e005      	b.n	8005770 <HAL_TIM_IRQHandler+0xaa>
 8005764:	6878      	ldr	r0, [r7, #4]
 8005766:	f000 f9e3 	bl	8005b30 <HAL_TIM_OC_DelayElapsedCallback>
 800576a:	6878      	ldr	r0, [r7, #4]
 800576c:	f000 f9f4 	bl	8005b58 <HAL_TIM_PWM_PulseFinishedCallback>
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	2200      	movs	r2, #0
 8005774:	771a      	strb	r2, [r3, #28]
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	691b      	ldr	r3, [r3, #16]
 800577c:	f003 0308 	and.w	r3, r3, #8
 8005780:	2b08      	cmp	r3, #8
 8005782:	d122      	bne.n	80057ca <HAL_TIM_IRQHandler+0x104>
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	68db      	ldr	r3, [r3, #12]
 800578a:	f003 0308 	and.w	r3, r3, #8
 800578e:	2b08      	cmp	r3, #8
 8005790:	d11b      	bne.n	80057ca <HAL_TIM_IRQHandler+0x104>
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	f06f 0208 	mvn.w	r2, #8
 800579a:	611a      	str	r2, [r3, #16]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	2204      	movs	r2, #4
 80057a0:	771a      	strb	r2, [r3, #28]
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	69db      	ldr	r3, [r3, #28]
 80057a8:	f003 0303 	and.w	r3, r3, #3
 80057ac:	2b00      	cmp	r3, #0
 80057ae:	d003      	beq.n	80057b8 <HAL_TIM_IRQHandler+0xf2>
 80057b0:	6878      	ldr	r0, [r7, #4]
 80057b2:	f000 f9c7 	bl	8005b44 <HAL_TIM_IC_CaptureCallback>
 80057b6:	e005      	b.n	80057c4 <HAL_TIM_IRQHandler+0xfe>
 80057b8:	6878      	ldr	r0, [r7, #4]
 80057ba:	f000 f9b9 	bl	8005b30 <HAL_TIM_OC_DelayElapsedCallback>
 80057be:	6878      	ldr	r0, [r7, #4]
 80057c0:	f000 f9ca 	bl	8005b58 <HAL_TIM_PWM_PulseFinishedCallback>
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	2200      	movs	r2, #0
 80057c8:	771a      	strb	r2, [r3, #28]
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	691b      	ldr	r3, [r3, #16]
 80057d0:	f003 0310 	and.w	r3, r3, #16
 80057d4:	2b10      	cmp	r3, #16
 80057d6:	d122      	bne.n	800581e <HAL_TIM_IRQHandler+0x158>
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	681b      	ldr	r3, [r3, #0]
 80057dc:	68db      	ldr	r3, [r3, #12]
 80057de:	f003 0310 	and.w	r3, r3, #16
 80057e2:	2b10      	cmp	r3, #16
 80057e4:	d11b      	bne.n	800581e <HAL_TIM_IRQHandler+0x158>
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	f06f 0210 	mvn.w	r2, #16
 80057ee:	611a      	str	r2, [r3, #16]
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	2208      	movs	r2, #8
 80057f4:	771a      	strb	r2, [r3, #28]
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	69db      	ldr	r3, [r3, #28]
 80057fc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005800:	2b00      	cmp	r3, #0
 8005802:	d003      	beq.n	800580c <HAL_TIM_IRQHandler+0x146>
 8005804:	6878      	ldr	r0, [r7, #4]
 8005806:	f000 f99d 	bl	8005b44 <HAL_TIM_IC_CaptureCallback>
 800580a:	e005      	b.n	8005818 <HAL_TIM_IRQHandler+0x152>
 800580c:	6878      	ldr	r0, [r7, #4]
 800580e:	f000 f98f 	bl	8005b30 <HAL_TIM_OC_DelayElapsedCallback>
 8005812:	6878      	ldr	r0, [r7, #4]
 8005814:	f000 f9a0 	bl	8005b58 <HAL_TIM_PWM_PulseFinishedCallback>
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	2200      	movs	r2, #0
 800581c:	771a      	strb	r2, [r3, #28]
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	691b      	ldr	r3, [r3, #16]
 8005824:	f003 0301 	and.w	r3, r3, #1
 8005828:	2b01      	cmp	r3, #1
 800582a:	d10e      	bne.n	800584a <HAL_TIM_IRQHandler+0x184>
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	68db      	ldr	r3, [r3, #12]
 8005832:	f003 0301 	and.w	r3, r3, #1
 8005836:	2b01      	cmp	r3, #1
 8005838:	d107      	bne.n	800584a <HAL_TIM_IRQHandler+0x184>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	f06f 0201 	mvn.w	r2, #1
 8005842:	611a      	str	r2, [r3, #16]
 8005844:	6878      	ldr	r0, [r7, #4]
 8005846:	f000 f969 	bl	8005b1c <HAL_TIM_PeriodElapsedCallback>
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	691b      	ldr	r3, [r3, #16]
 8005850:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005854:	2b80      	cmp	r3, #128	; 0x80
 8005856:	d10e      	bne.n	8005876 <HAL_TIM_IRQHandler+0x1b0>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	68db      	ldr	r3, [r3, #12]
 800585e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005862:	2b80      	cmp	r3, #128	; 0x80
 8005864:	d107      	bne.n	8005876 <HAL_TIM_IRQHandler+0x1b0>
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	681b      	ldr	r3, [r3, #0]
 800586a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800586e:	611a      	str	r2, [r3, #16]
 8005870:	6878      	ldr	r0, [r7, #4]
 8005872:	f000 fbeb 	bl	800604c <HAL_TIMEx_BreakCallback>
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	681b      	ldr	r3, [r3, #0]
 800587a:	691b      	ldr	r3, [r3, #16]
 800587c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005880:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005884:	d10e      	bne.n	80058a4 <HAL_TIM_IRQHandler+0x1de>
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	68db      	ldr	r3, [r3, #12]
 800588c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005890:	2b80      	cmp	r3, #128	; 0x80
 8005892:	d107      	bne.n	80058a4 <HAL_TIM_IRQHandler+0x1de>
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800589c:	611a      	str	r2, [r3, #16]
 800589e:	6878      	ldr	r0, [r7, #4]
 80058a0:	f000 fbde 	bl	8006060 <HAL_TIMEx_Break2Callback>
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	691b      	ldr	r3, [r3, #16]
 80058aa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80058ae:	2b40      	cmp	r3, #64	; 0x40
 80058b0:	d10e      	bne.n	80058d0 <HAL_TIM_IRQHandler+0x20a>
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	68db      	ldr	r3, [r3, #12]
 80058b8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80058bc:	2b40      	cmp	r3, #64	; 0x40
 80058be:	d107      	bne.n	80058d0 <HAL_TIM_IRQHandler+0x20a>
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	681b      	ldr	r3, [r3, #0]
 80058c4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80058c8:	611a      	str	r2, [r3, #16]
 80058ca:	6878      	ldr	r0, [r7, #4]
 80058cc:	f000 f94e 	bl	8005b6c <HAL_TIM_TriggerCallback>
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	691b      	ldr	r3, [r3, #16]
 80058d6:	f003 0320 	and.w	r3, r3, #32
 80058da:	2b20      	cmp	r3, #32
 80058dc:	d10e      	bne.n	80058fc <HAL_TIM_IRQHandler+0x236>
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	68db      	ldr	r3, [r3, #12]
 80058e4:	f003 0320 	and.w	r3, r3, #32
 80058e8:	2b20      	cmp	r3, #32
 80058ea:	d107      	bne.n	80058fc <HAL_TIM_IRQHandler+0x236>
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	681b      	ldr	r3, [r3, #0]
 80058f0:	f06f 0220 	mvn.w	r2, #32
 80058f4:	611a      	str	r2, [r3, #16]
 80058f6:	6878      	ldr	r0, [r7, #4]
 80058f8:	f000 fb9e 	bl	8006038 <HAL_TIMEx_CommutCallback>
 80058fc:	bf00      	nop
 80058fe:	3708      	adds	r7, #8
 8005900:	46bd      	mov	sp, r7
 8005902:	bd80      	pop	{r7, pc}

08005904 <HAL_TIM_ConfigClockSource>:
 8005904:	b580      	push	{r7, lr}
 8005906:	b084      	sub	sp, #16
 8005908:	af00      	add	r7, sp, #0
 800590a:	6078      	str	r0, [r7, #4]
 800590c:	6039      	str	r1, [r7, #0]
 800590e:	2300      	movs	r3, #0
 8005910:	73fb      	strb	r3, [r7, #15]
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005918:	2b01      	cmp	r3, #1
 800591a:	d101      	bne.n	8005920 <HAL_TIM_ConfigClockSource+0x1c>
 800591c:	2302      	movs	r3, #2
 800591e:	e0b4      	b.n	8005a8a <HAL_TIM_ConfigClockSource+0x186>
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	2201      	movs	r2, #1
 8005924:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	2202      	movs	r2, #2
 800592c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	689b      	ldr	r3, [r3, #8]
 8005936:	60bb      	str	r3, [r7, #8]
 8005938:	68ba      	ldr	r2, [r7, #8]
 800593a:	4b56      	ldr	r3, [pc, #344]	; (8005a94 <HAL_TIM_ConfigClockSource+0x190>)
 800593c:	4013      	ands	r3, r2
 800593e:	60bb      	str	r3, [r7, #8]
 8005940:	68bb      	ldr	r3, [r7, #8]
 8005942:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005946:	60bb      	str	r3, [r7, #8]
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	68ba      	ldr	r2, [r7, #8]
 800594e:	609a      	str	r2, [r3, #8]
 8005950:	683b      	ldr	r3, [r7, #0]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005958:	d03e      	beq.n	80059d8 <HAL_TIM_ConfigClockSource+0xd4>
 800595a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800595e:	f200 8087 	bhi.w	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005962:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005966:	f000 8086 	beq.w	8005a76 <HAL_TIM_ConfigClockSource+0x172>
 800596a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800596e:	d87f      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005970:	2b70      	cmp	r3, #112	; 0x70
 8005972:	d01a      	beq.n	80059aa <HAL_TIM_ConfigClockSource+0xa6>
 8005974:	2b70      	cmp	r3, #112	; 0x70
 8005976:	d87b      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005978:	2b60      	cmp	r3, #96	; 0x60
 800597a:	d050      	beq.n	8005a1e <HAL_TIM_ConfigClockSource+0x11a>
 800597c:	2b60      	cmp	r3, #96	; 0x60
 800597e:	d877      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005980:	2b50      	cmp	r3, #80	; 0x50
 8005982:	d03c      	beq.n	80059fe <HAL_TIM_ConfigClockSource+0xfa>
 8005984:	2b50      	cmp	r3, #80	; 0x50
 8005986:	d873      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005988:	2b40      	cmp	r3, #64	; 0x40
 800598a:	d058      	beq.n	8005a3e <HAL_TIM_ConfigClockSource+0x13a>
 800598c:	2b40      	cmp	r3, #64	; 0x40
 800598e:	d86f      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005990:	2b30      	cmp	r3, #48	; 0x30
 8005992:	d064      	beq.n	8005a5e <HAL_TIM_ConfigClockSource+0x15a>
 8005994:	2b30      	cmp	r3, #48	; 0x30
 8005996:	d86b      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 8005998:	2b20      	cmp	r3, #32
 800599a:	d060      	beq.n	8005a5e <HAL_TIM_ConfigClockSource+0x15a>
 800599c:	2b20      	cmp	r3, #32
 800599e:	d867      	bhi.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	d05c      	beq.n	8005a5e <HAL_TIM_ConfigClockSource+0x15a>
 80059a4:	2b10      	cmp	r3, #16
 80059a6:	d05a      	beq.n	8005a5e <HAL_TIM_ConfigClockSource+0x15a>
 80059a8:	e062      	b.n	8005a70 <HAL_TIM_ConfigClockSource+0x16c>
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	6818      	ldr	r0, [r3, #0]
 80059ae:	683b      	ldr	r3, [r7, #0]
 80059b0:	6899      	ldr	r1, [r3, #8]
 80059b2:	683b      	ldr	r3, [r7, #0]
 80059b4:	685a      	ldr	r2, [r3, #4]
 80059b6:	683b      	ldr	r3, [r7, #0]
 80059b8:	68db      	ldr	r3, [r3, #12]
 80059ba:	f000 fa8f 	bl	8005edc <TIM_ETR_SetConfig>
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	689b      	ldr	r3, [r3, #8]
 80059c4:	60bb      	str	r3, [r7, #8]
 80059c6:	68bb      	ldr	r3, [r7, #8]
 80059c8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80059cc:	60bb      	str	r3, [r7, #8]
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	68ba      	ldr	r2, [r7, #8]
 80059d4:	609a      	str	r2, [r3, #8]
 80059d6:	e04f      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	6818      	ldr	r0, [r3, #0]
 80059dc:	683b      	ldr	r3, [r7, #0]
 80059de:	6899      	ldr	r1, [r3, #8]
 80059e0:	683b      	ldr	r3, [r7, #0]
 80059e2:	685a      	ldr	r2, [r3, #4]
 80059e4:	683b      	ldr	r3, [r7, #0]
 80059e6:	68db      	ldr	r3, [r3, #12]
 80059e8:	f000 fa78 	bl	8005edc <TIM_ETR_SetConfig>
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	681b      	ldr	r3, [r3, #0]
 80059f0:	689a      	ldr	r2, [r3, #8]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80059fa:	609a      	str	r2, [r3, #8]
 80059fc:	e03c      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	6818      	ldr	r0, [r3, #0]
 8005a02:	683b      	ldr	r3, [r7, #0]
 8005a04:	6859      	ldr	r1, [r3, #4]
 8005a06:	683b      	ldr	r3, [r7, #0]
 8005a08:	68db      	ldr	r3, [r3, #12]
 8005a0a:	461a      	mov	r2, r3
 8005a0c:	f000 f9ec 	bl	8005de8 <TIM_TI1_ConfigInputStage>
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	2150      	movs	r1, #80	; 0x50
 8005a16:	4618      	mov	r0, r3
 8005a18:	f000 fa45 	bl	8005ea6 <TIM_ITRx_SetConfig>
 8005a1c:	e02c      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	6818      	ldr	r0, [r3, #0]
 8005a22:	683b      	ldr	r3, [r7, #0]
 8005a24:	6859      	ldr	r1, [r3, #4]
 8005a26:	683b      	ldr	r3, [r7, #0]
 8005a28:	68db      	ldr	r3, [r3, #12]
 8005a2a:	461a      	mov	r2, r3
 8005a2c:	f000 fa0b 	bl	8005e46 <TIM_TI2_ConfigInputStage>
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	2160      	movs	r1, #96	; 0x60
 8005a36:	4618      	mov	r0, r3
 8005a38:	f000 fa35 	bl	8005ea6 <TIM_ITRx_SetConfig>
 8005a3c:	e01c      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	6818      	ldr	r0, [r3, #0]
 8005a42:	683b      	ldr	r3, [r7, #0]
 8005a44:	6859      	ldr	r1, [r3, #4]
 8005a46:	683b      	ldr	r3, [r7, #0]
 8005a48:	68db      	ldr	r3, [r3, #12]
 8005a4a:	461a      	mov	r2, r3
 8005a4c:	f000 f9cc 	bl	8005de8 <TIM_TI1_ConfigInputStage>
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	2140      	movs	r1, #64	; 0x40
 8005a56:	4618      	mov	r0, r3
 8005a58:	f000 fa25 	bl	8005ea6 <TIM_ITRx_SetConfig>
 8005a5c:	e00c      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	681a      	ldr	r2, [r3, #0]
 8005a62:	683b      	ldr	r3, [r7, #0]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	4619      	mov	r1, r3
 8005a68:	4610      	mov	r0, r2
 8005a6a:	f000 fa1c 	bl	8005ea6 <TIM_ITRx_SetConfig>
 8005a6e:	e003      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 8005a70:	2301      	movs	r3, #1
 8005a72:	73fb      	strb	r3, [r7, #15]
 8005a74:	e000      	b.n	8005a78 <HAL_TIM_ConfigClockSource+0x174>
 8005a76:	bf00      	nop
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	2201      	movs	r2, #1
 8005a7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	2200      	movs	r2, #0
 8005a84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a88:	7bfb      	ldrb	r3, [r7, #15]
 8005a8a:	4618      	mov	r0, r3
 8005a8c:	3710      	adds	r7, #16
 8005a8e:	46bd      	mov	sp, r7
 8005a90:	bd80      	pop	{r7, pc}
 8005a92:	bf00      	nop
 8005a94:	fffeff88 	.word	0xfffeff88

08005a98 <HAL_TIM_SlaveConfigSynchro>:
 8005a98:	b580      	push	{r7, lr}
 8005a9a:	b082      	sub	sp, #8
 8005a9c:	af00      	add	r7, sp, #0
 8005a9e:	6078      	str	r0, [r7, #4]
 8005aa0:	6039      	str	r1, [r7, #0]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005aa8:	2b01      	cmp	r3, #1
 8005aaa:	d101      	bne.n	8005ab0 <HAL_TIM_SlaveConfigSynchro+0x18>
 8005aac:	2302      	movs	r3, #2
 8005aae:	e031      	b.n	8005b14 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	2201      	movs	r2, #1
 8005ab4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	2202      	movs	r2, #2
 8005abc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ac0:	6839      	ldr	r1, [r7, #0]
 8005ac2:	6878      	ldr	r0, [r7, #4]
 8005ac4:	f000 f8fc 	bl	8005cc0 <TIM_SlaveTimer_SetConfig>
 8005ac8:	4603      	mov	r3, r0
 8005aca:	2b00      	cmp	r3, #0
 8005acc:	d009      	beq.n	8005ae2 <HAL_TIM_SlaveConfigSynchro+0x4a>
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	2201      	movs	r2, #1
 8005ad2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	2200      	movs	r2, #0
 8005ada:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ade:	2301      	movs	r3, #1
 8005ae0:	e018      	b.n	8005b14 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	68da      	ldr	r2, [r3, #12]
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005af0:	60da      	str	r2, [r3, #12]
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	68da      	ldr	r2, [r3, #12]
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005b00:	60da      	str	r2, [r3, #12]
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	2201      	movs	r2, #1
 8005b06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	2200      	movs	r2, #0
 8005b0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b12:	2300      	movs	r3, #0
 8005b14:	4618      	mov	r0, r3
 8005b16:	3708      	adds	r7, #8
 8005b18:	46bd      	mov	sp, r7
 8005b1a:	bd80      	pop	{r7, pc}

08005b1c <HAL_TIM_PeriodElapsedCallback>:
 8005b1c:	b480      	push	{r7}
 8005b1e:	b083      	sub	sp, #12
 8005b20:	af00      	add	r7, sp, #0
 8005b22:	6078      	str	r0, [r7, #4]
 8005b24:	bf00      	nop
 8005b26:	370c      	adds	r7, #12
 8005b28:	46bd      	mov	sp, r7
 8005b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b2e:	4770      	bx	lr

08005b30 <HAL_TIM_OC_DelayElapsedCallback>:
 8005b30:	b480      	push	{r7}
 8005b32:	b083      	sub	sp, #12
 8005b34:	af00      	add	r7, sp, #0
 8005b36:	6078      	str	r0, [r7, #4]
 8005b38:	bf00      	nop
 8005b3a:	370c      	adds	r7, #12
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b42:	4770      	bx	lr

08005b44 <HAL_TIM_IC_CaptureCallback>:
 8005b44:	b480      	push	{r7}
 8005b46:	b083      	sub	sp, #12
 8005b48:	af00      	add	r7, sp, #0
 8005b4a:	6078      	str	r0, [r7, #4]
 8005b4c:	bf00      	nop
 8005b4e:	370c      	adds	r7, #12
 8005b50:	46bd      	mov	sp, r7
 8005b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b56:	4770      	bx	lr

08005b58 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005b58:	b480      	push	{r7}
 8005b5a:	b083      	sub	sp, #12
 8005b5c:	af00      	add	r7, sp, #0
 8005b5e:	6078      	str	r0, [r7, #4]
 8005b60:	bf00      	nop
 8005b62:	370c      	adds	r7, #12
 8005b64:	46bd      	mov	sp, r7
 8005b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b6a:	4770      	bx	lr

08005b6c <HAL_TIM_TriggerCallback>:
 8005b6c:	b480      	push	{r7}
 8005b6e:	b083      	sub	sp, #12
 8005b70:	af00      	add	r7, sp, #0
 8005b72:	6078      	str	r0, [r7, #4]
 8005b74:	bf00      	nop
 8005b76:	370c      	adds	r7, #12
 8005b78:	46bd      	mov	sp, r7
 8005b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b7e:	4770      	bx	lr

08005b80 <TIM_Base_SetConfig>:
 8005b80:	b480      	push	{r7}
 8005b82:	b085      	sub	sp, #20
 8005b84:	af00      	add	r7, sp, #0
 8005b86:	6078      	str	r0, [r7, #4]
 8005b88:	6039      	str	r1, [r7, #0]
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	60fb      	str	r3, [r7, #12]
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	4a40      	ldr	r2, [pc, #256]	; (8005c94 <TIM_Base_SetConfig+0x114>)
 8005b94:	4293      	cmp	r3, r2
 8005b96:	d013      	beq.n	8005bc0 <TIM_Base_SetConfig+0x40>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005b9e:	d00f      	beq.n	8005bc0 <TIM_Base_SetConfig+0x40>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	4a3d      	ldr	r2, [pc, #244]	; (8005c98 <TIM_Base_SetConfig+0x118>)
 8005ba4:	4293      	cmp	r3, r2
 8005ba6:	d00b      	beq.n	8005bc0 <TIM_Base_SetConfig+0x40>
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	4a3c      	ldr	r2, [pc, #240]	; (8005c9c <TIM_Base_SetConfig+0x11c>)
 8005bac:	4293      	cmp	r3, r2
 8005bae:	d007      	beq.n	8005bc0 <TIM_Base_SetConfig+0x40>
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	4a3b      	ldr	r2, [pc, #236]	; (8005ca0 <TIM_Base_SetConfig+0x120>)
 8005bb4:	4293      	cmp	r3, r2
 8005bb6:	d003      	beq.n	8005bc0 <TIM_Base_SetConfig+0x40>
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	4a3a      	ldr	r2, [pc, #232]	; (8005ca4 <TIM_Base_SetConfig+0x124>)
 8005bbc:	4293      	cmp	r3, r2
 8005bbe:	d108      	bne.n	8005bd2 <TIM_Base_SetConfig+0x52>
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005bc6:	60fb      	str	r3, [r7, #12]
 8005bc8:	683b      	ldr	r3, [r7, #0]
 8005bca:	685b      	ldr	r3, [r3, #4]
 8005bcc:	68fa      	ldr	r2, [r7, #12]
 8005bce:	4313      	orrs	r3, r2
 8005bd0:	60fb      	str	r3, [r7, #12]
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	4a2f      	ldr	r2, [pc, #188]	; (8005c94 <TIM_Base_SetConfig+0x114>)
 8005bd6:	4293      	cmp	r3, r2
 8005bd8:	d02b      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005be0:	d027      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	4a2c      	ldr	r2, [pc, #176]	; (8005c98 <TIM_Base_SetConfig+0x118>)
 8005be6:	4293      	cmp	r3, r2
 8005be8:	d023      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	4a2b      	ldr	r2, [pc, #172]	; (8005c9c <TIM_Base_SetConfig+0x11c>)
 8005bee:	4293      	cmp	r3, r2
 8005bf0:	d01f      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	4a2a      	ldr	r2, [pc, #168]	; (8005ca0 <TIM_Base_SetConfig+0x120>)
 8005bf6:	4293      	cmp	r3, r2
 8005bf8:	d01b      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	4a29      	ldr	r2, [pc, #164]	; (8005ca4 <TIM_Base_SetConfig+0x124>)
 8005bfe:	4293      	cmp	r3, r2
 8005c00:	d017      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	4a28      	ldr	r2, [pc, #160]	; (8005ca8 <TIM_Base_SetConfig+0x128>)
 8005c06:	4293      	cmp	r3, r2
 8005c08:	d013      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	4a27      	ldr	r2, [pc, #156]	; (8005cac <TIM_Base_SetConfig+0x12c>)
 8005c0e:	4293      	cmp	r3, r2
 8005c10:	d00f      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	4a26      	ldr	r2, [pc, #152]	; (8005cb0 <TIM_Base_SetConfig+0x130>)
 8005c16:	4293      	cmp	r3, r2
 8005c18:	d00b      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	4a25      	ldr	r2, [pc, #148]	; (8005cb4 <TIM_Base_SetConfig+0x134>)
 8005c1e:	4293      	cmp	r3, r2
 8005c20:	d007      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c22:	687b      	ldr	r3, [r7, #4]
 8005c24:	4a24      	ldr	r2, [pc, #144]	; (8005cb8 <TIM_Base_SetConfig+0x138>)
 8005c26:	4293      	cmp	r3, r2
 8005c28:	d003      	beq.n	8005c32 <TIM_Base_SetConfig+0xb2>
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	4a23      	ldr	r2, [pc, #140]	; (8005cbc <TIM_Base_SetConfig+0x13c>)
 8005c2e:	4293      	cmp	r3, r2
 8005c30:	d108      	bne.n	8005c44 <TIM_Base_SetConfig+0xc4>
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005c38:	60fb      	str	r3, [r7, #12]
 8005c3a:	683b      	ldr	r3, [r7, #0]
 8005c3c:	68db      	ldr	r3, [r3, #12]
 8005c3e:	68fa      	ldr	r2, [r7, #12]
 8005c40:	4313      	orrs	r3, r2
 8005c42:	60fb      	str	r3, [r7, #12]
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8005c4a:	683b      	ldr	r3, [r7, #0]
 8005c4c:	695b      	ldr	r3, [r3, #20]
 8005c4e:	4313      	orrs	r3, r2
 8005c50:	60fb      	str	r3, [r7, #12]
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	68fa      	ldr	r2, [r7, #12]
 8005c56:	601a      	str	r2, [r3, #0]
 8005c58:	683b      	ldr	r3, [r7, #0]
 8005c5a:	689a      	ldr	r2, [r3, #8]
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005c60:	683b      	ldr	r3, [r7, #0]
 8005c62:	681a      	ldr	r2, [r3, #0]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	629a      	str	r2, [r3, #40]	; 0x28
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	4a0a      	ldr	r2, [pc, #40]	; (8005c94 <TIM_Base_SetConfig+0x114>)
 8005c6c:	4293      	cmp	r3, r2
 8005c6e:	d003      	beq.n	8005c78 <TIM_Base_SetConfig+0xf8>
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	4a0c      	ldr	r2, [pc, #48]	; (8005ca4 <TIM_Base_SetConfig+0x124>)
 8005c74:	4293      	cmp	r3, r2
 8005c76:	d103      	bne.n	8005c80 <TIM_Base_SetConfig+0x100>
 8005c78:	683b      	ldr	r3, [r7, #0]
 8005c7a:	691a      	ldr	r2, [r3, #16]
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	631a      	str	r2, [r3, #48]	; 0x30
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	2201      	movs	r2, #1
 8005c84:	615a      	str	r2, [r3, #20]
 8005c86:	bf00      	nop
 8005c88:	3714      	adds	r7, #20
 8005c8a:	46bd      	mov	sp, r7
 8005c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c90:	4770      	bx	lr
 8005c92:	bf00      	nop
 8005c94:	40010000 	.word	0x40010000
 8005c98:	40000400 	.word	0x40000400
 8005c9c:	40000800 	.word	0x40000800
 8005ca0:	40000c00 	.word	0x40000c00
 8005ca4:	40010400 	.word	0x40010400
 8005ca8:	40014000 	.word	0x40014000
 8005cac:	40014400 	.word	0x40014400
 8005cb0:	40014800 	.word	0x40014800
 8005cb4:	40001800 	.word	0x40001800
 8005cb8:	40001c00 	.word	0x40001c00
 8005cbc:	40002000 	.word	0x40002000

08005cc0 <TIM_SlaveTimer_SetConfig>:
 8005cc0:	b580      	push	{r7, lr}
 8005cc2:	b086      	sub	sp, #24
 8005cc4:	af00      	add	r7, sp, #0
 8005cc6:	6078      	str	r0, [r7, #4]
 8005cc8:	6039      	str	r1, [r7, #0]
 8005cca:	2300      	movs	r3, #0
 8005ccc:	75fb      	strb	r3, [r7, #23]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	689b      	ldr	r3, [r3, #8]
 8005cd4:	613b      	str	r3, [r7, #16]
 8005cd6:	693b      	ldr	r3, [r7, #16]
 8005cd8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005cdc:	613b      	str	r3, [r7, #16]
 8005cde:	683b      	ldr	r3, [r7, #0]
 8005ce0:	685b      	ldr	r3, [r3, #4]
 8005ce2:	693a      	ldr	r2, [r7, #16]
 8005ce4:	4313      	orrs	r3, r2
 8005ce6:	613b      	str	r3, [r7, #16]
 8005ce8:	693a      	ldr	r2, [r7, #16]
 8005cea:	4b3e      	ldr	r3, [pc, #248]	; (8005de4 <TIM_SlaveTimer_SetConfig+0x124>)
 8005cec:	4013      	ands	r3, r2
 8005cee:	613b      	str	r3, [r7, #16]
 8005cf0:	683b      	ldr	r3, [r7, #0]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	693a      	ldr	r2, [r7, #16]
 8005cf6:	4313      	orrs	r3, r2
 8005cf8:	613b      	str	r3, [r7, #16]
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	693a      	ldr	r2, [r7, #16]
 8005d00:	609a      	str	r2, [r3, #8]
 8005d02:	683b      	ldr	r3, [r7, #0]
 8005d04:	685b      	ldr	r3, [r3, #4]
 8005d06:	2b70      	cmp	r3, #112	; 0x70
 8005d08:	d01a      	beq.n	8005d40 <TIM_SlaveTimer_SetConfig+0x80>
 8005d0a:	2b70      	cmp	r3, #112	; 0x70
 8005d0c:	d860      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d0e:	2b60      	cmp	r3, #96	; 0x60
 8005d10:	d054      	beq.n	8005dbc <TIM_SlaveTimer_SetConfig+0xfc>
 8005d12:	2b60      	cmp	r3, #96	; 0x60
 8005d14:	d85c      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d16:	2b50      	cmp	r3, #80	; 0x50
 8005d18:	d046      	beq.n	8005da8 <TIM_SlaveTimer_SetConfig+0xe8>
 8005d1a:	2b50      	cmp	r3, #80	; 0x50
 8005d1c:	d858      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d1e:	2b40      	cmp	r3, #64	; 0x40
 8005d20:	d019      	beq.n	8005d56 <TIM_SlaveTimer_SetConfig+0x96>
 8005d22:	2b40      	cmp	r3, #64	; 0x40
 8005d24:	d854      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d26:	2b30      	cmp	r3, #48	; 0x30
 8005d28:	d055      	beq.n	8005dd6 <TIM_SlaveTimer_SetConfig+0x116>
 8005d2a:	2b30      	cmp	r3, #48	; 0x30
 8005d2c:	d850      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d2e:	2b20      	cmp	r3, #32
 8005d30:	d051      	beq.n	8005dd6 <TIM_SlaveTimer_SetConfig+0x116>
 8005d32:	2b20      	cmp	r3, #32
 8005d34:	d84c      	bhi.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d04d      	beq.n	8005dd6 <TIM_SlaveTimer_SetConfig+0x116>
 8005d3a:	2b10      	cmp	r3, #16
 8005d3c:	d04b      	beq.n	8005dd6 <TIM_SlaveTimer_SetConfig+0x116>
 8005d3e:	e047      	b.n	8005dd0 <TIM_SlaveTimer_SetConfig+0x110>
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	6818      	ldr	r0, [r3, #0]
 8005d44:	683b      	ldr	r3, [r7, #0]
 8005d46:	68d9      	ldr	r1, [r3, #12]
 8005d48:	683b      	ldr	r3, [r7, #0]
 8005d4a:	689a      	ldr	r2, [r3, #8]
 8005d4c:	683b      	ldr	r3, [r7, #0]
 8005d4e:	691b      	ldr	r3, [r3, #16]
 8005d50:	f000 f8c4 	bl	8005edc <TIM_ETR_SetConfig>
 8005d54:	e040      	b.n	8005dd8 <TIM_SlaveTimer_SetConfig+0x118>
 8005d56:	683b      	ldr	r3, [r7, #0]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	2b05      	cmp	r3, #5
 8005d5c:	d101      	bne.n	8005d62 <TIM_SlaveTimer_SetConfig+0xa2>
 8005d5e:	2301      	movs	r3, #1
 8005d60:	e03b      	b.n	8005dda <TIM_SlaveTimer_SetConfig+0x11a>
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	681b      	ldr	r3, [r3, #0]
 8005d66:	6a1b      	ldr	r3, [r3, #32]
 8005d68:	60fb      	str	r3, [r7, #12]
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	6a1a      	ldr	r2, [r3, #32]
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	f022 0201 	bic.w	r2, r2, #1
 8005d78:	621a      	str	r2, [r3, #32]
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	699b      	ldr	r3, [r3, #24]
 8005d80:	60bb      	str	r3, [r7, #8]
 8005d82:	68bb      	ldr	r3, [r7, #8]
 8005d84:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005d88:	60bb      	str	r3, [r7, #8]
 8005d8a:	683b      	ldr	r3, [r7, #0]
 8005d8c:	691b      	ldr	r3, [r3, #16]
 8005d8e:	011b      	lsls	r3, r3, #4
 8005d90:	68ba      	ldr	r2, [r7, #8]
 8005d92:	4313      	orrs	r3, r2
 8005d94:	60bb      	str	r3, [r7, #8]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	68ba      	ldr	r2, [r7, #8]
 8005d9c:	619a      	str	r2, [r3, #24]
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	68fa      	ldr	r2, [r7, #12]
 8005da4:	621a      	str	r2, [r3, #32]
 8005da6:	e017      	b.n	8005dd8 <TIM_SlaveTimer_SetConfig+0x118>
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	6818      	ldr	r0, [r3, #0]
 8005dac:	683b      	ldr	r3, [r7, #0]
 8005dae:	6899      	ldr	r1, [r3, #8]
 8005db0:	683b      	ldr	r3, [r7, #0]
 8005db2:	691b      	ldr	r3, [r3, #16]
 8005db4:	461a      	mov	r2, r3
 8005db6:	f000 f817 	bl	8005de8 <TIM_TI1_ConfigInputStage>
 8005dba:	e00d      	b.n	8005dd8 <TIM_SlaveTimer_SetConfig+0x118>
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	6818      	ldr	r0, [r3, #0]
 8005dc0:	683b      	ldr	r3, [r7, #0]
 8005dc2:	6899      	ldr	r1, [r3, #8]
 8005dc4:	683b      	ldr	r3, [r7, #0]
 8005dc6:	691b      	ldr	r3, [r3, #16]
 8005dc8:	461a      	mov	r2, r3
 8005dca:	f000 f83c 	bl	8005e46 <TIM_TI2_ConfigInputStage>
 8005dce:	e003      	b.n	8005dd8 <TIM_SlaveTimer_SetConfig+0x118>
 8005dd0:	2301      	movs	r3, #1
 8005dd2:	75fb      	strb	r3, [r7, #23]
 8005dd4:	e000      	b.n	8005dd8 <TIM_SlaveTimer_SetConfig+0x118>
 8005dd6:	bf00      	nop
 8005dd8:	7dfb      	ldrb	r3, [r7, #23]
 8005dda:	4618      	mov	r0, r3
 8005ddc:	3718      	adds	r7, #24
 8005dde:	46bd      	mov	sp, r7
 8005de0:	bd80      	pop	{r7, pc}
 8005de2:	bf00      	nop
 8005de4:	fffefff8 	.word	0xfffefff8

08005de8 <TIM_TI1_ConfigInputStage>:
 8005de8:	b480      	push	{r7}
 8005dea:	b087      	sub	sp, #28
 8005dec:	af00      	add	r7, sp, #0
 8005dee:	60f8      	str	r0, [r7, #12]
 8005df0:	60b9      	str	r1, [r7, #8]
 8005df2:	607a      	str	r2, [r7, #4]
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	6a1b      	ldr	r3, [r3, #32]
 8005df8:	617b      	str	r3, [r7, #20]
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	6a1b      	ldr	r3, [r3, #32]
 8005dfe:	f023 0201 	bic.w	r2, r3, #1
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	621a      	str	r2, [r3, #32]
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	699b      	ldr	r3, [r3, #24]
 8005e0a:	613b      	str	r3, [r7, #16]
 8005e0c:	693b      	ldr	r3, [r7, #16]
 8005e0e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005e12:	613b      	str	r3, [r7, #16]
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	011b      	lsls	r3, r3, #4
 8005e18:	693a      	ldr	r2, [r7, #16]
 8005e1a:	4313      	orrs	r3, r2
 8005e1c:	613b      	str	r3, [r7, #16]
 8005e1e:	697b      	ldr	r3, [r7, #20]
 8005e20:	f023 030a 	bic.w	r3, r3, #10
 8005e24:	617b      	str	r3, [r7, #20]
 8005e26:	697a      	ldr	r2, [r7, #20]
 8005e28:	68bb      	ldr	r3, [r7, #8]
 8005e2a:	4313      	orrs	r3, r2
 8005e2c:	617b      	str	r3, [r7, #20]
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	693a      	ldr	r2, [r7, #16]
 8005e32:	619a      	str	r2, [r3, #24]
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	697a      	ldr	r2, [r7, #20]
 8005e38:	621a      	str	r2, [r3, #32]
 8005e3a:	bf00      	nop
 8005e3c:	371c      	adds	r7, #28
 8005e3e:	46bd      	mov	sp, r7
 8005e40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e44:	4770      	bx	lr

08005e46 <TIM_TI2_ConfigInputStage>:
 8005e46:	b480      	push	{r7}
 8005e48:	b087      	sub	sp, #28
 8005e4a:	af00      	add	r7, sp, #0
 8005e4c:	60f8      	str	r0, [r7, #12]
 8005e4e:	60b9      	str	r1, [r7, #8]
 8005e50:	607a      	str	r2, [r7, #4]
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	6a1b      	ldr	r3, [r3, #32]
 8005e56:	f023 0210 	bic.w	r2, r3, #16
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	621a      	str	r2, [r3, #32]
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	699b      	ldr	r3, [r3, #24]
 8005e62:	617b      	str	r3, [r7, #20]
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	6a1b      	ldr	r3, [r3, #32]
 8005e68:	613b      	str	r3, [r7, #16]
 8005e6a:	697b      	ldr	r3, [r7, #20]
 8005e6c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005e70:	617b      	str	r3, [r7, #20]
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	031b      	lsls	r3, r3, #12
 8005e76:	697a      	ldr	r2, [r7, #20]
 8005e78:	4313      	orrs	r3, r2
 8005e7a:	617b      	str	r3, [r7, #20]
 8005e7c:	693b      	ldr	r3, [r7, #16]
 8005e7e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005e82:	613b      	str	r3, [r7, #16]
 8005e84:	68bb      	ldr	r3, [r7, #8]
 8005e86:	011b      	lsls	r3, r3, #4
 8005e88:	693a      	ldr	r2, [r7, #16]
 8005e8a:	4313      	orrs	r3, r2
 8005e8c:	613b      	str	r3, [r7, #16]
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	697a      	ldr	r2, [r7, #20]
 8005e92:	619a      	str	r2, [r3, #24]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	693a      	ldr	r2, [r7, #16]
 8005e98:	621a      	str	r2, [r3, #32]
 8005e9a:	bf00      	nop
 8005e9c:	371c      	adds	r7, #28
 8005e9e:	46bd      	mov	sp, r7
 8005ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ea4:	4770      	bx	lr

08005ea6 <TIM_ITRx_SetConfig>:
 8005ea6:	b480      	push	{r7}
 8005ea8:	b085      	sub	sp, #20
 8005eaa:	af00      	add	r7, sp, #0
 8005eac:	6078      	str	r0, [r7, #4]
 8005eae:	6039      	str	r1, [r7, #0]
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	689b      	ldr	r3, [r3, #8]
 8005eb4:	60fb      	str	r3, [r7, #12]
 8005eb6:	68fb      	ldr	r3, [r7, #12]
 8005eb8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005ebc:	60fb      	str	r3, [r7, #12]
 8005ebe:	683a      	ldr	r2, [r7, #0]
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	4313      	orrs	r3, r2
 8005ec4:	f043 0307 	orr.w	r3, r3, #7
 8005ec8:	60fb      	str	r3, [r7, #12]
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	68fa      	ldr	r2, [r7, #12]
 8005ece:	609a      	str	r2, [r3, #8]
 8005ed0:	bf00      	nop
 8005ed2:	3714      	adds	r7, #20
 8005ed4:	46bd      	mov	sp, r7
 8005ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eda:	4770      	bx	lr

08005edc <TIM_ETR_SetConfig>:
 8005edc:	b480      	push	{r7}
 8005ede:	b087      	sub	sp, #28
 8005ee0:	af00      	add	r7, sp, #0
 8005ee2:	60f8      	str	r0, [r7, #12]
 8005ee4:	60b9      	str	r1, [r7, #8]
 8005ee6:	607a      	str	r2, [r7, #4]
 8005ee8:	603b      	str	r3, [r7, #0]
 8005eea:	68fb      	ldr	r3, [r7, #12]
 8005eec:	689b      	ldr	r3, [r3, #8]
 8005eee:	617b      	str	r3, [r7, #20]
 8005ef0:	697b      	ldr	r3, [r7, #20]
 8005ef2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005ef6:	617b      	str	r3, [r7, #20]
 8005ef8:	683b      	ldr	r3, [r7, #0]
 8005efa:	021a      	lsls	r2, r3, #8
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	431a      	orrs	r2, r3
 8005f00:	68bb      	ldr	r3, [r7, #8]
 8005f02:	4313      	orrs	r3, r2
 8005f04:	697a      	ldr	r2, [r7, #20]
 8005f06:	4313      	orrs	r3, r2
 8005f08:	617b      	str	r3, [r7, #20]
 8005f0a:	68fb      	ldr	r3, [r7, #12]
 8005f0c:	697a      	ldr	r2, [r7, #20]
 8005f0e:	609a      	str	r2, [r3, #8]
 8005f10:	bf00      	nop
 8005f12:	371c      	adds	r7, #28
 8005f14:	46bd      	mov	sp, r7
 8005f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f1a:	4770      	bx	lr

08005f1c <HAL_TIMEx_MasterConfigSynchronization>:
 8005f1c:	b480      	push	{r7}
 8005f1e:	b085      	sub	sp, #20
 8005f20:	af00      	add	r7, sp, #0
 8005f22:	6078      	str	r0, [r7, #4]
 8005f24:	6039      	str	r1, [r7, #0]
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005f2c:	2b01      	cmp	r3, #1
 8005f2e:	d101      	bne.n	8005f34 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005f30:	2302      	movs	r3, #2
 8005f32:	e06d      	b.n	8006010 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	2201      	movs	r2, #1
 8005f38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	2202      	movs	r2, #2
 8005f40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	685b      	ldr	r3, [r3, #4]
 8005f4a:	60fb      	str	r3, [r7, #12]
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	689b      	ldr	r3, [r3, #8]
 8005f52:	60bb      	str	r3, [r7, #8]
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	681b      	ldr	r3, [r3, #0]
 8005f58:	4a30      	ldr	r2, [pc, #192]	; (800601c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8005f5a:	4293      	cmp	r3, r2
 8005f5c:	d004      	beq.n	8005f68 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	4a2f      	ldr	r2, [pc, #188]	; (8006020 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8005f64:	4293      	cmp	r3, r2
 8005f66:	d108      	bne.n	8005f7a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8005f6e:	60fb      	str	r3, [r7, #12]
 8005f70:	683b      	ldr	r3, [r7, #0]
 8005f72:	685b      	ldr	r3, [r3, #4]
 8005f74:	68fa      	ldr	r2, [r7, #12]
 8005f76:	4313      	orrs	r3, r2
 8005f78:	60fb      	str	r3, [r7, #12]
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005f80:	60fb      	str	r3, [r7, #12]
 8005f82:	683b      	ldr	r3, [r7, #0]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	68fa      	ldr	r2, [r7, #12]
 8005f88:	4313      	orrs	r3, r2
 8005f8a:	60fb      	str	r3, [r7, #12]
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	68fa      	ldr	r2, [r7, #12]
 8005f92:	605a      	str	r2, [r3, #4]
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	4a20      	ldr	r2, [pc, #128]	; (800601c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8005f9a:	4293      	cmp	r3, r2
 8005f9c:	d022      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005fa6:	d01d      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	4a1d      	ldr	r2, [pc, #116]	; (8006024 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8005fae:	4293      	cmp	r3, r2
 8005fb0:	d018      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	4a1c      	ldr	r2, [pc, #112]	; (8006028 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8005fb8:	4293      	cmp	r3, r2
 8005fba:	d013      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	4a1a      	ldr	r2, [pc, #104]	; (800602c <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8005fc2:	4293      	cmp	r3, r2
 8005fc4:	d00e      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	4a15      	ldr	r2, [pc, #84]	; (8006020 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8005fcc:	4293      	cmp	r3, r2
 8005fce:	d009      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	4a16      	ldr	r2, [pc, #88]	; (8006030 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8005fd6:	4293      	cmp	r3, r2
 8005fd8:	d004      	beq.n	8005fe4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	4a15      	ldr	r2, [pc, #84]	; (8006034 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8005fe0:	4293      	cmp	r3, r2
 8005fe2:	d10c      	bne.n	8005ffe <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 8005fe4:	68bb      	ldr	r3, [r7, #8]
 8005fe6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005fea:	60bb      	str	r3, [r7, #8]
 8005fec:	683b      	ldr	r3, [r7, #0]
 8005fee:	689b      	ldr	r3, [r3, #8]
 8005ff0:	68ba      	ldr	r2, [r7, #8]
 8005ff2:	4313      	orrs	r3, r2
 8005ff4:	60bb      	str	r3, [r7, #8]
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	681b      	ldr	r3, [r3, #0]
 8005ffa:	68ba      	ldr	r2, [r7, #8]
 8005ffc:	609a      	str	r2, [r3, #8]
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2201      	movs	r2, #1
 8006002:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	2200      	movs	r2, #0
 800600a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800600e:	2300      	movs	r3, #0
 8006010:	4618      	mov	r0, r3
 8006012:	3714      	adds	r7, #20
 8006014:	46bd      	mov	sp, r7
 8006016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601a:	4770      	bx	lr
 800601c:	40010000 	.word	0x40010000
 8006020:	40010400 	.word	0x40010400
 8006024:	40000400 	.word	0x40000400
 8006028:	40000800 	.word	0x40000800
 800602c:	40000c00 	.word	0x40000c00
 8006030:	40014000 	.word	0x40014000
 8006034:	40001800 	.word	0x40001800

08006038 <HAL_TIMEx_CommutCallback>:
 8006038:	b480      	push	{r7}
 800603a:	b083      	sub	sp, #12
 800603c:	af00      	add	r7, sp, #0
 800603e:	6078      	str	r0, [r7, #4]
 8006040:	bf00      	nop
 8006042:	370c      	adds	r7, #12
 8006044:	46bd      	mov	sp, r7
 8006046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800604a:	4770      	bx	lr

0800604c <HAL_TIMEx_BreakCallback>:
 800604c:	b480      	push	{r7}
 800604e:	b083      	sub	sp, #12
 8006050:	af00      	add	r7, sp, #0
 8006052:	6078      	str	r0, [r7, #4]
 8006054:	bf00      	nop
 8006056:	370c      	adds	r7, #12
 8006058:	46bd      	mov	sp, r7
 800605a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800605e:	4770      	bx	lr

08006060 <HAL_TIMEx_Break2Callback>:
 8006060:	b480      	push	{r7}
 8006062:	b083      	sub	sp, #12
 8006064:	af00      	add	r7, sp, #0
 8006066:	6078      	str	r0, [r7, #4]
 8006068:	bf00      	nop
 800606a:	370c      	adds	r7, #12
 800606c:	46bd      	mov	sp, r7
 800606e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006072:	4770      	bx	lr

08006074 <HAL_UART_Init>:
 8006074:	b580      	push	{r7, lr}
 8006076:	b082      	sub	sp, #8
 8006078:	af00      	add	r7, sp, #0
 800607a:	6078      	str	r0, [r7, #4]
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	2b00      	cmp	r3, #0
 8006080:	d101      	bne.n	8006086 <HAL_UART_Init+0x12>
 8006082:	2301      	movs	r3, #1
 8006084:	e040      	b.n	8006108 <HAL_UART_Init+0x94>
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800608a:	2b00      	cmp	r3, #0
 800608c:	d106      	bne.n	800609c <HAL_UART_Init+0x28>
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	2200      	movs	r2, #0
 8006092:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006096:	6878      	ldr	r0, [r7, #4]
 8006098:	f7fc fd72 	bl	8002b80 <HAL_UART_MspInit>
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	2224      	movs	r2, #36	; 0x24
 80060a0:	679a      	str	r2, [r3, #120]	; 0x78
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	681b      	ldr	r3, [r3, #0]
 80060a6:	681a      	ldr	r2, [r3, #0]
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	f022 0201 	bic.w	r2, r2, #1
 80060b0:	601a      	str	r2, [r3, #0]
 80060b2:	6878      	ldr	r0, [r7, #4]
 80060b4:	f000 fbe8 	bl	8006888 <UART_SetConfig>
 80060b8:	4603      	mov	r3, r0
 80060ba:	2b01      	cmp	r3, #1
 80060bc:	d101      	bne.n	80060c2 <HAL_UART_Init+0x4e>
 80060be:	2301      	movs	r3, #1
 80060c0:	e022      	b.n	8006108 <HAL_UART_Init+0x94>
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060c6:	2b00      	cmp	r3, #0
 80060c8:	d002      	beq.n	80060d0 <HAL_UART_Init+0x5c>
 80060ca:	6878      	ldr	r0, [r7, #4]
 80060cc:	f000 fe3e 	bl	8006d4c <UART_AdvFeatureConfig>
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	681b      	ldr	r3, [r3, #0]
 80060d4:	685a      	ldr	r2, [r3, #4]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80060de:	605a      	str	r2, [r3, #4]
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	689a      	ldr	r2, [r3, #8]
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80060ee:	609a      	str	r2, [r3, #8]
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	681a      	ldr	r2, [r3, #0]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	f042 0201 	orr.w	r2, r2, #1
 80060fe:	601a      	str	r2, [r3, #0]
 8006100:	6878      	ldr	r0, [r7, #4]
 8006102:	f000 fec5 	bl	8006e90 <UART_CheckIdleState>
 8006106:	4603      	mov	r3, r0
 8006108:	4618      	mov	r0, r3
 800610a:	3708      	adds	r7, #8
 800610c:	46bd      	mov	sp, r7
 800610e:	bd80      	pop	{r7, pc}

08006110 <HAL_UART_Transmit_IT>:
 8006110:	b480      	push	{r7}
 8006112:	b08b      	sub	sp, #44	; 0x2c
 8006114:	af00      	add	r7, sp, #0
 8006116:	60f8      	str	r0, [r7, #12]
 8006118:	60b9      	str	r1, [r7, #8]
 800611a:	4613      	mov	r3, r2
 800611c:	80fb      	strh	r3, [r7, #6]
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8006122:	2b20      	cmp	r3, #32
 8006124:	d156      	bne.n	80061d4 <HAL_UART_Transmit_IT+0xc4>
 8006126:	68bb      	ldr	r3, [r7, #8]
 8006128:	2b00      	cmp	r3, #0
 800612a:	d002      	beq.n	8006132 <HAL_UART_Transmit_IT+0x22>
 800612c:	88fb      	ldrh	r3, [r7, #6]
 800612e:	2b00      	cmp	r3, #0
 8006130:	d101      	bne.n	8006136 <HAL_UART_Transmit_IT+0x26>
 8006132:	2301      	movs	r3, #1
 8006134:	e04f      	b.n	80061d6 <HAL_UART_Transmit_IT+0xc6>
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 800613c:	2b01      	cmp	r3, #1
 800613e:	d101      	bne.n	8006144 <HAL_UART_Transmit_IT+0x34>
 8006140:	2302      	movs	r3, #2
 8006142:	e048      	b.n	80061d6 <HAL_UART_Transmit_IT+0xc6>
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	2201      	movs	r2, #1
 8006148:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	68ba      	ldr	r2, [r7, #8]
 8006150:	64da      	str	r2, [r3, #76]	; 0x4c
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	88fa      	ldrh	r2, [r7, #6]
 8006156:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800615a:	68fb      	ldr	r3, [r7, #12]
 800615c:	88fa      	ldrh	r2, [r7, #6]
 800615e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8006162:	68fb      	ldr	r3, [r7, #12]
 8006164:	2200      	movs	r2, #0
 8006166:	669a      	str	r2, [r3, #104]	; 0x68
 8006168:	68fb      	ldr	r3, [r7, #12]
 800616a:	2200      	movs	r2, #0
 800616c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006170:	68fb      	ldr	r3, [r7, #12]
 8006172:	2221      	movs	r2, #33	; 0x21
 8006174:	679a      	str	r2, [r3, #120]	; 0x78
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	689b      	ldr	r3, [r3, #8]
 800617a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800617e:	d107      	bne.n	8006190 <HAL_UART_Transmit_IT+0x80>
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	691b      	ldr	r3, [r3, #16]
 8006184:	2b00      	cmp	r3, #0
 8006186:	d103      	bne.n	8006190 <HAL_UART_Transmit_IT+0x80>
 8006188:	68fb      	ldr	r3, [r7, #12]
 800618a:	4a16      	ldr	r2, [pc, #88]	; (80061e4 <HAL_UART_Transmit_IT+0xd4>)
 800618c:	669a      	str	r2, [r3, #104]	; 0x68
 800618e:	e002      	b.n	8006196 <HAL_UART_Transmit_IT+0x86>
 8006190:	68fb      	ldr	r3, [r7, #12]
 8006192:	4a15      	ldr	r2, [pc, #84]	; (80061e8 <HAL_UART_Transmit_IT+0xd8>)
 8006194:	669a      	str	r2, [r3, #104]	; 0x68
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	2200      	movs	r2, #0
 800619a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800619e:	68fb      	ldr	r3, [r7, #12]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	617b      	str	r3, [r7, #20]
 80061a4:	697b      	ldr	r3, [r7, #20]
 80061a6:	e853 3f00 	ldrex	r3, [r3]
 80061aa:	613b      	str	r3, [r7, #16]
 80061ac:	693b      	ldr	r3, [r7, #16]
 80061ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80061b2:	627b      	str	r3, [r7, #36]	; 0x24
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	461a      	mov	r2, r3
 80061ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80061bc:	623b      	str	r3, [r7, #32]
 80061be:	61fa      	str	r2, [r7, #28]
 80061c0:	69f9      	ldr	r1, [r7, #28]
 80061c2:	6a3a      	ldr	r2, [r7, #32]
 80061c4:	e841 2300 	strex	r3, r2, [r1]
 80061c8:	61bb      	str	r3, [r7, #24]
 80061ca:	69bb      	ldr	r3, [r7, #24]
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	d1e6      	bne.n	800619e <HAL_UART_Transmit_IT+0x8e>
 80061d0:	2300      	movs	r3, #0
 80061d2:	e000      	b.n	80061d6 <HAL_UART_Transmit_IT+0xc6>
 80061d4:	2302      	movs	r3, #2
 80061d6:	4618      	mov	r0, r3
 80061d8:	372c      	adds	r7, #44	; 0x2c
 80061da:	46bd      	mov	sp, r7
 80061dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061e0:	4770      	bx	lr
 80061e2:	bf00      	nop
 80061e4:	080073e9 	.word	0x080073e9
 80061e8:	08007333 	.word	0x08007333

080061ec <HAL_UART_Receive_IT>:
 80061ec:	b580      	push	{r7, lr}
 80061ee:	b08a      	sub	sp, #40	; 0x28
 80061f0:	af00      	add	r7, sp, #0
 80061f2:	60f8      	str	r0, [r7, #12]
 80061f4:	60b9      	str	r1, [r7, #8]
 80061f6:	4613      	mov	r3, r2
 80061f8:	80fb      	strh	r3, [r7, #6]
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80061fe:	2b20      	cmp	r3, #32
 8006200:	d13d      	bne.n	800627e <HAL_UART_Receive_IT+0x92>
 8006202:	68bb      	ldr	r3, [r7, #8]
 8006204:	2b00      	cmp	r3, #0
 8006206:	d002      	beq.n	800620e <HAL_UART_Receive_IT+0x22>
 8006208:	88fb      	ldrh	r3, [r7, #6]
 800620a:	2b00      	cmp	r3, #0
 800620c:	d101      	bne.n	8006212 <HAL_UART_Receive_IT+0x26>
 800620e:	2301      	movs	r3, #1
 8006210:	e036      	b.n	8006280 <HAL_UART_Receive_IT+0x94>
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8006218:	2b01      	cmp	r3, #1
 800621a:	d101      	bne.n	8006220 <HAL_UART_Receive_IT+0x34>
 800621c:	2302      	movs	r3, #2
 800621e:	e02f      	b.n	8006280 <HAL_UART_Receive_IT+0x94>
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	2201      	movs	r2, #1
 8006224:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	2200      	movs	r2, #0
 800622c:	661a      	str	r2, [r3, #96]	; 0x60
 800622e:	68fb      	ldr	r3, [r7, #12]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	685b      	ldr	r3, [r3, #4]
 8006234:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006238:	2b00      	cmp	r3, #0
 800623a:	d018      	beq.n	800626e <HAL_UART_Receive_IT+0x82>
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	617b      	str	r3, [r7, #20]
 8006242:	697b      	ldr	r3, [r7, #20]
 8006244:	e853 3f00 	ldrex	r3, [r3]
 8006248:	613b      	str	r3, [r7, #16]
 800624a:	693b      	ldr	r3, [r7, #16]
 800624c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006250:	627b      	str	r3, [r7, #36]	; 0x24
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	681b      	ldr	r3, [r3, #0]
 8006256:	461a      	mov	r2, r3
 8006258:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800625a:	623b      	str	r3, [r7, #32]
 800625c:	61fa      	str	r2, [r7, #28]
 800625e:	69f9      	ldr	r1, [r7, #28]
 8006260:	6a3a      	ldr	r2, [r7, #32]
 8006262:	e841 2300 	strex	r3, r2, [r1]
 8006266:	61bb      	str	r3, [r7, #24]
 8006268:	69bb      	ldr	r3, [r7, #24]
 800626a:	2b00      	cmp	r3, #0
 800626c:	d1e6      	bne.n	800623c <HAL_UART_Receive_IT+0x50>
 800626e:	88fb      	ldrh	r3, [r7, #6]
 8006270:	461a      	mov	r2, r3
 8006272:	68b9      	ldr	r1, [r7, #8]
 8006274:	68f8      	ldr	r0, [r7, #12]
 8006276:	f000 ff19 	bl	80070ac <UART_Start_Receive_IT>
 800627a:	4603      	mov	r3, r0
 800627c:	e000      	b.n	8006280 <HAL_UART_Receive_IT+0x94>
 800627e:	2302      	movs	r3, #2
 8006280:	4618      	mov	r0, r3
 8006282:	3728      	adds	r7, #40	; 0x28
 8006284:	46bd      	mov	sp, r7
 8006286:	bd80      	pop	{r7, pc}

08006288 <HAL_UART_IRQHandler>:
 8006288:	b580      	push	{r7, lr}
 800628a:	b0ba      	sub	sp, #232	; 0xe8
 800628c:	af00      	add	r7, sp, #0
 800628e:	6078      	str	r0, [r7, #4]
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	69db      	ldr	r3, [r3, #28]
 8006296:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	689b      	ldr	r3, [r3, #8]
 80062aa:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80062ae:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 80062b2:	f640 030f 	movw	r3, #2063	; 0x80f
 80062b6:	4013      	ands	r3, r2
 80062b8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80062bc:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80062c0:	2b00      	cmp	r3, #0
 80062c2:	d115      	bne.n	80062f0 <HAL_UART_IRQHandler+0x68>
 80062c4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80062c8:	f003 0320 	and.w	r3, r3, #32
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d00f      	beq.n	80062f0 <HAL_UART_IRQHandler+0x68>
 80062d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80062d4:	f003 0320 	and.w	r3, r3, #32
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d009      	beq.n	80062f0 <HAL_UART_IRQHandler+0x68>
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	f000 82a4 	beq.w	800682e <HAL_UART_IRQHandler+0x5a6>
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80062ea:	6878      	ldr	r0, [r7, #4]
 80062ec:	4798      	blx	r3
 80062ee:	e29e      	b.n	800682e <HAL_UART_IRQHandler+0x5a6>
 80062f0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	f000 8117 	beq.w	8006528 <HAL_UART_IRQHandler+0x2a0>
 80062fa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80062fe:	f003 0301 	and.w	r3, r3, #1
 8006302:	2b00      	cmp	r3, #0
 8006304:	d106      	bne.n	8006314 <HAL_UART_IRQHandler+0x8c>
 8006306:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800630a:	4b85      	ldr	r3, [pc, #532]	; (8006520 <HAL_UART_IRQHandler+0x298>)
 800630c:	4013      	ands	r3, r2
 800630e:	2b00      	cmp	r3, #0
 8006310:	f000 810a 	beq.w	8006528 <HAL_UART_IRQHandler+0x2a0>
 8006314:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006318:	f003 0301 	and.w	r3, r3, #1
 800631c:	2b00      	cmp	r3, #0
 800631e:	d011      	beq.n	8006344 <HAL_UART_IRQHandler+0xbc>
 8006320:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006324:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006328:	2b00      	cmp	r3, #0
 800632a:	d00b      	beq.n	8006344 <HAL_UART_IRQHandler+0xbc>
 800632c:	687b      	ldr	r3, [r7, #4]
 800632e:	681b      	ldr	r3, [r3, #0]
 8006330:	2201      	movs	r2, #1
 8006332:	621a      	str	r2, [r3, #32]
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800633a:	f043 0201 	orr.w	r2, r3, #1
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006344:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006348:	f003 0302 	and.w	r3, r3, #2
 800634c:	2b00      	cmp	r3, #0
 800634e:	d011      	beq.n	8006374 <HAL_UART_IRQHandler+0xec>
 8006350:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006354:	f003 0301 	and.w	r3, r3, #1
 8006358:	2b00      	cmp	r3, #0
 800635a:	d00b      	beq.n	8006374 <HAL_UART_IRQHandler+0xec>
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	681b      	ldr	r3, [r3, #0]
 8006360:	2202      	movs	r2, #2
 8006362:	621a      	str	r2, [r3, #32]
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800636a:	f043 0204 	orr.w	r2, r3, #4
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006374:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006378:	f003 0304 	and.w	r3, r3, #4
 800637c:	2b00      	cmp	r3, #0
 800637e:	d011      	beq.n	80063a4 <HAL_UART_IRQHandler+0x11c>
 8006380:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006384:	f003 0301 	and.w	r3, r3, #1
 8006388:	2b00      	cmp	r3, #0
 800638a:	d00b      	beq.n	80063a4 <HAL_UART_IRQHandler+0x11c>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	2204      	movs	r2, #4
 8006392:	621a      	str	r2, [r3, #32]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800639a:	f043 0202 	orr.w	r2, r3, #2
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80063a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80063a8:	f003 0308 	and.w	r3, r3, #8
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d017      	beq.n	80063e0 <HAL_UART_IRQHandler+0x158>
 80063b0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80063b4:	f003 0320 	and.w	r3, r3, #32
 80063b8:	2b00      	cmp	r3, #0
 80063ba:	d105      	bne.n	80063c8 <HAL_UART_IRQHandler+0x140>
 80063bc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80063c0:	f003 0301 	and.w	r3, r3, #1
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d00b      	beq.n	80063e0 <HAL_UART_IRQHandler+0x158>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	2208      	movs	r2, #8
 80063ce:	621a      	str	r2, [r3, #32]
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80063d6:	f043 0208 	orr.w	r2, r3, #8
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80063e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80063e4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80063e8:	2b00      	cmp	r3, #0
 80063ea:	d012      	beq.n	8006412 <HAL_UART_IRQHandler+0x18a>
 80063ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80063f0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d00c      	beq.n	8006412 <HAL_UART_IRQHandler+0x18a>
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006400:	621a      	str	r2, [r3, #32]
 8006402:	687b      	ldr	r3, [r7, #4]
 8006404:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006408:	f043 0220 	orr.w	r2, r3, #32
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006418:	2b00      	cmp	r3, #0
 800641a:	f000 820a 	beq.w	8006832 <HAL_UART_IRQHandler+0x5aa>
 800641e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006422:	f003 0320 	and.w	r3, r3, #32
 8006426:	2b00      	cmp	r3, #0
 8006428:	d00d      	beq.n	8006446 <HAL_UART_IRQHandler+0x1be>
 800642a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800642e:	f003 0320 	and.w	r3, r3, #32
 8006432:	2b00      	cmp	r3, #0
 8006434:	d007      	beq.n	8006446 <HAL_UART_IRQHandler+0x1be>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800643a:	2b00      	cmp	r3, #0
 800643c:	d003      	beq.n	8006446 <HAL_UART_IRQHandler+0x1be>
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006442:	6878      	ldr	r0, [r7, #4]
 8006444:	4798      	blx	r3
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800644c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	689b      	ldr	r3, [r3, #8]
 8006456:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800645a:	2b40      	cmp	r3, #64	; 0x40
 800645c:	d005      	beq.n	800646a <HAL_UART_IRQHandler+0x1e2>
 800645e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8006462:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8006466:	2b00      	cmp	r3, #0
 8006468:	d04f      	beq.n	800650a <HAL_UART_IRQHandler+0x282>
 800646a:	6878      	ldr	r0, [r7, #4]
 800646c:	f000 fee8 	bl	8007240 <UART_EndRxTransfer>
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	689b      	ldr	r3, [r3, #8]
 8006476:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800647a:	2b40      	cmp	r3, #64	; 0x40
 800647c:	d141      	bne.n	8006502 <HAL_UART_IRQHandler+0x27a>
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	681b      	ldr	r3, [r3, #0]
 8006482:	3308      	adds	r3, #8
 8006484:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8006488:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800648c:	e853 3f00 	ldrex	r3, [r3]
 8006490:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8006494:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8006498:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800649c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	3308      	adds	r3, #8
 80064a6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80064aa:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80064ae:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80064b2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80064b6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80064ba:	e841 2300 	strex	r3, r2, [r1]
 80064be:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80064c2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80064c6:	2b00      	cmp	r3, #0
 80064c8:	d1d9      	bne.n	800647e <HAL_UART_IRQHandler+0x1f6>
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d013      	beq.n	80064fa <HAL_UART_IRQHandler+0x272>
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064d6:	4a13      	ldr	r2, [pc, #76]	; (8006524 <HAL_UART_IRQHandler+0x29c>)
 80064d8:	651a      	str	r2, [r3, #80]	; 0x50
 80064da:	687b      	ldr	r3, [r7, #4]
 80064dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064de:	4618      	mov	r0, r3
 80064e0:	f7fd fcaf 	bl	8003e42 <HAL_DMA_Abort_IT>
 80064e4:	4603      	mov	r3, r0
 80064e6:	2b00      	cmp	r3, #0
 80064e8:	d017      	beq.n	800651a <HAL_UART_IRQHandler+0x292>
 80064ea:	687b      	ldr	r3, [r7, #4]
 80064ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80064f0:	687a      	ldr	r2, [r7, #4]
 80064f2:	6f12      	ldr	r2, [r2, #112]	; 0x70
 80064f4:	4610      	mov	r0, r2
 80064f6:	4798      	blx	r3
 80064f8:	e00f      	b.n	800651a <HAL_UART_IRQHandler+0x292>
 80064fa:	6878      	ldr	r0, [r7, #4]
 80064fc:	f000 f9a4 	bl	8006848 <HAL_UART_ErrorCallback>
 8006500:	e00b      	b.n	800651a <HAL_UART_IRQHandler+0x292>
 8006502:	6878      	ldr	r0, [r7, #4]
 8006504:	f000 f9a0 	bl	8006848 <HAL_UART_ErrorCallback>
 8006508:	e007      	b.n	800651a <HAL_UART_IRQHandler+0x292>
 800650a:	6878      	ldr	r0, [r7, #4]
 800650c:	f000 f99c 	bl	8006848 <HAL_UART_ErrorCallback>
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	2200      	movs	r2, #0
 8006514:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006518:	e18b      	b.n	8006832 <HAL_UART_IRQHandler+0x5aa>
 800651a:	bf00      	nop
 800651c:	e189      	b.n	8006832 <HAL_UART_IRQHandler+0x5aa>
 800651e:	bf00      	nop
 8006520:	04000120 	.word	0x04000120
 8006524:	08007307 	.word	0x08007307
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800652c:	2b01      	cmp	r3, #1
 800652e:	f040 8144 	bne.w	80067ba <HAL_UART_IRQHandler+0x532>
 8006532:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006536:	f003 0310 	and.w	r3, r3, #16
 800653a:	2b00      	cmp	r3, #0
 800653c:	f000 813d 	beq.w	80067ba <HAL_UART_IRQHandler+0x532>
 8006540:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006544:	f003 0310 	and.w	r3, r3, #16
 8006548:	2b00      	cmp	r3, #0
 800654a:	f000 8136 	beq.w	80067ba <HAL_UART_IRQHandler+0x532>
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	681b      	ldr	r3, [r3, #0]
 8006552:	2210      	movs	r2, #16
 8006554:	621a      	str	r2, [r3, #32]
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	689b      	ldr	r3, [r3, #8]
 800655c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006560:	2b40      	cmp	r3, #64	; 0x40
 8006562:	f040 80b2 	bne.w	80066ca <HAL_UART_IRQHandler+0x442>
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	685b      	ldr	r3, [r3, #4]
 800656e:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8006572:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8006576:	2b00      	cmp	r3, #0
 8006578:	f000 815d 	beq.w	8006836 <HAL_UART_IRQHandler+0x5ae>
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8006582:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8006586:	429a      	cmp	r2, r3
 8006588:	f080 8155 	bcs.w	8006836 <HAL_UART_IRQHandler+0x5ae>
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8006592:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800659a:	69db      	ldr	r3, [r3, #28]
 800659c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80065a0:	f000 8085 	beq.w	80066ae <HAL_UART_IRQHandler+0x426>
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80065ac:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80065b0:	e853 3f00 	ldrex	r3, [r3]
 80065b4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80065b8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80065bc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80065c0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	461a      	mov	r2, r3
 80065ca:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 80065ce:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80065d2:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80065d6:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80065da:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80065de:	e841 2300 	strex	r3, r2, [r1]
 80065e2:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80065e6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	d1da      	bne.n	80065a4 <HAL_UART_IRQHandler+0x31c>
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	3308      	adds	r3, #8
 80065f4:	677b      	str	r3, [r7, #116]	; 0x74
 80065f6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80065f8:	e853 3f00 	ldrex	r3, [r3]
 80065fc:	673b      	str	r3, [r7, #112]	; 0x70
 80065fe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006600:	f023 0301 	bic.w	r3, r3, #1
 8006604:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	3308      	adds	r3, #8
 800660e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006612:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8006616:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006618:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800661a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800661e:	e841 2300 	strex	r3, r2, [r1]
 8006622:	67bb      	str	r3, [r7, #120]	; 0x78
 8006624:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006626:	2b00      	cmp	r3, #0
 8006628:	d1e1      	bne.n	80065ee <HAL_UART_IRQHandler+0x366>
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	3308      	adds	r3, #8
 8006630:	663b      	str	r3, [r7, #96]	; 0x60
 8006632:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006634:	e853 3f00 	ldrex	r3, [r3]
 8006638:	65fb      	str	r3, [r7, #92]	; 0x5c
 800663a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800663c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006640:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	3308      	adds	r3, #8
 800664a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800664e:	66fa      	str	r2, [r7, #108]	; 0x6c
 8006650:	66bb      	str	r3, [r7, #104]	; 0x68
 8006652:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8006654:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8006656:	e841 2300 	strex	r3, r2, [r1]
 800665a:	667b      	str	r3, [r7, #100]	; 0x64
 800665c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800665e:	2b00      	cmp	r3, #0
 8006660:	d1e3      	bne.n	800662a <HAL_UART_IRQHandler+0x3a2>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	2220      	movs	r2, #32
 8006666:	67da      	str	r2, [r3, #124]	; 0x7c
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	2200      	movs	r2, #0
 800666c:	661a      	str	r2, [r3, #96]	; 0x60
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006674:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006676:	e853 3f00 	ldrex	r3, [r3]
 800667a:	64bb      	str	r3, [r7, #72]	; 0x48
 800667c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800667e:	f023 0310 	bic.w	r3, r3, #16
 8006682:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	461a      	mov	r2, r3
 800668c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006690:	65bb      	str	r3, [r7, #88]	; 0x58
 8006692:	657a      	str	r2, [r7, #84]	; 0x54
 8006694:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8006696:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006698:	e841 2300 	strex	r3, r2, [r1]
 800669c:	653b      	str	r3, [r7, #80]	; 0x50
 800669e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d1e4      	bne.n	800666e <HAL_UART_IRQHandler+0x3e6>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80066a8:	4618      	mov	r0, r3
 80066aa:	f7fd fb5a 	bl	8003d62 <HAL_DMA_Abort>
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80066ba:	b29b      	uxth	r3, r3
 80066bc:	1ad3      	subs	r3, r2, r3
 80066be:	b29b      	uxth	r3, r3
 80066c0:	4619      	mov	r1, r3
 80066c2:	6878      	ldr	r0, [r7, #4]
 80066c4:	f000 f8ca 	bl	800685c <HAL_UARTEx_RxEventCallback>
 80066c8:	e0b5      	b.n	8006836 <HAL_UART_IRQHandler+0x5ae>
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80066d6:	b29b      	uxth	r3, r3
 80066d8:	1ad3      	subs	r3, r2, r3
 80066da:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80066e4:	b29b      	uxth	r3, r3
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	f000 80a7 	beq.w	800683a <HAL_UART_IRQHandler+0x5b2>
 80066ec:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	f000 80a2 	beq.w	800683a <HAL_UART_IRQHandler+0x5b2>
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	681b      	ldr	r3, [r3, #0]
 80066fa:	63bb      	str	r3, [r7, #56]	; 0x38
 80066fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80066fe:	e853 3f00 	ldrex	r3, [r3]
 8006702:	637b      	str	r3, [r7, #52]	; 0x34
 8006704:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006706:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800670a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	461a      	mov	r2, r3
 8006714:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8006718:	647b      	str	r3, [r7, #68]	; 0x44
 800671a:	643a      	str	r2, [r7, #64]	; 0x40
 800671c:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800671e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006720:	e841 2300 	strex	r3, r2, [r1]
 8006724:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006726:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006728:	2b00      	cmp	r3, #0
 800672a:	d1e4      	bne.n	80066f6 <HAL_UART_IRQHandler+0x46e>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	3308      	adds	r3, #8
 8006732:	627b      	str	r3, [r7, #36]	; 0x24
 8006734:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006736:	e853 3f00 	ldrex	r3, [r3]
 800673a:	623b      	str	r3, [r7, #32]
 800673c:	6a3b      	ldr	r3, [r7, #32]
 800673e:	f023 0301 	bic.w	r3, r3, #1
 8006742:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	681b      	ldr	r3, [r3, #0]
 800674a:	3308      	adds	r3, #8
 800674c:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8006750:	633a      	str	r2, [r7, #48]	; 0x30
 8006752:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006754:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006756:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006758:	e841 2300 	strex	r3, r2, [r1]
 800675c:	62bb      	str	r3, [r7, #40]	; 0x28
 800675e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006760:	2b00      	cmp	r3, #0
 8006762:	d1e3      	bne.n	800672c <HAL_UART_IRQHandler+0x4a4>
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	2220      	movs	r2, #32
 8006768:	67da      	str	r2, [r3, #124]	; 0x7c
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	2200      	movs	r2, #0
 800676e:	661a      	str	r2, [r3, #96]	; 0x60
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	2200      	movs	r2, #0
 8006774:	665a      	str	r2, [r3, #100]	; 0x64
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	613b      	str	r3, [r7, #16]
 800677c:	693b      	ldr	r3, [r7, #16]
 800677e:	e853 3f00 	ldrex	r3, [r3]
 8006782:	60fb      	str	r3, [r7, #12]
 8006784:	68fb      	ldr	r3, [r7, #12]
 8006786:	f023 0310 	bic.w	r3, r3, #16
 800678a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	461a      	mov	r2, r3
 8006794:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8006798:	61fb      	str	r3, [r7, #28]
 800679a:	61ba      	str	r2, [r7, #24]
 800679c:	69b9      	ldr	r1, [r7, #24]
 800679e:	69fa      	ldr	r2, [r7, #28]
 80067a0:	e841 2300 	strex	r3, r2, [r1]
 80067a4:	617b      	str	r3, [r7, #20]
 80067a6:	697b      	ldr	r3, [r7, #20]
 80067a8:	2b00      	cmp	r3, #0
 80067aa:	d1e4      	bne.n	8006776 <HAL_UART_IRQHandler+0x4ee>
 80067ac:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80067b0:	4619      	mov	r1, r3
 80067b2:	6878      	ldr	r0, [r7, #4]
 80067b4:	f000 f852 	bl	800685c <HAL_UARTEx_RxEventCallback>
 80067b8:	e03f      	b.n	800683a <HAL_UART_IRQHandler+0x5b2>
 80067ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067be:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d00e      	beq.n	80067e4 <HAL_UART_IRQHandler+0x55c>
 80067c6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80067ca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d008      	beq.n	80067e4 <HAL_UART_IRQHandler+0x55c>
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	681b      	ldr	r3, [r3, #0]
 80067d6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80067da:	621a      	str	r2, [r3, #32]
 80067dc:	6878      	ldr	r0, [r7, #4]
 80067de:	f000 f849 	bl	8006874 <HAL_UARTEx_WakeupCallback>
 80067e2:	e02d      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 80067e4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067e8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067ec:	2b00      	cmp	r3, #0
 80067ee:	d00e      	beq.n	800680e <HAL_UART_IRQHandler+0x586>
 80067f0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80067f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067f8:	2b00      	cmp	r3, #0
 80067fa:	d008      	beq.n	800680e <HAL_UART_IRQHandler+0x586>
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8006800:	2b00      	cmp	r3, #0
 8006802:	d01c      	beq.n	800683e <HAL_UART_IRQHandler+0x5b6>
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8006808:	6878      	ldr	r0, [r7, #4]
 800680a:	4798      	blx	r3
 800680c:	e017      	b.n	800683e <HAL_UART_IRQHandler+0x5b6>
 800680e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006812:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006816:	2b00      	cmp	r3, #0
 8006818:	d012      	beq.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 800681a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800681e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006822:	2b00      	cmp	r3, #0
 8006824:	d00c      	beq.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 8006826:	6878      	ldr	r0, [r7, #4]
 8006828:	f000 fe3e 	bl	80074a8 <UART_EndTransmit_IT>
 800682c:	e008      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 800682e:	bf00      	nop
 8006830:	e006      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 8006832:	bf00      	nop
 8006834:	e004      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 8006836:	bf00      	nop
 8006838:	e002      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 800683a:	bf00      	nop
 800683c:	e000      	b.n	8006840 <HAL_UART_IRQHandler+0x5b8>
 800683e:	bf00      	nop
 8006840:	37e8      	adds	r7, #232	; 0xe8
 8006842:	46bd      	mov	sp, r7
 8006844:	bd80      	pop	{r7, pc}
 8006846:	bf00      	nop

08006848 <HAL_UART_ErrorCallback>:
 8006848:	b480      	push	{r7}
 800684a:	b083      	sub	sp, #12
 800684c:	af00      	add	r7, sp, #0
 800684e:	6078      	str	r0, [r7, #4]
 8006850:	bf00      	nop
 8006852:	370c      	adds	r7, #12
 8006854:	46bd      	mov	sp, r7
 8006856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800685a:	4770      	bx	lr

0800685c <HAL_UARTEx_RxEventCallback>:
 800685c:	b480      	push	{r7}
 800685e:	b083      	sub	sp, #12
 8006860:	af00      	add	r7, sp, #0
 8006862:	6078      	str	r0, [r7, #4]
 8006864:	460b      	mov	r3, r1
 8006866:	807b      	strh	r3, [r7, #2]
 8006868:	bf00      	nop
 800686a:	370c      	adds	r7, #12
 800686c:	46bd      	mov	sp, r7
 800686e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006872:	4770      	bx	lr

08006874 <HAL_UARTEx_WakeupCallback>:
 8006874:	b480      	push	{r7}
 8006876:	b083      	sub	sp, #12
 8006878:	af00      	add	r7, sp, #0
 800687a:	6078      	str	r0, [r7, #4]
 800687c:	bf00      	nop
 800687e:	370c      	adds	r7, #12
 8006880:	46bd      	mov	sp, r7
 8006882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006886:	4770      	bx	lr

08006888 <UART_SetConfig>:
 8006888:	b580      	push	{r7, lr}
 800688a:	b088      	sub	sp, #32
 800688c:	af00      	add	r7, sp, #0
 800688e:	6078      	str	r0, [r7, #4]
 8006890:	2300      	movs	r3, #0
 8006892:	77bb      	strb	r3, [r7, #30]
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	689a      	ldr	r2, [r3, #8]
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	691b      	ldr	r3, [r3, #16]
 800689c:	431a      	orrs	r2, r3
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	695b      	ldr	r3, [r3, #20]
 80068a2:	431a      	orrs	r2, r3
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	69db      	ldr	r3, [r3, #28]
 80068a8:	4313      	orrs	r3, r2
 80068aa:	617b      	str	r3, [r7, #20]
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	681a      	ldr	r2, [r3, #0]
 80068b2:	4ba7      	ldr	r3, [pc, #668]	; (8006b50 <UART_SetConfig+0x2c8>)
 80068b4:	4013      	ands	r3, r2
 80068b6:	687a      	ldr	r2, [r7, #4]
 80068b8:	6812      	ldr	r2, [r2, #0]
 80068ba:	6979      	ldr	r1, [r7, #20]
 80068bc:	430b      	orrs	r3, r1
 80068be:	6013      	str	r3, [r2, #0]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	685b      	ldr	r3, [r3, #4]
 80068c6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	68da      	ldr	r2, [r3, #12]
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	430a      	orrs	r2, r1
 80068d4:	605a      	str	r2, [r3, #4]
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	699b      	ldr	r3, [r3, #24]
 80068da:	617b      	str	r3, [r7, #20]
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	6a1b      	ldr	r3, [r3, #32]
 80068e0:	697a      	ldr	r2, [r7, #20]
 80068e2:	4313      	orrs	r3, r2
 80068e4:	617b      	str	r3, [r7, #20]
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	689b      	ldr	r3, [r3, #8]
 80068ec:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	697a      	ldr	r2, [r7, #20]
 80068f6:	430a      	orrs	r2, r1
 80068f8:	609a      	str	r2, [r3, #8]
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	4a95      	ldr	r2, [pc, #596]	; (8006b54 <UART_SetConfig+0x2cc>)
 8006900:	4293      	cmp	r3, r2
 8006902:	d120      	bne.n	8006946 <UART_SetConfig+0xbe>
 8006904:	4b94      	ldr	r3, [pc, #592]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006906:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800690a:	f003 0303 	and.w	r3, r3, #3
 800690e:	2b03      	cmp	r3, #3
 8006910:	d816      	bhi.n	8006940 <UART_SetConfig+0xb8>
 8006912:	a201      	add	r2, pc, #4	; (adr r2, 8006918 <UART_SetConfig+0x90>)
 8006914:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006918:	08006929 	.word	0x08006929
 800691c:	08006935 	.word	0x08006935
 8006920:	0800692f 	.word	0x0800692f
 8006924:	0800693b 	.word	0x0800693b
 8006928:	2301      	movs	r3, #1
 800692a:	77fb      	strb	r3, [r7, #31]
 800692c:	e14f      	b.n	8006bce <UART_SetConfig+0x346>
 800692e:	2302      	movs	r3, #2
 8006930:	77fb      	strb	r3, [r7, #31]
 8006932:	e14c      	b.n	8006bce <UART_SetConfig+0x346>
 8006934:	2304      	movs	r3, #4
 8006936:	77fb      	strb	r3, [r7, #31]
 8006938:	e149      	b.n	8006bce <UART_SetConfig+0x346>
 800693a:	2308      	movs	r3, #8
 800693c:	77fb      	strb	r3, [r7, #31]
 800693e:	e146      	b.n	8006bce <UART_SetConfig+0x346>
 8006940:	2310      	movs	r3, #16
 8006942:	77fb      	strb	r3, [r7, #31]
 8006944:	e143      	b.n	8006bce <UART_SetConfig+0x346>
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	4a84      	ldr	r2, [pc, #528]	; (8006b5c <UART_SetConfig+0x2d4>)
 800694c:	4293      	cmp	r3, r2
 800694e:	d132      	bne.n	80069b6 <UART_SetConfig+0x12e>
 8006950:	4b81      	ldr	r3, [pc, #516]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006952:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006956:	f003 030c 	and.w	r3, r3, #12
 800695a:	2b0c      	cmp	r3, #12
 800695c:	d828      	bhi.n	80069b0 <UART_SetConfig+0x128>
 800695e:	a201      	add	r2, pc, #4	; (adr r2, 8006964 <UART_SetConfig+0xdc>)
 8006960:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006964:	08006999 	.word	0x08006999
 8006968:	080069b1 	.word	0x080069b1
 800696c:	080069b1 	.word	0x080069b1
 8006970:	080069b1 	.word	0x080069b1
 8006974:	080069a5 	.word	0x080069a5
 8006978:	080069b1 	.word	0x080069b1
 800697c:	080069b1 	.word	0x080069b1
 8006980:	080069b1 	.word	0x080069b1
 8006984:	0800699f 	.word	0x0800699f
 8006988:	080069b1 	.word	0x080069b1
 800698c:	080069b1 	.word	0x080069b1
 8006990:	080069b1 	.word	0x080069b1
 8006994:	080069ab 	.word	0x080069ab
 8006998:	2300      	movs	r3, #0
 800699a:	77fb      	strb	r3, [r7, #31]
 800699c:	e117      	b.n	8006bce <UART_SetConfig+0x346>
 800699e:	2302      	movs	r3, #2
 80069a0:	77fb      	strb	r3, [r7, #31]
 80069a2:	e114      	b.n	8006bce <UART_SetConfig+0x346>
 80069a4:	2304      	movs	r3, #4
 80069a6:	77fb      	strb	r3, [r7, #31]
 80069a8:	e111      	b.n	8006bce <UART_SetConfig+0x346>
 80069aa:	2308      	movs	r3, #8
 80069ac:	77fb      	strb	r3, [r7, #31]
 80069ae:	e10e      	b.n	8006bce <UART_SetConfig+0x346>
 80069b0:	2310      	movs	r3, #16
 80069b2:	77fb      	strb	r3, [r7, #31]
 80069b4:	e10b      	b.n	8006bce <UART_SetConfig+0x346>
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	4a69      	ldr	r2, [pc, #420]	; (8006b60 <UART_SetConfig+0x2d8>)
 80069bc:	4293      	cmp	r3, r2
 80069be:	d120      	bne.n	8006a02 <UART_SetConfig+0x17a>
 80069c0:	4b65      	ldr	r3, [pc, #404]	; (8006b58 <UART_SetConfig+0x2d0>)
 80069c2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80069c6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80069ca:	2b30      	cmp	r3, #48	; 0x30
 80069cc:	d013      	beq.n	80069f6 <UART_SetConfig+0x16e>
 80069ce:	2b30      	cmp	r3, #48	; 0x30
 80069d0:	d814      	bhi.n	80069fc <UART_SetConfig+0x174>
 80069d2:	2b20      	cmp	r3, #32
 80069d4:	d009      	beq.n	80069ea <UART_SetConfig+0x162>
 80069d6:	2b20      	cmp	r3, #32
 80069d8:	d810      	bhi.n	80069fc <UART_SetConfig+0x174>
 80069da:	2b00      	cmp	r3, #0
 80069dc:	d002      	beq.n	80069e4 <UART_SetConfig+0x15c>
 80069de:	2b10      	cmp	r3, #16
 80069e0:	d006      	beq.n	80069f0 <UART_SetConfig+0x168>
 80069e2:	e00b      	b.n	80069fc <UART_SetConfig+0x174>
 80069e4:	2300      	movs	r3, #0
 80069e6:	77fb      	strb	r3, [r7, #31]
 80069e8:	e0f1      	b.n	8006bce <UART_SetConfig+0x346>
 80069ea:	2302      	movs	r3, #2
 80069ec:	77fb      	strb	r3, [r7, #31]
 80069ee:	e0ee      	b.n	8006bce <UART_SetConfig+0x346>
 80069f0:	2304      	movs	r3, #4
 80069f2:	77fb      	strb	r3, [r7, #31]
 80069f4:	e0eb      	b.n	8006bce <UART_SetConfig+0x346>
 80069f6:	2308      	movs	r3, #8
 80069f8:	77fb      	strb	r3, [r7, #31]
 80069fa:	e0e8      	b.n	8006bce <UART_SetConfig+0x346>
 80069fc:	2310      	movs	r3, #16
 80069fe:	77fb      	strb	r3, [r7, #31]
 8006a00:	e0e5      	b.n	8006bce <UART_SetConfig+0x346>
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	4a57      	ldr	r2, [pc, #348]	; (8006b64 <UART_SetConfig+0x2dc>)
 8006a08:	4293      	cmp	r3, r2
 8006a0a:	d120      	bne.n	8006a4e <UART_SetConfig+0x1c6>
 8006a0c:	4b52      	ldr	r3, [pc, #328]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006a0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006a12:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8006a16:	2bc0      	cmp	r3, #192	; 0xc0
 8006a18:	d013      	beq.n	8006a42 <UART_SetConfig+0x1ba>
 8006a1a:	2bc0      	cmp	r3, #192	; 0xc0
 8006a1c:	d814      	bhi.n	8006a48 <UART_SetConfig+0x1c0>
 8006a1e:	2b80      	cmp	r3, #128	; 0x80
 8006a20:	d009      	beq.n	8006a36 <UART_SetConfig+0x1ae>
 8006a22:	2b80      	cmp	r3, #128	; 0x80
 8006a24:	d810      	bhi.n	8006a48 <UART_SetConfig+0x1c0>
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d002      	beq.n	8006a30 <UART_SetConfig+0x1a8>
 8006a2a:	2b40      	cmp	r3, #64	; 0x40
 8006a2c:	d006      	beq.n	8006a3c <UART_SetConfig+0x1b4>
 8006a2e:	e00b      	b.n	8006a48 <UART_SetConfig+0x1c0>
 8006a30:	2300      	movs	r3, #0
 8006a32:	77fb      	strb	r3, [r7, #31]
 8006a34:	e0cb      	b.n	8006bce <UART_SetConfig+0x346>
 8006a36:	2302      	movs	r3, #2
 8006a38:	77fb      	strb	r3, [r7, #31]
 8006a3a:	e0c8      	b.n	8006bce <UART_SetConfig+0x346>
 8006a3c:	2304      	movs	r3, #4
 8006a3e:	77fb      	strb	r3, [r7, #31]
 8006a40:	e0c5      	b.n	8006bce <UART_SetConfig+0x346>
 8006a42:	2308      	movs	r3, #8
 8006a44:	77fb      	strb	r3, [r7, #31]
 8006a46:	e0c2      	b.n	8006bce <UART_SetConfig+0x346>
 8006a48:	2310      	movs	r3, #16
 8006a4a:	77fb      	strb	r3, [r7, #31]
 8006a4c:	e0bf      	b.n	8006bce <UART_SetConfig+0x346>
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	681b      	ldr	r3, [r3, #0]
 8006a52:	4a45      	ldr	r2, [pc, #276]	; (8006b68 <UART_SetConfig+0x2e0>)
 8006a54:	4293      	cmp	r3, r2
 8006a56:	d125      	bne.n	8006aa4 <UART_SetConfig+0x21c>
 8006a58:	4b3f      	ldr	r3, [pc, #252]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006a5a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006a5e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006a62:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006a66:	d017      	beq.n	8006a98 <UART_SetConfig+0x210>
 8006a68:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006a6c:	d817      	bhi.n	8006a9e <UART_SetConfig+0x216>
 8006a6e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006a72:	d00b      	beq.n	8006a8c <UART_SetConfig+0x204>
 8006a74:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006a78:	d811      	bhi.n	8006a9e <UART_SetConfig+0x216>
 8006a7a:	2b00      	cmp	r3, #0
 8006a7c:	d003      	beq.n	8006a86 <UART_SetConfig+0x1fe>
 8006a7e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006a82:	d006      	beq.n	8006a92 <UART_SetConfig+0x20a>
 8006a84:	e00b      	b.n	8006a9e <UART_SetConfig+0x216>
 8006a86:	2300      	movs	r3, #0
 8006a88:	77fb      	strb	r3, [r7, #31]
 8006a8a:	e0a0      	b.n	8006bce <UART_SetConfig+0x346>
 8006a8c:	2302      	movs	r3, #2
 8006a8e:	77fb      	strb	r3, [r7, #31]
 8006a90:	e09d      	b.n	8006bce <UART_SetConfig+0x346>
 8006a92:	2304      	movs	r3, #4
 8006a94:	77fb      	strb	r3, [r7, #31]
 8006a96:	e09a      	b.n	8006bce <UART_SetConfig+0x346>
 8006a98:	2308      	movs	r3, #8
 8006a9a:	77fb      	strb	r3, [r7, #31]
 8006a9c:	e097      	b.n	8006bce <UART_SetConfig+0x346>
 8006a9e:	2310      	movs	r3, #16
 8006aa0:	77fb      	strb	r3, [r7, #31]
 8006aa2:	e094      	b.n	8006bce <UART_SetConfig+0x346>
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	4a30      	ldr	r2, [pc, #192]	; (8006b6c <UART_SetConfig+0x2e4>)
 8006aaa:	4293      	cmp	r3, r2
 8006aac:	d125      	bne.n	8006afa <UART_SetConfig+0x272>
 8006aae:	4b2a      	ldr	r3, [pc, #168]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006ab0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006ab4:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8006ab8:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006abc:	d017      	beq.n	8006aee <UART_SetConfig+0x266>
 8006abe:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006ac2:	d817      	bhi.n	8006af4 <UART_SetConfig+0x26c>
 8006ac4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006ac8:	d00b      	beq.n	8006ae2 <UART_SetConfig+0x25a>
 8006aca:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006ace:	d811      	bhi.n	8006af4 <UART_SetConfig+0x26c>
 8006ad0:	2b00      	cmp	r3, #0
 8006ad2:	d003      	beq.n	8006adc <UART_SetConfig+0x254>
 8006ad4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006ad8:	d006      	beq.n	8006ae8 <UART_SetConfig+0x260>
 8006ada:	e00b      	b.n	8006af4 <UART_SetConfig+0x26c>
 8006adc:	2301      	movs	r3, #1
 8006ade:	77fb      	strb	r3, [r7, #31]
 8006ae0:	e075      	b.n	8006bce <UART_SetConfig+0x346>
 8006ae2:	2302      	movs	r3, #2
 8006ae4:	77fb      	strb	r3, [r7, #31]
 8006ae6:	e072      	b.n	8006bce <UART_SetConfig+0x346>
 8006ae8:	2304      	movs	r3, #4
 8006aea:	77fb      	strb	r3, [r7, #31]
 8006aec:	e06f      	b.n	8006bce <UART_SetConfig+0x346>
 8006aee:	2308      	movs	r3, #8
 8006af0:	77fb      	strb	r3, [r7, #31]
 8006af2:	e06c      	b.n	8006bce <UART_SetConfig+0x346>
 8006af4:	2310      	movs	r3, #16
 8006af6:	77fb      	strb	r3, [r7, #31]
 8006af8:	e069      	b.n	8006bce <UART_SetConfig+0x346>
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4a1c      	ldr	r2, [pc, #112]	; (8006b70 <UART_SetConfig+0x2e8>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d137      	bne.n	8006b74 <UART_SetConfig+0x2ec>
 8006b04:	4b14      	ldr	r3, [pc, #80]	; (8006b58 <UART_SetConfig+0x2d0>)
 8006b06:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006b0a:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8006b0e:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8006b12:	d017      	beq.n	8006b44 <UART_SetConfig+0x2bc>
 8006b14:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8006b18:	d817      	bhi.n	8006b4a <UART_SetConfig+0x2c2>
 8006b1a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006b1e:	d00b      	beq.n	8006b38 <UART_SetConfig+0x2b0>
 8006b20:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006b24:	d811      	bhi.n	8006b4a <UART_SetConfig+0x2c2>
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	d003      	beq.n	8006b32 <UART_SetConfig+0x2aa>
 8006b2a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b2e:	d006      	beq.n	8006b3e <UART_SetConfig+0x2b6>
 8006b30:	e00b      	b.n	8006b4a <UART_SetConfig+0x2c2>
 8006b32:	2300      	movs	r3, #0
 8006b34:	77fb      	strb	r3, [r7, #31]
 8006b36:	e04a      	b.n	8006bce <UART_SetConfig+0x346>
 8006b38:	2302      	movs	r3, #2
 8006b3a:	77fb      	strb	r3, [r7, #31]
 8006b3c:	e047      	b.n	8006bce <UART_SetConfig+0x346>
 8006b3e:	2304      	movs	r3, #4
 8006b40:	77fb      	strb	r3, [r7, #31]
 8006b42:	e044      	b.n	8006bce <UART_SetConfig+0x346>
 8006b44:	2308      	movs	r3, #8
 8006b46:	77fb      	strb	r3, [r7, #31]
 8006b48:	e041      	b.n	8006bce <UART_SetConfig+0x346>
 8006b4a:	2310      	movs	r3, #16
 8006b4c:	77fb      	strb	r3, [r7, #31]
 8006b4e:	e03e      	b.n	8006bce <UART_SetConfig+0x346>
 8006b50:	efff69f3 	.word	0xefff69f3
 8006b54:	40011000 	.word	0x40011000
 8006b58:	40023800 	.word	0x40023800
 8006b5c:	40004400 	.word	0x40004400
 8006b60:	40004800 	.word	0x40004800
 8006b64:	40004c00 	.word	0x40004c00
 8006b68:	40005000 	.word	0x40005000
 8006b6c:	40011400 	.word	0x40011400
 8006b70:	40007800 	.word	0x40007800
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	4a71      	ldr	r2, [pc, #452]	; (8006d40 <UART_SetConfig+0x4b8>)
 8006b7a:	4293      	cmp	r3, r2
 8006b7c:	d125      	bne.n	8006bca <UART_SetConfig+0x342>
 8006b7e:	4b71      	ldr	r3, [pc, #452]	; (8006d44 <UART_SetConfig+0x4bc>)
 8006b80:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006b84:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8006b88:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006b8c:	d017      	beq.n	8006bbe <UART_SetConfig+0x336>
 8006b8e:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006b92:	d817      	bhi.n	8006bc4 <UART_SetConfig+0x33c>
 8006b94:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006b98:	d00b      	beq.n	8006bb2 <UART_SetConfig+0x32a>
 8006b9a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006b9e:	d811      	bhi.n	8006bc4 <UART_SetConfig+0x33c>
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	d003      	beq.n	8006bac <UART_SetConfig+0x324>
 8006ba4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006ba8:	d006      	beq.n	8006bb8 <UART_SetConfig+0x330>
 8006baa:	e00b      	b.n	8006bc4 <UART_SetConfig+0x33c>
 8006bac:	2300      	movs	r3, #0
 8006bae:	77fb      	strb	r3, [r7, #31]
 8006bb0:	e00d      	b.n	8006bce <UART_SetConfig+0x346>
 8006bb2:	2302      	movs	r3, #2
 8006bb4:	77fb      	strb	r3, [r7, #31]
 8006bb6:	e00a      	b.n	8006bce <UART_SetConfig+0x346>
 8006bb8:	2304      	movs	r3, #4
 8006bba:	77fb      	strb	r3, [r7, #31]
 8006bbc:	e007      	b.n	8006bce <UART_SetConfig+0x346>
 8006bbe:	2308      	movs	r3, #8
 8006bc0:	77fb      	strb	r3, [r7, #31]
 8006bc2:	e004      	b.n	8006bce <UART_SetConfig+0x346>
 8006bc4:	2310      	movs	r3, #16
 8006bc6:	77fb      	strb	r3, [r7, #31]
 8006bc8:	e001      	b.n	8006bce <UART_SetConfig+0x346>
 8006bca:	2310      	movs	r3, #16
 8006bcc:	77fb      	strb	r3, [r7, #31]
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	69db      	ldr	r3, [r3, #28]
 8006bd2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006bd6:	d15a      	bne.n	8006c8e <UART_SetConfig+0x406>
 8006bd8:	7ffb      	ldrb	r3, [r7, #31]
 8006bda:	2b08      	cmp	r3, #8
 8006bdc:	d827      	bhi.n	8006c2e <UART_SetConfig+0x3a6>
 8006bde:	a201      	add	r2, pc, #4	; (adr r2, 8006be4 <UART_SetConfig+0x35c>)
 8006be0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006be4:	08006c09 	.word	0x08006c09
 8006be8:	08006c11 	.word	0x08006c11
 8006bec:	08006c19 	.word	0x08006c19
 8006bf0:	08006c2f 	.word	0x08006c2f
 8006bf4:	08006c1f 	.word	0x08006c1f
 8006bf8:	08006c2f 	.word	0x08006c2f
 8006bfc:	08006c2f 	.word	0x08006c2f
 8006c00:	08006c2f 	.word	0x08006c2f
 8006c04:	08006c27 	.word	0x08006c27
 8006c08:	f7fe f80e 	bl	8004c28 <HAL_RCC_GetPCLK1Freq>
 8006c0c:	61b8      	str	r0, [r7, #24]
 8006c0e:	e013      	b.n	8006c38 <UART_SetConfig+0x3b0>
 8006c10:	f7fe f81e 	bl	8004c50 <HAL_RCC_GetPCLK2Freq>
 8006c14:	61b8      	str	r0, [r7, #24]
 8006c16:	e00f      	b.n	8006c38 <UART_SetConfig+0x3b0>
 8006c18:	4b4b      	ldr	r3, [pc, #300]	; (8006d48 <UART_SetConfig+0x4c0>)
 8006c1a:	61bb      	str	r3, [r7, #24]
 8006c1c:	e00c      	b.n	8006c38 <UART_SetConfig+0x3b0>
 8006c1e:	f7fd ff15 	bl	8004a4c <HAL_RCC_GetSysClockFreq>
 8006c22:	61b8      	str	r0, [r7, #24]
 8006c24:	e008      	b.n	8006c38 <UART_SetConfig+0x3b0>
 8006c26:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006c2a:	61bb      	str	r3, [r7, #24]
 8006c2c:	e004      	b.n	8006c38 <UART_SetConfig+0x3b0>
 8006c2e:	2300      	movs	r3, #0
 8006c30:	61bb      	str	r3, [r7, #24]
 8006c32:	2301      	movs	r3, #1
 8006c34:	77bb      	strb	r3, [r7, #30]
 8006c36:	bf00      	nop
 8006c38:	69bb      	ldr	r3, [r7, #24]
 8006c3a:	2b00      	cmp	r3, #0
 8006c3c:	d074      	beq.n	8006d28 <UART_SetConfig+0x4a0>
 8006c3e:	69bb      	ldr	r3, [r7, #24]
 8006c40:	005a      	lsls	r2, r3, #1
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	685b      	ldr	r3, [r3, #4]
 8006c46:	085b      	lsrs	r3, r3, #1
 8006c48:	441a      	add	r2, r3
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	685b      	ldr	r3, [r3, #4]
 8006c4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8006c52:	613b      	str	r3, [r7, #16]
 8006c54:	693b      	ldr	r3, [r7, #16]
 8006c56:	2b0f      	cmp	r3, #15
 8006c58:	d916      	bls.n	8006c88 <UART_SetConfig+0x400>
 8006c5a:	693b      	ldr	r3, [r7, #16]
 8006c5c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006c60:	d212      	bcs.n	8006c88 <UART_SetConfig+0x400>
 8006c62:	693b      	ldr	r3, [r7, #16]
 8006c64:	b29b      	uxth	r3, r3
 8006c66:	f023 030f 	bic.w	r3, r3, #15
 8006c6a:	81fb      	strh	r3, [r7, #14]
 8006c6c:	693b      	ldr	r3, [r7, #16]
 8006c6e:	085b      	lsrs	r3, r3, #1
 8006c70:	b29b      	uxth	r3, r3
 8006c72:	f003 0307 	and.w	r3, r3, #7
 8006c76:	b29a      	uxth	r2, r3
 8006c78:	89fb      	ldrh	r3, [r7, #14]
 8006c7a:	4313      	orrs	r3, r2
 8006c7c:	81fb      	strh	r3, [r7, #14]
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	89fa      	ldrh	r2, [r7, #14]
 8006c84:	60da      	str	r2, [r3, #12]
 8006c86:	e04f      	b.n	8006d28 <UART_SetConfig+0x4a0>
 8006c88:	2301      	movs	r3, #1
 8006c8a:	77bb      	strb	r3, [r7, #30]
 8006c8c:	e04c      	b.n	8006d28 <UART_SetConfig+0x4a0>
 8006c8e:	7ffb      	ldrb	r3, [r7, #31]
 8006c90:	2b08      	cmp	r3, #8
 8006c92:	d828      	bhi.n	8006ce6 <UART_SetConfig+0x45e>
 8006c94:	a201      	add	r2, pc, #4	; (adr r2, 8006c9c <UART_SetConfig+0x414>)
 8006c96:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006c9a:	bf00      	nop
 8006c9c:	08006cc1 	.word	0x08006cc1
 8006ca0:	08006cc9 	.word	0x08006cc9
 8006ca4:	08006cd1 	.word	0x08006cd1
 8006ca8:	08006ce7 	.word	0x08006ce7
 8006cac:	08006cd7 	.word	0x08006cd7
 8006cb0:	08006ce7 	.word	0x08006ce7
 8006cb4:	08006ce7 	.word	0x08006ce7
 8006cb8:	08006ce7 	.word	0x08006ce7
 8006cbc:	08006cdf 	.word	0x08006cdf
 8006cc0:	f7fd ffb2 	bl	8004c28 <HAL_RCC_GetPCLK1Freq>
 8006cc4:	61b8      	str	r0, [r7, #24]
 8006cc6:	e013      	b.n	8006cf0 <UART_SetConfig+0x468>
 8006cc8:	f7fd ffc2 	bl	8004c50 <HAL_RCC_GetPCLK2Freq>
 8006ccc:	61b8      	str	r0, [r7, #24]
 8006cce:	e00f      	b.n	8006cf0 <UART_SetConfig+0x468>
 8006cd0:	4b1d      	ldr	r3, [pc, #116]	; (8006d48 <UART_SetConfig+0x4c0>)
 8006cd2:	61bb      	str	r3, [r7, #24]
 8006cd4:	e00c      	b.n	8006cf0 <UART_SetConfig+0x468>
 8006cd6:	f7fd feb9 	bl	8004a4c <HAL_RCC_GetSysClockFreq>
 8006cda:	61b8      	str	r0, [r7, #24]
 8006cdc:	e008      	b.n	8006cf0 <UART_SetConfig+0x468>
 8006cde:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006ce2:	61bb      	str	r3, [r7, #24]
 8006ce4:	e004      	b.n	8006cf0 <UART_SetConfig+0x468>
 8006ce6:	2300      	movs	r3, #0
 8006ce8:	61bb      	str	r3, [r7, #24]
 8006cea:	2301      	movs	r3, #1
 8006cec:	77bb      	strb	r3, [r7, #30]
 8006cee:	bf00      	nop
 8006cf0:	69bb      	ldr	r3, [r7, #24]
 8006cf2:	2b00      	cmp	r3, #0
 8006cf4:	d018      	beq.n	8006d28 <UART_SetConfig+0x4a0>
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	685b      	ldr	r3, [r3, #4]
 8006cfa:	085a      	lsrs	r2, r3, #1
 8006cfc:	69bb      	ldr	r3, [r7, #24]
 8006cfe:	441a      	add	r2, r3
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	685b      	ldr	r3, [r3, #4]
 8006d04:	fbb2 f3f3 	udiv	r3, r2, r3
 8006d08:	613b      	str	r3, [r7, #16]
 8006d0a:	693b      	ldr	r3, [r7, #16]
 8006d0c:	2b0f      	cmp	r3, #15
 8006d0e:	d909      	bls.n	8006d24 <UART_SetConfig+0x49c>
 8006d10:	693b      	ldr	r3, [r7, #16]
 8006d12:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006d16:	d205      	bcs.n	8006d24 <UART_SetConfig+0x49c>
 8006d18:	693b      	ldr	r3, [r7, #16]
 8006d1a:	b29a      	uxth	r2, r3
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	60da      	str	r2, [r3, #12]
 8006d22:	e001      	b.n	8006d28 <UART_SetConfig+0x4a0>
 8006d24:	2301      	movs	r3, #1
 8006d26:	77bb      	strb	r3, [r7, #30]
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	2200      	movs	r2, #0
 8006d2c:	665a      	str	r2, [r3, #100]	; 0x64
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	2200      	movs	r2, #0
 8006d32:	669a      	str	r2, [r3, #104]	; 0x68
 8006d34:	7fbb      	ldrb	r3, [r7, #30]
 8006d36:	4618      	mov	r0, r3
 8006d38:	3720      	adds	r7, #32
 8006d3a:	46bd      	mov	sp, r7
 8006d3c:	bd80      	pop	{r7, pc}
 8006d3e:	bf00      	nop
 8006d40:	40007c00 	.word	0x40007c00
 8006d44:	40023800 	.word	0x40023800
 8006d48:	00f42400 	.word	0x00f42400

08006d4c <UART_AdvFeatureConfig>:
 8006d4c:	b480      	push	{r7}
 8006d4e:	b083      	sub	sp, #12
 8006d50:	af00      	add	r7, sp, #0
 8006d52:	6078      	str	r0, [r7, #4]
 8006d54:	687b      	ldr	r3, [r7, #4]
 8006d56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d58:	f003 0301 	and.w	r3, r3, #1
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d00a      	beq.n	8006d76 <UART_AdvFeatureConfig+0x2a>
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	681b      	ldr	r3, [r3, #0]
 8006d64:	685b      	ldr	r3, [r3, #4]
 8006d66:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	430a      	orrs	r2, r1
 8006d74:	605a      	str	r2, [r3, #4]
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d7a:	f003 0302 	and.w	r3, r3, #2
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d00a      	beq.n	8006d98 <UART_AdvFeatureConfig+0x4c>
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	685b      	ldr	r3, [r3, #4]
 8006d88:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	430a      	orrs	r2, r1
 8006d96:	605a      	str	r2, [r3, #4]
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d9c:	f003 0304 	and.w	r3, r3, #4
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d00a      	beq.n	8006dba <UART_AdvFeatureConfig+0x6e>
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	685b      	ldr	r3, [r3, #4]
 8006daa:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	430a      	orrs	r2, r1
 8006db8:	605a      	str	r2, [r3, #4]
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006dbe:	f003 0308 	and.w	r3, r3, #8
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d00a      	beq.n	8006ddc <UART_AdvFeatureConfig+0x90>
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	685b      	ldr	r3, [r3, #4]
 8006dcc:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	430a      	orrs	r2, r1
 8006dda:	605a      	str	r2, [r3, #4]
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006de0:	f003 0310 	and.w	r3, r3, #16
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d00a      	beq.n	8006dfe <UART_AdvFeatureConfig+0xb2>
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	689b      	ldr	r3, [r3, #8]
 8006dee:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006df6:	687b      	ldr	r3, [r7, #4]
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	430a      	orrs	r2, r1
 8006dfc:	609a      	str	r2, [r3, #8]
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e02:	f003 0320 	and.w	r3, r3, #32
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	d00a      	beq.n	8006e20 <UART_AdvFeatureConfig+0xd4>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	689b      	ldr	r3, [r3, #8]
 8006e10:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	430a      	orrs	r2, r1
 8006e1e:	609a      	str	r2, [r3, #8]
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e24:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e28:	2b00      	cmp	r3, #0
 8006e2a:	d01a      	beq.n	8006e62 <UART_AdvFeatureConfig+0x116>
 8006e2c:	687b      	ldr	r3, [r7, #4]
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	685b      	ldr	r3, [r3, #4]
 8006e32:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	681b      	ldr	r3, [r3, #0]
 8006e3e:	430a      	orrs	r2, r1
 8006e40:	605a      	str	r2, [r3, #4]
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e46:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006e4a:	d10a      	bne.n	8006e62 <UART_AdvFeatureConfig+0x116>
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	685b      	ldr	r3, [r3, #4]
 8006e52:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	430a      	orrs	r2, r1
 8006e60:	605a      	str	r2, [r3, #4]
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e66:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d00a      	beq.n	8006e84 <UART_AdvFeatureConfig+0x138>
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	685b      	ldr	r3, [r3, #4]
 8006e74:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	681b      	ldr	r3, [r3, #0]
 8006e80:	430a      	orrs	r2, r1
 8006e82:	605a      	str	r2, [r3, #4]
 8006e84:	bf00      	nop
 8006e86:	370c      	adds	r7, #12
 8006e88:	46bd      	mov	sp, r7
 8006e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e8e:	4770      	bx	lr

08006e90 <UART_CheckIdleState>:
 8006e90:	b580      	push	{r7, lr}
 8006e92:	b086      	sub	sp, #24
 8006e94:	af02      	add	r7, sp, #8
 8006e96:	6078      	str	r0, [r7, #4]
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	2200      	movs	r2, #0
 8006e9c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006ea0:	f7fc f850 	bl	8002f44 <HAL_GetTick>
 8006ea4:	60f8      	str	r0, [r7, #12]
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	681b      	ldr	r3, [r3, #0]
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	f003 0308 	and.w	r3, r3, #8
 8006eb0:	2b08      	cmp	r3, #8
 8006eb2:	d10e      	bne.n	8006ed2 <UART_CheckIdleState+0x42>
 8006eb4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8006eb8:	9300      	str	r3, [sp, #0]
 8006eba:	68fb      	ldr	r3, [r7, #12]
 8006ebc:	2200      	movs	r2, #0
 8006ebe:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8006ec2:	6878      	ldr	r0, [r7, #4]
 8006ec4:	f000 f82d 	bl	8006f22 <UART_WaitOnFlagUntilTimeout>
 8006ec8:	4603      	mov	r3, r0
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d001      	beq.n	8006ed2 <UART_CheckIdleState+0x42>
 8006ece:	2303      	movs	r3, #3
 8006ed0:	e023      	b.n	8006f1a <UART_CheckIdleState+0x8a>
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	681b      	ldr	r3, [r3, #0]
 8006ed6:	681b      	ldr	r3, [r3, #0]
 8006ed8:	f003 0304 	and.w	r3, r3, #4
 8006edc:	2b04      	cmp	r3, #4
 8006ede:	d10e      	bne.n	8006efe <UART_CheckIdleState+0x6e>
 8006ee0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8006ee4:	9300      	str	r3, [sp, #0]
 8006ee6:	68fb      	ldr	r3, [r7, #12]
 8006ee8:	2200      	movs	r2, #0
 8006eea:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8006eee:	6878      	ldr	r0, [r7, #4]
 8006ef0:	f000 f817 	bl	8006f22 <UART_WaitOnFlagUntilTimeout>
 8006ef4:	4603      	mov	r3, r0
 8006ef6:	2b00      	cmp	r3, #0
 8006ef8:	d001      	beq.n	8006efe <UART_CheckIdleState+0x6e>
 8006efa:	2303      	movs	r3, #3
 8006efc:	e00d      	b.n	8006f1a <UART_CheckIdleState+0x8a>
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	2220      	movs	r2, #32
 8006f02:	679a      	str	r2, [r3, #120]	; 0x78
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	2220      	movs	r2, #32
 8006f08:	67da      	str	r2, [r3, #124]	; 0x7c
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	2200      	movs	r2, #0
 8006f0e:	661a      	str	r2, [r3, #96]	; 0x60
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	2200      	movs	r2, #0
 8006f14:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006f18:	2300      	movs	r3, #0
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	3710      	adds	r7, #16
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	bd80      	pop	{r7, pc}

08006f22 <UART_WaitOnFlagUntilTimeout>:
 8006f22:	b580      	push	{r7, lr}
 8006f24:	b09c      	sub	sp, #112	; 0x70
 8006f26:	af00      	add	r7, sp, #0
 8006f28:	60f8      	str	r0, [r7, #12]
 8006f2a:	60b9      	str	r1, [r7, #8]
 8006f2c:	603b      	str	r3, [r7, #0]
 8006f2e:	4613      	mov	r3, r2
 8006f30:	71fb      	strb	r3, [r7, #7]
 8006f32:	e0a5      	b.n	8007080 <UART_WaitOnFlagUntilTimeout+0x15e>
 8006f34:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006f36:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006f3a:	f000 80a1 	beq.w	8007080 <UART_WaitOnFlagUntilTimeout+0x15e>
 8006f3e:	f7fc f801 	bl	8002f44 <HAL_GetTick>
 8006f42:	4602      	mov	r2, r0
 8006f44:	683b      	ldr	r3, [r7, #0]
 8006f46:	1ad3      	subs	r3, r2, r3
 8006f48:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8006f4a:	429a      	cmp	r2, r3
 8006f4c:	d302      	bcc.n	8006f54 <UART_WaitOnFlagUntilTimeout+0x32>
 8006f4e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006f50:	2b00      	cmp	r3, #0
 8006f52:	d13e      	bne.n	8006fd2 <UART_WaitOnFlagUntilTimeout+0xb0>
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	653b      	str	r3, [r7, #80]	; 0x50
 8006f5a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006f5c:	e853 3f00 	ldrex	r3, [r3]
 8006f60:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006f62:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006f64:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006f68:	667b      	str	r3, [r7, #100]	; 0x64
 8006f6a:	68fb      	ldr	r3, [r7, #12]
 8006f6c:	681b      	ldr	r3, [r3, #0]
 8006f6e:	461a      	mov	r2, r3
 8006f70:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006f72:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006f74:	65ba      	str	r2, [r7, #88]	; 0x58
 8006f76:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8006f78:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8006f7a:	e841 2300 	strex	r3, r2, [r1]
 8006f7e:	657b      	str	r3, [r7, #84]	; 0x54
 8006f80:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8006f82:	2b00      	cmp	r3, #0
 8006f84:	d1e6      	bne.n	8006f54 <UART_WaitOnFlagUntilTimeout+0x32>
 8006f86:	68fb      	ldr	r3, [r7, #12]
 8006f88:	681b      	ldr	r3, [r3, #0]
 8006f8a:	3308      	adds	r3, #8
 8006f8c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006f8e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006f90:	e853 3f00 	ldrex	r3, [r3]
 8006f94:	63bb      	str	r3, [r7, #56]	; 0x38
 8006f96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f98:	f023 0301 	bic.w	r3, r3, #1
 8006f9c:	663b      	str	r3, [r7, #96]	; 0x60
 8006f9e:	68fb      	ldr	r3, [r7, #12]
 8006fa0:	681b      	ldr	r3, [r3, #0]
 8006fa2:	3308      	adds	r3, #8
 8006fa4:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8006fa6:	64ba      	str	r2, [r7, #72]	; 0x48
 8006fa8:	647b      	str	r3, [r7, #68]	; 0x44
 8006faa:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8006fac:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006fae:	e841 2300 	strex	r3, r2, [r1]
 8006fb2:	643b      	str	r3, [r7, #64]	; 0x40
 8006fb4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	d1e5      	bne.n	8006f86 <UART_WaitOnFlagUntilTimeout+0x64>
 8006fba:	68fb      	ldr	r3, [r7, #12]
 8006fbc:	2220      	movs	r2, #32
 8006fbe:	679a      	str	r2, [r3, #120]	; 0x78
 8006fc0:	68fb      	ldr	r3, [r7, #12]
 8006fc2:	2220      	movs	r2, #32
 8006fc4:	67da      	str	r2, [r3, #124]	; 0x7c
 8006fc6:	68fb      	ldr	r3, [r7, #12]
 8006fc8:	2200      	movs	r2, #0
 8006fca:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006fce:	2303      	movs	r3, #3
 8006fd0:	e067      	b.n	80070a2 <UART_WaitOnFlagUntilTimeout+0x180>
 8006fd2:	68fb      	ldr	r3, [r7, #12]
 8006fd4:	681b      	ldr	r3, [r3, #0]
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	f003 0304 	and.w	r3, r3, #4
 8006fdc:	2b00      	cmp	r3, #0
 8006fde:	d04f      	beq.n	8007080 <UART_WaitOnFlagUntilTimeout+0x15e>
 8006fe0:	68fb      	ldr	r3, [r7, #12]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	69db      	ldr	r3, [r3, #28]
 8006fe6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006fea:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006fee:	d147      	bne.n	8007080 <UART_WaitOnFlagUntilTimeout+0x15e>
 8006ff0:	68fb      	ldr	r3, [r7, #12]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006ff8:	621a      	str	r2, [r3, #32]
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	62bb      	str	r3, [r7, #40]	; 0x28
 8007000:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007002:	e853 3f00 	ldrex	r3, [r3]
 8007006:	627b      	str	r3, [r7, #36]	; 0x24
 8007008:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800700a:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800700e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007010:	68fb      	ldr	r3, [r7, #12]
 8007012:	681b      	ldr	r3, [r3, #0]
 8007014:	461a      	mov	r2, r3
 8007016:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007018:	637b      	str	r3, [r7, #52]	; 0x34
 800701a:	633a      	str	r2, [r7, #48]	; 0x30
 800701c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800701e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8007020:	e841 2300 	strex	r3, r2, [r1]
 8007024:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007026:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007028:	2b00      	cmp	r3, #0
 800702a:	d1e6      	bne.n	8006ffa <UART_WaitOnFlagUntilTimeout+0xd8>
 800702c:	68fb      	ldr	r3, [r7, #12]
 800702e:	681b      	ldr	r3, [r3, #0]
 8007030:	3308      	adds	r3, #8
 8007032:	617b      	str	r3, [r7, #20]
 8007034:	697b      	ldr	r3, [r7, #20]
 8007036:	e853 3f00 	ldrex	r3, [r3]
 800703a:	613b      	str	r3, [r7, #16]
 800703c:	693b      	ldr	r3, [r7, #16]
 800703e:	f023 0301 	bic.w	r3, r3, #1
 8007042:	66bb      	str	r3, [r7, #104]	; 0x68
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	3308      	adds	r3, #8
 800704a:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800704c:	623a      	str	r2, [r7, #32]
 800704e:	61fb      	str	r3, [r7, #28]
 8007050:	69f9      	ldr	r1, [r7, #28]
 8007052:	6a3a      	ldr	r2, [r7, #32]
 8007054:	e841 2300 	strex	r3, r2, [r1]
 8007058:	61bb      	str	r3, [r7, #24]
 800705a:	69bb      	ldr	r3, [r7, #24]
 800705c:	2b00      	cmp	r3, #0
 800705e:	d1e5      	bne.n	800702c <UART_WaitOnFlagUntilTimeout+0x10a>
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	2220      	movs	r2, #32
 8007064:	679a      	str	r2, [r3, #120]	; 0x78
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	2220      	movs	r2, #32
 800706a:	67da      	str	r2, [r3, #124]	; 0x7c
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	2220      	movs	r2, #32
 8007070:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007074:	68fb      	ldr	r3, [r7, #12]
 8007076:	2200      	movs	r2, #0
 8007078:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800707c:	2303      	movs	r3, #3
 800707e:	e010      	b.n	80070a2 <UART_WaitOnFlagUntilTimeout+0x180>
 8007080:	68fb      	ldr	r3, [r7, #12]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	69da      	ldr	r2, [r3, #28]
 8007086:	68bb      	ldr	r3, [r7, #8]
 8007088:	4013      	ands	r3, r2
 800708a:	68ba      	ldr	r2, [r7, #8]
 800708c:	429a      	cmp	r2, r3
 800708e:	bf0c      	ite	eq
 8007090:	2301      	moveq	r3, #1
 8007092:	2300      	movne	r3, #0
 8007094:	b2db      	uxtb	r3, r3
 8007096:	461a      	mov	r2, r3
 8007098:	79fb      	ldrb	r3, [r7, #7]
 800709a:	429a      	cmp	r2, r3
 800709c:	f43f af4a 	beq.w	8006f34 <UART_WaitOnFlagUntilTimeout+0x12>
 80070a0:	2300      	movs	r3, #0
 80070a2:	4618      	mov	r0, r3
 80070a4:	3770      	adds	r7, #112	; 0x70
 80070a6:	46bd      	mov	sp, r7
 80070a8:	bd80      	pop	{r7, pc}
	...

080070ac <UART_Start_Receive_IT>:
 80070ac:	b480      	push	{r7}
 80070ae:	b097      	sub	sp, #92	; 0x5c
 80070b0:	af00      	add	r7, sp, #0
 80070b2:	60f8      	str	r0, [r7, #12]
 80070b4:	60b9      	str	r1, [r7, #8]
 80070b6:	4613      	mov	r3, r2
 80070b8:	80fb      	strh	r3, [r7, #6]
 80070ba:	68fb      	ldr	r3, [r7, #12]
 80070bc:	68ba      	ldr	r2, [r7, #8]
 80070be:	655a      	str	r2, [r3, #84]	; 0x54
 80070c0:	68fb      	ldr	r3, [r7, #12]
 80070c2:	88fa      	ldrh	r2, [r7, #6]
 80070c4:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 80070c8:	68fb      	ldr	r3, [r7, #12]
 80070ca:	88fa      	ldrh	r2, [r7, #6]
 80070cc:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80070d0:	68fb      	ldr	r3, [r7, #12]
 80070d2:	2200      	movs	r2, #0
 80070d4:	665a      	str	r2, [r3, #100]	; 0x64
 80070d6:	68fb      	ldr	r3, [r7, #12]
 80070d8:	689b      	ldr	r3, [r3, #8]
 80070da:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80070de:	d10e      	bne.n	80070fe <UART_Start_Receive_IT+0x52>
 80070e0:	68fb      	ldr	r3, [r7, #12]
 80070e2:	691b      	ldr	r3, [r3, #16]
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d105      	bne.n	80070f4 <UART_Start_Receive_IT+0x48>
 80070e8:	68fb      	ldr	r3, [r7, #12]
 80070ea:	f240 12ff 	movw	r2, #511	; 0x1ff
 80070ee:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80070f2:	e02d      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	22ff      	movs	r2, #255	; 0xff
 80070f8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80070fc:	e028      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 80070fe:	68fb      	ldr	r3, [r7, #12]
 8007100:	689b      	ldr	r3, [r3, #8]
 8007102:	2b00      	cmp	r3, #0
 8007104:	d10d      	bne.n	8007122 <UART_Start_Receive_IT+0x76>
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	691b      	ldr	r3, [r3, #16]
 800710a:	2b00      	cmp	r3, #0
 800710c:	d104      	bne.n	8007118 <UART_Start_Receive_IT+0x6c>
 800710e:	68fb      	ldr	r3, [r7, #12]
 8007110:	22ff      	movs	r2, #255	; 0xff
 8007112:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007116:	e01b      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 8007118:	68fb      	ldr	r3, [r7, #12]
 800711a:	227f      	movs	r2, #127	; 0x7f
 800711c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007120:	e016      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	689b      	ldr	r3, [r3, #8]
 8007126:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800712a:	d10d      	bne.n	8007148 <UART_Start_Receive_IT+0x9c>
 800712c:	68fb      	ldr	r3, [r7, #12]
 800712e:	691b      	ldr	r3, [r3, #16]
 8007130:	2b00      	cmp	r3, #0
 8007132:	d104      	bne.n	800713e <UART_Start_Receive_IT+0x92>
 8007134:	68fb      	ldr	r3, [r7, #12]
 8007136:	227f      	movs	r2, #127	; 0x7f
 8007138:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800713c:	e008      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	223f      	movs	r2, #63	; 0x3f
 8007142:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007146:	e003      	b.n	8007150 <UART_Start_Receive_IT+0xa4>
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	2200      	movs	r2, #0
 800714c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	2200      	movs	r2, #0
 8007154:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007158:	68fb      	ldr	r3, [r7, #12]
 800715a:	2222      	movs	r2, #34	; 0x22
 800715c:	67da      	str	r2, [r3, #124]	; 0x7c
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	681b      	ldr	r3, [r3, #0]
 8007162:	3308      	adds	r3, #8
 8007164:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007166:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007168:	e853 3f00 	ldrex	r3, [r3]
 800716c:	63bb      	str	r3, [r7, #56]	; 0x38
 800716e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007170:	f043 0301 	orr.w	r3, r3, #1
 8007174:	657b      	str	r3, [r7, #84]	; 0x54
 8007176:	68fb      	ldr	r3, [r7, #12]
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	3308      	adds	r3, #8
 800717c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800717e:	64ba      	str	r2, [r7, #72]	; 0x48
 8007180:	647b      	str	r3, [r7, #68]	; 0x44
 8007182:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8007184:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007186:	e841 2300 	strex	r3, r2, [r1]
 800718a:	643b      	str	r3, [r7, #64]	; 0x40
 800718c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800718e:	2b00      	cmp	r3, #0
 8007190:	d1e5      	bne.n	800715e <UART_Start_Receive_IT+0xb2>
 8007192:	68fb      	ldr	r3, [r7, #12]
 8007194:	689b      	ldr	r3, [r3, #8]
 8007196:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800719a:	d107      	bne.n	80071ac <UART_Start_Receive_IT+0x100>
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	691b      	ldr	r3, [r3, #16]
 80071a0:	2b00      	cmp	r3, #0
 80071a2:	d103      	bne.n	80071ac <UART_Start_Receive_IT+0x100>
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	4a24      	ldr	r2, [pc, #144]	; (8007238 <UART_Start_Receive_IT+0x18c>)
 80071a8:	665a      	str	r2, [r3, #100]	; 0x64
 80071aa:	e002      	b.n	80071b2 <UART_Start_Receive_IT+0x106>
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	4a23      	ldr	r2, [pc, #140]	; (800723c <UART_Start_Receive_IT+0x190>)
 80071b0:	665a      	str	r2, [r3, #100]	; 0x64
 80071b2:	68fb      	ldr	r3, [r7, #12]
 80071b4:	2200      	movs	r2, #0
 80071b6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80071ba:	68fb      	ldr	r3, [r7, #12]
 80071bc:	691b      	ldr	r3, [r3, #16]
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d019      	beq.n	80071f6 <UART_Start_Receive_IT+0x14a>
 80071c2:	68fb      	ldr	r3, [r7, #12]
 80071c4:	681b      	ldr	r3, [r3, #0]
 80071c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80071c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80071ca:	e853 3f00 	ldrex	r3, [r3]
 80071ce:	627b      	str	r3, [r7, #36]	; 0x24
 80071d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071d2:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 80071d6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80071d8:	68fb      	ldr	r3, [r7, #12]
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	461a      	mov	r2, r3
 80071de:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80071e0:	637b      	str	r3, [r7, #52]	; 0x34
 80071e2:	633a      	str	r2, [r7, #48]	; 0x30
 80071e4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80071e6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80071e8:	e841 2300 	strex	r3, r2, [r1]
 80071ec:	62fb      	str	r3, [r7, #44]	; 0x2c
 80071ee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80071f0:	2b00      	cmp	r3, #0
 80071f2:	d1e6      	bne.n	80071c2 <UART_Start_Receive_IT+0x116>
 80071f4:	e018      	b.n	8007228 <UART_Start_Receive_IT+0x17c>
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	681b      	ldr	r3, [r3, #0]
 80071fa:	617b      	str	r3, [r7, #20]
 80071fc:	697b      	ldr	r3, [r7, #20]
 80071fe:	e853 3f00 	ldrex	r3, [r3]
 8007202:	613b      	str	r3, [r7, #16]
 8007204:	693b      	ldr	r3, [r7, #16]
 8007206:	f043 0320 	orr.w	r3, r3, #32
 800720a:	653b      	str	r3, [r7, #80]	; 0x50
 800720c:	68fb      	ldr	r3, [r7, #12]
 800720e:	681b      	ldr	r3, [r3, #0]
 8007210:	461a      	mov	r2, r3
 8007212:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007214:	623b      	str	r3, [r7, #32]
 8007216:	61fa      	str	r2, [r7, #28]
 8007218:	69f9      	ldr	r1, [r7, #28]
 800721a:	6a3a      	ldr	r2, [r7, #32]
 800721c:	e841 2300 	strex	r3, r2, [r1]
 8007220:	61bb      	str	r3, [r7, #24]
 8007222:	69bb      	ldr	r3, [r7, #24]
 8007224:	2b00      	cmp	r3, #0
 8007226:	d1e6      	bne.n	80071f6 <UART_Start_Receive_IT+0x14a>
 8007228:	2300      	movs	r3, #0
 800722a:	4618      	mov	r0, r3
 800722c:	375c      	adds	r7, #92	; 0x5c
 800722e:	46bd      	mov	sp, r7
 8007230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007234:	4770      	bx	lr
 8007236:	bf00      	nop
 8007238:	08007659 	.word	0x08007659
 800723c:	080074fd 	.word	0x080074fd

08007240 <UART_EndRxTransfer>:
 8007240:	b480      	push	{r7}
 8007242:	b095      	sub	sp, #84	; 0x54
 8007244:	af00      	add	r7, sp, #0
 8007246:	6078      	str	r0, [r7, #4]
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	681b      	ldr	r3, [r3, #0]
 800724c:	637b      	str	r3, [r7, #52]	; 0x34
 800724e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007250:	e853 3f00 	ldrex	r3, [r3]
 8007254:	633b      	str	r3, [r7, #48]	; 0x30
 8007256:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007258:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800725c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	461a      	mov	r2, r3
 8007264:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007266:	643b      	str	r3, [r7, #64]	; 0x40
 8007268:	63fa      	str	r2, [r7, #60]	; 0x3c
 800726a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800726c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800726e:	e841 2300 	strex	r3, r2, [r1]
 8007272:	63bb      	str	r3, [r7, #56]	; 0x38
 8007274:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007276:	2b00      	cmp	r3, #0
 8007278:	d1e6      	bne.n	8007248 <UART_EndRxTransfer+0x8>
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	681b      	ldr	r3, [r3, #0]
 800727e:	3308      	adds	r3, #8
 8007280:	623b      	str	r3, [r7, #32]
 8007282:	6a3b      	ldr	r3, [r7, #32]
 8007284:	e853 3f00 	ldrex	r3, [r3]
 8007288:	61fb      	str	r3, [r7, #28]
 800728a:	69fb      	ldr	r3, [r7, #28]
 800728c:	f023 0301 	bic.w	r3, r3, #1
 8007290:	64bb      	str	r3, [r7, #72]	; 0x48
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	3308      	adds	r3, #8
 8007298:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800729a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800729c:	62bb      	str	r3, [r7, #40]	; 0x28
 800729e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80072a0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80072a2:	e841 2300 	strex	r3, r2, [r1]
 80072a6:	627b      	str	r3, [r7, #36]	; 0x24
 80072a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072aa:	2b00      	cmp	r3, #0
 80072ac:	d1e5      	bne.n	800727a <UART_EndRxTransfer+0x3a>
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80072b2:	2b01      	cmp	r3, #1
 80072b4:	d118      	bne.n	80072e8 <UART_EndRxTransfer+0xa8>
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	681b      	ldr	r3, [r3, #0]
 80072ba:	60fb      	str	r3, [r7, #12]
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	e853 3f00 	ldrex	r3, [r3]
 80072c2:	60bb      	str	r3, [r7, #8]
 80072c4:	68bb      	ldr	r3, [r7, #8]
 80072c6:	f023 0310 	bic.w	r3, r3, #16
 80072ca:	647b      	str	r3, [r7, #68]	; 0x44
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	461a      	mov	r2, r3
 80072d2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80072d4:	61bb      	str	r3, [r7, #24]
 80072d6:	617a      	str	r2, [r7, #20]
 80072d8:	6979      	ldr	r1, [r7, #20]
 80072da:	69ba      	ldr	r2, [r7, #24]
 80072dc:	e841 2300 	strex	r3, r2, [r1]
 80072e0:	613b      	str	r3, [r7, #16]
 80072e2:	693b      	ldr	r3, [r7, #16]
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d1e6      	bne.n	80072b6 <UART_EndRxTransfer+0x76>
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	2220      	movs	r2, #32
 80072ec:	67da      	str	r2, [r3, #124]	; 0x7c
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	2200      	movs	r2, #0
 80072f2:	661a      	str	r2, [r3, #96]	; 0x60
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	2200      	movs	r2, #0
 80072f8:	665a      	str	r2, [r3, #100]	; 0x64
 80072fa:	bf00      	nop
 80072fc:	3754      	adds	r7, #84	; 0x54
 80072fe:	46bd      	mov	sp, r7
 8007300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007304:	4770      	bx	lr

08007306 <UART_DMAAbortOnError>:
 8007306:	b580      	push	{r7, lr}
 8007308:	b084      	sub	sp, #16
 800730a:	af00      	add	r7, sp, #0
 800730c:	6078      	str	r0, [r7, #4]
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007312:	60fb      	str	r3, [r7, #12]
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	2200      	movs	r2, #0
 8007318:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	2200      	movs	r2, #0
 8007320:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8007324:	68f8      	ldr	r0, [r7, #12]
 8007326:	f7ff fa8f 	bl	8006848 <HAL_UART_ErrorCallback>
 800732a:	bf00      	nop
 800732c:	3710      	adds	r7, #16
 800732e:	46bd      	mov	sp, r7
 8007330:	bd80      	pop	{r7, pc}

08007332 <UART_TxISR_8BIT>:
 8007332:	b480      	push	{r7}
 8007334:	b08f      	sub	sp, #60	; 0x3c
 8007336:	af00      	add	r7, sp, #0
 8007338:	6078      	str	r0, [r7, #4]
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800733e:	2b21      	cmp	r3, #33	; 0x21
 8007340:	d14c      	bne.n	80073dc <UART_TxISR_8BIT+0xaa>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007348:	b29b      	uxth	r3, r3
 800734a:	2b00      	cmp	r3, #0
 800734c:	d132      	bne.n	80073b4 <UART_TxISR_8BIT+0x82>
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	623b      	str	r3, [r7, #32]
 8007354:	6a3b      	ldr	r3, [r7, #32]
 8007356:	e853 3f00 	ldrex	r3, [r3]
 800735a:	61fb      	str	r3, [r7, #28]
 800735c:	69fb      	ldr	r3, [r7, #28]
 800735e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007362:	637b      	str	r3, [r7, #52]	; 0x34
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	461a      	mov	r2, r3
 800736a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800736c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800736e:	62ba      	str	r2, [r7, #40]	; 0x28
 8007370:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007372:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007374:	e841 2300 	strex	r3, r2, [r1]
 8007378:	627b      	str	r3, [r7, #36]	; 0x24
 800737a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800737c:	2b00      	cmp	r3, #0
 800737e:	d1e6      	bne.n	800734e <UART_TxISR_8BIT+0x1c>
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	60fb      	str	r3, [r7, #12]
 8007386:	68fb      	ldr	r3, [r7, #12]
 8007388:	e853 3f00 	ldrex	r3, [r3]
 800738c:	60bb      	str	r3, [r7, #8]
 800738e:	68bb      	ldr	r3, [r7, #8]
 8007390:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007394:	633b      	str	r3, [r7, #48]	; 0x30
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	461a      	mov	r2, r3
 800739c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800739e:	61bb      	str	r3, [r7, #24]
 80073a0:	617a      	str	r2, [r7, #20]
 80073a2:	6979      	ldr	r1, [r7, #20]
 80073a4:	69ba      	ldr	r2, [r7, #24]
 80073a6:	e841 2300 	strex	r3, r2, [r1]
 80073aa:	613b      	str	r3, [r7, #16]
 80073ac:	693b      	ldr	r3, [r7, #16]
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d1e6      	bne.n	8007380 <UART_TxISR_8BIT+0x4e>
 80073b2:	e013      	b.n	80073dc <UART_TxISR_8BIT+0xaa>
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80073b8:	781a      	ldrb	r2, [r3, #0]
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	629a      	str	r2, [r3, #40]	; 0x28
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80073c4:	1c5a      	adds	r2, r3, #1
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	64da      	str	r2, [r3, #76]	; 0x4c
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80073d0:	b29b      	uxth	r3, r3
 80073d2:	3b01      	subs	r3, #1
 80073d4:	b29a      	uxth	r2, r3
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80073dc:	bf00      	nop
 80073de:	373c      	adds	r7, #60	; 0x3c
 80073e0:	46bd      	mov	sp, r7
 80073e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e6:	4770      	bx	lr

080073e8 <UART_TxISR_16BIT>:
 80073e8:	b480      	push	{r7}
 80073ea:	b091      	sub	sp, #68	; 0x44
 80073ec:	af00      	add	r7, sp, #0
 80073ee:	6078      	str	r0, [r7, #4]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80073f4:	2b21      	cmp	r3, #33	; 0x21
 80073f6:	d151      	bne.n	800749c <UART_TxISR_16BIT+0xb4>
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80073fe:	b29b      	uxth	r3, r3
 8007400:	2b00      	cmp	r3, #0
 8007402:	d132      	bne.n	800746a <UART_TxISR_16BIT+0x82>
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	627b      	str	r3, [r7, #36]	; 0x24
 800740a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800740c:	e853 3f00 	ldrex	r3, [r3]
 8007410:	623b      	str	r3, [r7, #32]
 8007412:	6a3b      	ldr	r3, [r7, #32]
 8007414:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007418:	63bb      	str	r3, [r7, #56]	; 0x38
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	461a      	mov	r2, r3
 8007420:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007422:	633b      	str	r3, [r7, #48]	; 0x30
 8007424:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007426:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8007428:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800742a:	e841 2300 	strex	r3, r2, [r1]
 800742e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007430:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007432:	2b00      	cmp	r3, #0
 8007434:	d1e6      	bne.n	8007404 <UART_TxISR_16BIT+0x1c>
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	613b      	str	r3, [r7, #16]
 800743c:	693b      	ldr	r3, [r7, #16]
 800743e:	e853 3f00 	ldrex	r3, [r3]
 8007442:	60fb      	str	r3, [r7, #12]
 8007444:	68fb      	ldr	r3, [r7, #12]
 8007446:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800744a:	637b      	str	r3, [r7, #52]	; 0x34
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	461a      	mov	r2, r3
 8007452:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007454:	61fb      	str	r3, [r7, #28]
 8007456:	61ba      	str	r2, [r7, #24]
 8007458:	69b9      	ldr	r1, [r7, #24]
 800745a:	69fa      	ldr	r2, [r7, #28]
 800745c:	e841 2300 	strex	r3, r2, [r1]
 8007460:	617b      	str	r3, [r7, #20]
 8007462:	697b      	ldr	r3, [r7, #20]
 8007464:	2b00      	cmp	r3, #0
 8007466:	d1e6      	bne.n	8007436 <UART_TxISR_16BIT+0x4e>
 8007468:	e018      	b.n	800749c <UART_TxISR_16BIT+0xb4>
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800746e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007470:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007472:	881b      	ldrh	r3, [r3, #0]
 8007474:	461a      	mov	r2, r3
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800747e:	629a      	str	r2, [r3, #40]	; 0x28
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007484:	1c9a      	adds	r2, r3, #2
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	64da      	str	r2, [r3, #76]	; 0x4c
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007490:	b29b      	uxth	r3, r3
 8007492:	3b01      	subs	r3, #1
 8007494:	b29a      	uxth	r2, r3
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800749c:	bf00      	nop
 800749e:	3744      	adds	r7, #68	; 0x44
 80074a0:	46bd      	mov	sp, r7
 80074a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a6:	4770      	bx	lr

080074a8 <UART_EndTransmit_IT>:
 80074a8:	b580      	push	{r7, lr}
 80074aa:	b088      	sub	sp, #32
 80074ac:	af00      	add	r7, sp, #0
 80074ae:	6078      	str	r0, [r7, #4]
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	60fb      	str	r3, [r7, #12]
 80074b6:	68fb      	ldr	r3, [r7, #12]
 80074b8:	e853 3f00 	ldrex	r3, [r3]
 80074bc:	60bb      	str	r3, [r7, #8]
 80074be:	68bb      	ldr	r3, [r7, #8]
 80074c0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80074c4:	61fb      	str	r3, [r7, #28]
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	681b      	ldr	r3, [r3, #0]
 80074ca:	461a      	mov	r2, r3
 80074cc:	69fb      	ldr	r3, [r7, #28]
 80074ce:	61bb      	str	r3, [r7, #24]
 80074d0:	617a      	str	r2, [r7, #20]
 80074d2:	6979      	ldr	r1, [r7, #20]
 80074d4:	69ba      	ldr	r2, [r7, #24]
 80074d6:	e841 2300 	strex	r3, r2, [r1]
 80074da:	613b      	str	r3, [r7, #16]
 80074dc:	693b      	ldr	r3, [r7, #16]
 80074de:	2b00      	cmp	r3, #0
 80074e0:	d1e6      	bne.n	80074b0 <UART_EndTransmit_IT+0x8>
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	2220      	movs	r2, #32
 80074e6:	679a      	str	r2, [r3, #120]	; 0x78
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	2200      	movs	r2, #0
 80074ec:	669a      	str	r2, [r3, #104]	; 0x68
 80074ee:	6878      	ldr	r0, [r7, #4]
 80074f0:	f7fb fc74 	bl	8002ddc <HAL_UART_TxCpltCallback>
 80074f4:	bf00      	nop
 80074f6:	3720      	adds	r7, #32
 80074f8:	46bd      	mov	sp, r7
 80074fa:	bd80      	pop	{r7, pc}

080074fc <UART_RxISR_8BIT>:
 80074fc:	b580      	push	{r7, lr}
 80074fe:	b096      	sub	sp, #88	; 0x58
 8007500:	af00      	add	r7, sp, #0
 8007502:	6078      	str	r0, [r7, #4]
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800750a:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007512:	2b22      	cmp	r3, #34	; 0x22
 8007514:	f040 8094 	bne.w	8007640 <UART_RxISR_8BIT+0x144>
 8007518:	687b      	ldr	r3, [r7, #4]
 800751a:	681b      	ldr	r3, [r3, #0]
 800751c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800751e:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8007522:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 8007526:	b2d9      	uxtb	r1, r3
 8007528:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800752c:	b2da      	uxtb	r2, r3
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007532:	400a      	ands	r2, r1
 8007534:	b2d2      	uxtb	r2, r2
 8007536:	701a      	strb	r2, [r3, #0]
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800753c:	1c5a      	adds	r2, r3, #1
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	655a      	str	r2, [r3, #84]	; 0x54
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8007548:	b29b      	uxth	r3, r3
 800754a:	3b01      	subs	r3, #1
 800754c:	b29a      	uxth	r2, r3
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800755a:	b29b      	uxth	r3, r3
 800755c:	2b00      	cmp	r3, #0
 800755e:	d177      	bne.n	8007650 <UART_RxISR_8BIT+0x154>
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	681b      	ldr	r3, [r3, #0]
 8007564:	63bb      	str	r3, [r7, #56]	; 0x38
 8007566:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007568:	e853 3f00 	ldrex	r3, [r3]
 800756c:	637b      	str	r3, [r7, #52]	; 0x34
 800756e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007570:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007574:	653b      	str	r3, [r7, #80]	; 0x50
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	461a      	mov	r2, r3
 800757c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800757e:	647b      	str	r3, [r7, #68]	; 0x44
 8007580:	643a      	str	r2, [r7, #64]	; 0x40
 8007582:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8007584:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007586:	e841 2300 	strex	r3, r2, [r1]
 800758a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800758c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800758e:	2b00      	cmp	r3, #0
 8007590:	d1e6      	bne.n	8007560 <UART_RxISR_8BIT+0x64>
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	3308      	adds	r3, #8
 8007598:	627b      	str	r3, [r7, #36]	; 0x24
 800759a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800759c:	e853 3f00 	ldrex	r3, [r3]
 80075a0:	623b      	str	r3, [r7, #32]
 80075a2:	6a3b      	ldr	r3, [r7, #32]
 80075a4:	f023 0301 	bic.w	r3, r3, #1
 80075a8:	64fb      	str	r3, [r7, #76]	; 0x4c
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	681b      	ldr	r3, [r3, #0]
 80075ae:	3308      	adds	r3, #8
 80075b0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80075b2:	633a      	str	r2, [r7, #48]	; 0x30
 80075b4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80075b6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80075b8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80075ba:	e841 2300 	strex	r3, r2, [r1]
 80075be:	62bb      	str	r3, [r7, #40]	; 0x28
 80075c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	d1e5      	bne.n	8007592 <UART_RxISR_8BIT+0x96>
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	2220      	movs	r2, #32
 80075ca:	67da      	str	r2, [r3, #124]	; 0x7c
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	2200      	movs	r2, #0
 80075d0:	665a      	str	r2, [r3, #100]	; 0x64
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80075d6:	2b01      	cmp	r3, #1
 80075d8:	d12e      	bne.n	8007638 <UART_RxISR_8BIT+0x13c>
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	2200      	movs	r2, #0
 80075de:	661a      	str	r2, [r3, #96]	; 0x60
 80075e0:	687b      	ldr	r3, [r7, #4]
 80075e2:	681b      	ldr	r3, [r3, #0]
 80075e4:	613b      	str	r3, [r7, #16]
 80075e6:	693b      	ldr	r3, [r7, #16]
 80075e8:	e853 3f00 	ldrex	r3, [r3]
 80075ec:	60fb      	str	r3, [r7, #12]
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	f023 0310 	bic.w	r3, r3, #16
 80075f4:	64bb      	str	r3, [r7, #72]	; 0x48
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	681b      	ldr	r3, [r3, #0]
 80075fa:	461a      	mov	r2, r3
 80075fc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80075fe:	61fb      	str	r3, [r7, #28]
 8007600:	61ba      	str	r2, [r7, #24]
 8007602:	69b9      	ldr	r1, [r7, #24]
 8007604:	69fa      	ldr	r2, [r7, #28]
 8007606:	e841 2300 	strex	r3, r2, [r1]
 800760a:	617b      	str	r3, [r7, #20]
 800760c:	697b      	ldr	r3, [r7, #20]
 800760e:	2b00      	cmp	r3, #0
 8007610:	d1e6      	bne.n	80075e0 <UART_RxISR_8BIT+0xe4>
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	69db      	ldr	r3, [r3, #28]
 8007618:	f003 0310 	and.w	r3, r3, #16
 800761c:	2b10      	cmp	r3, #16
 800761e:	d103      	bne.n	8007628 <UART_RxISR_8BIT+0x12c>
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	681b      	ldr	r3, [r3, #0]
 8007624:	2210      	movs	r2, #16
 8007626:	621a      	str	r2, [r3, #32]
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 800762e:	4619      	mov	r1, r3
 8007630:	6878      	ldr	r0, [r7, #4]
 8007632:	f7ff f913 	bl	800685c <HAL_UARTEx_RxEventCallback>
 8007636:	e00b      	b.n	8007650 <UART_RxISR_8BIT+0x154>
 8007638:	6878      	ldr	r0, [r7, #4]
 800763a:	f7fb fb73 	bl	8002d24 <HAL_UART_RxCpltCallback>
 800763e:	e007      	b.n	8007650 <UART_RxISR_8BIT+0x154>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	699a      	ldr	r2, [r3, #24]
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	f042 0208 	orr.w	r2, r2, #8
 800764e:	619a      	str	r2, [r3, #24]
 8007650:	bf00      	nop
 8007652:	3758      	adds	r7, #88	; 0x58
 8007654:	46bd      	mov	sp, r7
 8007656:	bd80      	pop	{r7, pc}

08007658 <UART_RxISR_16BIT>:
 8007658:	b580      	push	{r7, lr}
 800765a:	b096      	sub	sp, #88	; 0x58
 800765c:	af00      	add	r7, sp, #0
 800765e:	6078      	str	r0, [r7, #4]
 8007660:	687b      	ldr	r3, [r7, #4]
 8007662:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007666:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800766e:	2b22      	cmp	r3, #34	; 0x22
 8007670:	f040 8094 	bne.w	800779c <UART_RxISR_16BIT+0x144>
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800767a:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007682:	653b      	str	r3, [r7, #80]	; 0x50
 8007684:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 8007688:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800768c:	4013      	ands	r3, r2
 800768e:	b29a      	uxth	r2, r3
 8007690:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007692:	801a      	strh	r2, [r3, #0]
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007698:	1c9a      	adds	r2, r3, #2
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	655a      	str	r2, [r3, #84]	; 0x54
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80076a4:	b29b      	uxth	r3, r3
 80076a6:	3b01      	subs	r3, #1
 80076a8:	b29a      	uxth	r2, r3
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80076b6:	b29b      	uxth	r3, r3
 80076b8:	2b00      	cmp	r3, #0
 80076ba:	d177      	bne.n	80077ac <UART_RxISR_16BIT+0x154>
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	637b      	str	r3, [r7, #52]	; 0x34
 80076c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80076c4:	e853 3f00 	ldrex	r3, [r3]
 80076c8:	633b      	str	r3, [r7, #48]	; 0x30
 80076ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076cc:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80076d0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	461a      	mov	r2, r3
 80076d8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80076da:	643b      	str	r3, [r7, #64]	; 0x40
 80076dc:	63fa      	str	r2, [r7, #60]	; 0x3c
 80076de:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80076e0:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80076e2:	e841 2300 	strex	r3, r2, [r1]
 80076e6:	63bb      	str	r3, [r7, #56]	; 0x38
 80076e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80076ea:	2b00      	cmp	r3, #0
 80076ec:	d1e6      	bne.n	80076bc <UART_RxISR_16BIT+0x64>
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	3308      	adds	r3, #8
 80076f4:	623b      	str	r3, [r7, #32]
 80076f6:	6a3b      	ldr	r3, [r7, #32]
 80076f8:	e853 3f00 	ldrex	r3, [r3]
 80076fc:	61fb      	str	r3, [r7, #28]
 80076fe:	69fb      	ldr	r3, [r7, #28]
 8007700:	f023 0301 	bic.w	r3, r3, #1
 8007704:	64bb      	str	r3, [r7, #72]	; 0x48
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	3308      	adds	r3, #8
 800770c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800770e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007710:	62bb      	str	r3, [r7, #40]	; 0x28
 8007712:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007714:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007716:	e841 2300 	strex	r3, r2, [r1]
 800771a:	627b      	str	r3, [r7, #36]	; 0x24
 800771c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800771e:	2b00      	cmp	r3, #0
 8007720:	d1e5      	bne.n	80076ee <UART_RxISR_16BIT+0x96>
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	2220      	movs	r2, #32
 8007726:	67da      	str	r2, [r3, #124]	; 0x7c
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	2200      	movs	r2, #0
 800772c:	665a      	str	r2, [r3, #100]	; 0x64
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007732:	2b01      	cmp	r3, #1
 8007734:	d12e      	bne.n	8007794 <UART_RxISR_16BIT+0x13c>
 8007736:	687b      	ldr	r3, [r7, #4]
 8007738:	2200      	movs	r2, #0
 800773a:	661a      	str	r2, [r3, #96]	; 0x60
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	60fb      	str	r3, [r7, #12]
 8007742:	68fb      	ldr	r3, [r7, #12]
 8007744:	e853 3f00 	ldrex	r3, [r3]
 8007748:	60bb      	str	r3, [r7, #8]
 800774a:	68bb      	ldr	r3, [r7, #8]
 800774c:	f023 0310 	bic.w	r3, r3, #16
 8007750:	647b      	str	r3, [r7, #68]	; 0x44
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	461a      	mov	r2, r3
 8007758:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800775a:	61bb      	str	r3, [r7, #24]
 800775c:	617a      	str	r2, [r7, #20]
 800775e:	6979      	ldr	r1, [r7, #20]
 8007760:	69ba      	ldr	r2, [r7, #24]
 8007762:	e841 2300 	strex	r3, r2, [r1]
 8007766:	613b      	str	r3, [r7, #16]
 8007768:	693b      	ldr	r3, [r7, #16]
 800776a:	2b00      	cmp	r3, #0
 800776c:	d1e6      	bne.n	800773c <UART_RxISR_16BIT+0xe4>
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	681b      	ldr	r3, [r3, #0]
 8007772:	69db      	ldr	r3, [r3, #28]
 8007774:	f003 0310 	and.w	r3, r3, #16
 8007778:	2b10      	cmp	r3, #16
 800777a:	d103      	bne.n	8007784 <UART_RxISR_16BIT+0x12c>
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	2210      	movs	r2, #16
 8007782:	621a      	str	r2, [r3, #32]
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 800778a:	4619      	mov	r1, r3
 800778c:	6878      	ldr	r0, [r7, #4]
 800778e:	f7ff f865 	bl	800685c <HAL_UARTEx_RxEventCallback>
 8007792:	e00b      	b.n	80077ac <UART_RxISR_16BIT+0x154>
 8007794:	6878      	ldr	r0, [r7, #4]
 8007796:	f7fb fac5 	bl	8002d24 <HAL_UART_RxCpltCallback>
 800779a:	e007      	b.n	80077ac <UART_RxISR_16BIT+0x154>
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	699a      	ldr	r2, [r3, #24]
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	f042 0208 	orr.w	r2, r2, #8
 80077aa:	619a      	str	r2, [r3, #24]
 80077ac:	bf00      	nop
 80077ae:	3758      	adds	r7, #88	; 0x58
 80077b0:	46bd      	mov	sp, r7
 80077b2:	bd80      	pop	{r7, pc}

080077b4 <__errno>:
 80077b4:	4b01      	ldr	r3, [pc, #4]	; (80077bc <__errno+0x8>)
 80077b6:	6818      	ldr	r0, [r3, #0]
 80077b8:	4770      	bx	lr
 80077ba:	bf00      	nop
 80077bc:	20000134 	.word	0x20000134

080077c0 <__libc_init_array>:
 80077c0:	b570      	push	{r4, r5, r6, lr}
 80077c2:	4d0d      	ldr	r5, [pc, #52]	; (80077f8 <__libc_init_array+0x38>)
 80077c4:	4c0d      	ldr	r4, [pc, #52]	; (80077fc <__libc_init_array+0x3c>)
 80077c6:	1b64      	subs	r4, r4, r5
 80077c8:	10a4      	asrs	r4, r4, #2
 80077ca:	2600      	movs	r6, #0
 80077cc:	42a6      	cmp	r6, r4
 80077ce:	d109      	bne.n	80077e4 <__libc_init_array+0x24>
 80077d0:	4d0b      	ldr	r5, [pc, #44]	; (8007800 <__libc_init_array+0x40>)
 80077d2:	4c0c      	ldr	r4, [pc, #48]	; (8007804 <__libc_init_array+0x44>)
 80077d4:	f004 ffca 	bl	800c76c <_init>
 80077d8:	1b64      	subs	r4, r4, r5
 80077da:	10a4      	asrs	r4, r4, #2
 80077dc:	2600      	movs	r6, #0
 80077de:	42a6      	cmp	r6, r4
 80077e0:	d105      	bne.n	80077ee <__libc_init_array+0x2e>
 80077e2:	bd70      	pop	{r4, r5, r6, pc}
 80077e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80077e8:	4798      	blx	r3
 80077ea:	3601      	adds	r6, #1
 80077ec:	e7ee      	b.n	80077cc <__libc_init_array+0xc>
 80077ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80077f2:	4798      	blx	r3
 80077f4:	3601      	adds	r6, #1
 80077f6:	e7f2      	b.n	80077de <__libc_init_array+0x1e>
 80077f8:	0800d60c 	.word	0x0800d60c
 80077fc:	0800d60c 	.word	0x0800d60c
 8007800:	0800d60c 	.word	0x0800d60c
 8007804:	0800d610 	.word	0x0800d610

08007808 <memset>:
 8007808:	4402      	add	r2, r0
 800780a:	4603      	mov	r3, r0
 800780c:	4293      	cmp	r3, r2
 800780e:	d100      	bne.n	8007812 <memset+0xa>
 8007810:	4770      	bx	lr
 8007812:	f803 1b01 	strb.w	r1, [r3], #1
 8007816:	e7f9      	b.n	800780c <memset+0x4>

08007818 <__cvt>:
 8007818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800781a:	ed2d 8b02 	vpush	{d8}
 800781e:	eeb0 8b40 	vmov.f64	d8, d0
 8007822:	b085      	sub	sp, #20
 8007824:	4617      	mov	r7, r2
 8007826:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8007828:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800782a:	ee18 2a90 	vmov	r2, s17
 800782e:	f025 0520 	bic.w	r5, r5, #32
 8007832:	2a00      	cmp	r2, #0
 8007834:	bfb6      	itet	lt
 8007836:	222d      	movlt	r2, #45	; 0x2d
 8007838:	2200      	movge	r2, #0
 800783a:	eeb1 8b40 	vneglt.f64	d8, d0
 800783e:	2d46      	cmp	r5, #70	; 0x46
 8007840:	460c      	mov	r4, r1
 8007842:	701a      	strb	r2, [r3, #0]
 8007844:	d004      	beq.n	8007850 <__cvt+0x38>
 8007846:	2d45      	cmp	r5, #69	; 0x45
 8007848:	d100      	bne.n	800784c <__cvt+0x34>
 800784a:	3401      	adds	r4, #1
 800784c:	2102      	movs	r1, #2
 800784e:	e000      	b.n	8007852 <__cvt+0x3a>
 8007850:	2103      	movs	r1, #3
 8007852:	ab03      	add	r3, sp, #12
 8007854:	9301      	str	r3, [sp, #4]
 8007856:	ab02      	add	r3, sp, #8
 8007858:	9300      	str	r3, [sp, #0]
 800785a:	4622      	mov	r2, r4
 800785c:	4633      	mov	r3, r6
 800785e:	eeb0 0b48 	vmov.f64	d0, d8
 8007862:	f001 fe0d 	bl	8009480 <_dtoa_r>
 8007866:	2d47      	cmp	r5, #71	; 0x47
 8007868:	d109      	bne.n	800787e <__cvt+0x66>
 800786a:	07fb      	lsls	r3, r7, #31
 800786c:	d407      	bmi.n	800787e <__cvt+0x66>
 800786e:	9b03      	ldr	r3, [sp, #12]
 8007870:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007872:	1a1b      	subs	r3, r3, r0
 8007874:	6013      	str	r3, [r2, #0]
 8007876:	b005      	add	sp, #20
 8007878:	ecbd 8b02 	vpop	{d8}
 800787c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800787e:	2d46      	cmp	r5, #70	; 0x46
 8007880:	eb00 0204 	add.w	r2, r0, r4
 8007884:	d10c      	bne.n	80078a0 <__cvt+0x88>
 8007886:	7803      	ldrb	r3, [r0, #0]
 8007888:	2b30      	cmp	r3, #48	; 0x30
 800788a:	d107      	bne.n	800789c <__cvt+0x84>
 800788c:	eeb5 8b40 	vcmp.f64	d8, #0.0
 8007890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007894:	bf1c      	itt	ne
 8007896:	f1c4 0401 	rsbne	r4, r4, #1
 800789a:	6034      	strne	r4, [r6, #0]
 800789c:	6833      	ldr	r3, [r6, #0]
 800789e:	441a      	add	r2, r3
 80078a0:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80078a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078a8:	bf08      	it	eq
 80078aa:	9203      	streq	r2, [sp, #12]
 80078ac:	2130      	movs	r1, #48	; 0x30
 80078ae:	9b03      	ldr	r3, [sp, #12]
 80078b0:	4293      	cmp	r3, r2
 80078b2:	d2dc      	bcs.n	800786e <__cvt+0x56>
 80078b4:	1c5c      	adds	r4, r3, #1
 80078b6:	9403      	str	r4, [sp, #12]
 80078b8:	7019      	strb	r1, [r3, #0]
 80078ba:	e7f8      	b.n	80078ae <__cvt+0x96>

080078bc <__exponent>:
 80078bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80078be:	4603      	mov	r3, r0
 80078c0:	2900      	cmp	r1, #0
 80078c2:	bfb8      	it	lt
 80078c4:	4249      	neglt	r1, r1
 80078c6:	f803 2b02 	strb.w	r2, [r3], #2
 80078ca:	bfb4      	ite	lt
 80078cc:	222d      	movlt	r2, #45	; 0x2d
 80078ce:	222b      	movge	r2, #43	; 0x2b
 80078d0:	2909      	cmp	r1, #9
 80078d2:	7042      	strb	r2, [r0, #1]
 80078d4:	dd2a      	ble.n	800792c <__exponent+0x70>
 80078d6:	f10d 0407 	add.w	r4, sp, #7
 80078da:	46a4      	mov	ip, r4
 80078dc:	270a      	movs	r7, #10
 80078de:	46a6      	mov	lr, r4
 80078e0:	460a      	mov	r2, r1
 80078e2:	fb91 f6f7 	sdiv	r6, r1, r7
 80078e6:	fb07 1516 	mls	r5, r7, r6, r1
 80078ea:	3530      	adds	r5, #48	; 0x30
 80078ec:	2a63      	cmp	r2, #99	; 0x63
 80078ee:	f104 34ff 	add.w	r4, r4, #4294967295
 80078f2:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80078f6:	4631      	mov	r1, r6
 80078f8:	dcf1      	bgt.n	80078de <__exponent+0x22>
 80078fa:	3130      	adds	r1, #48	; 0x30
 80078fc:	f1ae 0502 	sub.w	r5, lr, #2
 8007900:	f804 1c01 	strb.w	r1, [r4, #-1]
 8007904:	1c44      	adds	r4, r0, #1
 8007906:	4629      	mov	r1, r5
 8007908:	4561      	cmp	r1, ip
 800790a:	d30a      	bcc.n	8007922 <__exponent+0x66>
 800790c:	f10d 0209 	add.w	r2, sp, #9
 8007910:	eba2 020e 	sub.w	r2, r2, lr
 8007914:	4565      	cmp	r5, ip
 8007916:	bf88      	it	hi
 8007918:	2200      	movhi	r2, #0
 800791a:	4413      	add	r3, r2
 800791c:	1a18      	subs	r0, r3, r0
 800791e:	b003      	add	sp, #12
 8007920:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007922:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007926:	f804 2f01 	strb.w	r2, [r4, #1]!
 800792a:	e7ed      	b.n	8007908 <__exponent+0x4c>
 800792c:	2330      	movs	r3, #48	; 0x30
 800792e:	3130      	adds	r1, #48	; 0x30
 8007930:	7083      	strb	r3, [r0, #2]
 8007932:	70c1      	strb	r1, [r0, #3]
 8007934:	1d03      	adds	r3, r0, #4
 8007936:	e7f1      	b.n	800791c <__exponent+0x60>

08007938 <_printf_float>:
 8007938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800793c:	b08b      	sub	sp, #44	; 0x2c
 800793e:	460c      	mov	r4, r1
 8007940:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 8007944:	4616      	mov	r6, r2
 8007946:	461f      	mov	r7, r3
 8007948:	4605      	mov	r5, r0
 800794a:	f002 fe8b 	bl	800a664 <_localeconv_r>
 800794e:	f8d0 b000 	ldr.w	fp, [r0]
 8007952:	4658      	mov	r0, fp
 8007954:	f7f8 fc7e 	bl	8000254 <strlen>
 8007958:	2300      	movs	r3, #0
 800795a:	9308      	str	r3, [sp, #32]
 800795c:	f8d8 3000 	ldr.w	r3, [r8]
 8007960:	f894 9018 	ldrb.w	r9, [r4, #24]
 8007964:	6822      	ldr	r2, [r4, #0]
 8007966:	3307      	adds	r3, #7
 8007968:	f023 0307 	bic.w	r3, r3, #7
 800796c:	f103 0108 	add.w	r1, r3, #8
 8007970:	f8c8 1000 	str.w	r1, [r8]
 8007974:	4682      	mov	sl, r0
 8007976:	e9d3 0100 	ldrd	r0, r1, [r3]
 800797a:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
 800797e:	ed9f 7b98 	vldr	d7, [pc, #608]	; 8007be0 <_printf_float+0x2a8>
 8007982:	ed94 0b12 	vldr	d0, [r4, #72]	; 0x48
 8007986:	eeb0 6bc0 	vabs.f64	d6, d0
 800798a:	eeb4 6b47 	vcmp.f64	d6, d7
 800798e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007992:	dd24      	ble.n	80079de <_printf_float+0xa6>
 8007994:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8007998:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800799c:	d502      	bpl.n	80079a4 <_printf_float+0x6c>
 800799e:	232d      	movs	r3, #45	; 0x2d
 80079a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80079a4:	4b90      	ldr	r3, [pc, #576]	; (8007be8 <_printf_float+0x2b0>)
 80079a6:	4891      	ldr	r0, [pc, #580]	; (8007bec <_printf_float+0x2b4>)
 80079a8:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80079ac:	bf94      	ite	ls
 80079ae:	4698      	movls	r8, r3
 80079b0:	4680      	movhi	r8, r0
 80079b2:	2303      	movs	r3, #3
 80079b4:	6123      	str	r3, [r4, #16]
 80079b6:	f022 0204 	bic.w	r2, r2, #4
 80079ba:	2300      	movs	r3, #0
 80079bc:	6022      	str	r2, [r4, #0]
 80079be:	9304      	str	r3, [sp, #16]
 80079c0:	9700      	str	r7, [sp, #0]
 80079c2:	4633      	mov	r3, r6
 80079c4:	aa09      	add	r2, sp, #36	; 0x24
 80079c6:	4621      	mov	r1, r4
 80079c8:	4628      	mov	r0, r5
 80079ca:	f000 f9d3 	bl	8007d74 <_printf_common>
 80079ce:	3001      	adds	r0, #1
 80079d0:	f040 808a 	bne.w	8007ae8 <_printf_float+0x1b0>
 80079d4:	f04f 30ff 	mov.w	r0, #4294967295
 80079d8:	b00b      	add	sp, #44	; 0x2c
 80079da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079de:	eeb4 0b40 	vcmp.f64	d0, d0
 80079e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079e6:	d709      	bvc.n	80079fc <_printf_float+0xc4>
 80079e8:	ee10 3a90 	vmov	r3, s1
 80079ec:	2b00      	cmp	r3, #0
 80079ee:	bfbc      	itt	lt
 80079f0:	232d      	movlt	r3, #45	; 0x2d
 80079f2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80079f6:	487e      	ldr	r0, [pc, #504]	; (8007bf0 <_printf_float+0x2b8>)
 80079f8:	4b7e      	ldr	r3, [pc, #504]	; (8007bf4 <_printf_float+0x2bc>)
 80079fa:	e7d5      	b.n	80079a8 <_printf_float+0x70>
 80079fc:	6863      	ldr	r3, [r4, #4]
 80079fe:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8007a02:	9104      	str	r1, [sp, #16]
 8007a04:	1c59      	adds	r1, r3, #1
 8007a06:	d13c      	bne.n	8007a82 <_printf_float+0x14a>
 8007a08:	2306      	movs	r3, #6
 8007a0a:	6063      	str	r3, [r4, #4]
 8007a0c:	2300      	movs	r3, #0
 8007a0e:	9303      	str	r3, [sp, #12]
 8007a10:	ab08      	add	r3, sp, #32
 8007a12:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8007a16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007a1a:	ab07      	add	r3, sp, #28
 8007a1c:	6861      	ldr	r1, [r4, #4]
 8007a1e:	9300      	str	r3, [sp, #0]
 8007a20:	6022      	str	r2, [r4, #0]
 8007a22:	f10d 031b 	add.w	r3, sp, #27
 8007a26:	4628      	mov	r0, r5
 8007a28:	f7ff fef6 	bl	8007818 <__cvt>
 8007a2c:	9b04      	ldr	r3, [sp, #16]
 8007a2e:	9907      	ldr	r1, [sp, #28]
 8007a30:	2b47      	cmp	r3, #71	; 0x47
 8007a32:	4680      	mov	r8, r0
 8007a34:	d108      	bne.n	8007a48 <_printf_float+0x110>
 8007a36:	1cc8      	adds	r0, r1, #3
 8007a38:	db02      	blt.n	8007a40 <_printf_float+0x108>
 8007a3a:	6863      	ldr	r3, [r4, #4]
 8007a3c:	4299      	cmp	r1, r3
 8007a3e:	dd41      	ble.n	8007ac4 <_printf_float+0x18c>
 8007a40:	f1a9 0902 	sub.w	r9, r9, #2
 8007a44:	fa5f f989 	uxtb.w	r9, r9
 8007a48:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007a4c:	d820      	bhi.n	8007a90 <_printf_float+0x158>
 8007a4e:	3901      	subs	r1, #1
 8007a50:	464a      	mov	r2, r9
 8007a52:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8007a56:	9107      	str	r1, [sp, #28]
 8007a58:	f7ff ff30 	bl	80078bc <__exponent>
 8007a5c:	9a08      	ldr	r2, [sp, #32]
 8007a5e:	9004      	str	r0, [sp, #16]
 8007a60:	1813      	adds	r3, r2, r0
 8007a62:	2a01      	cmp	r2, #1
 8007a64:	6123      	str	r3, [r4, #16]
 8007a66:	dc02      	bgt.n	8007a6e <_printf_float+0x136>
 8007a68:	6822      	ldr	r2, [r4, #0]
 8007a6a:	07d2      	lsls	r2, r2, #31
 8007a6c:	d501      	bpl.n	8007a72 <_printf_float+0x13a>
 8007a6e:	3301      	adds	r3, #1
 8007a70:	6123      	str	r3, [r4, #16]
 8007a72:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d0a2      	beq.n	80079c0 <_printf_float+0x88>
 8007a7a:	232d      	movs	r3, #45	; 0x2d
 8007a7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007a80:	e79e      	b.n	80079c0 <_printf_float+0x88>
 8007a82:	9904      	ldr	r1, [sp, #16]
 8007a84:	2947      	cmp	r1, #71	; 0x47
 8007a86:	d1c1      	bne.n	8007a0c <_printf_float+0xd4>
 8007a88:	2b00      	cmp	r3, #0
 8007a8a:	d1bf      	bne.n	8007a0c <_printf_float+0xd4>
 8007a8c:	2301      	movs	r3, #1
 8007a8e:	e7bc      	b.n	8007a0a <_printf_float+0xd2>
 8007a90:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8007a94:	d118      	bne.n	8007ac8 <_printf_float+0x190>
 8007a96:	2900      	cmp	r1, #0
 8007a98:	6863      	ldr	r3, [r4, #4]
 8007a9a:	dd0b      	ble.n	8007ab4 <_printf_float+0x17c>
 8007a9c:	6121      	str	r1, [r4, #16]
 8007a9e:	b913      	cbnz	r3, 8007aa6 <_printf_float+0x16e>
 8007aa0:	6822      	ldr	r2, [r4, #0]
 8007aa2:	07d0      	lsls	r0, r2, #31
 8007aa4:	d502      	bpl.n	8007aac <_printf_float+0x174>
 8007aa6:	3301      	adds	r3, #1
 8007aa8:	440b      	add	r3, r1
 8007aaa:	6123      	str	r3, [r4, #16]
 8007aac:	2300      	movs	r3, #0
 8007aae:	65a1      	str	r1, [r4, #88]	; 0x58
 8007ab0:	9304      	str	r3, [sp, #16]
 8007ab2:	e7de      	b.n	8007a72 <_printf_float+0x13a>
 8007ab4:	b913      	cbnz	r3, 8007abc <_printf_float+0x184>
 8007ab6:	6822      	ldr	r2, [r4, #0]
 8007ab8:	07d2      	lsls	r2, r2, #31
 8007aba:	d501      	bpl.n	8007ac0 <_printf_float+0x188>
 8007abc:	3302      	adds	r3, #2
 8007abe:	e7f4      	b.n	8007aaa <_printf_float+0x172>
 8007ac0:	2301      	movs	r3, #1
 8007ac2:	e7f2      	b.n	8007aaa <_printf_float+0x172>
 8007ac4:	f04f 0967 	mov.w	r9, #103	; 0x67
 8007ac8:	9b08      	ldr	r3, [sp, #32]
 8007aca:	4299      	cmp	r1, r3
 8007acc:	db05      	blt.n	8007ada <_printf_float+0x1a2>
 8007ace:	6823      	ldr	r3, [r4, #0]
 8007ad0:	6121      	str	r1, [r4, #16]
 8007ad2:	07d8      	lsls	r0, r3, #31
 8007ad4:	d5ea      	bpl.n	8007aac <_printf_float+0x174>
 8007ad6:	1c4b      	adds	r3, r1, #1
 8007ad8:	e7e7      	b.n	8007aaa <_printf_float+0x172>
 8007ada:	2900      	cmp	r1, #0
 8007adc:	bfd4      	ite	le
 8007ade:	f1c1 0202 	rsble	r2, r1, #2
 8007ae2:	2201      	movgt	r2, #1
 8007ae4:	4413      	add	r3, r2
 8007ae6:	e7e0      	b.n	8007aaa <_printf_float+0x172>
 8007ae8:	6823      	ldr	r3, [r4, #0]
 8007aea:	055a      	lsls	r2, r3, #21
 8007aec:	d407      	bmi.n	8007afe <_printf_float+0x1c6>
 8007aee:	6923      	ldr	r3, [r4, #16]
 8007af0:	4642      	mov	r2, r8
 8007af2:	4631      	mov	r1, r6
 8007af4:	4628      	mov	r0, r5
 8007af6:	47b8      	blx	r7
 8007af8:	3001      	adds	r0, #1
 8007afa:	d12a      	bne.n	8007b52 <_printf_float+0x21a>
 8007afc:	e76a      	b.n	80079d4 <_printf_float+0x9c>
 8007afe:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8007b02:	f240 80e2 	bls.w	8007cca <_printf_float+0x392>
 8007b06:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8007b0a:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8007b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b12:	d133      	bne.n	8007b7c <_printf_float+0x244>
 8007b14:	4a38      	ldr	r2, [pc, #224]	; (8007bf8 <_printf_float+0x2c0>)
 8007b16:	2301      	movs	r3, #1
 8007b18:	4631      	mov	r1, r6
 8007b1a:	4628      	mov	r0, r5
 8007b1c:	47b8      	blx	r7
 8007b1e:	3001      	adds	r0, #1
 8007b20:	f43f af58 	beq.w	80079d4 <_printf_float+0x9c>
 8007b24:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8007b28:	429a      	cmp	r2, r3
 8007b2a:	db02      	blt.n	8007b32 <_printf_float+0x1fa>
 8007b2c:	6823      	ldr	r3, [r4, #0]
 8007b2e:	07d8      	lsls	r0, r3, #31
 8007b30:	d50f      	bpl.n	8007b52 <_printf_float+0x21a>
 8007b32:	4653      	mov	r3, sl
 8007b34:	465a      	mov	r2, fp
 8007b36:	4631      	mov	r1, r6
 8007b38:	4628      	mov	r0, r5
 8007b3a:	47b8      	blx	r7
 8007b3c:	3001      	adds	r0, #1
 8007b3e:	f43f af49 	beq.w	80079d4 <_printf_float+0x9c>
 8007b42:	f04f 0800 	mov.w	r8, #0
 8007b46:	f104 091a 	add.w	r9, r4, #26
 8007b4a:	9b08      	ldr	r3, [sp, #32]
 8007b4c:	3b01      	subs	r3, #1
 8007b4e:	4543      	cmp	r3, r8
 8007b50:	dc09      	bgt.n	8007b66 <_printf_float+0x22e>
 8007b52:	6823      	ldr	r3, [r4, #0]
 8007b54:	079b      	lsls	r3, r3, #30
 8007b56:	f100 8108 	bmi.w	8007d6a <_printf_float+0x432>
 8007b5a:	68e0      	ldr	r0, [r4, #12]
 8007b5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b5e:	4298      	cmp	r0, r3
 8007b60:	bfb8      	it	lt
 8007b62:	4618      	movlt	r0, r3
 8007b64:	e738      	b.n	80079d8 <_printf_float+0xa0>
 8007b66:	2301      	movs	r3, #1
 8007b68:	464a      	mov	r2, r9
 8007b6a:	4631      	mov	r1, r6
 8007b6c:	4628      	mov	r0, r5
 8007b6e:	47b8      	blx	r7
 8007b70:	3001      	adds	r0, #1
 8007b72:	f43f af2f 	beq.w	80079d4 <_printf_float+0x9c>
 8007b76:	f108 0801 	add.w	r8, r8, #1
 8007b7a:	e7e6      	b.n	8007b4a <_printf_float+0x212>
 8007b7c:	9b07      	ldr	r3, [sp, #28]
 8007b7e:	2b00      	cmp	r3, #0
 8007b80:	dc3c      	bgt.n	8007bfc <_printf_float+0x2c4>
 8007b82:	4a1d      	ldr	r2, [pc, #116]	; (8007bf8 <_printf_float+0x2c0>)
 8007b84:	2301      	movs	r3, #1
 8007b86:	4631      	mov	r1, r6
 8007b88:	4628      	mov	r0, r5
 8007b8a:	47b8      	blx	r7
 8007b8c:	3001      	adds	r0, #1
 8007b8e:	f43f af21 	beq.w	80079d4 <_printf_float+0x9c>
 8007b92:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8007b96:	4313      	orrs	r3, r2
 8007b98:	d102      	bne.n	8007ba0 <_printf_float+0x268>
 8007b9a:	6823      	ldr	r3, [r4, #0]
 8007b9c:	07d9      	lsls	r1, r3, #31
 8007b9e:	d5d8      	bpl.n	8007b52 <_printf_float+0x21a>
 8007ba0:	4653      	mov	r3, sl
 8007ba2:	465a      	mov	r2, fp
 8007ba4:	4631      	mov	r1, r6
 8007ba6:	4628      	mov	r0, r5
 8007ba8:	47b8      	blx	r7
 8007baa:	3001      	adds	r0, #1
 8007bac:	f43f af12 	beq.w	80079d4 <_printf_float+0x9c>
 8007bb0:	f04f 0900 	mov.w	r9, #0
 8007bb4:	f104 0a1a 	add.w	sl, r4, #26
 8007bb8:	9b07      	ldr	r3, [sp, #28]
 8007bba:	425b      	negs	r3, r3
 8007bbc:	454b      	cmp	r3, r9
 8007bbe:	dc01      	bgt.n	8007bc4 <_printf_float+0x28c>
 8007bc0:	9b08      	ldr	r3, [sp, #32]
 8007bc2:	e795      	b.n	8007af0 <_printf_float+0x1b8>
 8007bc4:	2301      	movs	r3, #1
 8007bc6:	4652      	mov	r2, sl
 8007bc8:	4631      	mov	r1, r6
 8007bca:	4628      	mov	r0, r5
 8007bcc:	47b8      	blx	r7
 8007bce:	3001      	adds	r0, #1
 8007bd0:	f43f af00 	beq.w	80079d4 <_printf_float+0x9c>
 8007bd4:	f109 0901 	add.w	r9, r9, #1
 8007bd8:	e7ee      	b.n	8007bb8 <_printf_float+0x280>
 8007bda:	bf00      	nop
 8007bdc:	f3af 8000 	nop.w
 8007be0:	ffffffff 	.word	0xffffffff
 8007be4:	7fefffff 	.word	0x7fefffff
 8007be8:	0800d13c 	.word	0x0800d13c
 8007bec:	0800d140 	.word	0x0800d140
 8007bf0:	0800d148 	.word	0x0800d148
 8007bf4:	0800d144 	.word	0x0800d144
 8007bf8:	0800d551 	.word	0x0800d551
 8007bfc:	9a08      	ldr	r2, [sp, #32]
 8007bfe:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007c00:	429a      	cmp	r2, r3
 8007c02:	bfa8      	it	ge
 8007c04:	461a      	movge	r2, r3
 8007c06:	2a00      	cmp	r2, #0
 8007c08:	4691      	mov	r9, r2
 8007c0a:	dc38      	bgt.n	8007c7e <_printf_float+0x346>
 8007c0c:	2300      	movs	r3, #0
 8007c0e:	9305      	str	r3, [sp, #20]
 8007c10:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007c14:	f104 021a 	add.w	r2, r4, #26
 8007c18:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007c1a:	9905      	ldr	r1, [sp, #20]
 8007c1c:	9304      	str	r3, [sp, #16]
 8007c1e:	eba3 0309 	sub.w	r3, r3, r9
 8007c22:	428b      	cmp	r3, r1
 8007c24:	dc33      	bgt.n	8007c8e <_printf_float+0x356>
 8007c26:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8007c2a:	429a      	cmp	r2, r3
 8007c2c:	db3c      	blt.n	8007ca8 <_printf_float+0x370>
 8007c2e:	6823      	ldr	r3, [r4, #0]
 8007c30:	07da      	lsls	r2, r3, #31
 8007c32:	d439      	bmi.n	8007ca8 <_printf_float+0x370>
 8007c34:	9a08      	ldr	r2, [sp, #32]
 8007c36:	9b04      	ldr	r3, [sp, #16]
 8007c38:	9907      	ldr	r1, [sp, #28]
 8007c3a:	1ad3      	subs	r3, r2, r3
 8007c3c:	eba2 0901 	sub.w	r9, r2, r1
 8007c40:	4599      	cmp	r9, r3
 8007c42:	bfa8      	it	ge
 8007c44:	4699      	movge	r9, r3
 8007c46:	f1b9 0f00 	cmp.w	r9, #0
 8007c4a:	dc35      	bgt.n	8007cb8 <_printf_float+0x380>
 8007c4c:	f04f 0800 	mov.w	r8, #0
 8007c50:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007c54:	f104 0a1a 	add.w	sl, r4, #26
 8007c58:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8007c5c:	1a9b      	subs	r3, r3, r2
 8007c5e:	eba3 0309 	sub.w	r3, r3, r9
 8007c62:	4543      	cmp	r3, r8
 8007c64:	f77f af75 	ble.w	8007b52 <_printf_float+0x21a>
 8007c68:	2301      	movs	r3, #1
 8007c6a:	4652      	mov	r2, sl
 8007c6c:	4631      	mov	r1, r6
 8007c6e:	4628      	mov	r0, r5
 8007c70:	47b8      	blx	r7
 8007c72:	3001      	adds	r0, #1
 8007c74:	f43f aeae 	beq.w	80079d4 <_printf_float+0x9c>
 8007c78:	f108 0801 	add.w	r8, r8, #1
 8007c7c:	e7ec      	b.n	8007c58 <_printf_float+0x320>
 8007c7e:	4613      	mov	r3, r2
 8007c80:	4631      	mov	r1, r6
 8007c82:	4642      	mov	r2, r8
 8007c84:	4628      	mov	r0, r5
 8007c86:	47b8      	blx	r7
 8007c88:	3001      	adds	r0, #1
 8007c8a:	d1bf      	bne.n	8007c0c <_printf_float+0x2d4>
 8007c8c:	e6a2      	b.n	80079d4 <_printf_float+0x9c>
 8007c8e:	2301      	movs	r3, #1
 8007c90:	4631      	mov	r1, r6
 8007c92:	4628      	mov	r0, r5
 8007c94:	9204      	str	r2, [sp, #16]
 8007c96:	47b8      	blx	r7
 8007c98:	3001      	adds	r0, #1
 8007c9a:	f43f ae9b 	beq.w	80079d4 <_printf_float+0x9c>
 8007c9e:	9b05      	ldr	r3, [sp, #20]
 8007ca0:	9a04      	ldr	r2, [sp, #16]
 8007ca2:	3301      	adds	r3, #1
 8007ca4:	9305      	str	r3, [sp, #20]
 8007ca6:	e7b7      	b.n	8007c18 <_printf_float+0x2e0>
 8007ca8:	4653      	mov	r3, sl
 8007caa:	465a      	mov	r2, fp
 8007cac:	4631      	mov	r1, r6
 8007cae:	4628      	mov	r0, r5
 8007cb0:	47b8      	blx	r7
 8007cb2:	3001      	adds	r0, #1
 8007cb4:	d1be      	bne.n	8007c34 <_printf_float+0x2fc>
 8007cb6:	e68d      	b.n	80079d4 <_printf_float+0x9c>
 8007cb8:	9a04      	ldr	r2, [sp, #16]
 8007cba:	464b      	mov	r3, r9
 8007cbc:	4442      	add	r2, r8
 8007cbe:	4631      	mov	r1, r6
 8007cc0:	4628      	mov	r0, r5
 8007cc2:	47b8      	blx	r7
 8007cc4:	3001      	adds	r0, #1
 8007cc6:	d1c1      	bne.n	8007c4c <_printf_float+0x314>
 8007cc8:	e684      	b.n	80079d4 <_printf_float+0x9c>
 8007cca:	9a08      	ldr	r2, [sp, #32]
 8007ccc:	2a01      	cmp	r2, #1
 8007cce:	dc01      	bgt.n	8007cd4 <_printf_float+0x39c>
 8007cd0:	07db      	lsls	r3, r3, #31
 8007cd2:	d537      	bpl.n	8007d44 <_printf_float+0x40c>
 8007cd4:	2301      	movs	r3, #1
 8007cd6:	4642      	mov	r2, r8
 8007cd8:	4631      	mov	r1, r6
 8007cda:	4628      	mov	r0, r5
 8007cdc:	47b8      	blx	r7
 8007cde:	3001      	adds	r0, #1
 8007ce0:	f43f ae78 	beq.w	80079d4 <_printf_float+0x9c>
 8007ce4:	4653      	mov	r3, sl
 8007ce6:	465a      	mov	r2, fp
 8007ce8:	4631      	mov	r1, r6
 8007cea:	4628      	mov	r0, r5
 8007cec:	47b8      	blx	r7
 8007cee:	3001      	adds	r0, #1
 8007cf0:	f43f ae70 	beq.w	80079d4 <_printf_float+0x9c>
 8007cf4:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8007cf8:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8007cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d00:	d01b      	beq.n	8007d3a <_printf_float+0x402>
 8007d02:	9b08      	ldr	r3, [sp, #32]
 8007d04:	f108 0201 	add.w	r2, r8, #1
 8007d08:	3b01      	subs	r3, #1
 8007d0a:	4631      	mov	r1, r6
 8007d0c:	4628      	mov	r0, r5
 8007d0e:	47b8      	blx	r7
 8007d10:	3001      	adds	r0, #1
 8007d12:	d10e      	bne.n	8007d32 <_printf_float+0x3fa>
 8007d14:	e65e      	b.n	80079d4 <_printf_float+0x9c>
 8007d16:	2301      	movs	r3, #1
 8007d18:	464a      	mov	r2, r9
 8007d1a:	4631      	mov	r1, r6
 8007d1c:	4628      	mov	r0, r5
 8007d1e:	47b8      	blx	r7
 8007d20:	3001      	adds	r0, #1
 8007d22:	f43f ae57 	beq.w	80079d4 <_printf_float+0x9c>
 8007d26:	f108 0801 	add.w	r8, r8, #1
 8007d2a:	9b08      	ldr	r3, [sp, #32]
 8007d2c:	3b01      	subs	r3, #1
 8007d2e:	4543      	cmp	r3, r8
 8007d30:	dcf1      	bgt.n	8007d16 <_printf_float+0x3de>
 8007d32:	9b04      	ldr	r3, [sp, #16]
 8007d34:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8007d38:	e6db      	b.n	8007af2 <_printf_float+0x1ba>
 8007d3a:	f04f 0800 	mov.w	r8, #0
 8007d3e:	f104 091a 	add.w	r9, r4, #26
 8007d42:	e7f2      	b.n	8007d2a <_printf_float+0x3f2>
 8007d44:	2301      	movs	r3, #1
 8007d46:	4642      	mov	r2, r8
 8007d48:	e7df      	b.n	8007d0a <_printf_float+0x3d2>
 8007d4a:	2301      	movs	r3, #1
 8007d4c:	464a      	mov	r2, r9
 8007d4e:	4631      	mov	r1, r6
 8007d50:	4628      	mov	r0, r5
 8007d52:	47b8      	blx	r7
 8007d54:	3001      	adds	r0, #1
 8007d56:	f43f ae3d 	beq.w	80079d4 <_printf_float+0x9c>
 8007d5a:	f108 0801 	add.w	r8, r8, #1
 8007d5e:	68e3      	ldr	r3, [r4, #12]
 8007d60:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007d62:	1a5b      	subs	r3, r3, r1
 8007d64:	4543      	cmp	r3, r8
 8007d66:	dcf0      	bgt.n	8007d4a <_printf_float+0x412>
 8007d68:	e6f7      	b.n	8007b5a <_printf_float+0x222>
 8007d6a:	f04f 0800 	mov.w	r8, #0
 8007d6e:	f104 0919 	add.w	r9, r4, #25
 8007d72:	e7f4      	b.n	8007d5e <_printf_float+0x426>

08007d74 <_printf_common>:
 8007d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d78:	4616      	mov	r6, r2
 8007d7a:	4699      	mov	r9, r3
 8007d7c:	688a      	ldr	r2, [r1, #8]
 8007d7e:	690b      	ldr	r3, [r1, #16]
 8007d80:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007d84:	4293      	cmp	r3, r2
 8007d86:	bfb8      	it	lt
 8007d88:	4613      	movlt	r3, r2
 8007d8a:	6033      	str	r3, [r6, #0]
 8007d8c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007d90:	4607      	mov	r7, r0
 8007d92:	460c      	mov	r4, r1
 8007d94:	b10a      	cbz	r2, 8007d9a <_printf_common+0x26>
 8007d96:	3301      	adds	r3, #1
 8007d98:	6033      	str	r3, [r6, #0]
 8007d9a:	6823      	ldr	r3, [r4, #0]
 8007d9c:	0699      	lsls	r1, r3, #26
 8007d9e:	bf42      	ittt	mi
 8007da0:	6833      	ldrmi	r3, [r6, #0]
 8007da2:	3302      	addmi	r3, #2
 8007da4:	6033      	strmi	r3, [r6, #0]
 8007da6:	6825      	ldr	r5, [r4, #0]
 8007da8:	f015 0506 	ands.w	r5, r5, #6
 8007dac:	d106      	bne.n	8007dbc <_printf_common+0x48>
 8007dae:	f104 0a19 	add.w	sl, r4, #25
 8007db2:	68e3      	ldr	r3, [r4, #12]
 8007db4:	6832      	ldr	r2, [r6, #0]
 8007db6:	1a9b      	subs	r3, r3, r2
 8007db8:	42ab      	cmp	r3, r5
 8007dba:	dc26      	bgt.n	8007e0a <_printf_common+0x96>
 8007dbc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007dc0:	1e13      	subs	r3, r2, #0
 8007dc2:	6822      	ldr	r2, [r4, #0]
 8007dc4:	bf18      	it	ne
 8007dc6:	2301      	movne	r3, #1
 8007dc8:	0692      	lsls	r2, r2, #26
 8007dca:	d42b      	bmi.n	8007e24 <_printf_common+0xb0>
 8007dcc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007dd0:	4649      	mov	r1, r9
 8007dd2:	4638      	mov	r0, r7
 8007dd4:	47c0      	blx	r8
 8007dd6:	3001      	adds	r0, #1
 8007dd8:	d01e      	beq.n	8007e18 <_printf_common+0xa4>
 8007dda:	6823      	ldr	r3, [r4, #0]
 8007ddc:	68e5      	ldr	r5, [r4, #12]
 8007dde:	6832      	ldr	r2, [r6, #0]
 8007de0:	f003 0306 	and.w	r3, r3, #6
 8007de4:	2b04      	cmp	r3, #4
 8007de6:	bf08      	it	eq
 8007de8:	1aad      	subeq	r5, r5, r2
 8007dea:	68a3      	ldr	r3, [r4, #8]
 8007dec:	6922      	ldr	r2, [r4, #16]
 8007dee:	bf0c      	ite	eq
 8007df0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007df4:	2500      	movne	r5, #0
 8007df6:	4293      	cmp	r3, r2
 8007df8:	bfc4      	itt	gt
 8007dfa:	1a9b      	subgt	r3, r3, r2
 8007dfc:	18ed      	addgt	r5, r5, r3
 8007dfe:	2600      	movs	r6, #0
 8007e00:	341a      	adds	r4, #26
 8007e02:	42b5      	cmp	r5, r6
 8007e04:	d11a      	bne.n	8007e3c <_printf_common+0xc8>
 8007e06:	2000      	movs	r0, #0
 8007e08:	e008      	b.n	8007e1c <_printf_common+0xa8>
 8007e0a:	2301      	movs	r3, #1
 8007e0c:	4652      	mov	r2, sl
 8007e0e:	4649      	mov	r1, r9
 8007e10:	4638      	mov	r0, r7
 8007e12:	47c0      	blx	r8
 8007e14:	3001      	adds	r0, #1
 8007e16:	d103      	bne.n	8007e20 <_printf_common+0xac>
 8007e18:	f04f 30ff 	mov.w	r0, #4294967295
 8007e1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e20:	3501      	adds	r5, #1
 8007e22:	e7c6      	b.n	8007db2 <_printf_common+0x3e>
 8007e24:	18e1      	adds	r1, r4, r3
 8007e26:	1c5a      	adds	r2, r3, #1
 8007e28:	2030      	movs	r0, #48	; 0x30
 8007e2a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007e2e:	4422      	add	r2, r4
 8007e30:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007e34:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007e38:	3302      	adds	r3, #2
 8007e3a:	e7c7      	b.n	8007dcc <_printf_common+0x58>
 8007e3c:	2301      	movs	r3, #1
 8007e3e:	4622      	mov	r2, r4
 8007e40:	4649      	mov	r1, r9
 8007e42:	4638      	mov	r0, r7
 8007e44:	47c0      	blx	r8
 8007e46:	3001      	adds	r0, #1
 8007e48:	d0e6      	beq.n	8007e18 <_printf_common+0xa4>
 8007e4a:	3601      	adds	r6, #1
 8007e4c:	e7d9      	b.n	8007e02 <_printf_common+0x8e>
	...

08007e50 <_printf_i>:
 8007e50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007e54:	460c      	mov	r4, r1
 8007e56:	4691      	mov	r9, r2
 8007e58:	7e27      	ldrb	r7, [r4, #24]
 8007e5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007e5c:	2f78      	cmp	r7, #120	; 0x78
 8007e5e:	4680      	mov	r8, r0
 8007e60:	469a      	mov	sl, r3
 8007e62:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007e66:	d807      	bhi.n	8007e78 <_printf_i+0x28>
 8007e68:	2f62      	cmp	r7, #98	; 0x62
 8007e6a:	d80a      	bhi.n	8007e82 <_printf_i+0x32>
 8007e6c:	2f00      	cmp	r7, #0
 8007e6e:	f000 80d8 	beq.w	8008022 <_printf_i+0x1d2>
 8007e72:	2f58      	cmp	r7, #88	; 0x58
 8007e74:	f000 80a3 	beq.w	8007fbe <_printf_i+0x16e>
 8007e78:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8007e7c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007e80:	e03a      	b.n	8007ef8 <_printf_i+0xa8>
 8007e82:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007e86:	2b15      	cmp	r3, #21
 8007e88:	d8f6      	bhi.n	8007e78 <_printf_i+0x28>
 8007e8a:	a001      	add	r0, pc, #4	; (adr r0, 8007e90 <_printf_i+0x40>)
 8007e8c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8007e90:	08007ee9 	.word	0x08007ee9
 8007e94:	08007efd 	.word	0x08007efd
 8007e98:	08007e79 	.word	0x08007e79
 8007e9c:	08007e79 	.word	0x08007e79
 8007ea0:	08007e79 	.word	0x08007e79
 8007ea4:	08007e79 	.word	0x08007e79
 8007ea8:	08007efd 	.word	0x08007efd
 8007eac:	08007e79 	.word	0x08007e79
 8007eb0:	08007e79 	.word	0x08007e79
 8007eb4:	08007e79 	.word	0x08007e79
 8007eb8:	08007e79 	.word	0x08007e79
 8007ebc:	08008009 	.word	0x08008009
 8007ec0:	08007f2d 	.word	0x08007f2d
 8007ec4:	08007feb 	.word	0x08007feb
 8007ec8:	08007e79 	.word	0x08007e79
 8007ecc:	08007e79 	.word	0x08007e79
 8007ed0:	0800802b 	.word	0x0800802b
 8007ed4:	08007e79 	.word	0x08007e79
 8007ed8:	08007f2d 	.word	0x08007f2d
 8007edc:	08007e79 	.word	0x08007e79
 8007ee0:	08007e79 	.word	0x08007e79
 8007ee4:	08007ff3 	.word	0x08007ff3
 8007ee8:	680b      	ldr	r3, [r1, #0]
 8007eea:	1d1a      	adds	r2, r3, #4
 8007eec:	681b      	ldr	r3, [r3, #0]
 8007eee:	600a      	str	r2, [r1, #0]
 8007ef0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8007ef4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007ef8:	2301      	movs	r3, #1
 8007efa:	e0a3      	b.n	8008044 <_printf_i+0x1f4>
 8007efc:	6825      	ldr	r5, [r4, #0]
 8007efe:	6808      	ldr	r0, [r1, #0]
 8007f00:	062e      	lsls	r6, r5, #24
 8007f02:	f100 0304 	add.w	r3, r0, #4
 8007f06:	d50a      	bpl.n	8007f1e <_printf_i+0xce>
 8007f08:	6805      	ldr	r5, [r0, #0]
 8007f0a:	600b      	str	r3, [r1, #0]
 8007f0c:	2d00      	cmp	r5, #0
 8007f0e:	da03      	bge.n	8007f18 <_printf_i+0xc8>
 8007f10:	232d      	movs	r3, #45	; 0x2d
 8007f12:	426d      	negs	r5, r5
 8007f14:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007f18:	485e      	ldr	r0, [pc, #376]	; (8008094 <_printf_i+0x244>)
 8007f1a:	230a      	movs	r3, #10
 8007f1c:	e019      	b.n	8007f52 <_printf_i+0x102>
 8007f1e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8007f22:	6805      	ldr	r5, [r0, #0]
 8007f24:	600b      	str	r3, [r1, #0]
 8007f26:	bf18      	it	ne
 8007f28:	b22d      	sxthne	r5, r5
 8007f2a:	e7ef      	b.n	8007f0c <_printf_i+0xbc>
 8007f2c:	680b      	ldr	r3, [r1, #0]
 8007f2e:	6825      	ldr	r5, [r4, #0]
 8007f30:	1d18      	adds	r0, r3, #4
 8007f32:	6008      	str	r0, [r1, #0]
 8007f34:	0628      	lsls	r0, r5, #24
 8007f36:	d501      	bpl.n	8007f3c <_printf_i+0xec>
 8007f38:	681d      	ldr	r5, [r3, #0]
 8007f3a:	e002      	b.n	8007f42 <_printf_i+0xf2>
 8007f3c:	0669      	lsls	r1, r5, #25
 8007f3e:	d5fb      	bpl.n	8007f38 <_printf_i+0xe8>
 8007f40:	881d      	ldrh	r5, [r3, #0]
 8007f42:	4854      	ldr	r0, [pc, #336]	; (8008094 <_printf_i+0x244>)
 8007f44:	2f6f      	cmp	r7, #111	; 0x6f
 8007f46:	bf0c      	ite	eq
 8007f48:	2308      	moveq	r3, #8
 8007f4a:	230a      	movne	r3, #10
 8007f4c:	2100      	movs	r1, #0
 8007f4e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007f52:	6866      	ldr	r6, [r4, #4]
 8007f54:	60a6      	str	r6, [r4, #8]
 8007f56:	2e00      	cmp	r6, #0
 8007f58:	bfa2      	ittt	ge
 8007f5a:	6821      	ldrge	r1, [r4, #0]
 8007f5c:	f021 0104 	bicge.w	r1, r1, #4
 8007f60:	6021      	strge	r1, [r4, #0]
 8007f62:	b90d      	cbnz	r5, 8007f68 <_printf_i+0x118>
 8007f64:	2e00      	cmp	r6, #0
 8007f66:	d04d      	beq.n	8008004 <_printf_i+0x1b4>
 8007f68:	4616      	mov	r6, r2
 8007f6a:	fbb5 f1f3 	udiv	r1, r5, r3
 8007f6e:	fb03 5711 	mls	r7, r3, r1, r5
 8007f72:	5dc7      	ldrb	r7, [r0, r7]
 8007f74:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007f78:	462f      	mov	r7, r5
 8007f7a:	42bb      	cmp	r3, r7
 8007f7c:	460d      	mov	r5, r1
 8007f7e:	d9f4      	bls.n	8007f6a <_printf_i+0x11a>
 8007f80:	2b08      	cmp	r3, #8
 8007f82:	d10b      	bne.n	8007f9c <_printf_i+0x14c>
 8007f84:	6823      	ldr	r3, [r4, #0]
 8007f86:	07df      	lsls	r7, r3, #31
 8007f88:	d508      	bpl.n	8007f9c <_printf_i+0x14c>
 8007f8a:	6923      	ldr	r3, [r4, #16]
 8007f8c:	6861      	ldr	r1, [r4, #4]
 8007f8e:	4299      	cmp	r1, r3
 8007f90:	bfde      	ittt	le
 8007f92:	2330      	movle	r3, #48	; 0x30
 8007f94:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007f98:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007f9c:	1b92      	subs	r2, r2, r6
 8007f9e:	6122      	str	r2, [r4, #16]
 8007fa0:	f8cd a000 	str.w	sl, [sp]
 8007fa4:	464b      	mov	r3, r9
 8007fa6:	aa03      	add	r2, sp, #12
 8007fa8:	4621      	mov	r1, r4
 8007faa:	4640      	mov	r0, r8
 8007fac:	f7ff fee2 	bl	8007d74 <_printf_common>
 8007fb0:	3001      	adds	r0, #1
 8007fb2:	d14c      	bne.n	800804e <_printf_i+0x1fe>
 8007fb4:	f04f 30ff 	mov.w	r0, #4294967295
 8007fb8:	b004      	add	sp, #16
 8007fba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fbe:	4835      	ldr	r0, [pc, #212]	; (8008094 <_printf_i+0x244>)
 8007fc0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8007fc4:	6823      	ldr	r3, [r4, #0]
 8007fc6:	680e      	ldr	r6, [r1, #0]
 8007fc8:	061f      	lsls	r7, r3, #24
 8007fca:	f856 5b04 	ldr.w	r5, [r6], #4
 8007fce:	600e      	str	r6, [r1, #0]
 8007fd0:	d514      	bpl.n	8007ffc <_printf_i+0x1ac>
 8007fd2:	07d9      	lsls	r1, r3, #31
 8007fd4:	bf44      	itt	mi
 8007fd6:	f043 0320 	orrmi.w	r3, r3, #32
 8007fda:	6023      	strmi	r3, [r4, #0]
 8007fdc:	b91d      	cbnz	r5, 8007fe6 <_printf_i+0x196>
 8007fde:	6823      	ldr	r3, [r4, #0]
 8007fe0:	f023 0320 	bic.w	r3, r3, #32
 8007fe4:	6023      	str	r3, [r4, #0]
 8007fe6:	2310      	movs	r3, #16
 8007fe8:	e7b0      	b.n	8007f4c <_printf_i+0xfc>
 8007fea:	6823      	ldr	r3, [r4, #0]
 8007fec:	f043 0320 	orr.w	r3, r3, #32
 8007ff0:	6023      	str	r3, [r4, #0]
 8007ff2:	2378      	movs	r3, #120	; 0x78
 8007ff4:	4828      	ldr	r0, [pc, #160]	; (8008098 <_printf_i+0x248>)
 8007ff6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007ffa:	e7e3      	b.n	8007fc4 <_printf_i+0x174>
 8007ffc:	065e      	lsls	r6, r3, #25
 8007ffe:	bf48      	it	mi
 8008000:	b2ad      	uxthmi	r5, r5
 8008002:	e7e6      	b.n	8007fd2 <_printf_i+0x182>
 8008004:	4616      	mov	r6, r2
 8008006:	e7bb      	b.n	8007f80 <_printf_i+0x130>
 8008008:	680b      	ldr	r3, [r1, #0]
 800800a:	6826      	ldr	r6, [r4, #0]
 800800c:	6960      	ldr	r0, [r4, #20]
 800800e:	1d1d      	adds	r5, r3, #4
 8008010:	600d      	str	r5, [r1, #0]
 8008012:	0635      	lsls	r5, r6, #24
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	d501      	bpl.n	800801c <_printf_i+0x1cc>
 8008018:	6018      	str	r0, [r3, #0]
 800801a:	e002      	b.n	8008022 <_printf_i+0x1d2>
 800801c:	0671      	lsls	r1, r6, #25
 800801e:	d5fb      	bpl.n	8008018 <_printf_i+0x1c8>
 8008020:	8018      	strh	r0, [r3, #0]
 8008022:	2300      	movs	r3, #0
 8008024:	6123      	str	r3, [r4, #16]
 8008026:	4616      	mov	r6, r2
 8008028:	e7ba      	b.n	8007fa0 <_printf_i+0x150>
 800802a:	680b      	ldr	r3, [r1, #0]
 800802c:	1d1a      	adds	r2, r3, #4
 800802e:	600a      	str	r2, [r1, #0]
 8008030:	681e      	ldr	r6, [r3, #0]
 8008032:	6862      	ldr	r2, [r4, #4]
 8008034:	2100      	movs	r1, #0
 8008036:	4630      	mov	r0, r6
 8008038:	f7f8 f91a 	bl	8000270 <memchr>
 800803c:	b108      	cbz	r0, 8008042 <_printf_i+0x1f2>
 800803e:	1b80      	subs	r0, r0, r6
 8008040:	6060      	str	r0, [r4, #4]
 8008042:	6863      	ldr	r3, [r4, #4]
 8008044:	6123      	str	r3, [r4, #16]
 8008046:	2300      	movs	r3, #0
 8008048:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800804c:	e7a8      	b.n	8007fa0 <_printf_i+0x150>
 800804e:	6923      	ldr	r3, [r4, #16]
 8008050:	4632      	mov	r2, r6
 8008052:	4649      	mov	r1, r9
 8008054:	4640      	mov	r0, r8
 8008056:	47d0      	blx	sl
 8008058:	3001      	adds	r0, #1
 800805a:	d0ab      	beq.n	8007fb4 <_printf_i+0x164>
 800805c:	6823      	ldr	r3, [r4, #0]
 800805e:	079b      	lsls	r3, r3, #30
 8008060:	d413      	bmi.n	800808a <_printf_i+0x23a>
 8008062:	68e0      	ldr	r0, [r4, #12]
 8008064:	9b03      	ldr	r3, [sp, #12]
 8008066:	4298      	cmp	r0, r3
 8008068:	bfb8      	it	lt
 800806a:	4618      	movlt	r0, r3
 800806c:	e7a4      	b.n	8007fb8 <_printf_i+0x168>
 800806e:	2301      	movs	r3, #1
 8008070:	4632      	mov	r2, r6
 8008072:	4649      	mov	r1, r9
 8008074:	4640      	mov	r0, r8
 8008076:	47d0      	blx	sl
 8008078:	3001      	adds	r0, #1
 800807a:	d09b      	beq.n	8007fb4 <_printf_i+0x164>
 800807c:	3501      	adds	r5, #1
 800807e:	68e3      	ldr	r3, [r4, #12]
 8008080:	9903      	ldr	r1, [sp, #12]
 8008082:	1a5b      	subs	r3, r3, r1
 8008084:	42ab      	cmp	r3, r5
 8008086:	dcf2      	bgt.n	800806e <_printf_i+0x21e>
 8008088:	e7eb      	b.n	8008062 <_printf_i+0x212>
 800808a:	2500      	movs	r5, #0
 800808c:	f104 0619 	add.w	r6, r4, #25
 8008090:	e7f5      	b.n	800807e <_printf_i+0x22e>
 8008092:	bf00      	nop
 8008094:	0800d14c 	.word	0x0800d14c
 8008098:	0800d15d 	.word	0x0800d15d

0800809c <_scanf_float>:
 800809c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080a0:	b087      	sub	sp, #28
 80080a2:	4617      	mov	r7, r2
 80080a4:	9303      	str	r3, [sp, #12]
 80080a6:	688b      	ldr	r3, [r1, #8]
 80080a8:	1e5a      	subs	r2, r3, #1
 80080aa:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80080ae:	bf83      	ittte	hi
 80080b0:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80080b4:	195b      	addhi	r3, r3, r5
 80080b6:	9302      	strhi	r3, [sp, #8]
 80080b8:	2300      	movls	r3, #0
 80080ba:	bf86      	itte	hi
 80080bc:	f240 135d 	movwhi	r3, #349	; 0x15d
 80080c0:	608b      	strhi	r3, [r1, #8]
 80080c2:	9302      	strls	r3, [sp, #8]
 80080c4:	680b      	ldr	r3, [r1, #0]
 80080c6:	468b      	mov	fp, r1
 80080c8:	2500      	movs	r5, #0
 80080ca:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80080ce:	f84b 3b1c 	str.w	r3, [fp], #28
 80080d2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80080d6:	4680      	mov	r8, r0
 80080d8:	460c      	mov	r4, r1
 80080da:	465e      	mov	r6, fp
 80080dc:	46aa      	mov	sl, r5
 80080de:	46a9      	mov	r9, r5
 80080e0:	9501      	str	r5, [sp, #4]
 80080e2:	68a2      	ldr	r2, [r4, #8]
 80080e4:	b152      	cbz	r2, 80080fc <_scanf_float+0x60>
 80080e6:	683b      	ldr	r3, [r7, #0]
 80080e8:	781b      	ldrb	r3, [r3, #0]
 80080ea:	2b4e      	cmp	r3, #78	; 0x4e
 80080ec:	d864      	bhi.n	80081b8 <_scanf_float+0x11c>
 80080ee:	2b40      	cmp	r3, #64	; 0x40
 80080f0:	d83c      	bhi.n	800816c <_scanf_float+0xd0>
 80080f2:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80080f6:	b2c8      	uxtb	r0, r1
 80080f8:	280e      	cmp	r0, #14
 80080fa:	d93a      	bls.n	8008172 <_scanf_float+0xd6>
 80080fc:	f1b9 0f00 	cmp.w	r9, #0
 8008100:	d003      	beq.n	800810a <_scanf_float+0x6e>
 8008102:	6823      	ldr	r3, [r4, #0]
 8008104:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008108:	6023      	str	r3, [r4, #0]
 800810a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800810e:	f1ba 0f01 	cmp.w	sl, #1
 8008112:	f200 8113 	bhi.w	800833c <_scanf_float+0x2a0>
 8008116:	455e      	cmp	r6, fp
 8008118:	f200 8105 	bhi.w	8008326 <_scanf_float+0x28a>
 800811c:	2501      	movs	r5, #1
 800811e:	4628      	mov	r0, r5
 8008120:	b007      	add	sp, #28
 8008122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008126:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800812a:	2a0d      	cmp	r2, #13
 800812c:	d8e6      	bhi.n	80080fc <_scanf_float+0x60>
 800812e:	a101      	add	r1, pc, #4	; (adr r1, 8008134 <_scanf_float+0x98>)
 8008130:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8008134:	08008273 	.word	0x08008273
 8008138:	080080fd 	.word	0x080080fd
 800813c:	080080fd 	.word	0x080080fd
 8008140:	080080fd 	.word	0x080080fd
 8008144:	080082d3 	.word	0x080082d3
 8008148:	080082ab 	.word	0x080082ab
 800814c:	080080fd 	.word	0x080080fd
 8008150:	080080fd 	.word	0x080080fd
 8008154:	08008281 	.word	0x08008281
 8008158:	080080fd 	.word	0x080080fd
 800815c:	080080fd 	.word	0x080080fd
 8008160:	080080fd 	.word	0x080080fd
 8008164:	080080fd 	.word	0x080080fd
 8008168:	08008239 	.word	0x08008239
 800816c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8008170:	e7db      	b.n	800812a <_scanf_float+0x8e>
 8008172:	290e      	cmp	r1, #14
 8008174:	d8c2      	bhi.n	80080fc <_scanf_float+0x60>
 8008176:	a001      	add	r0, pc, #4	; (adr r0, 800817c <_scanf_float+0xe0>)
 8008178:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800817c:	0800822b 	.word	0x0800822b
 8008180:	080080fd 	.word	0x080080fd
 8008184:	0800822b 	.word	0x0800822b
 8008188:	080082bf 	.word	0x080082bf
 800818c:	080080fd 	.word	0x080080fd
 8008190:	080081d9 	.word	0x080081d9
 8008194:	08008215 	.word	0x08008215
 8008198:	08008215 	.word	0x08008215
 800819c:	08008215 	.word	0x08008215
 80081a0:	08008215 	.word	0x08008215
 80081a4:	08008215 	.word	0x08008215
 80081a8:	08008215 	.word	0x08008215
 80081ac:	08008215 	.word	0x08008215
 80081b0:	08008215 	.word	0x08008215
 80081b4:	08008215 	.word	0x08008215
 80081b8:	2b6e      	cmp	r3, #110	; 0x6e
 80081ba:	d809      	bhi.n	80081d0 <_scanf_float+0x134>
 80081bc:	2b60      	cmp	r3, #96	; 0x60
 80081be:	d8b2      	bhi.n	8008126 <_scanf_float+0x8a>
 80081c0:	2b54      	cmp	r3, #84	; 0x54
 80081c2:	d077      	beq.n	80082b4 <_scanf_float+0x218>
 80081c4:	2b59      	cmp	r3, #89	; 0x59
 80081c6:	d199      	bne.n	80080fc <_scanf_float+0x60>
 80081c8:	2d07      	cmp	r5, #7
 80081ca:	d197      	bne.n	80080fc <_scanf_float+0x60>
 80081cc:	2508      	movs	r5, #8
 80081ce:	e029      	b.n	8008224 <_scanf_float+0x188>
 80081d0:	2b74      	cmp	r3, #116	; 0x74
 80081d2:	d06f      	beq.n	80082b4 <_scanf_float+0x218>
 80081d4:	2b79      	cmp	r3, #121	; 0x79
 80081d6:	e7f6      	b.n	80081c6 <_scanf_float+0x12a>
 80081d8:	6821      	ldr	r1, [r4, #0]
 80081da:	05c8      	lsls	r0, r1, #23
 80081dc:	d51a      	bpl.n	8008214 <_scanf_float+0x178>
 80081de:	9b02      	ldr	r3, [sp, #8]
 80081e0:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80081e4:	6021      	str	r1, [r4, #0]
 80081e6:	f109 0901 	add.w	r9, r9, #1
 80081ea:	b11b      	cbz	r3, 80081f4 <_scanf_float+0x158>
 80081ec:	3b01      	subs	r3, #1
 80081ee:	3201      	adds	r2, #1
 80081f0:	9302      	str	r3, [sp, #8]
 80081f2:	60a2      	str	r2, [r4, #8]
 80081f4:	68a3      	ldr	r3, [r4, #8]
 80081f6:	3b01      	subs	r3, #1
 80081f8:	60a3      	str	r3, [r4, #8]
 80081fa:	6923      	ldr	r3, [r4, #16]
 80081fc:	3301      	adds	r3, #1
 80081fe:	6123      	str	r3, [r4, #16]
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	3b01      	subs	r3, #1
 8008204:	2b00      	cmp	r3, #0
 8008206:	607b      	str	r3, [r7, #4]
 8008208:	f340 8084 	ble.w	8008314 <_scanf_float+0x278>
 800820c:	683b      	ldr	r3, [r7, #0]
 800820e:	3301      	adds	r3, #1
 8008210:	603b      	str	r3, [r7, #0]
 8008212:	e766      	b.n	80080e2 <_scanf_float+0x46>
 8008214:	eb1a 0f05 	cmn.w	sl, r5
 8008218:	f47f af70 	bne.w	80080fc <_scanf_float+0x60>
 800821c:	6822      	ldr	r2, [r4, #0]
 800821e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8008222:	6022      	str	r2, [r4, #0]
 8008224:	f806 3b01 	strb.w	r3, [r6], #1
 8008228:	e7e4      	b.n	80081f4 <_scanf_float+0x158>
 800822a:	6822      	ldr	r2, [r4, #0]
 800822c:	0610      	lsls	r0, r2, #24
 800822e:	f57f af65 	bpl.w	80080fc <_scanf_float+0x60>
 8008232:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008236:	e7f4      	b.n	8008222 <_scanf_float+0x186>
 8008238:	f1ba 0f00 	cmp.w	sl, #0
 800823c:	d10e      	bne.n	800825c <_scanf_float+0x1c0>
 800823e:	f1b9 0f00 	cmp.w	r9, #0
 8008242:	d10e      	bne.n	8008262 <_scanf_float+0x1c6>
 8008244:	6822      	ldr	r2, [r4, #0]
 8008246:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800824a:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800824e:	d108      	bne.n	8008262 <_scanf_float+0x1c6>
 8008250:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8008254:	6022      	str	r2, [r4, #0]
 8008256:	f04f 0a01 	mov.w	sl, #1
 800825a:	e7e3      	b.n	8008224 <_scanf_float+0x188>
 800825c:	f1ba 0f02 	cmp.w	sl, #2
 8008260:	d055      	beq.n	800830e <_scanf_float+0x272>
 8008262:	2d01      	cmp	r5, #1
 8008264:	d002      	beq.n	800826c <_scanf_float+0x1d0>
 8008266:	2d04      	cmp	r5, #4
 8008268:	f47f af48 	bne.w	80080fc <_scanf_float+0x60>
 800826c:	3501      	adds	r5, #1
 800826e:	b2ed      	uxtb	r5, r5
 8008270:	e7d8      	b.n	8008224 <_scanf_float+0x188>
 8008272:	f1ba 0f01 	cmp.w	sl, #1
 8008276:	f47f af41 	bne.w	80080fc <_scanf_float+0x60>
 800827a:	f04f 0a02 	mov.w	sl, #2
 800827e:	e7d1      	b.n	8008224 <_scanf_float+0x188>
 8008280:	b97d      	cbnz	r5, 80082a2 <_scanf_float+0x206>
 8008282:	f1b9 0f00 	cmp.w	r9, #0
 8008286:	f47f af3c 	bne.w	8008102 <_scanf_float+0x66>
 800828a:	6822      	ldr	r2, [r4, #0]
 800828c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8008290:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8008294:	f47f af39 	bne.w	800810a <_scanf_float+0x6e>
 8008298:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800829c:	6022      	str	r2, [r4, #0]
 800829e:	2501      	movs	r5, #1
 80082a0:	e7c0      	b.n	8008224 <_scanf_float+0x188>
 80082a2:	2d03      	cmp	r5, #3
 80082a4:	d0e2      	beq.n	800826c <_scanf_float+0x1d0>
 80082a6:	2d05      	cmp	r5, #5
 80082a8:	e7de      	b.n	8008268 <_scanf_float+0x1cc>
 80082aa:	2d02      	cmp	r5, #2
 80082ac:	f47f af26 	bne.w	80080fc <_scanf_float+0x60>
 80082b0:	2503      	movs	r5, #3
 80082b2:	e7b7      	b.n	8008224 <_scanf_float+0x188>
 80082b4:	2d06      	cmp	r5, #6
 80082b6:	f47f af21 	bne.w	80080fc <_scanf_float+0x60>
 80082ba:	2507      	movs	r5, #7
 80082bc:	e7b2      	b.n	8008224 <_scanf_float+0x188>
 80082be:	6822      	ldr	r2, [r4, #0]
 80082c0:	0591      	lsls	r1, r2, #22
 80082c2:	f57f af1b 	bpl.w	80080fc <_scanf_float+0x60>
 80082c6:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 80082ca:	6022      	str	r2, [r4, #0]
 80082cc:	f8cd 9004 	str.w	r9, [sp, #4]
 80082d0:	e7a8      	b.n	8008224 <_scanf_float+0x188>
 80082d2:	6822      	ldr	r2, [r4, #0]
 80082d4:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 80082d8:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 80082dc:	d006      	beq.n	80082ec <_scanf_float+0x250>
 80082de:	0550      	lsls	r0, r2, #21
 80082e0:	f57f af0c 	bpl.w	80080fc <_scanf_float+0x60>
 80082e4:	f1b9 0f00 	cmp.w	r9, #0
 80082e8:	f43f af0f 	beq.w	800810a <_scanf_float+0x6e>
 80082ec:	0591      	lsls	r1, r2, #22
 80082ee:	bf58      	it	pl
 80082f0:	9901      	ldrpl	r1, [sp, #4]
 80082f2:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80082f6:	bf58      	it	pl
 80082f8:	eba9 0101 	subpl.w	r1, r9, r1
 80082fc:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8008300:	bf58      	it	pl
 8008302:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8008306:	6022      	str	r2, [r4, #0]
 8008308:	f04f 0900 	mov.w	r9, #0
 800830c:	e78a      	b.n	8008224 <_scanf_float+0x188>
 800830e:	f04f 0a03 	mov.w	sl, #3
 8008312:	e787      	b.n	8008224 <_scanf_float+0x188>
 8008314:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8008318:	4639      	mov	r1, r7
 800831a:	4640      	mov	r0, r8
 800831c:	4798      	blx	r3
 800831e:	2800      	cmp	r0, #0
 8008320:	f43f aedf 	beq.w	80080e2 <_scanf_float+0x46>
 8008324:	e6ea      	b.n	80080fc <_scanf_float+0x60>
 8008326:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800832a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800832e:	463a      	mov	r2, r7
 8008330:	4640      	mov	r0, r8
 8008332:	4798      	blx	r3
 8008334:	6923      	ldr	r3, [r4, #16]
 8008336:	3b01      	subs	r3, #1
 8008338:	6123      	str	r3, [r4, #16]
 800833a:	e6ec      	b.n	8008116 <_scanf_float+0x7a>
 800833c:	1e6b      	subs	r3, r5, #1
 800833e:	2b06      	cmp	r3, #6
 8008340:	d825      	bhi.n	800838e <_scanf_float+0x2f2>
 8008342:	2d02      	cmp	r5, #2
 8008344:	d836      	bhi.n	80083b4 <_scanf_float+0x318>
 8008346:	455e      	cmp	r6, fp
 8008348:	f67f aee8 	bls.w	800811c <_scanf_float+0x80>
 800834c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8008350:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8008354:	463a      	mov	r2, r7
 8008356:	4640      	mov	r0, r8
 8008358:	4798      	blx	r3
 800835a:	6923      	ldr	r3, [r4, #16]
 800835c:	3b01      	subs	r3, #1
 800835e:	6123      	str	r3, [r4, #16]
 8008360:	e7f1      	b.n	8008346 <_scanf_float+0x2aa>
 8008362:	9802      	ldr	r0, [sp, #8]
 8008364:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8008368:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800836c:	9002      	str	r0, [sp, #8]
 800836e:	463a      	mov	r2, r7
 8008370:	4640      	mov	r0, r8
 8008372:	4798      	blx	r3
 8008374:	6923      	ldr	r3, [r4, #16]
 8008376:	3b01      	subs	r3, #1
 8008378:	6123      	str	r3, [r4, #16]
 800837a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800837e:	fa5f fa8a 	uxtb.w	sl, sl
 8008382:	f1ba 0f02 	cmp.w	sl, #2
 8008386:	d1ec      	bne.n	8008362 <_scanf_float+0x2c6>
 8008388:	3d03      	subs	r5, #3
 800838a:	b2ed      	uxtb	r5, r5
 800838c:	1b76      	subs	r6, r6, r5
 800838e:	6823      	ldr	r3, [r4, #0]
 8008390:	05da      	lsls	r2, r3, #23
 8008392:	d52f      	bpl.n	80083f4 <_scanf_float+0x358>
 8008394:	055b      	lsls	r3, r3, #21
 8008396:	d510      	bpl.n	80083ba <_scanf_float+0x31e>
 8008398:	455e      	cmp	r6, fp
 800839a:	f67f aebf 	bls.w	800811c <_scanf_float+0x80>
 800839e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80083a2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80083a6:	463a      	mov	r2, r7
 80083a8:	4640      	mov	r0, r8
 80083aa:	4798      	blx	r3
 80083ac:	6923      	ldr	r3, [r4, #16]
 80083ae:	3b01      	subs	r3, #1
 80083b0:	6123      	str	r3, [r4, #16]
 80083b2:	e7f1      	b.n	8008398 <_scanf_float+0x2fc>
 80083b4:	46aa      	mov	sl, r5
 80083b6:	9602      	str	r6, [sp, #8]
 80083b8:	e7df      	b.n	800837a <_scanf_float+0x2de>
 80083ba:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80083be:	6923      	ldr	r3, [r4, #16]
 80083c0:	2965      	cmp	r1, #101	; 0x65
 80083c2:	f103 33ff 	add.w	r3, r3, #4294967295
 80083c6:	f106 35ff 	add.w	r5, r6, #4294967295
 80083ca:	6123      	str	r3, [r4, #16]
 80083cc:	d00c      	beq.n	80083e8 <_scanf_float+0x34c>
 80083ce:	2945      	cmp	r1, #69	; 0x45
 80083d0:	d00a      	beq.n	80083e8 <_scanf_float+0x34c>
 80083d2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80083d6:	463a      	mov	r2, r7
 80083d8:	4640      	mov	r0, r8
 80083da:	4798      	blx	r3
 80083dc:	6923      	ldr	r3, [r4, #16]
 80083de:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80083e2:	3b01      	subs	r3, #1
 80083e4:	1eb5      	subs	r5, r6, #2
 80083e6:	6123      	str	r3, [r4, #16]
 80083e8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80083ec:	463a      	mov	r2, r7
 80083ee:	4640      	mov	r0, r8
 80083f0:	4798      	blx	r3
 80083f2:	462e      	mov	r6, r5
 80083f4:	6825      	ldr	r5, [r4, #0]
 80083f6:	f015 0510 	ands.w	r5, r5, #16
 80083fa:	d14d      	bne.n	8008498 <_scanf_float+0x3fc>
 80083fc:	7035      	strb	r5, [r6, #0]
 80083fe:	6823      	ldr	r3, [r4, #0]
 8008400:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8008404:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008408:	d11a      	bne.n	8008440 <_scanf_float+0x3a4>
 800840a:	9b01      	ldr	r3, [sp, #4]
 800840c:	454b      	cmp	r3, r9
 800840e:	eba3 0209 	sub.w	r2, r3, r9
 8008412:	d122      	bne.n	800845a <_scanf_float+0x3be>
 8008414:	2200      	movs	r2, #0
 8008416:	4659      	mov	r1, fp
 8008418:	4640      	mov	r0, r8
 800841a:	f000 fef7 	bl	800920c <_strtod_r>
 800841e:	9b03      	ldr	r3, [sp, #12]
 8008420:	6821      	ldr	r1, [r4, #0]
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	f011 0f02 	tst.w	r1, #2
 8008428:	f103 0204 	add.w	r2, r3, #4
 800842c:	d020      	beq.n	8008470 <_scanf_float+0x3d4>
 800842e:	9903      	ldr	r1, [sp, #12]
 8008430:	600a      	str	r2, [r1, #0]
 8008432:	681b      	ldr	r3, [r3, #0]
 8008434:	ed83 0b00 	vstr	d0, [r3]
 8008438:	68e3      	ldr	r3, [r4, #12]
 800843a:	3301      	adds	r3, #1
 800843c:	60e3      	str	r3, [r4, #12]
 800843e:	e66e      	b.n	800811e <_scanf_float+0x82>
 8008440:	9b04      	ldr	r3, [sp, #16]
 8008442:	2b00      	cmp	r3, #0
 8008444:	d0e6      	beq.n	8008414 <_scanf_float+0x378>
 8008446:	9905      	ldr	r1, [sp, #20]
 8008448:	230a      	movs	r3, #10
 800844a:	462a      	mov	r2, r5
 800844c:	3101      	adds	r1, #1
 800844e:	4640      	mov	r0, r8
 8008450:	f000 ff66 	bl	8009320 <_strtol_r>
 8008454:	9b04      	ldr	r3, [sp, #16]
 8008456:	9e05      	ldr	r6, [sp, #20]
 8008458:	1ac2      	subs	r2, r0, r3
 800845a:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800845e:	429e      	cmp	r6, r3
 8008460:	bf28      	it	cs
 8008462:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8008466:	490d      	ldr	r1, [pc, #52]	; (800849c <_scanf_float+0x400>)
 8008468:	4630      	mov	r0, r6
 800846a:	f000 f821 	bl	80084b0 <siprintf>
 800846e:	e7d1      	b.n	8008414 <_scanf_float+0x378>
 8008470:	f011 0f04 	tst.w	r1, #4
 8008474:	9903      	ldr	r1, [sp, #12]
 8008476:	600a      	str	r2, [r1, #0]
 8008478:	d1db      	bne.n	8008432 <_scanf_float+0x396>
 800847a:	eeb4 0b40 	vcmp.f64	d0, d0
 800847e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008482:	681e      	ldr	r6, [r3, #0]
 8008484:	d705      	bvc.n	8008492 <_scanf_float+0x3f6>
 8008486:	4806      	ldr	r0, [pc, #24]	; (80084a0 <_scanf_float+0x404>)
 8008488:	f000 f80c 	bl	80084a4 <nanf>
 800848c:	ed86 0a00 	vstr	s0, [r6]
 8008490:	e7d2      	b.n	8008438 <_scanf_float+0x39c>
 8008492:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8008496:	e7f9      	b.n	800848c <_scanf_float+0x3f0>
 8008498:	2500      	movs	r5, #0
 800849a:	e640      	b.n	800811e <_scanf_float+0x82>
 800849c:	0800d16e 	.word	0x0800d16e
 80084a0:	0800d5a3 	.word	0x0800d5a3

080084a4 <nanf>:
 80084a4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80084ac <nanf+0x8>
 80084a8:	4770      	bx	lr
 80084aa:	bf00      	nop
 80084ac:	7fc00000 	.word	0x7fc00000

080084b0 <siprintf>:
 80084b0:	b40e      	push	{r1, r2, r3}
 80084b2:	b500      	push	{lr}
 80084b4:	b09c      	sub	sp, #112	; 0x70
 80084b6:	ab1d      	add	r3, sp, #116	; 0x74
 80084b8:	9002      	str	r0, [sp, #8]
 80084ba:	9006      	str	r0, [sp, #24]
 80084bc:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80084c0:	4809      	ldr	r0, [pc, #36]	; (80084e8 <siprintf+0x38>)
 80084c2:	9107      	str	r1, [sp, #28]
 80084c4:	9104      	str	r1, [sp, #16]
 80084c6:	4909      	ldr	r1, [pc, #36]	; (80084ec <siprintf+0x3c>)
 80084c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80084cc:	9105      	str	r1, [sp, #20]
 80084ce:	6800      	ldr	r0, [r0, #0]
 80084d0:	9301      	str	r3, [sp, #4]
 80084d2:	a902      	add	r1, sp, #8
 80084d4:	f002 fed6 	bl	800b284 <_svfiprintf_r>
 80084d8:	9b02      	ldr	r3, [sp, #8]
 80084da:	2200      	movs	r2, #0
 80084dc:	701a      	strb	r2, [r3, #0]
 80084de:	b01c      	add	sp, #112	; 0x70
 80084e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80084e4:	b003      	add	sp, #12
 80084e6:	4770      	bx	lr
 80084e8:	20000134 	.word	0x20000134
 80084ec:	ffff0208 	.word	0xffff0208

080084f0 <siscanf>:
 80084f0:	b40e      	push	{r1, r2, r3}
 80084f2:	b510      	push	{r4, lr}
 80084f4:	b09f      	sub	sp, #124	; 0x7c
 80084f6:	ac21      	add	r4, sp, #132	; 0x84
 80084f8:	f44f 7101 	mov.w	r1, #516	; 0x204
 80084fc:	f854 2b04 	ldr.w	r2, [r4], #4
 8008500:	9201      	str	r2, [sp, #4]
 8008502:	f8ad 101c 	strh.w	r1, [sp, #28]
 8008506:	9004      	str	r0, [sp, #16]
 8008508:	9008      	str	r0, [sp, #32]
 800850a:	f7f7 fea3 	bl	8000254 <strlen>
 800850e:	4b0c      	ldr	r3, [pc, #48]	; (8008540 <siscanf+0x50>)
 8008510:	9005      	str	r0, [sp, #20]
 8008512:	9009      	str	r0, [sp, #36]	; 0x24
 8008514:	930d      	str	r3, [sp, #52]	; 0x34
 8008516:	480b      	ldr	r0, [pc, #44]	; (8008544 <siscanf+0x54>)
 8008518:	9a01      	ldr	r2, [sp, #4]
 800851a:	6800      	ldr	r0, [r0, #0]
 800851c:	9403      	str	r4, [sp, #12]
 800851e:	2300      	movs	r3, #0
 8008520:	9311      	str	r3, [sp, #68]	; 0x44
 8008522:	9316      	str	r3, [sp, #88]	; 0x58
 8008524:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008528:	f8ad 301e 	strh.w	r3, [sp, #30]
 800852c:	a904      	add	r1, sp, #16
 800852e:	4623      	mov	r3, r4
 8008530:	f003 f802 	bl	800b538 <__ssvfiscanf_r>
 8008534:	b01f      	add	sp, #124	; 0x7c
 8008536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800853a:	b003      	add	sp, #12
 800853c:	4770      	bx	lr
 800853e:	bf00      	nop
 8008540:	0800856b 	.word	0x0800856b
 8008544:	20000134 	.word	0x20000134

08008548 <__sread>:
 8008548:	b510      	push	{r4, lr}
 800854a:	460c      	mov	r4, r1
 800854c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008550:	f003 fab6 	bl	800bac0 <_read_r>
 8008554:	2800      	cmp	r0, #0
 8008556:	bfab      	itete	ge
 8008558:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800855a:	89a3      	ldrhlt	r3, [r4, #12]
 800855c:	181b      	addge	r3, r3, r0
 800855e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8008562:	bfac      	ite	ge
 8008564:	6563      	strge	r3, [r4, #84]	; 0x54
 8008566:	81a3      	strhlt	r3, [r4, #12]
 8008568:	bd10      	pop	{r4, pc}

0800856a <__seofread>:
 800856a:	2000      	movs	r0, #0
 800856c:	4770      	bx	lr

0800856e <__swrite>:
 800856e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008572:	461f      	mov	r7, r3
 8008574:	898b      	ldrh	r3, [r1, #12]
 8008576:	05db      	lsls	r3, r3, #23
 8008578:	4605      	mov	r5, r0
 800857a:	460c      	mov	r4, r1
 800857c:	4616      	mov	r6, r2
 800857e:	d505      	bpl.n	800858c <__swrite+0x1e>
 8008580:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008584:	2302      	movs	r3, #2
 8008586:	2200      	movs	r2, #0
 8008588:	f002 f870 	bl	800a66c <_lseek_r>
 800858c:	89a3      	ldrh	r3, [r4, #12]
 800858e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008592:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008596:	81a3      	strh	r3, [r4, #12]
 8008598:	4632      	mov	r2, r6
 800859a:	463b      	mov	r3, r7
 800859c:	4628      	mov	r0, r5
 800859e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80085a2:	f000 bebf 	b.w	8009324 <_write_r>

080085a6 <__sseek>:
 80085a6:	b510      	push	{r4, lr}
 80085a8:	460c      	mov	r4, r1
 80085aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085ae:	f002 f85d 	bl	800a66c <_lseek_r>
 80085b2:	1c43      	adds	r3, r0, #1
 80085b4:	89a3      	ldrh	r3, [r4, #12]
 80085b6:	bf15      	itete	ne
 80085b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80085ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80085be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80085c2:	81a3      	strheq	r3, [r4, #12]
 80085c4:	bf18      	it	ne
 80085c6:	81a3      	strhne	r3, [r4, #12]
 80085c8:	bd10      	pop	{r4, pc}

080085ca <__sclose>:
 80085ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085ce:	f000 bebb 	b.w	8009348 <_close_r>

080085d2 <strcpy>:
 80085d2:	4603      	mov	r3, r0
 80085d4:	f811 2b01 	ldrb.w	r2, [r1], #1
 80085d8:	f803 2b01 	strb.w	r2, [r3], #1
 80085dc:	2a00      	cmp	r2, #0
 80085de:	d1f9      	bne.n	80085d4 <strcpy+0x2>
 80085e0:	4770      	bx	lr

080085e2 <strncmp>:
 80085e2:	b510      	push	{r4, lr}
 80085e4:	b16a      	cbz	r2, 8008602 <strncmp+0x20>
 80085e6:	3901      	subs	r1, #1
 80085e8:	1884      	adds	r4, r0, r2
 80085ea:	f810 3b01 	ldrb.w	r3, [r0], #1
 80085ee:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80085f2:	4293      	cmp	r3, r2
 80085f4:	d103      	bne.n	80085fe <strncmp+0x1c>
 80085f6:	42a0      	cmp	r0, r4
 80085f8:	d001      	beq.n	80085fe <strncmp+0x1c>
 80085fa:	2b00      	cmp	r3, #0
 80085fc:	d1f5      	bne.n	80085ea <strncmp+0x8>
 80085fe:	1a98      	subs	r0, r3, r2
 8008600:	bd10      	pop	{r4, pc}
 8008602:	4610      	mov	r0, r2
 8008604:	e7fc      	b.n	8008600 <strncmp+0x1e>

08008606 <strncpy>:
 8008606:	b510      	push	{r4, lr}
 8008608:	3901      	subs	r1, #1
 800860a:	4603      	mov	r3, r0
 800860c:	b132      	cbz	r2, 800861c <strncpy+0x16>
 800860e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8008612:	f803 4b01 	strb.w	r4, [r3], #1
 8008616:	3a01      	subs	r2, #1
 8008618:	2c00      	cmp	r4, #0
 800861a:	d1f7      	bne.n	800860c <strncpy+0x6>
 800861c:	441a      	add	r2, r3
 800861e:	2100      	movs	r1, #0
 8008620:	4293      	cmp	r3, r2
 8008622:	d100      	bne.n	8008626 <strncpy+0x20>
 8008624:	bd10      	pop	{r4, pc}
 8008626:	f803 1b01 	strb.w	r1, [r3], #1
 800862a:	e7f9      	b.n	8008620 <strncpy+0x1a>

0800862c <sulp>:
 800862c:	b570      	push	{r4, r5, r6, lr}
 800862e:	4604      	mov	r4, r0
 8008630:	460d      	mov	r5, r1
 8008632:	4616      	mov	r6, r2
 8008634:	ec45 4b10 	vmov	d0, r4, r5
 8008638:	f002 fbbe 	bl	800adb8 <__ulp>
 800863c:	b17e      	cbz	r6, 800865e <sulp+0x32>
 800863e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8008642:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8008646:	2b00      	cmp	r3, #0
 8008648:	dd09      	ble.n	800865e <sulp+0x32>
 800864a:	051b      	lsls	r3, r3, #20
 800864c:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 8008650:	2000      	movs	r0, #0
 8008652:	f501 1140 	add.w	r1, r1, #3145728	; 0x300000
 8008656:	ec41 0b17 	vmov	d7, r0, r1
 800865a:	ee20 0b07 	vmul.f64	d0, d0, d7
 800865e:	bd70      	pop	{r4, r5, r6, pc}

08008660 <_strtod_l>:
 8008660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008664:	ed2d 8b0c 	vpush	{d8-d13}
 8008668:	b09d      	sub	sp, #116	; 0x74
 800866a:	461f      	mov	r7, r3
 800866c:	2300      	movs	r3, #0
 800866e:	9318      	str	r3, [sp, #96]	; 0x60
 8008670:	4ba6      	ldr	r3, [pc, #664]	; (800890c <_strtod_l+0x2ac>)
 8008672:	9213      	str	r2, [sp, #76]	; 0x4c
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	9308      	str	r3, [sp, #32]
 8008678:	4604      	mov	r4, r0
 800867a:	4618      	mov	r0, r3
 800867c:	468a      	mov	sl, r1
 800867e:	f7f7 fde9 	bl	8000254 <strlen>
 8008682:	f04f 0800 	mov.w	r8, #0
 8008686:	4605      	mov	r5, r0
 8008688:	f04f 0900 	mov.w	r9, #0
 800868c:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 8008690:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008692:	781a      	ldrb	r2, [r3, #0]
 8008694:	2a2b      	cmp	r2, #43	; 0x2b
 8008696:	d04d      	beq.n	8008734 <_strtod_l+0xd4>
 8008698:	d83a      	bhi.n	8008710 <_strtod_l+0xb0>
 800869a:	2a0d      	cmp	r2, #13
 800869c:	d833      	bhi.n	8008706 <_strtod_l+0xa6>
 800869e:	2a08      	cmp	r2, #8
 80086a0:	d833      	bhi.n	800870a <_strtod_l+0xaa>
 80086a2:	2a00      	cmp	r2, #0
 80086a4:	d03d      	beq.n	8008722 <_strtod_l+0xc2>
 80086a6:	2300      	movs	r3, #0
 80086a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80086aa:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80086ac:	7833      	ldrb	r3, [r6, #0]
 80086ae:	2b30      	cmp	r3, #48	; 0x30
 80086b0:	f040 80b6 	bne.w	8008820 <_strtod_l+0x1c0>
 80086b4:	7873      	ldrb	r3, [r6, #1]
 80086b6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80086ba:	2b58      	cmp	r3, #88	; 0x58
 80086bc:	d16d      	bne.n	800879a <_strtod_l+0x13a>
 80086be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80086c0:	9301      	str	r3, [sp, #4]
 80086c2:	ab18      	add	r3, sp, #96	; 0x60
 80086c4:	9702      	str	r7, [sp, #8]
 80086c6:	9300      	str	r3, [sp, #0]
 80086c8:	4a91      	ldr	r2, [pc, #580]	; (8008910 <_strtod_l+0x2b0>)
 80086ca:	ab19      	add	r3, sp, #100	; 0x64
 80086cc:	a917      	add	r1, sp, #92	; 0x5c
 80086ce:	4620      	mov	r0, r4
 80086d0:	f001 fcc0 	bl	800a054 <__gethex>
 80086d4:	f010 0507 	ands.w	r5, r0, #7
 80086d8:	4607      	mov	r7, r0
 80086da:	d005      	beq.n	80086e8 <_strtod_l+0x88>
 80086dc:	2d06      	cmp	r5, #6
 80086de:	d12b      	bne.n	8008738 <_strtod_l+0xd8>
 80086e0:	3601      	adds	r6, #1
 80086e2:	2300      	movs	r3, #0
 80086e4:	9617      	str	r6, [sp, #92]	; 0x5c
 80086e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80086e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80086ea:	2b00      	cmp	r3, #0
 80086ec:	f040 856e 	bne.w	80091cc <_strtod_l+0xb6c>
 80086f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80086f2:	b1e3      	cbz	r3, 800872e <_strtod_l+0xce>
 80086f4:	ec49 8b17 	vmov	d7, r8, r9
 80086f8:	eeb1 0b47 	vneg.f64	d0, d7
 80086fc:	b01d      	add	sp, #116	; 0x74
 80086fe:	ecbd 8b0c 	vpop	{d8-d13}
 8008702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008706:	2a20      	cmp	r2, #32
 8008708:	d1cd      	bne.n	80086a6 <_strtod_l+0x46>
 800870a:	3301      	adds	r3, #1
 800870c:	9317      	str	r3, [sp, #92]	; 0x5c
 800870e:	e7bf      	b.n	8008690 <_strtod_l+0x30>
 8008710:	2a2d      	cmp	r2, #45	; 0x2d
 8008712:	d1c8      	bne.n	80086a6 <_strtod_l+0x46>
 8008714:	2201      	movs	r2, #1
 8008716:	920b      	str	r2, [sp, #44]	; 0x2c
 8008718:	1c5a      	adds	r2, r3, #1
 800871a:	9217      	str	r2, [sp, #92]	; 0x5c
 800871c:	785b      	ldrb	r3, [r3, #1]
 800871e:	2b00      	cmp	r3, #0
 8008720:	d1c3      	bne.n	80086aa <_strtod_l+0x4a>
 8008722:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008724:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 8008728:	2b00      	cmp	r3, #0
 800872a:	f040 854d 	bne.w	80091c8 <_strtod_l+0xb68>
 800872e:	ec49 8b10 	vmov	d0, r8, r9
 8008732:	e7e3      	b.n	80086fc <_strtod_l+0x9c>
 8008734:	2200      	movs	r2, #0
 8008736:	e7ee      	b.n	8008716 <_strtod_l+0xb6>
 8008738:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800873a:	b13a      	cbz	r2, 800874c <_strtod_l+0xec>
 800873c:	2135      	movs	r1, #53	; 0x35
 800873e:	a81a      	add	r0, sp, #104	; 0x68
 8008740:	f002 fc46 	bl	800afd0 <__copybits>
 8008744:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008746:	4620      	mov	r0, r4
 8008748:	f002 f80a 	bl	800a760 <_Bfree>
 800874c:	3d01      	subs	r5, #1
 800874e:	2d05      	cmp	r5, #5
 8008750:	d807      	bhi.n	8008762 <_strtod_l+0x102>
 8008752:	e8df f005 	tbb	[pc, r5]
 8008756:	0b0e      	.short	0x0b0e
 8008758:	030e1d18 	.word	0x030e1d18
 800875c:	f04f 0900 	mov.w	r9, #0
 8008760:	46c8      	mov	r8, r9
 8008762:	073b      	lsls	r3, r7, #28
 8008764:	d5c0      	bpl.n	80086e8 <_strtod_l+0x88>
 8008766:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800876a:	e7bd      	b.n	80086e8 <_strtod_l+0x88>
 800876c:	e9dd 891a 	ldrd	r8, r9, [sp, #104]	; 0x68
 8008770:	e7f7      	b.n	8008762 <_strtod_l+0x102>
 8008772:	e9dd 831a 	ldrd	r8, r3, [sp, #104]	; 0x68
 8008776:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008778:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800877c:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8008780:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8008784:	e7ed      	b.n	8008762 <_strtod_l+0x102>
 8008786:	f8df 918c 	ldr.w	r9, [pc, #396]	; 8008914 <_strtod_l+0x2b4>
 800878a:	f04f 0800 	mov.w	r8, #0
 800878e:	e7e8      	b.n	8008762 <_strtod_l+0x102>
 8008790:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8008794:	f04f 38ff 	mov.w	r8, #4294967295
 8008798:	e7e3      	b.n	8008762 <_strtod_l+0x102>
 800879a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800879c:	1c5a      	adds	r2, r3, #1
 800879e:	9217      	str	r2, [sp, #92]	; 0x5c
 80087a0:	785b      	ldrb	r3, [r3, #1]
 80087a2:	2b30      	cmp	r3, #48	; 0x30
 80087a4:	d0f9      	beq.n	800879a <_strtod_l+0x13a>
 80087a6:	2b00      	cmp	r3, #0
 80087a8:	d09e      	beq.n	80086e8 <_strtod_l+0x88>
 80087aa:	2301      	movs	r3, #1
 80087ac:	9306      	str	r3, [sp, #24]
 80087ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80087b0:	930c      	str	r3, [sp, #48]	; 0x30
 80087b2:	2300      	movs	r3, #0
 80087b4:	9304      	str	r3, [sp, #16]
 80087b6:	930a      	str	r3, [sp, #40]	; 0x28
 80087b8:	461e      	mov	r6, r3
 80087ba:	220a      	movs	r2, #10
 80087bc:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80087be:	f890 b000 	ldrb.w	fp, [r0]
 80087c2:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
 80087c6:	b2d9      	uxtb	r1, r3
 80087c8:	2909      	cmp	r1, #9
 80087ca:	d92b      	bls.n	8008824 <_strtod_l+0x1c4>
 80087cc:	9908      	ldr	r1, [sp, #32]
 80087ce:	462a      	mov	r2, r5
 80087d0:	f7ff ff07 	bl	80085e2 <strncmp>
 80087d4:	2800      	cmp	r0, #0
 80087d6:	d035      	beq.n	8008844 <_strtod_l+0x1e4>
 80087d8:	2000      	movs	r0, #0
 80087da:	465a      	mov	r2, fp
 80087dc:	4633      	mov	r3, r6
 80087de:	4683      	mov	fp, r0
 80087e0:	4601      	mov	r1, r0
 80087e2:	2a65      	cmp	r2, #101	; 0x65
 80087e4:	d001      	beq.n	80087ea <_strtod_l+0x18a>
 80087e6:	2a45      	cmp	r2, #69	; 0x45
 80087e8:	d118      	bne.n	800881c <_strtod_l+0x1bc>
 80087ea:	b91b      	cbnz	r3, 80087f4 <_strtod_l+0x194>
 80087ec:	9b06      	ldr	r3, [sp, #24]
 80087ee:	4303      	orrs	r3, r0
 80087f0:	d097      	beq.n	8008722 <_strtod_l+0xc2>
 80087f2:	2300      	movs	r3, #0
 80087f4:	f8dd a05c 	ldr.w	sl, [sp, #92]	; 0x5c
 80087f8:	f10a 0201 	add.w	r2, sl, #1
 80087fc:	9217      	str	r2, [sp, #92]	; 0x5c
 80087fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8008802:	2a2b      	cmp	r2, #43	; 0x2b
 8008804:	d077      	beq.n	80088f6 <_strtod_l+0x296>
 8008806:	2a2d      	cmp	r2, #45	; 0x2d
 8008808:	d07d      	beq.n	8008906 <_strtod_l+0x2a6>
 800880a:	f04f 0e00 	mov.w	lr, #0
 800880e:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8008812:	2d09      	cmp	r5, #9
 8008814:	f240 8084 	bls.w	8008920 <_strtod_l+0x2c0>
 8008818:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 800881c:	2500      	movs	r5, #0
 800881e:	e09f      	b.n	8008960 <_strtod_l+0x300>
 8008820:	2300      	movs	r3, #0
 8008822:	e7c3      	b.n	80087ac <_strtod_l+0x14c>
 8008824:	2e08      	cmp	r6, #8
 8008826:	bfd5      	itete	le
 8008828:	990a      	ldrle	r1, [sp, #40]	; 0x28
 800882a:	9904      	ldrgt	r1, [sp, #16]
 800882c:	fb02 3301 	mlale	r3, r2, r1, r3
 8008830:	fb02 3301 	mlagt	r3, r2, r1, r3
 8008834:	f100 0001 	add.w	r0, r0, #1
 8008838:	bfd4      	ite	le
 800883a:	930a      	strle	r3, [sp, #40]	; 0x28
 800883c:	9304      	strgt	r3, [sp, #16]
 800883e:	3601      	adds	r6, #1
 8008840:	9017      	str	r0, [sp, #92]	; 0x5c
 8008842:	e7bb      	b.n	80087bc <_strtod_l+0x15c>
 8008844:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008846:	195a      	adds	r2, r3, r5
 8008848:	9217      	str	r2, [sp, #92]	; 0x5c
 800884a:	5d5a      	ldrb	r2, [r3, r5]
 800884c:	b3ae      	cbz	r6, 80088ba <_strtod_l+0x25a>
 800884e:	4683      	mov	fp, r0
 8008850:	4633      	mov	r3, r6
 8008852:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8008856:	2909      	cmp	r1, #9
 8008858:	d912      	bls.n	8008880 <_strtod_l+0x220>
 800885a:	2101      	movs	r1, #1
 800885c:	e7c1      	b.n	80087e2 <_strtod_l+0x182>
 800885e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008860:	1c5a      	adds	r2, r3, #1
 8008862:	9217      	str	r2, [sp, #92]	; 0x5c
 8008864:	785a      	ldrb	r2, [r3, #1]
 8008866:	3001      	adds	r0, #1
 8008868:	2a30      	cmp	r2, #48	; 0x30
 800886a:	d0f8      	beq.n	800885e <_strtod_l+0x1fe>
 800886c:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8008870:	2b08      	cmp	r3, #8
 8008872:	f200 84b0 	bhi.w	80091d6 <_strtod_l+0xb76>
 8008876:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008878:	930c      	str	r3, [sp, #48]	; 0x30
 800887a:	4683      	mov	fp, r0
 800887c:	2000      	movs	r0, #0
 800887e:	4603      	mov	r3, r0
 8008880:	3a30      	subs	r2, #48	; 0x30
 8008882:	f100 0101 	add.w	r1, r0, #1
 8008886:	d012      	beq.n	80088ae <_strtod_l+0x24e>
 8008888:	448b      	add	fp, r1
 800888a:	eb00 0c03 	add.w	ip, r0, r3
 800888e:	4619      	mov	r1, r3
 8008890:	250a      	movs	r5, #10
 8008892:	4561      	cmp	r1, ip
 8008894:	d113      	bne.n	80088be <_strtod_l+0x25e>
 8008896:	1819      	adds	r1, r3, r0
 8008898:	2908      	cmp	r1, #8
 800889a:	f103 0301 	add.w	r3, r3, #1
 800889e:	4403      	add	r3, r0
 80088a0:	dc1d      	bgt.n	80088de <_strtod_l+0x27e>
 80088a2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80088a4:	210a      	movs	r1, #10
 80088a6:	fb01 2200 	mla	r2, r1, r0, r2
 80088aa:	920a      	str	r2, [sp, #40]	; 0x28
 80088ac:	2100      	movs	r1, #0
 80088ae:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80088b0:	1c50      	adds	r0, r2, #1
 80088b2:	9017      	str	r0, [sp, #92]	; 0x5c
 80088b4:	7852      	ldrb	r2, [r2, #1]
 80088b6:	4608      	mov	r0, r1
 80088b8:	e7cb      	b.n	8008852 <_strtod_l+0x1f2>
 80088ba:	4630      	mov	r0, r6
 80088bc:	e7d4      	b.n	8008868 <_strtod_l+0x208>
 80088be:	2908      	cmp	r1, #8
 80088c0:	dc04      	bgt.n	80088cc <_strtod_l+0x26c>
 80088c2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80088c4:	436f      	muls	r7, r5
 80088c6:	970a      	str	r7, [sp, #40]	; 0x28
 80088c8:	3101      	adds	r1, #1
 80088ca:	e7e2      	b.n	8008892 <_strtod_l+0x232>
 80088cc:	f101 0e01 	add.w	lr, r1, #1
 80088d0:	f1be 0f10 	cmp.w	lr, #16
 80088d4:	bfde      	ittt	le
 80088d6:	9f04      	ldrle	r7, [sp, #16]
 80088d8:	436f      	mulle	r7, r5
 80088da:	9704      	strle	r7, [sp, #16]
 80088dc:	e7f4      	b.n	80088c8 <_strtod_l+0x268>
 80088de:	2b10      	cmp	r3, #16
 80088e0:	bfdf      	itttt	le
 80088e2:	9804      	ldrle	r0, [sp, #16]
 80088e4:	210a      	movle	r1, #10
 80088e6:	fb01 2200 	mlale	r2, r1, r0, r2
 80088ea:	9204      	strle	r2, [sp, #16]
 80088ec:	e7de      	b.n	80088ac <_strtod_l+0x24c>
 80088ee:	f04f 0b00 	mov.w	fp, #0
 80088f2:	2101      	movs	r1, #1
 80088f4:	e77a      	b.n	80087ec <_strtod_l+0x18c>
 80088f6:	f04f 0e00 	mov.w	lr, #0
 80088fa:	f10a 0202 	add.w	r2, sl, #2
 80088fe:	9217      	str	r2, [sp, #92]	; 0x5c
 8008900:	f89a 2002 	ldrb.w	r2, [sl, #2]
 8008904:	e783      	b.n	800880e <_strtod_l+0x1ae>
 8008906:	f04f 0e01 	mov.w	lr, #1
 800890a:	e7f6      	b.n	80088fa <_strtod_l+0x29a>
 800890c:	0800d3c8 	.word	0x0800d3c8
 8008910:	0800d174 	.word	0x0800d174
 8008914:	7ff00000 	.word	0x7ff00000
 8008918:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800891a:	1c55      	adds	r5, r2, #1
 800891c:	9517      	str	r5, [sp, #92]	; 0x5c
 800891e:	7852      	ldrb	r2, [r2, #1]
 8008920:	2a30      	cmp	r2, #48	; 0x30
 8008922:	d0f9      	beq.n	8008918 <_strtod_l+0x2b8>
 8008924:	f1a2 0531 	sub.w	r5, r2, #49	; 0x31
 8008928:	2d08      	cmp	r5, #8
 800892a:	f63f af77 	bhi.w	800881c <_strtod_l+0x1bc>
 800892e:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8008932:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008934:	9208      	str	r2, [sp, #32]
 8008936:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008938:	1c55      	adds	r5, r2, #1
 800893a:	9517      	str	r5, [sp, #92]	; 0x5c
 800893c:	7852      	ldrb	r2, [r2, #1]
 800893e:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
 8008942:	2f09      	cmp	r7, #9
 8008944:	d937      	bls.n	80089b6 <_strtod_l+0x356>
 8008946:	9f08      	ldr	r7, [sp, #32]
 8008948:	1bed      	subs	r5, r5, r7
 800894a:	2d08      	cmp	r5, #8
 800894c:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8008950:	dc02      	bgt.n	8008958 <_strtod_l+0x2f8>
 8008952:	4565      	cmp	r5, ip
 8008954:	bfa8      	it	ge
 8008956:	4665      	movge	r5, ip
 8008958:	f1be 0f00 	cmp.w	lr, #0
 800895c:	d000      	beq.n	8008960 <_strtod_l+0x300>
 800895e:	426d      	negs	r5, r5
 8008960:	2b00      	cmp	r3, #0
 8008962:	d14f      	bne.n	8008a04 <_strtod_l+0x3a4>
 8008964:	9b06      	ldr	r3, [sp, #24]
 8008966:	4303      	orrs	r3, r0
 8008968:	f47f aebe 	bne.w	80086e8 <_strtod_l+0x88>
 800896c:	2900      	cmp	r1, #0
 800896e:	f47f aed8 	bne.w	8008722 <_strtod_l+0xc2>
 8008972:	2a69      	cmp	r2, #105	; 0x69
 8008974:	d027      	beq.n	80089c6 <_strtod_l+0x366>
 8008976:	dc24      	bgt.n	80089c2 <_strtod_l+0x362>
 8008978:	2a49      	cmp	r2, #73	; 0x49
 800897a:	d024      	beq.n	80089c6 <_strtod_l+0x366>
 800897c:	2a4e      	cmp	r2, #78	; 0x4e
 800897e:	f47f aed0 	bne.w	8008722 <_strtod_l+0xc2>
 8008982:	499b      	ldr	r1, [pc, #620]	; (8008bf0 <_strtod_l+0x590>)
 8008984:	a817      	add	r0, sp, #92	; 0x5c
 8008986:	f001 fdbd 	bl	800a504 <__match>
 800898a:	2800      	cmp	r0, #0
 800898c:	f43f aec9 	beq.w	8008722 <_strtod_l+0xc2>
 8008990:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008992:	781b      	ldrb	r3, [r3, #0]
 8008994:	2b28      	cmp	r3, #40	; 0x28
 8008996:	d12d      	bne.n	80089f4 <_strtod_l+0x394>
 8008998:	4996      	ldr	r1, [pc, #600]	; (8008bf4 <_strtod_l+0x594>)
 800899a:	aa1a      	add	r2, sp, #104	; 0x68
 800899c:	a817      	add	r0, sp, #92	; 0x5c
 800899e:	f001 fdc5 	bl	800a52c <__hexnan>
 80089a2:	2805      	cmp	r0, #5
 80089a4:	d126      	bne.n	80089f4 <_strtod_l+0x394>
 80089a6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80089a8:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80089ac:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80089b0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80089b4:	e698      	b.n	80086e8 <_strtod_l+0x88>
 80089b6:	250a      	movs	r5, #10
 80089b8:	fb05 250c 	mla	r5, r5, ip, r2
 80089bc:	f1a5 0c30 	sub.w	ip, r5, #48	; 0x30
 80089c0:	e7b9      	b.n	8008936 <_strtod_l+0x2d6>
 80089c2:	2a6e      	cmp	r2, #110	; 0x6e
 80089c4:	e7db      	b.n	800897e <_strtod_l+0x31e>
 80089c6:	498c      	ldr	r1, [pc, #560]	; (8008bf8 <_strtod_l+0x598>)
 80089c8:	a817      	add	r0, sp, #92	; 0x5c
 80089ca:	f001 fd9b 	bl	800a504 <__match>
 80089ce:	2800      	cmp	r0, #0
 80089d0:	f43f aea7 	beq.w	8008722 <_strtod_l+0xc2>
 80089d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80089d6:	4989      	ldr	r1, [pc, #548]	; (8008bfc <_strtod_l+0x59c>)
 80089d8:	3b01      	subs	r3, #1
 80089da:	a817      	add	r0, sp, #92	; 0x5c
 80089dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80089de:	f001 fd91 	bl	800a504 <__match>
 80089e2:	b910      	cbnz	r0, 80089ea <_strtod_l+0x38a>
 80089e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80089e6:	3301      	adds	r3, #1
 80089e8:	9317      	str	r3, [sp, #92]	; 0x5c
 80089ea:	f8df 9224 	ldr.w	r9, [pc, #548]	; 8008c10 <_strtod_l+0x5b0>
 80089ee:	f04f 0800 	mov.w	r8, #0
 80089f2:	e679      	b.n	80086e8 <_strtod_l+0x88>
 80089f4:	4882      	ldr	r0, [pc, #520]	; (8008c00 <_strtod_l+0x5a0>)
 80089f6:	f003 f877 	bl	800bae8 <nan>
 80089fa:	ed8d 0b04 	vstr	d0, [sp, #16]
 80089fe:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008a02:	e671      	b.n	80086e8 <_strtod_l+0x88>
 8008a04:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8008a08:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8008a0c:	eba5 020b 	sub.w	r2, r5, fp
 8008a10:	2e00      	cmp	r6, #0
 8008a12:	bf08      	it	eq
 8008a14:	461e      	moveq	r6, r3
 8008a16:	2b10      	cmp	r3, #16
 8008a18:	ed8d 7b08 	vstr	d7, [sp, #32]
 8008a1c:	9206      	str	r2, [sp, #24]
 8008a1e:	461a      	mov	r2, r3
 8008a20:	bfa8      	it	ge
 8008a22:	2210      	movge	r2, #16
 8008a24:	2b09      	cmp	r3, #9
 8008a26:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
 8008a2a:	dd0e      	ble.n	8008a4a <_strtod_l+0x3ea>
 8008a2c:	4975      	ldr	r1, [pc, #468]	; (8008c04 <_strtod_l+0x5a4>)
 8008a2e:	eddd 7a04 	vldr	s15, [sp, #16]
 8008a32:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8008a36:	ed11 6b12 	vldr	d6, [r1, #-72]	; 0xffffffb8
 8008a3a:	ed9d 5b08 	vldr	d5, [sp, #32]
 8008a3e:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8008a42:	eea5 7b06 	vfma.f64	d7, d5, d6
 8008a46:	ec59 8b17 	vmov	r8, r9, d7
 8008a4a:	2b0f      	cmp	r3, #15
 8008a4c:	dc37      	bgt.n	8008abe <_strtod_l+0x45e>
 8008a4e:	9906      	ldr	r1, [sp, #24]
 8008a50:	2900      	cmp	r1, #0
 8008a52:	f43f ae49 	beq.w	80086e8 <_strtod_l+0x88>
 8008a56:	dd23      	ble.n	8008aa0 <_strtod_l+0x440>
 8008a58:	2916      	cmp	r1, #22
 8008a5a:	dc0b      	bgt.n	8008a74 <_strtod_l+0x414>
 8008a5c:	4b69      	ldr	r3, [pc, #420]	; (8008c04 <_strtod_l+0x5a4>)
 8008a5e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8008a62:	ed93 7b00 	vldr	d7, [r3]
 8008a66:	ec49 8b16 	vmov	d6, r8, r9
 8008a6a:	ee27 7b06 	vmul.f64	d7, d7, d6
 8008a6e:	ec59 8b17 	vmov	r8, r9, d7
 8008a72:	e639      	b.n	80086e8 <_strtod_l+0x88>
 8008a74:	9806      	ldr	r0, [sp, #24]
 8008a76:	f1c3 0125 	rsb	r1, r3, #37	; 0x25
 8008a7a:	4281      	cmp	r1, r0
 8008a7c:	db1f      	blt.n	8008abe <_strtod_l+0x45e>
 8008a7e:	4a61      	ldr	r2, [pc, #388]	; (8008c04 <_strtod_l+0x5a4>)
 8008a80:	f1c3 030f 	rsb	r3, r3, #15
 8008a84:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008a88:	ed91 7b00 	vldr	d7, [r1]
 8008a8c:	ec49 8b16 	vmov	d6, r8, r9
 8008a90:	1ac3      	subs	r3, r0, r3
 8008a92:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8008a96:	ee27 7b06 	vmul.f64	d7, d7, d6
 8008a9a:	ed92 6b00 	vldr	d6, [r2]
 8008a9e:	e7e4      	b.n	8008a6a <_strtod_l+0x40a>
 8008aa0:	9906      	ldr	r1, [sp, #24]
 8008aa2:	3116      	adds	r1, #22
 8008aa4:	db0b      	blt.n	8008abe <_strtod_l+0x45e>
 8008aa6:	4b57      	ldr	r3, [pc, #348]	; (8008c04 <_strtod_l+0x5a4>)
 8008aa8:	ebab 0505 	sub.w	r5, fp, r5
 8008aac:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8008ab0:	ed95 7b00 	vldr	d7, [r5]
 8008ab4:	ec49 8b16 	vmov	d6, r8, r9
 8008ab8:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8008abc:	e7d7      	b.n	8008a6e <_strtod_l+0x40e>
 8008abe:	9906      	ldr	r1, [sp, #24]
 8008ac0:	1a9a      	subs	r2, r3, r2
 8008ac2:	440a      	add	r2, r1
 8008ac4:	2a00      	cmp	r2, #0
 8008ac6:	dd74      	ble.n	8008bb2 <_strtod_l+0x552>
 8008ac8:	f012 000f 	ands.w	r0, r2, #15
 8008acc:	d00a      	beq.n	8008ae4 <_strtod_l+0x484>
 8008ace:	494d      	ldr	r1, [pc, #308]	; (8008c04 <_strtod_l+0x5a4>)
 8008ad0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8008ad4:	ed91 7b00 	vldr	d7, [r1]
 8008ad8:	ec49 8b16 	vmov	d6, r8, r9
 8008adc:	ee27 7b06 	vmul.f64	d7, d7, d6
 8008ae0:	ec59 8b17 	vmov	r8, r9, d7
 8008ae4:	f032 020f 	bics.w	r2, r2, #15
 8008ae8:	d04f      	beq.n	8008b8a <_strtod_l+0x52a>
 8008aea:	f5b2 7f9a 	cmp.w	r2, #308	; 0x134
 8008aee:	dd22      	ble.n	8008b36 <_strtod_l+0x4d6>
 8008af0:	2500      	movs	r5, #0
 8008af2:	462e      	mov	r6, r5
 8008af4:	950a      	str	r5, [sp, #40]	; 0x28
 8008af6:	462f      	mov	r7, r5
 8008af8:	2322      	movs	r3, #34	; 0x22
 8008afa:	f8df 9114 	ldr.w	r9, [pc, #276]	; 8008c10 <_strtod_l+0x5b0>
 8008afe:	6023      	str	r3, [r4, #0]
 8008b00:	f04f 0800 	mov.w	r8, #0
 8008b04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b06:	2b00      	cmp	r3, #0
 8008b08:	f43f adee 	beq.w	80086e8 <_strtod_l+0x88>
 8008b0c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008b0e:	4620      	mov	r0, r4
 8008b10:	f001 fe26 	bl	800a760 <_Bfree>
 8008b14:	4639      	mov	r1, r7
 8008b16:	4620      	mov	r0, r4
 8008b18:	f001 fe22 	bl	800a760 <_Bfree>
 8008b1c:	4631      	mov	r1, r6
 8008b1e:	4620      	mov	r0, r4
 8008b20:	f001 fe1e 	bl	800a760 <_Bfree>
 8008b24:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008b26:	4620      	mov	r0, r4
 8008b28:	f001 fe1a 	bl	800a760 <_Bfree>
 8008b2c:	4629      	mov	r1, r5
 8008b2e:	4620      	mov	r0, r4
 8008b30:	f001 fe16 	bl	800a760 <_Bfree>
 8008b34:	e5d8      	b.n	80086e8 <_strtod_l+0x88>
 8008b36:	e9cd 8904 	strd	r8, r9, [sp, #16]
 8008b3a:	2000      	movs	r0, #0
 8008b3c:	4f32      	ldr	r7, [pc, #200]	; (8008c08 <_strtod_l+0x5a8>)
 8008b3e:	1112      	asrs	r2, r2, #4
 8008b40:	4601      	mov	r1, r0
 8008b42:	2a01      	cmp	r2, #1
 8008b44:	dc24      	bgt.n	8008b90 <_strtod_l+0x530>
 8008b46:	b108      	cbz	r0, 8008b4c <_strtod_l+0x4ec>
 8008b48:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008b4c:	4a2e      	ldr	r2, [pc, #184]	; (8008c08 <_strtod_l+0x5a8>)
 8008b4e:	482f      	ldr	r0, [pc, #188]	; (8008c0c <_strtod_l+0x5ac>)
 8008b50:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8008b54:	ed91 7b00 	vldr	d7, [r1]
 8008b58:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8008b5c:	ec49 8b16 	vmov	d6, r8, r9
 8008b60:	ee27 7b06 	vmul.f64	d7, d7, d6
 8008b64:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008b68:	9905      	ldr	r1, [sp, #20]
 8008b6a:	4a29      	ldr	r2, [pc, #164]	; (8008c10 <_strtod_l+0x5b0>)
 8008b6c:	400a      	ands	r2, r1
 8008b6e:	4282      	cmp	r2, r0
 8008b70:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008b74:	d8bc      	bhi.n	8008af0 <_strtod_l+0x490>
 8008b76:	f5a0 1080 	sub.w	r0, r0, #1048576	; 0x100000
 8008b7a:	4282      	cmp	r2, r0
 8008b7c:	bf86      	itte	hi
 8008b7e:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8008c14 <_strtod_l+0x5b4>
 8008b82:	f04f 38ff 	movhi.w	r8, #4294967295
 8008b86:	f101 7954 	addls.w	r9, r1, #55574528	; 0x3500000
 8008b8a:	2200      	movs	r2, #0
 8008b8c:	9204      	str	r2, [sp, #16]
 8008b8e:	e07f      	b.n	8008c90 <_strtod_l+0x630>
 8008b90:	f012 0f01 	tst.w	r2, #1
 8008b94:	d00a      	beq.n	8008bac <_strtod_l+0x54c>
 8008b96:	eb07 00c1 	add.w	r0, r7, r1, lsl #3
 8008b9a:	ed90 7b00 	vldr	d7, [r0]
 8008b9e:	ed9d 6b04 	vldr	d6, [sp, #16]
 8008ba2:	ee26 7b07 	vmul.f64	d7, d6, d7
 8008ba6:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008baa:	2001      	movs	r0, #1
 8008bac:	3101      	adds	r1, #1
 8008bae:	1052      	asrs	r2, r2, #1
 8008bb0:	e7c7      	b.n	8008b42 <_strtod_l+0x4e2>
 8008bb2:	d0ea      	beq.n	8008b8a <_strtod_l+0x52a>
 8008bb4:	4252      	negs	r2, r2
 8008bb6:	f012 000f 	ands.w	r0, r2, #15
 8008bba:	d00a      	beq.n	8008bd2 <_strtod_l+0x572>
 8008bbc:	4911      	ldr	r1, [pc, #68]	; (8008c04 <_strtod_l+0x5a4>)
 8008bbe:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8008bc2:	ed91 7b00 	vldr	d7, [r1]
 8008bc6:	ec49 8b16 	vmov	d6, r8, r9
 8008bca:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8008bce:	ec59 8b17 	vmov	r8, r9, d7
 8008bd2:	1112      	asrs	r2, r2, #4
 8008bd4:	d0d9      	beq.n	8008b8a <_strtod_l+0x52a>
 8008bd6:	2a1f      	cmp	r2, #31
 8008bd8:	dd1e      	ble.n	8008c18 <_strtod_l+0x5b8>
 8008bda:	2500      	movs	r5, #0
 8008bdc:	462e      	mov	r6, r5
 8008bde:	950a      	str	r5, [sp, #40]	; 0x28
 8008be0:	462f      	mov	r7, r5
 8008be2:	2322      	movs	r3, #34	; 0x22
 8008be4:	f04f 0800 	mov.w	r8, #0
 8008be8:	f04f 0900 	mov.w	r9, #0
 8008bec:	6023      	str	r3, [r4, #0]
 8008bee:	e789      	b.n	8008b04 <_strtod_l+0x4a4>
 8008bf0:	0800d149 	.word	0x0800d149
 8008bf4:	0800d188 	.word	0x0800d188
 8008bf8:	0800d141 	.word	0x0800d141
 8008bfc:	0800d2cc 	.word	0x0800d2cc
 8008c00:	0800d5a3 	.word	0x0800d5a3
 8008c04:	0800d468 	.word	0x0800d468
 8008c08:	0800d440 	.word	0x0800d440
 8008c0c:	7ca00000 	.word	0x7ca00000
 8008c10:	7ff00000 	.word	0x7ff00000
 8008c14:	7fefffff 	.word	0x7fefffff
 8008c18:	f012 0110 	ands.w	r1, r2, #16
 8008c1c:	bf18      	it	ne
 8008c1e:	216a      	movne	r1, #106	; 0x6a
 8008c20:	e9cd 8908 	strd	r8, r9, [sp, #32]
 8008c24:	9104      	str	r1, [sp, #16]
 8008c26:	49c0      	ldr	r1, [pc, #768]	; (8008f28 <_strtod_l+0x8c8>)
 8008c28:	2000      	movs	r0, #0
 8008c2a:	07d7      	lsls	r7, r2, #31
 8008c2c:	d508      	bpl.n	8008c40 <_strtod_l+0x5e0>
 8008c2e:	ed9d 6b08 	vldr	d6, [sp, #32]
 8008c32:	ed91 7b00 	vldr	d7, [r1]
 8008c36:	ee26 7b07 	vmul.f64	d7, d6, d7
 8008c3a:	ed8d 7b08 	vstr	d7, [sp, #32]
 8008c3e:	2001      	movs	r0, #1
 8008c40:	1052      	asrs	r2, r2, #1
 8008c42:	f101 0108 	add.w	r1, r1, #8
 8008c46:	d1f0      	bne.n	8008c2a <_strtod_l+0x5ca>
 8008c48:	b108      	cbz	r0, 8008c4e <_strtod_l+0x5ee>
 8008c4a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
 8008c4e:	9a04      	ldr	r2, [sp, #16]
 8008c50:	b1ba      	cbz	r2, 8008c82 <_strtod_l+0x622>
 8008c52:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8008c56:	f1c2 026b 	rsb	r2, r2, #107	; 0x6b
 8008c5a:	2a00      	cmp	r2, #0
 8008c5c:	4649      	mov	r1, r9
 8008c5e:	dd10      	ble.n	8008c82 <_strtod_l+0x622>
 8008c60:	2a1f      	cmp	r2, #31
 8008c62:	f340 8132 	ble.w	8008eca <_strtod_l+0x86a>
 8008c66:	2a34      	cmp	r2, #52	; 0x34
 8008c68:	bfde      	ittt	le
 8008c6a:	3a20      	suble	r2, #32
 8008c6c:	f04f 30ff 	movle.w	r0, #4294967295
 8008c70:	fa00 f202 	lslle.w	r2, r0, r2
 8008c74:	f04f 0800 	mov.w	r8, #0
 8008c78:	bfcc      	ite	gt
 8008c7a:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8008c7e:	ea02 0901 	andle.w	r9, r2, r1
 8008c82:	ec49 8b17 	vmov	d7, r8, r9
 8008c86:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8008c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c8e:	d0a4      	beq.n	8008bda <_strtod_l+0x57a>
 8008c90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008c92:	9200      	str	r2, [sp, #0]
 8008c94:	990c      	ldr	r1, [sp, #48]	; 0x30
 8008c96:	4632      	mov	r2, r6
 8008c98:	4620      	mov	r0, r4
 8008c9a:	f001 fdcd 	bl	800a838 <__s2b>
 8008c9e:	900a      	str	r0, [sp, #40]	; 0x28
 8008ca0:	2800      	cmp	r0, #0
 8008ca2:	f43f af25 	beq.w	8008af0 <_strtod_l+0x490>
 8008ca6:	9b06      	ldr	r3, [sp, #24]
 8008ca8:	ebab 0505 	sub.w	r5, fp, r5
 8008cac:	2b00      	cmp	r3, #0
 8008cae:	bfb4      	ite	lt
 8008cb0:	462b      	movlt	r3, r5
 8008cb2:	2300      	movge	r3, #0
 8008cb4:	930c      	str	r3, [sp, #48]	; 0x30
 8008cb6:	9b06      	ldr	r3, [sp, #24]
 8008cb8:	ed9f 9b95 	vldr	d9, [pc, #596]	; 8008f10 <_strtod_l+0x8b0>
 8008cbc:	ed9f ab96 	vldr	d10, [pc, #600]	; 8008f18 <_strtod_l+0x8b8>
 8008cc0:	ed9f bb97 	vldr	d11, [pc, #604]	; 8008f20 <_strtod_l+0x8c0>
 8008cc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8008cc8:	2500      	movs	r5, #0
 8008cca:	9312      	str	r3, [sp, #72]	; 0x48
 8008ccc:	462e      	mov	r6, r5
 8008cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008cd0:	4620      	mov	r0, r4
 8008cd2:	6859      	ldr	r1, [r3, #4]
 8008cd4:	f001 fd04 	bl	800a6e0 <_Balloc>
 8008cd8:	4607      	mov	r7, r0
 8008cda:	2800      	cmp	r0, #0
 8008cdc:	f43f af0c 	beq.w	8008af8 <_strtod_l+0x498>
 8008ce0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ce2:	691a      	ldr	r2, [r3, #16]
 8008ce4:	3202      	adds	r2, #2
 8008ce6:	f103 010c 	add.w	r1, r3, #12
 8008cea:	0092      	lsls	r2, r2, #2
 8008cec:	300c      	adds	r0, #12
 8008cee:	f001 fce9 	bl	800a6c4 <memcpy>
 8008cf2:	ec49 8b10 	vmov	d0, r8, r9
 8008cf6:	aa1a      	add	r2, sp, #104	; 0x68
 8008cf8:	a919      	add	r1, sp, #100	; 0x64
 8008cfa:	4620      	mov	r0, r4
 8008cfc:	e9cd 8908 	strd	r8, r9, [sp, #32]
 8008d00:	f002 f8d6 	bl	800aeb0 <__d2b>
 8008d04:	9018      	str	r0, [sp, #96]	; 0x60
 8008d06:	2800      	cmp	r0, #0
 8008d08:	f43f aef6 	beq.w	8008af8 <_strtod_l+0x498>
 8008d0c:	2101      	movs	r1, #1
 8008d0e:	4620      	mov	r0, r4
 8008d10:	f001 fe2c 	bl	800a96c <__i2b>
 8008d14:	4606      	mov	r6, r0
 8008d16:	2800      	cmp	r0, #0
 8008d18:	f43f aeee 	beq.w	8008af8 <_strtod_l+0x498>
 8008d1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008d1e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	bfab      	itete	ge
 8008d24:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8008d26:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8008d28:	f8dd a048 	ldrge.w	sl, [sp, #72]	; 0x48
 8008d2c:	f8dd b030 	ldrlt.w	fp, [sp, #48]	; 0x30
 8008d30:	bfac      	ite	ge
 8008d32:	eb03 0b02 	addge.w	fp, r3, r2
 8008d36:	eba2 0a03 	sublt.w	sl, r2, r3
 8008d3a:	9a04      	ldr	r2, [sp, #16]
 8008d3c:	1a9b      	subs	r3, r3, r2
 8008d3e:	440b      	add	r3, r1
 8008d40:	4a7a      	ldr	r2, [pc, #488]	; (8008f2c <_strtod_l+0x8cc>)
 8008d42:	3b01      	subs	r3, #1
 8008d44:	4293      	cmp	r3, r2
 8008d46:	f1c1 0136 	rsb	r1, r1, #54	; 0x36
 8008d4a:	f280 80d1 	bge.w	8008ef0 <_strtod_l+0x890>
 8008d4e:	1ad2      	subs	r2, r2, r3
 8008d50:	2a1f      	cmp	r2, #31
 8008d52:	eba1 0102 	sub.w	r1, r1, r2
 8008d56:	f04f 0001 	mov.w	r0, #1
 8008d5a:	f300 80bd 	bgt.w	8008ed8 <_strtod_l+0x878>
 8008d5e:	fa00 f302 	lsl.w	r3, r0, r2
 8008d62:	930e      	str	r3, [sp, #56]	; 0x38
 8008d64:	2300      	movs	r3, #0
 8008d66:	930d      	str	r3, [sp, #52]	; 0x34
 8008d68:	eb0b 0301 	add.w	r3, fp, r1
 8008d6c:	9a04      	ldr	r2, [sp, #16]
 8008d6e:	459b      	cmp	fp, r3
 8008d70:	448a      	add	sl, r1
 8008d72:	4492      	add	sl, r2
 8008d74:	465a      	mov	r2, fp
 8008d76:	bfa8      	it	ge
 8008d78:	461a      	movge	r2, r3
 8008d7a:	4552      	cmp	r2, sl
 8008d7c:	bfa8      	it	ge
 8008d7e:	4652      	movge	r2, sl
 8008d80:	2a00      	cmp	r2, #0
 8008d82:	bfc2      	ittt	gt
 8008d84:	1a9b      	subgt	r3, r3, r2
 8008d86:	ebaa 0a02 	subgt.w	sl, sl, r2
 8008d8a:	ebab 0b02 	subgt.w	fp, fp, r2
 8008d8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008d90:	2a00      	cmp	r2, #0
 8008d92:	dd18      	ble.n	8008dc6 <_strtod_l+0x766>
 8008d94:	4631      	mov	r1, r6
 8008d96:	4620      	mov	r0, r4
 8008d98:	9315      	str	r3, [sp, #84]	; 0x54
 8008d9a:	f001 fea3 	bl	800aae4 <__pow5mult>
 8008d9e:	4606      	mov	r6, r0
 8008da0:	2800      	cmp	r0, #0
 8008da2:	f43f aea9 	beq.w	8008af8 <_strtod_l+0x498>
 8008da6:	4601      	mov	r1, r0
 8008da8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008daa:	4620      	mov	r0, r4
 8008dac:	f001 fdf4 	bl	800a998 <__multiply>
 8008db0:	9014      	str	r0, [sp, #80]	; 0x50
 8008db2:	2800      	cmp	r0, #0
 8008db4:	f43f aea0 	beq.w	8008af8 <_strtod_l+0x498>
 8008db8:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008dba:	4620      	mov	r0, r4
 8008dbc:	f001 fcd0 	bl	800a760 <_Bfree>
 8008dc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008dc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008dc4:	9218      	str	r2, [sp, #96]	; 0x60
 8008dc6:	2b00      	cmp	r3, #0
 8008dc8:	f300 8097 	bgt.w	8008efa <_strtod_l+0x89a>
 8008dcc:	9b06      	ldr	r3, [sp, #24]
 8008dce:	2b00      	cmp	r3, #0
 8008dd0:	dd08      	ble.n	8008de4 <_strtod_l+0x784>
 8008dd2:	4639      	mov	r1, r7
 8008dd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008dd6:	4620      	mov	r0, r4
 8008dd8:	f001 fe84 	bl	800aae4 <__pow5mult>
 8008ddc:	4607      	mov	r7, r0
 8008dde:	2800      	cmp	r0, #0
 8008de0:	f43f ae8a 	beq.w	8008af8 <_strtod_l+0x498>
 8008de4:	f1ba 0f00 	cmp.w	sl, #0
 8008de8:	dd08      	ble.n	8008dfc <_strtod_l+0x79c>
 8008dea:	4639      	mov	r1, r7
 8008dec:	4652      	mov	r2, sl
 8008dee:	4620      	mov	r0, r4
 8008df0:	f001 fed2 	bl	800ab98 <__lshift>
 8008df4:	4607      	mov	r7, r0
 8008df6:	2800      	cmp	r0, #0
 8008df8:	f43f ae7e 	beq.w	8008af8 <_strtod_l+0x498>
 8008dfc:	f1bb 0f00 	cmp.w	fp, #0
 8008e00:	dd08      	ble.n	8008e14 <_strtod_l+0x7b4>
 8008e02:	4631      	mov	r1, r6
 8008e04:	465a      	mov	r2, fp
 8008e06:	4620      	mov	r0, r4
 8008e08:	f001 fec6 	bl	800ab98 <__lshift>
 8008e0c:	4606      	mov	r6, r0
 8008e0e:	2800      	cmp	r0, #0
 8008e10:	f43f ae72 	beq.w	8008af8 <_strtod_l+0x498>
 8008e14:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008e16:	463a      	mov	r2, r7
 8008e18:	4620      	mov	r0, r4
 8008e1a:	f001 ff45 	bl	800aca8 <__mdiff>
 8008e1e:	4605      	mov	r5, r0
 8008e20:	2800      	cmp	r0, #0
 8008e22:	f43f ae69 	beq.w	8008af8 <_strtod_l+0x498>
 8008e26:	2300      	movs	r3, #0
 8008e28:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 8008e2c:	60c3      	str	r3, [r0, #12]
 8008e2e:	4631      	mov	r1, r6
 8008e30:	f001 ff1e 	bl	800ac70 <__mcmp>
 8008e34:	2800      	cmp	r0, #0
 8008e36:	da7f      	bge.n	8008f38 <_strtod_l+0x8d8>
 8008e38:	ea5a 0308 	orrs.w	r3, sl, r8
 8008e3c:	f040 80a5 	bne.w	8008f8a <_strtod_l+0x92a>
 8008e40:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008e44:	2b00      	cmp	r3, #0
 8008e46:	f040 80a0 	bne.w	8008f8a <_strtod_l+0x92a>
 8008e4a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8008e4e:	0d1b      	lsrs	r3, r3, #20
 8008e50:	051b      	lsls	r3, r3, #20
 8008e52:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8008e56:	f240 8098 	bls.w	8008f8a <_strtod_l+0x92a>
 8008e5a:	696b      	ldr	r3, [r5, #20]
 8008e5c:	b91b      	cbnz	r3, 8008e66 <_strtod_l+0x806>
 8008e5e:	692b      	ldr	r3, [r5, #16]
 8008e60:	2b01      	cmp	r3, #1
 8008e62:	f340 8092 	ble.w	8008f8a <_strtod_l+0x92a>
 8008e66:	4629      	mov	r1, r5
 8008e68:	2201      	movs	r2, #1
 8008e6a:	4620      	mov	r0, r4
 8008e6c:	f001 fe94 	bl	800ab98 <__lshift>
 8008e70:	4631      	mov	r1, r6
 8008e72:	4605      	mov	r5, r0
 8008e74:	f001 fefc 	bl	800ac70 <__mcmp>
 8008e78:	2800      	cmp	r0, #0
 8008e7a:	f340 8086 	ble.w	8008f8a <_strtod_l+0x92a>
 8008e7e:	9904      	ldr	r1, [sp, #16]
 8008e80:	4a2b      	ldr	r2, [pc, #172]	; (8008f30 <_strtod_l+0x8d0>)
 8008e82:	464b      	mov	r3, r9
 8008e84:	2900      	cmp	r1, #0
 8008e86:	f000 80a1 	beq.w	8008fcc <_strtod_l+0x96c>
 8008e8a:	ea02 0109 	and.w	r1, r2, r9
 8008e8e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8008e92:	f300 809b 	bgt.w	8008fcc <_strtod_l+0x96c>
 8008e96:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8008e9a:	f77f aea2 	ble.w	8008be2 <_strtod_l+0x582>
 8008e9e:	4a25      	ldr	r2, [pc, #148]	; (8008f34 <_strtod_l+0x8d4>)
 8008ea0:	2300      	movs	r3, #0
 8008ea2:	e9cd 3210 	strd	r3, r2, [sp, #64]	; 0x40
 8008ea6:	ed9d 6b10 	vldr	d6, [sp, #64]	; 0x40
 8008eaa:	ec49 8b17 	vmov	d7, r8, r9
 8008eae:	ee27 7b06 	vmul.f64	d7, d7, d6
 8008eb2:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008eb6:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8008eba:	4313      	orrs	r3, r2
 8008ebc:	bf08      	it	eq
 8008ebe:	2322      	moveq	r3, #34	; 0x22
 8008ec0:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8008ec4:	bf08      	it	eq
 8008ec6:	6023      	streq	r3, [r4, #0]
 8008ec8:	e620      	b.n	8008b0c <_strtod_l+0x4ac>
 8008eca:	f04f 31ff 	mov.w	r1, #4294967295
 8008ece:	fa01 f202 	lsl.w	r2, r1, r2
 8008ed2:	ea02 0808 	and.w	r8, r2, r8
 8008ed6:	e6d4      	b.n	8008c82 <_strtod_l+0x622>
 8008ed8:	f1c3 437f 	rsb	r3, r3, #4278190080	; 0xff000000
 8008edc:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
 8008ee0:	f503 437b 	add.w	r3, r3, #64256	; 0xfb00
 8008ee4:	33e2      	adds	r3, #226	; 0xe2
 8008ee6:	fa00 f303 	lsl.w	r3, r0, r3
 8008eea:	e9cd 300d 	strd	r3, r0, [sp, #52]	; 0x34
 8008eee:	e73b      	b.n	8008d68 <_strtod_l+0x708>
 8008ef0:	2000      	movs	r0, #0
 8008ef2:	2301      	movs	r3, #1
 8008ef4:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
 8008ef8:	e736      	b.n	8008d68 <_strtod_l+0x708>
 8008efa:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008efc:	461a      	mov	r2, r3
 8008efe:	4620      	mov	r0, r4
 8008f00:	f001 fe4a 	bl	800ab98 <__lshift>
 8008f04:	9018      	str	r0, [sp, #96]	; 0x60
 8008f06:	2800      	cmp	r0, #0
 8008f08:	f47f af60 	bne.w	8008dcc <_strtod_l+0x76c>
 8008f0c:	e5f4      	b.n	8008af8 <_strtod_l+0x498>
 8008f0e:	bf00      	nop
 8008f10:	94a03595 	.word	0x94a03595
 8008f14:	3fcfffff 	.word	0x3fcfffff
 8008f18:	94a03595 	.word	0x94a03595
 8008f1c:	3fdfffff 	.word	0x3fdfffff
 8008f20:	35afe535 	.word	0x35afe535
 8008f24:	3fe00000 	.word	0x3fe00000
 8008f28:	0800d1a0 	.word	0x0800d1a0
 8008f2c:	fffffc02 	.word	0xfffffc02
 8008f30:	7ff00000 	.word	0x7ff00000
 8008f34:	39500000 	.word	0x39500000
 8008f38:	46cb      	mov	fp, r9
 8008f3a:	d165      	bne.n	8009008 <_strtod_l+0x9a8>
 8008f3c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008f40:	f1ba 0f00 	cmp.w	sl, #0
 8008f44:	d02a      	beq.n	8008f9c <_strtod_l+0x93c>
 8008f46:	4aaa      	ldr	r2, [pc, #680]	; (80091f0 <_strtod_l+0xb90>)
 8008f48:	4293      	cmp	r3, r2
 8008f4a:	d12b      	bne.n	8008fa4 <_strtod_l+0x944>
 8008f4c:	9b04      	ldr	r3, [sp, #16]
 8008f4e:	4641      	mov	r1, r8
 8008f50:	b1fb      	cbz	r3, 8008f92 <_strtod_l+0x932>
 8008f52:	4aa8      	ldr	r2, [pc, #672]	; (80091f4 <_strtod_l+0xb94>)
 8008f54:	ea09 0202 	and.w	r2, r9, r2
 8008f58:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8008f5c:	f04f 30ff 	mov.w	r0, #4294967295
 8008f60:	d81a      	bhi.n	8008f98 <_strtod_l+0x938>
 8008f62:	0d12      	lsrs	r2, r2, #20
 8008f64:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8008f68:	fa00 f303 	lsl.w	r3, r0, r3
 8008f6c:	4299      	cmp	r1, r3
 8008f6e:	d119      	bne.n	8008fa4 <_strtod_l+0x944>
 8008f70:	4ba1      	ldr	r3, [pc, #644]	; (80091f8 <_strtod_l+0xb98>)
 8008f72:	459b      	cmp	fp, r3
 8008f74:	d102      	bne.n	8008f7c <_strtod_l+0x91c>
 8008f76:	3101      	adds	r1, #1
 8008f78:	f43f adbe 	beq.w	8008af8 <_strtod_l+0x498>
 8008f7c:	4b9d      	ldr	r3, [pc, #628]	; (80091f4 <_strtod_l+0xb94>)
 8008f7e:	ea0b 0303 	and.w	r3, fp, r3
 8008f82:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8008f86:	f04f 0800 	mov.w	r8, #0
 8008f8a:	9b04      	ldr	r3, [sp, #16]
 8008f8c:	2b00      	cmp	r3, #0
 8008f8e:	d186      	bne.n	8008e9e <_strtod_l+0x83e>
 8008f90:	e5bc      	b.n	8008b0c <_strtod_l+0x4ac>
 8008f92:	f04f 33ff 	mov.w	r3, #4294967295
 8008f96:	e7e9      	b.n	8008f6c <_strtod_l+0x90c>
 8008f98:	4603      	mov	r3, r0
 8008f9a:	e7e7      	b.n	8008f6c <_strtod_l+0x90c>
 8008f9c:	ea53 0308 	orrs.w	r3, r3, r8
 8008fa0:	f43f af6d 	beq.w	8008e7e <_strtod_l+0x81e>
 8008fa4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008fa6:	b1db      	cbz	r3, 8008fe0 <_strtod_l+0x980>
 8008fa8:	ea13 0f0b 	tst.w	r3, fp
 8008fac:	d0ed      	beq.n	8008f8a <_strtod_l+0x92a>
 8008fae:	9a04      	ldr	r2, [sp, #16]
 8008fb0:	4640      	mov	r0, r8
 8008fb2:	4649      	mov	r1, r9
 8008fb4:	f1ba 0f00 	cmp.w	sl, #0
 8008fb8:	d016      	beq.n	8008fe8 <_strtod_l+0x988>
 8008fba:	f7ff fb37 	bl	800862c <sulp>
 8008fbe:	ed9d 7b08 	vldr	d7, [sp, #32]
 8008fc2:	ee37 7b00 	vadd.f64	d7, d7, d0
 8008fc6:	ec59 8b17 	vmov	r8, r9, d7
 8008fca:	e7de      	b.n	8008f8a <_strtod_l+0x92a>
 8008fcc:	4013      	ands	r3, r2
 8008fce:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8008fd2:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8008fd6:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8008fda:	f04f 38ff 	mov.w	r8, #4294967295
 8008fde:	e7d4      	b.n	8008f8a <_strtod_l+0x92a>
 8008fe0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008fe2:	ea13 0f08 	tst.w	r3, r8
 8008fe6:	e7e1      	b.n	8008fac <_strtod_l+0x94c>
 8008fe8:	f7ff fb20 	bl	800862c <sulp>
 8008fec:	ed9d 7b08 	vldr	d7, [sp, #32]
 8008ff0:	ee37 7b40 	vsub.f64	d7, d7, d0
 8008ff4:	ed8d 7b06 	vstr	d7, [sp, #24]
 8008ff8:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8008ffc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009000:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
 8009004:	d1c1      	bne.n	8008f8a <_strtod_l+0x92a>
 8009006:	e5ec      	b.n	8008be2 <_strtod_l+0x582>
 8009008:	4631      	mov	r1, r6
 800900a:	4628      	mov	r0, r5
 800900c:	f001 ffac 	bl	800af68 <__ratio>
 8009010:	eeb0 7b00 	vmov.f64	d7, #0	; 0x40000000  2.0
 8009014:	eeb4 0bc7 	vcmpe.f64	d0, d7
 8009018:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800901c:	d867      	bhi.n	80090ee <_strtod_l+0xa8e>
 800901e:	f1ba 0f00 	cmp.w	sl, #0
 8009022:	d044      	beq.n	80090ae <_strtod_l+0xa4e>
 8009024:	4b75      	ldr	r3, [pc, #468]	; (80091fc <_strtod_l+0xb9c>)
 8009026:	2200      	movs	r2, #0
 8009028:	eeb7 8b00 	vmov.f64	d8, #112	; 0x3f800000  1.0
 800902c:	4971      	ldr	r1, [pc, #452]	; (80091f4 <_strtod_l+0xb94>)
 800902e:	f8df c1d8 	ldr.w	ip, [pc, #472]	; 8009208 <_strtod_l+0xba8>
 8009032:	ea0b 0001 	and.w	r0, fp, r1
 8009036:	4560      	cmp	r0, ip
 8009038:	900d      	str	r0, [sp, #52]	; 0x34
 800903a:	f040 808b 	bne.w	8009154 <_strtod_l+0xaf4>
 800903e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8009042:	f1ab 7954 	sub.w	r9, fp, #55574528	; 0x3500000
 8009046:	ec49 8b10 	vmov	d0, r8, r9
 800904a:	ec43 2b1c 	vmov	d12, r2, r3
 800904e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8009052:	f001 feb1 	bl	800adb8 <__ulp>
 8009056:	ec49 8b1d 	vmov	d13, r8, r9
 800905a:	eeac db00 	vfma.f64	d13, d12, d0
 800905e:	ed8d db0e 	vstr	d13, [sp, #56]	; 0x38
 8009062:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009064:	4963      	ldr	r1, [pc, #396]	; (80091f4 <_strtod_l+0xb94>)
 8009066:	4a66      	ldr	r2, [pc, #408]	; (8009200 <_strtod_l+0xba0>)
 8009068:	4019      	ands	r1, r3
 800906a:	4291      	cmp	r1, r2
 800906c:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
 8009070:	d947      	bls.n	8009102 <_strtod_l+0xaa2>
 8009072:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009074:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8009078:	4293      	cmp	r3, r2
 800907a:	d103      	bne.n	8009084 <_strtod_l+0xa24>
 800907c:	9b08      	ldr	r3, [sp, #32]
 800907e:	3301      	adds	r3, #1
 8009080:	f43f ad3a 	beq.w	8008af8 <_strtod_l+0x498>
 8009084:	f8df 9170 	ldr.w	r9, [pc, #368]	; 80091f8 <_strtod_l+0xb98>
 8009088:	f04f 38ff 	mov.w	r8, #4294967295
 800908c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800908e:	4620      	mov	r0, r4
 8009090:	f001 fb66 	bl	800a760 <_Bfree>
 8009094:	4639      	mov	r1, r7
 8009096:	4620      	mov	r0, r4
 8009098:	f001 fb62 	bl	800a760 <_Bfree>
 800909c:	4631      	mov	r1, r6
 800909e:	4620      	mov	r0, r4
 80090a0:	f001 fb5e 	bl	800a760 <_Bfree>
 80090a4:	4629      	mov	r1, r5
 80090a6:	4620      	mov	r0, r4
 80090a8:	f001 fb5a 	bl	800a760 <_Bfree>
 80090ac:	e60f      	b.n	8008cce <_strtod_l+0x66e>
 80090ae:	f1b8 0f00 	cmp.w	r8, #0
 80090b2:	d112      	bne.n	80090da <_strtod_l+0xa7a>
 80090b4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80090b8:	b9b3      	cbnz	r3, 80090e8 <_strtod_l+0xa88>
 80090ba:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 80090be:	eeb4 0bc7 	vcmpe.f64	d0, d7
 80090c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090c6:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 80090ca:	d401      	bmi.n	80090d0 <_strtod_l+0xa70>
 80090cc:	ee20 8b08 	vmul.f64	d8, d0, d8
 80090d0:	eeb1 7b48 	vneg.f64	d7, d8
 80090d4:	ec53 2b17 	vmov	r2, r3, d7
 80090d8:	e7a8      	b.n	800902c <_strtod_l+0x9cc>
 80090da:	f1b8 0f01 	cmp.w	r8, #1
 80090de:	d103      	bne.n	80090e8 <_strtod_l+0xa88>
 80090e0:	f1b9 0f00 	cmp.w	r9, #0
 80090e4:	f43f ad7d 	beq.w	8008be2 <_strtod_l+0x582>
 80090e8:	4b46      	ldr	r3, [pc, #280]	; (8009204 <_strtod_l+0xba4>)
 80090ea:	2200      	movs	r2, #0
 80090ec:	e79c      	b.n	8009028 <_strtod_l+0x9c8>
 80090ee:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 80090f2:	ee20 8b08 	vmul.f64	d8, d0, d8
 80090f6:	f1ba 0f00 	cmp.w	sl, #0
 80090fa:	d0e9      	beq.n	80090d0 <_strtod_l+0xa70>
 80090fc:	ec53 2b18 	vmov	r2, r3, d8
 8009100:	e794      	b.n	800902c <_strtod_l+0x9cc>
 8009102:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8009106:	9b04      	ldr	r3, [sp, #16]
 8009108:	2b00      	cmp	r3, #0
 800910a:	d1bf      	bne.n	800908c <_strtod_l+0xa2c>
 800910c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8009110:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009112:	0d1b      	lsrs	r3, r3, #20
 8009114:	051b      	lsls	r3, r3, #20
 8009116:	429a      	cmp	r2, r3
 8009118:	d1b8      	bne.n	800908c <_strtod_l+0xa2c>
 800911a:	ec51 0b18 	vmov	r0, r1, d8
 800911e:	f7f7 facb 	bl	80006b8 <__aeabi_d2lz>
 8009122:	f7f7 fa83 	bl	800062c <__aeabi_l2d>
 8009126:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800912a:	ec41 0b17 	vmov	d7, r0, r1
 800912e:	ea43 0308 	orr.w	r3, r3, r8
 8009132:	ea53 030a 	orrs.w	r3, r3, sl
 8009136:	ee38 8b47 	vsub.f64	d8, d8, d7
 800913a:	d03e      	beq.n	80091ba <_strtod_l+0xb5a>
 800913c:	eeb4 8bca 	vcmpe.f64	d8, d10
 8009140:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009144:	f53f ace2 	bmi.w	8008b0c <_strtod_l+0x4ac>
 8009148:	eeb4 8bcb 	vcmpe.f64	d8, d11
 800914c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009150:	dd9c      	ble.n	800908c <_strtod_l+0xa2c>
 8009152:	e4db      	b.n	8008b0c <_strtod_l+0x4ac>
 8009154:	9904      	ldr	r1, [sp, #16]
 8009156:	b301      	cbz	r1, 800919a <_strtod_l+0xb3a>
 8009158:	990d      	ldr	r1, [sp, #52]	; 0x34
 800915a:	f1b1 6fd4 	cmp.w	r1, #111149056	; 0x6a00000
 800915e:	d81c      	bhi.n	800919a <_strtod_l+0xb3a>
 8009160:	ed9f 7b21 	vldr	d7, [pc, #132]	; 80091e8 <_strtod_l+0xb88>
 8009164:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8009168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800916c:	d811      	bhi.n	8009192 <_strtod_l+0xb32>
 800916e:	eebc 8bc8 	vcvt.u32.f64	s16, d8
 8009172:	ee18 3a10 	vmov	r3, s16
 8009176:	2b01      	cmp	r3, #1
 8009178:	bf38      	it	cc
 800917a:	2301      	movcc	r3, #1
 800917c:	ee08 3a10 	vmov	s16, r3
 8009180:	eeb8 8b48 	vcvt.f64.u32	d8, s16
 8009184:	f1ba 0f00 	cmp.w	sl, #0
 8009188:	d114      	bne.n	80091b4 <_strtod_l+0xb54>
 800918a:	eeb1 7b48 	vneg.f64	d7, d8
 800918e:	ec53 2b17 	vmov	r2, r3, d7
 8009192:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009194:	f103 61d6 	add.w	r1, r3, #112197632	; 0x6b00000
 8009198:	1a0b      	subs	r3, r1, r0
 800919a:	ed9d 0b08 	vldr	d0, [sp, #32]
 800919e:	ec43 2b1c 	vmov	d12, r2, r3
 80091a2:	f001 fe09 	bl	800adb8 <__ulp>
 80091a6:	ed9d 7b08 	vldr	d7, [sp, #32]
 80091aa:	eeac 7b00 	vfma.f64	d7, d12, d0
 80091ae:	ec59 8b17 	vmov	r8, r9, d7
 80091b2:	e7a8      	b.n	8009106 <_strtod_l+0xaa6>
 80091b4:	ec53 2b18 	vmov	r2, r3, d8
 80091b8:	e7eb      	b.n	8009192 <_strtod_l+0xb32>
 80091ba:	eeb4 8bc9 	vcmpe.f64	d8, d9
 80091be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091c2:	f57f af63 	bpl.w	800908c <_strtod_l+0xa2c>
 80091c6:	e4a1      	b.n	8008b0c <_strtod_l+0x4ac>
 80091c8:	2300      	movs	r3, #0
 80091ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80091cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80091ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80091d0:	6013      	str	r3, [r2, #0]
 80091d2:	f7ff ba8d 	b.w	80086f0 <_strtod_l+0x90>
 80091d6:	2a65      	cmp	r2, #101	; 0x65
 80091d8:	f43f ab89 	beq.w	80088ee <_strtod_l+0x28e>
 80091dc:	2a45      	cmp	r2, #69	; 0x45
 80091de:	f43f ab86 	beq.w	80088ee <_strtod_l+0x28e>
 80091e2:	2101      	movs	r1, #1
 80091e4:	f7ff bbbe 	b.w	8008964 <_strtod_l+0x304>
 80091e8:	ffc00000 	.word	0xffc00000
 80091ec:	41dfffff 	.word	0x41dfffff
 80091f0:	000fffff 	.word	0x000fffff
 80091f4:	7ff00000 	.word	0x7ff00000
 80091f8:	7fefffff 	.word	0x7fefffff
 80091fc:	3ff00000 	.word	0x3ff00000
 8009200:	7c9fffff 	.word	0x7c9fffff
 8009204:	bff00000 	.word	0xbff00000
 8009208:	7fe00000 	.word	0x7fe00000

0800920c <_strtod_r>:
 800920c:	4b01      	ldr	r3, [pc, #4]	; (8009214 <_strtod_r+0x8>)
 800920e:	f7ff ba27 	b.w	8008660 <_strtod_l>
 8009212:	bf00      	nop
 8009214:	2000019c 	.word	0x2000019c

08009218 <_strtol_l.isra.0>:
 8009218:	2b01      	cmp	r3, #1
 800921a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800921e:	d001      	beq.n	8009224 <_strtol_l.isra.0+0xc>
 8009220:	2b24      	cmp	r3, #36	; 0x24
 8009222:	d906      	bls.n	8009232 <_strtol_l.isra.0+0x1a>
 8009224:	f7fe fac6 	bl	80077b4 <__errno>
 8009228:	2316      	movs	r3, #22
 800922a:	6003      	str	r3, [r0, #0]
 800922c:	2000      	movs	r0, #0
 800922e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009232:	4f3a      	ldr	r7, [pc, #232]	; (800931c <_strtol_l.isra.0+0x104>)
 8009234:	468e      	mov	lr, r1
 8009236:	4676      	mov	r6, lr
 8009238:	f81e 4b01 	ldrb.w	r4, [lr], #1
 800923c:	5de5      	ldrb	r5, [r4, r7]
 800923e:	f015 0508 	ands.w	r5, r5, #8
 8009242:	d1f8      	bne.n	8009236 <_strtol_l.isra.0+0x1e>
 8009244:	2c2d      	cmp	r4, #45	; 0x2d
 8009246:	d134      	bne.n	80092b2 <_strtol_l.isra.0+0x9a>
 8009248:	f89e 4000 	ldrb.w	r4, [lr]
 800924c:	f04f 0801 	mov.w	r8, #1
 8009250:	f106 0e02 	add.w	lr, r6, #2
 8009254:	2b00      	cmp	r3, #0
 8009256:	d05c      	beq.n	8009312 <_strtol_l.isra.0+0xfa>
 8009258:	2b10      	cmp	r3, #16
 800925a:	d10c      	bne.n	8009276 <_strtol_l.isra.0+0x5e>
 800925c:	2c30      	cmp	r4, #48	; 0x30
 800925e:	d10a      	bne.n	8009276 <_strtol_l.isra.0+0x5e>
 8009260:	f89e 4000 	ldrb.w	r4, [lr]
 8009264:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8009268:	2c58      	cmp	r4, #88	; 0x58
 800926a:	d14d      	bne.n	8009308 <_strtol_l.isra.0+0xf0>
 800926c:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8009270:	2310      	movs	r3, #16
 8009272:	f10e 0e02 	add.w	lr, lr, #2
 8009276:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 800927a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800927e:	2600      	movs	r6, #0
 8009280:	fbbc f9f3 	udiv	r9, ip, r3
 8009284:	4635      	mov	r5, r6
 8009286:	fb03 ca19 	mls	sl, r3, r9, ip
 800928a:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 800928e:	2f09      	cmp	r7, #9
 8009290:	d818      	bhi.n	80092c4 <_strtol_l.isra.0+0xac>
 8009292:	463c      	mov	r4, r7
 8009294:	42a3      	cmp	r3, r4
 8009296:	dd24      	ble.n	80092e2 <_strtol_l.isra.0+0xca>
 8009298:	2e00      	cmp	r6, #0
 800929a:	db1f      	blt.n	80092dc <_strtol_l.isra.0+0xc4>
 800929c:	45a9      	cmp	r9, r5
 800929e:	d31d      	bcc.n	80092dc <_strtol_l.isra.0+0xc4>
 80092a0:	d101      	bne.n	80092a6 <_strtol_l.isra.0+0x8e>
 80092a2:	45a2      	cmp	sl, r4
 80092a4:	db1a      	blt.n	80092dc <_strtol_l.isra.0+0xc4>
 80092a6:	fb05 4503 	mla	r5, r5, r3, r4
 80092aa:	2601      	movs	r6, #1
 80092ac:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80092b0:	e7eb      	b.n	800928a <_strtol_l.isra.0+0x72>
 80092b2:	2c2b      	cmp	r4, #43	; 0x2b
 80092b4:	bf08      	it	eq
 80092b6:	f89e 4000 	ldrbeq.w	r4, [lr]
 80092ba:	46a8      	mov	r8, r5
 80092bc:	bf08      	it	eq
 80092be:	f106 0e02 	addeq.w	lr, r6, #2
 80092c2:	e7c7      	b.n	8009254 <_strtol_l.isra.0+0x3c>
 80092c4:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80092c8:	2f19      	cmp	r7, #25
 80092ca:	d801      	bhi.n	80092d0 <_strtol_l.isra.0+0xb8>
 80092cc:	3c37      	subs	r4, #55	; 0x37
 80092ce:	e7e1      	b.n	8009294 <_strtol_l.isra.0+0x7c>
 80092d0:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80092d4:	2f19      	cmp	r7, #25
 80092d6:	d804      	bhi.n	80092e2 <_strtol_l.isra.0+0xca>
 80092d8:	3c57      	subs	r4, #87	; 0x57
 80092da:	e7db      	b.n	8009294 <_strtol_l.isra.0+0x7c>
 80092dc:	f04f 36ff 	mov.w	r6, #4294967295
 80092e0:	e7e4      	b.n	80092ac <_strtol_l.isra.0+0x94>
 80092e2:	2e00      	cmp	r6, #0
 80092e4:	da05      	bge.n	80092f2 <_strtol_l.isra.0+0xda>
 80092e6:	2322      	movs	r3, #34	; 0x22
 80092e8:	6003      	str	r3, [r0, #0]
 80092ea:	4665      	mov	r5, ip
 80092ec:	b942      	cbnz	r2, 8009300 <_strtol_l.isra.0+0xe8>
 80092ee:	4628      	mov	r0, r5
 80092f0:	e79d      	b.n	800922e <_strtol_l.isra.0+0x16>
 80092f2:	f1b8 0f00 	cmp.w	r8, #0
 80092f6:	d000      	beq.n	80092fa <_strtol_l.isra.0+0xe2>
 80092f8:	426d      	negs	r5, r5
 80092fa:	2a00      	cmp	r2, #0
 80092fc:	d0f7      	beq.n	80092ee <_strtol_l.isra.0+0xd6>
 80092fe:	b10e      	cbz	r6, 8009304 <_strtol_l.isra.0+0xec>
 8009300:	f10e 31ff 	add.w	r1, lr, #4294967295
 8009304:	6011      	str	r1, [r2, #0]
 8009306:	e7f2      	b.n	80092ee <_strtol_l.isra.0+0xd6>
 8009308:	2430      	movs	r4, #48	; 0x30
 800930a:	2b00      	cmp	r3, #0
 800930c:	d1b3      	bne.n	8009276 <_strtol_l.isra.0+0x5e>
 800930e:	2308      	movs	r3, #8
 8009310:	e7b1      	b.n	8009276 <_strtol_l.isra.0+0x5e>
 8009312:	2c30      	cmp	r4, #48	; 0x30
 8009314:	d0a4      	beq.n	8009260 <_strtol_l.isra.0+0x48>
 8009316:	230a      	movs	r3, #10
 8009318:	e7ad      	b.n	8009276 <_strtol_l.isra.0+0x5e>
 800931a:	bf00      	nop
 800931c:	0800d1c9 	.word	0x0800d1c9

08009320 <_strtol_r>:
 8009320:	f7ff bf7a 	b.w	8009218 <_strtol_l.isra.0>

08009324 <_write_r>:
 8009324:	b538      	push	{r3, r4, r5, lr}
 8009326:	4d07      	ldr	r5, [pc, #28]	; (8009344 <_write_r+0x20>)
 8009328:	4604      	mov	r4, r0
 800932a:	4608      	mov	r0, r1
 800932c:	4611      	mov	r1, r2
 800932e:	2200      	movs	r2, #0
 8009330:	602a      	str	r2, [r5, #0]
 8009332:	461a      	mov	r2, r3
 8009334:	f7f9 fa09 	bl	800274a <_write>
 8009338:	1c43      	adds	r3, r0, #1
 800933a:	d102      	bne.n	8009342 <_write_r+0x1e>
 800933c:	682b      	ldr	r3, [r5, #0]
 800933e:	b103      	cbz	r3, 8009342 <_write_r+0x1e>
 8009340:	6023      	str	r3, [r4, #0]
 8009342:	bd38      	pop	{r3, r4, r5, pc}
 8009344:	20018784 	.word	0x20018784

08009348 <_close_r>:
 8009348:	b538      	push	{r3, r4, r5, lr}
 800934a:	4d06      	ldr	r5, [pc, #24]	; (8009364 <_close_r+0x1c>)
 800934c:	2300      	movs	r3, #0
 800934e:	4604      	mov	r4, r0
 8009350:	4608      	mov	r0, r1
 8009352:	602b      	str	r3, [r5, #0]
 8009354:	f7f9 fa15 	bl	8002782 <_close>
 8009358:	1c43      	adds	r3, r0, #1
 800935a:	d102      	bne.n	8009362 <_close_r+0x1a>
 800935c:	682b      	ldr	r3, [r5, #0]
 800935e:	b103      	cbz	r3, 8009362 <_close_r+0x1a>
 8009360:	6023      	str	r3, [r4, #0]
 8009362:	bd38      	pop	{r3, r4, r5, pc}
 8009364:	20018784 	.word	0x20018784

08009368 <quorem>:
 8009368:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800936c:	6903      	ldr	r3, [r0, #16]
 800936e:	690c      	ldr	r4, [r1, #16]
 8009370:	42a3      	cmp	r3, r4
 8009372:	4607      	mov	r7, r0
 8009374:	f2c0 8081 	blt.w	800947a <quorem+0x112>
 8009378:	3c01      	subs	r4, #1
 800937a:	f101 0814 	add.w	r8, r1, #20
 800937e:	f100 0514 	add.w	r5, r0, #20
 8009382:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8009386:	9301      	str	r3, [sp, #4]
 8009388:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800938c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8009390:	3301      	adds	r3, #1
 8009392:	429a      	cmp	r2, r3
 8009394:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8009398:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800939c:	fbb2 f6f3 	udiv	r6, r2, r3
 80093a0:	d331      	bcc.n	8009406 <quorem+0x9e>
 80093a2:	f04f 0e00 	mov.w	lr, #0
 80093a6:	4640      	mov	r0, r8
 80093a8:	46ac      	mov	ip, r5
 80093aa:	46f2      	mov	sl, lr
 80093ac:	f850 2b04 	ldr.w	r2, [r0], #4
 80093b0:	b293      	uxth	r3, r2
 80093b2:	fb06 e303 	mla	r3, r6, r3, lr
 80093b6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80093ba:	b29b      	uxth	r3, r3
 80093bc:	ebaa 0303 	sub.w	r3, sl, r3
 80093c0:	0c12      	lsrs	r2, r2, #16
 80093c2:	f8dc a000 	ldr.w	sl, [ip]
 80093c6:	fb06 e202 	mla	r2, r6, r2, lr
 80093ca:	fa13 f38a 	uxtah	r3, r3, sl
 80093ce:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80093d2:	fa1f fa82 	uxth.w	sl, r2
 80093d6:	f8dc 2000 	ldr.w	r2, [ip]
 80093da:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 80093de:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80093e2:	b29b      	uxth	r3, r3
 80093e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80093e8:	4581      	cmp	r9, r0
 80093ea:	f84c 3b04 	str.w	r3, [ip], #4
 80093ee:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80093f2:	d2db      	bcs.n	80093ac <quorem+0x44>
 80093f4:	f855 300b 	ldr.w	r3, [r5, fp]
 80093f8:	b92b      	cbnz	r3, 8009406 <quorem+0x9e>
 80093fa:	9b01      	ldr	r3, [sp, #4]
 80093fc:	3b04      	subs	r3, #4
 80093fe:	429d      	cmp	r5, r3
 8009400:	461a      	mov	r2, r3
 8009402:	d32e      	bcc.n	8009462 <quorem+0xfa>
 8009404:	613c      	str	r4, [r7, #16]
 8009406:	4638      	mov	r0, r7
 8009408:	f001 fc32 	bl	800ac70 <__mcmp>
 800940c:	2800      	cmp	r0, #0
 800940e:	db24      	blt.n	800945a <quorem+0xf2>
 8009410:	3601      	adds	r6, #1
 8009412:	4628      	mov	r0, r5
 8009414:	f04f 0c00 	mov.w	ip, #0
 8009418:	f858 2b04 	ldr.w	r2, [r8], #4
 800941c:	f8d0 e000 	ldr.w	lr, [r0]
 8009420:	b293      	uxth	r3, r2
 8009422:	ebac 0303 	sub.w	r3, ip, r3
 8009426:	0c12      	lsrs	r2, r2, #16
 8009428:	fa13 f38e 	uxtah	r3, r3, lr
 800942c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8009430:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8009434:	b29b      	uxth	r3, r3
 8009436:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800943a:	45c1      	cmp	r9, r8
 800943c:	f840 3b04 	str.w	r3, [r0], #4
 8009440:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8009444:	d2e8      	bcs.n	8009418 <quorem+0xb0>
 8009446:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800944a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800944e:	b922      	cbnz	r2, 800945a <quorem+0xf2>
 8009450:	3b04      	subs	r3, #4
 8009452:	429d      	cmp	r5, r3
 8009454:	461a      	mov	r2, r3
 8009456:	d30a      	bcc.n	800946e <quorem+0x106>
 8009458:	613c      	str	r4, [r7, #16]
 800945a:	4630      	mov	r0, r6
 800945c:	b003      	add	sp, #12
 800945e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009462:	6812      	ldr	r2, [r2, #0]
 8009464:	3b04      	subs	r3, #4
 8009466:	2a00      	cmp	r2, #0
 8009468:	d1cc      	bne.n	8009404 <quorem+0x9c>
 800946a:	3c01      	subs	r4, #1
 800946c:	e7c7      	b.n	80093fe <quorem+0x96>
 800946e:	6812      	ldr	r2, [r2, #0]
 8009470:	3b04      	subs	r3, #4
 8009472:	2a00      	cmp	r2, #0
 8009474:	d1f0      	bne.n	8009458 <quorem+0xf0>
 8009476:	3c01      	subs	r4, #1
 8009478:	e7eb      	b.n	8009452 <quorem+0xea>
 800947a:	2000      	movs	r0, #0
 800947c:	e7ee      	b.n	800945c <quorem+0xf4>
	...

08009480 <_dtoa_r>:
 8009480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009484:	ec59 8b10 	vmov	r8, r9, d0
 8009488:	b095      	sub	sp, #84	; 0x54
 800948a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800948c:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800948e:	9107      	str	r1, [sp, #28]
 8009490:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8009494:	4606      	mov	r6, r0
 8009496:	9209      	str	r2, [sp, #36]	; 0x24
 8009498:	9310      	str	r3, [sp, #64]	; 0x40
 800949a:	b975      	cbnz	r5, 80094ba <_dtoa_r+0x3a>
 800949c:	2010      	movs	r0, #16
 800949e:	f001 f8f7 	bl	800a690 <malloc>
 80094a2:	4602      	mov	r2, r0
 80094a4:	6270      	str	r0, [r6, #36]	; 0x24
 80094a6:	b920      	cbnz	r0, 80094b2 <_dtoa_r+0x32>
 80094a8:	4bab      	ldr	r3, [pc, #684]	; (8009758 <_dtoa_r+0x2d8>)
 80094aa:	21ea      	movs	r1, #234	; 0xea
 80094ac:	48ab      	ldr	r0, [pc, #684]	; (800975c <_dtoa_r+0x2dc>)
 80094ae:	f002 fc33 	bl	800bd18 <__assert_func>
 80094b2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80094b6:	6005      	str	r5, [r0, #0]
 80094b8:	60c5      	str	r5, [r0, #12]
 80094ba:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80094bc:	6819      	ldr	r1, [r3, #0]
 80094be:	b151      	cbz	r1, 80094d6 <_dtoa_r+0x56>
 80094c0:	685a      	ldr	r2, [r3, #4]
 80094c2:	604a      	str	r2, [r1, #4]
 80094c4:	2301      	movs	r3, #1
 80094c6:	4093      	lsls	r3, r2
 80094c8:	608b      	str	r3, [r1, #8]
 80094ca:	4630      	mov	r0, r6
 80094cc:	f001 f948 	bl	800a760 <_Bfree>
 80094d0:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80094d2:	2200      	movs	r2, #0
 80094d4:	601a      	str	r2, [r3, #0]
 80094d6:	f1b9 0300 	subs.w	r3, r9, #0
 80094da:	bfbb      	ittet	lt
 80094dc:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80094e0:	9303      	strlt	r3, [sp, #12]
 80094e2:	2300      	movge	r3, #0
 80094e4:	2201      	movlt	r2, #1
 80094e6:	bfac      	ite	ge
 80094e8:	6023      	strge	r3, [r4, #0]
 80094ea:	6022      	strlt	r2, [r4, #0]
 80094ec:	4b9c      	ldr	r3, [pc, #624]	; (8009760 <_dtoa_r+0x2e0>)
 80094ee:	9c03      	ldr	r4, [sp, #12]
 80094f0:	43a3      	bics	r3, r4
 80094f2:	d11a      	bne.n	800952a <_dtoa_r+0xaa>
 80094f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80094f6:	f242 730f 	movw	r3, #9999	; 0x270f
 80094fa:	6013      	str	r3, [r2, #0]
 80094fc:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8009500:	ea53 0308 	orrs.w	r3, r3, r8
 8009504:	f000 8512 	beq.w	8009f2c <_dtoa_r+0xaac>
 8009508:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800950a:	b953      	cbnz	r3, 8009522 <_dtoa_r+0xa2>
 800950c:	4b95      	ldr	r3, [pc, #596]	; (8009764 <_dtoa_r+0x2e4>)
 800950e:	e01f      	b.n	8009550 <_dtoa_r+0xd0>
 8009510:	4b95      	ldr	r3, [pc, #596]	; (8009768 <_dtoa_r+0x2e8>)
 8009512:	9300      	str	r3, [sp, #0]
 8009514:	3308      	adds	r3, #8
 8009516:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8009518:	6013      	str	r3, [r2, #0]
 800951a:	9800      	ldr	r0, [sp, #0]
 800951c:	b015      	add	sp, #84	; 0x54
 800951e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009522:	4b90      	ldr	r3, [pc, #576]	; (8009764 <_dtoa_r+0x2e4>)
 8009524:	9300      	str	r3, [sp, #0]
 8009526:	3303      	adds	r3, #3
 8009528:	e7f5      	b.n	8009516 <_dtoa_r+0x96>
 800952a:	ed9d 7b02 	vldr	d7, [sp, #8]
 800952e:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8009532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009536:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800953a:	d10b      	bne.n	8009554 <_dtoa_r+0xd4>
 800953c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800953e:	2301      	movs	r3, #1
 8009540:	6013      	str	r3, [r2, #0]
 8009542:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8009544:	2b00      	cmp	r3, #0
 8009546:	f000 84ee 	beq.w	8009f26 <_dtoa_r+0xaa6>
 800954a:	4888      	ldr	r0, [pc, #544]	; (800976c <_dtoa_r+0x2ec>)
 800954c:	6018      	str	r0, [r3, #0]
 800954e:	1e43      	subs	r3, r0, #1
 8009550:	9300      	str	r3, [sp, #0]
 8009552:	e7e2      	b.n	800951a <_dtoa_r+0x9a>
 8009554:	a913      	add	r1, sp, #76	; 0x4c
 8009556:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 800955a:	aa12      	add	r2, sp, #72	; 0x48
 800955c:	4630      	mov	r0, r6
 800955e:	f001 fca7 	bl	800aeb0 <__d2b>
 8009562:	f3c4 510a 	ubfx	r1, r4, #20, #11
 8009566:	4605      	mov	r5, r0
 8009568:	9812      	ldr	r0, [sp, #72]	; 0x48
 800956a:	2900      	cmp	r1, #0
 800956c:	d047      	beq.n	80095fe <_dtoa_r+0x17e>
 800956e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8009570:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8009574:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8009578:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
 800957c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8009580:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8009584:	2400      	movs	r4, #0
 8009586:	ec43 2b16 	vmov	d6, r2, r3
 800958a:	eeb7 7b08 	vmov.f64	d7, #120	; 0x3fc00000  1.5
 800958e:	ed9f 5b6c 	vldr	d5, [pc, #432]	; 8009740 <_dtoa_r+0x2c0>
 8009592:	ee36 7b47 	vsub.f64	d7, d6, d7
 8009596:	ed9f 6b6c 	vldr	d6, [pc, #432]	; 8009748 <_dtoa_r+0x2c8>
 800959a:	eea7 6b05 	vfma.f64	d6, d7, d5
 800959e:	eeb0 7b46 	vmov.f64	d7, d6
 80095a2:	ee06 1a90 	vmov	s13, r1
 80095a6:	eeb8 5be6 	vcvt.f64.s32	d5, s13
 80095aa:	ed9f 6b69 	vldr	d6, [pc, #420]	; 8009750 <_dtoa_r+0x2d0>
 80095ae:	eea5 7b06 	vfma.f64	d7, d5, d6
 80095b2:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 80095b6:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80095ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095be:	ee16 ba90 	vmov	fp, s13
 80095c2:	9411      	str	r4, [sp, #68]	; 0x44
 80095c4:	d508      	bpl.n	80095d8 <_dtoa_r+0x158>
 80095c6:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 80095ca:	eeb4 6b47 	vcmp.f64	d6, d7
 80095ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095d2:	bf18      	it	ne
 80095d4:	f10b 3bff 	addne.w	fp, fp, #4294967295
 80095d8:	f1bb 0f16 	cmp.w	fp, #22
 80095dc:	d832      	bhi.n	8009644 <_dtoa_r+0x1c4>
 80095de:	4b64      	ldr	r3, [pc, #400]	; (8009770 <_dtoa_r+0x2f0>)
 80095e0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80095e4:	ed93 7b00 	vldr	d7, [r3]
 80095e8:	ed9d 6b0a 	vldr	d6, [sp, #40]	; 0x28
 80095ec:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80095f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095f4:	d501      	bpl.n	80095fa <_dtoa_r+0x17a>
 80095f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80095fa:	2300      	movs	r3, #0
 80095fc:	e023      	b.n	8009646 <_dtoa_r+0x1c6>
 80095fe:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8009600:	4401      	add	r1, r0
 8009602:	f201 4332 	addw	r3, r1, #1074	; 0x432
 8009606:	2b20      	cmp	r3, #32
 8009608:	bfc3      	ittte	gt
 800960a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800960e:	fa04 f303 	lslgt.w	r3, r4, r3
 8009612:	f201 4412 	addwgt	r4, r1, #1042	; 0x412
 8009616:	f1c3 0320 	rsble	r3, r3, #32
 800961a:	bfc6      	itte	gt
 800961c:	fa28 f804 	lsrgt.w	r8, r8, r4
 8009620:	ea43 0308 	orrgt.w	r3, r3, r8
 8009624:	fa08 f303 	lslle.w	r3, r8, r3
 8009628:	ee07 3a90 	vmov	s15, r3
 800962c:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8009630:	3901      	subs	r1, #1
 8009632:	ed8d 7b00 	vstr	d7, [sp]
 8009636:	9c01      	ldr	r4, [sp, #4]
 8009638:	e9dd 2300 	ldrd	r2, r3, [sp]
 800963c:	f1a4 73f8 	sub.w	r3, r4, #32505856	; 0x1f00000
 8009640:	2401      	movs	r4, #1
 8009642:	e7a0      	b.n	8009586 <_dtoa_r+0x106>
 8009644:	2301      	movs	r3, #1
 8009646:	930f      	str	r3, [sp, #60]	; 0x3c
 8009648:	1a43      	subs	r3, r0, r1
 800964a:	1e5a      	subs	r2, r3, #1
 800964c:	bf45      	ittet	mi
 800964e:	f1c3 0301 	rsbmi	r3, r3, #1
 8009652:	9305      	strmi	r3, [sp, #20]
 8009654:	2300      	movpl	r3, #0
 8009656:	2300      	movmi	r3, #0
 8009658:	9206      	str	r2, [sp, #24]
 800965a:	bf54      	ite	pl
 800965c:	9305      	strpl	r3, [sp, #20]
 800965e:	9306      	strmi	r3, [sp, #24]
 8009660:	f1bb 0f00 	cmp.w	fp, #0
 8009664:	db18      	blt.n	8009698 <_dtoa_r+0x218>
 8009666:	9b06      	ldr	r3, [sp, #24]
 8009668:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 800966c:	445b      	add	r3, fp
 800966e:	9306      	str	r3, [sp, #24]
 8009670:	2300      	movs	r3, #0
 8009672:	9a07      	ldr	r2, [sp, #28]
 8009674:	2a09      	cmp	r2, #9
 8009676:	d849      	bhi.n	800970c <_dtoa_r+0x28c>
 8009678:	2a05      	cmp	r2, #5
 800967a:	bfc4      	itt	gt
 800967c:	3a04      	subgt	r2, #4
 800967e:	9207      	strgt	r2, [sp, #28]
 8009680:	9a07      	ldr	r2, [sp, #28]
 8009682:	f1a2 0202 	sub.w	r2, r2, #2
 8009686:	bfcc      	ite	gt
 8009688:	2400      	movgt	r4, #0
 800968a:	2401      	movle	r4, #1
 800968c:	2a03      	cmp	r2, #3
 800968e:	d848      	bhi.n	8009722 <_dtoa_r+0x2a2>
 8009690:	e8df f002 	tbb	[pc, r2]
 8009694:	3a2c2e0b 	.word	0x3a2c2e0b
 8009698:	9b05      	ldr	r3, [sp, #20]
 800969a:	2200      	movs	r2, #0
 800969c:	eba3 030b 	sub.w	r3, r3, fp
 80096a0:	9305      	str	r3, [sp, #20]
 80096a2:	920e      	str	r2, [sp, #56]	; 0x38
 80096a4:	f1cb 0300 	rsb	r3, fp, #0
 80096a8:	e7e3      	b.n	8009672 <_dtoa_r+0x1f2>
 80096aa:	2200      	movs	r2, #0
 80096ac:	9208      	str	r2, [sp, #32]
 80096ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80096b0:	2a00      	cmp	r2, #0
 80096b2:	dc39      	bgt.n	8009728 <_dtoa_r+0x2a8>
 80096b4:	f04f 0a01 	mov.w	sl, #1
 80096b8:	46d1      	mov	r9, sl
 80096ba:	4652      	mov	r2, sl
 80096bc:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80096c0:	6a77      	ldr	r7, [r6, #36]	; 0x24
 80096c2:	2100      	movs	r1, #0
 80096c4:	6079      	str	r1, [r7, #4]
 80096c6:	2004      	movs	r0, #4
 80096c8:	f100 0c14 	add.w	ip, r0, #20
 80096cc:	4594      	cmp	ip, r2
 80096ce:	6879      	ldr	r1, [r7, #4]
 80096d0:	d92f      	bls.n	8009732 <_dtoa_r+0x2b2>
 80096d2:	4630      	mov	r0, r6
 80096d4:	930c      	str	r3, [sp, #48]	; 0x30
 80096d6:	f001 f803 	bl	800a6e0 <_Balloc>
 80096da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80096dc:	9000      	str	r0, [sp, #0]
 80096de:	4602      	mov	r2, r0
 80096e0:	2800      	cmp	r0, #0
 80096e2:	d149      	bne.n	8009778 <_dtoa_r+0x2f8>
 80096e4:	4b23      	ldr	r3, [pc, #140]	; (8009774 <_dtoa_r+0x2f4>)
 80096e6:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80096ea:	e6df      	b.n	80094ac <_dtoa_r+0x2c>
 80096ec:	2201      	movs	r2, #1
 80096ee:	e7dd      	b.n	80096ac <_dtoa_r+0x22c>
 80096f0:	2200      	movs	r2, #0
 80096f2:	9208      	str	r2, [sp, #32]
 80096f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80096f6:	eb0b 0a02 	add.w	sl, fp, r2
 80096fa:	f10a 0901 	add.w	r9, sl, #1
 80096fe:	464a      	mov	r2, r9
 8009700:	2a01      	cmp	r2, #1
 8009702:	bfb8      	it	lt
 8009704:	2201      	movlt	r2, #1
 8009706:	e7db      	b.n	80096c0 <_dtoa_r+0x240>
 8009708:	2201      	movs	r2, #1
 800970a:	e7f2      	b.n	80096f2 <_dtoa_r+0x272>
 800970c:	2401      	movs	r4, #1
 800970e:	2200      	movs	r2, #0
 8009710:	e9cd 2407 	strd	r2, r4, [sp, #28]
 8009714:	f04f 3aff 	mov.w	sl, #4294967295
 8009718:	2100      	movs	r1, #0
 800971a:	46d1      	mov	r9, sl
 800971c:	2212      	movs	r2, #18
 800971e:	9109      	str	r1, [sp, #36]	; 0x24
 8009720:	e7ce      	b.n	80096c0 <_dtoa_r+0x240>
 8009722:	2201      	movs	r2, #1
 8009724:	9208      	str	r2, [sp, #32]
 8009726:	e7f5      	b.n	8009714 <_dtoa_r+0x294>
 8009728:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 800972c:	46d1      	mov	r9, sl
 800972e:	4652      	mov	r2, sl
 8009730:	e7c6      	b.n	80096c0 <_dtoa_r+0x240>
 8009732:	3101      	adds	r1, #1
 8009734:	6079      	str	r1, [r7, #4]
 8009736:	0040      	lsls	r0, r0, #1
 8009738:	e7c6      	b.n	80096c8 <_dtoa_r+0x248>
 800973a:	bf00      	nop
 800973c:	f3af 8000 	nop.w
 8009740:	636f4361 	.word	0x636f4361
 8009744:	3fd287a7 	.word	0x3fd287a7
 8009748:	8b60c8b3 	.word	0x8b60c8b3
 800974c:	3fc68a28 	.word	0x3fc68a28
 8009750:	509f79fb 	.word	0x509f79fb
 8009754:	3fd34413 	.word	0x3fd34413
 8009758:	0800d2d6 	.word	0x0800d2d6
 800975c:	0800d2ed 	.word	0x0800d2ed
 8009760:	7ff00000 	.word	0x7ff00000
 8009764:	0800d2d2 	.word	0x0800d2d2
 8009768:	0800d2c9 	.word	0x0800d2c9
 800976c:	0800d552 	.word	0x0800d552
 8009770:	0800d468 	.word	0x0800d468
 8009774:	0800d34c 	.word	0x0800d34c
 8009778:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800977a:	9900      	ldr	r1, [sp, #0]
 800977c:	6011      	str	r1, [r2, #0]
 800977e:	f1b9 0f0e 	cmp.w	r9, #14
 8009782:	d872      	bhi.n	800986a <_dtoa_r+0x3ea>
 8009784:	2c00      	cmp	r4, #0
 8009786:	d070      	beq.n	800986a <_dtoa_r+0x3ea>
 8009788:	f1bb 0f00 	cmp.w	fp, #0
 800978c:	f340 80a6 	ble.w	80098dc <_dtoa_r+0x45c>
 8009790:	49ca      	ldr	r1, [pc, #808]	; (8009abc <_dtoa_r+0x63c>)
 8009792:	f00b 020f 	and.w	r2, fp, #15
 8009796:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800979a:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800979e:	ed92 7b00 	vldr	d7, [r2]
 80097a2:	ea4f 112b 	mov.w	r1, fp, asr #4
 80097a6:	f000 808d 	beq.w	80098c4 <_dtoa_r+0x444>
 80097aa:	4ac5      	ldr	r2, [pc, #788]	; (8009ac0 <_dtoa_r+0x640>)
 80097ac:	ed9d 5b0a 	vldr	d5, [sp, #40]	; 0x28
 80097b0:	ed92 6b08 	vldr	d6, [r2, #32]
 80097b4:	ee85 6b06 	vdiv.f64	d6, d5, d6
 80097b8:	ed8d 6b02 	vstr	d6, [sp, #8]
 80097bc:	f001 010f 	and.w	r1, r1, #15
 80097c0:	2203      	movs	r2, #3
 80097c2:	48bf      	ldr	r0, [pc, #764]	; (8009ac0 <_dtoa_r+0x640>)
 80097c4:	2900      	cmp	r1, #0
 80097c6:	d17f      	bne.n	80098c8 <_dtoa_r+0x448>
 80097c8:	ed9d 6b02 	vldr	d6, [sp, #8]
 80097cc:	ee86 7b07 	vdiv.f64	d7, d6, d7
 80097d0:	ed8d 7b02 	vstr	d7, [sp, #8]
 80097d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80097d6:	2900      	cmp	r1, #0
 80097d8:	f000 80b2 	beq.w	8009940 <_dtoa_r+0x4c0>
 80097dc:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80097e0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80097e4:	eeb4 7bc6 	vcmpe.f64	d7, d6
 80097e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097ec:	f140 80a8 	bpl.w	8009940 <_dtoa_r+0x4c0>
 80097f0:	f1b9 0f00 	cmp.w	r9, #0
 80097f4:	f000 80a4 	beq.w	8009940 <_dtoa_r+0x4c0>
 80097f8:	f1ba 0f00 	cmp.w	sl, #0
 80097fc:	dd31      	ble.n	8009862 <_dtoa_r+0x3e2>
 80097fe:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
 8009802:	ee27 7b06 	vmul.f64	d7, d7, d6
 8009806:	ed8d 7b02 	vstr	d7, [sp, #8]
 800980a:	f10b 37ff 	add.w	r7, fp, #4294967295
 800980e:	3201      	adds	r2, #1
 8009810:	4650      	mov	r0, sl
 8009812:	ed9d 6b02 	vldr	d6, [sp, #8]
 8009816:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
 800981a:	ee07 2a90 	vmov	s15, r2
 800981e:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8009822:	eea7 5b06 	vfma.f64	d5, d7, d6
 8009826:	ed8d 5b02 	vstr	d5, [sp, #8]
 800982a:	9c03      	ldr	r4, [sp, #12]
 800982c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009830:	f1a4 7250 	sub.w	r2, r4, #54525952	; 0x3400000
 8009834:	2800      	cmp	r0, #0
 8009836:	f040 8086 	bne.w	8009946 <_dtoa_r+0x4c6>
 800983a:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800983e:	ee36 6b47 	vsub.f64	d6, d6, d7
 8009842:	ec42 1b17 	vmov	d7, r1, r2
 8009846:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800984a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800984e:	f300 8272 	bgt.w	8009d36 <_dtoa_r+0x8b6>
 8009852:	eeb1 7b47 	vneg.f64	d7, d7
 8009856:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800985a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800985e:	f100 8267 	bmi.w	8009d30 <_dtoa_r+0x8b0>
 8009862:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
 8009866:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800986a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800986c:	2a00      	cmp	r2, #0
 800986e:	f2c0 8129 	blt.w	8009ac4 <_dtoa_r+0x644>
 8009872:	f1bb 0f0e 	cmp.w	fp, #14
 8009876:	f300 8125 	bgt.w	8009ac4 <_dtoa_r+0x644>
 800987a:	4b90      	ldr	r3, [pc, #576]	; (8009abc <_dtoa_r+0x63c>)
 800987c:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8009880:	ed93 6b00 	vldr	d6, [r3]
 8009884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009886:	2b00      	cmp	r3, #0
 8009888:	f280 80c3 	bge.w	8009a12 <_dtoa_r+0x592>
 800988c:	f1b9 0f00 	cmp.w	r9, #0
 8009890:	f300 80bf 	bgt.w	8009a12 <_dtoa_r+0x592>
 8009894:	f040 824c 	bne.w	8009d30 <_dtoa_r+0x8b0>
 8009898:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800989c:	ee26 6b07 	vmul.f64	d6, d6, d7
 80098a0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80098a4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80098a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098ac:	464c      	mov	r4, r9
 80098ae:	464f      	mov	r7, r9
 80098b0:	f280 8222 	bge.w	8009cf8 <_dtoa_r+0x878>
 80098b4:	f8dd 8000 	ldr.w	r8, [sp]
 80098b8:	2331      	movs	r3, #49	; 0x31
 80098ba:	f808 3b01 	strb.w	r3, [r8], #1
 80098be:	f10b 0b01 	add.w	fp, fp, #1
 80098c2:	e21e      	b.n	8009d02 <_dtoa_r+0x882>
 80098c4:	2202      	movs	r2, #2
 80098c6:	e77c      	b.n	80097c2 <_dtoa_r+0x342>
 80098c8:	07cc      	lsls	r4, r1, #31
 80098ca:	d504      	bpl.n	80098d6 <_dtoa_r+0x456>
 80098cc:	ed90 6b00 	vldr	d6, [r0]
 80098d0:	3201      	adds	r2, #1
 80098d2:	ee27 7b06 	vmul.f64	d7, d7, d6
 80098d6:	1049      	asrs	r1, r1, #1
 80098d8:	3008      	adds	r0, #8
 80098da:	e773      	b.n	80097c4 <_dtoa_r+0x344>
 80098dc:	d02e      	beq.n	800993c <_dtoa_r+0x4bc>
 80098de:	f1cb 0100 	rsb	r1, fp, #0
 80098e2:	4a76      	ldr	r2, [pc, #472]	; (8009abc <_dtoa_r+0x63c>)
 80098e4:	f001 000f 	and.w	r0, r1, #15
 80098e8:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 80098ec:	ed92 7b00 	vldr	d7, [r2]
 80098f0:	ed9d 6b0a 	vldr	d6, [sp, #40]	; 0x28
 80098f4:	ee26 7b07 	vmul.f64	d7, d6, d7
 80098f8:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 80098fc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8009900:	e9cd 7802 	strd	r7, r8, [sp, #8]
 8009904:	486e      	ldr	r0, [pc, #440]	; (8009ac0 <_dtoa_r+0x640>)
 8009906:	1109      	asrs	r1, r1, #4
 8009908:	2400      	movs	r4, #0
 800990a:	2202      	movs	r2, #2
 800990c:	b939      	cbnz	r1, 800991e <_dtoa_r+0x49e>
 800990e:	2c00      	cmp	r4, #0
 8009910:	f43f af60 	beq.w	80097d4 <_dtoa_r+0x354>
 8009914:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8009918:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800991c:	e75a      	b.n	80097d4 <_dtoa_r+0x354>
 800991e:	07cf      	lsls	r7, r1, #31
 8009920:	d509      	bpl.n	8009936 <_dtoa_r+0x4b6>
 8009922:	ed9d 6b0c 	vldr	d6, [sp, #48]	; 0x30
 8009926:	ed90 7b00 	vldr	d7, [r0]
 800992a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800992e:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8009932:	3201      	adds	r2, #1
 8009934:	2401      	movs	r4, #1
 8009936:	1049      	asrs	r1, r1, #1
 8009938:	3008      	adds	r0, #8
 800993a:	e7e7      	b.n	800990c <_dtoa_r+0x48c>
 800993c:	2202      	movs	r2, #2
 800993e:	e749      	b.n	80097d4 <_dtoa_r+0x354>
 8009940:	465f      	mov	r7, fp
 8009942:	4648      	mov	r0, r9
 8009944:	e765      	b.n	8009812 <_dtoa_r+0x392>
 8009946:	ec42 1b17 	vmov	d7, r1, r2
 800994a:	4a5c      	ldr	r2, [pc, #368]	; (8009abc <_dtoa_r+0x63c>)
 800994c:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 8009950:	ed12 4b02 	vldr	d4, [r2, #-8]
 8009954:	9a00      	ldr	r2, [sp, #0]
 8009956:	1814      	adds	r4, r2, r0
 8009958:	9a08      	ldr	r2, [sp, #32]
 800995a:	b352      	cbz	r2, 80099b2 <_dtoa_r+0x532>
 800995c:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
 8009960:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
 8009964:	f8dd 8000 	ldr.w	r8, [sp]
 8009968:	ee83 5b04 	vdiv.f64	d5, d3, d4
 800996c:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 8009970:	ee35 7b47 	vsub.f64	d7, d5, d7
 8009974:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 8009978:	ee14 2a90 	vmov	r2, s9
 800997c:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8009980:	3230      	adds	r2, #48	; 0x30
 8009982:	ee36 6b45 	vsub.f64	d6, d6, d5
 8009986:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800998a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800998e:	f808 2b01 	strb.w	r2, [r8], #1
 8009992:	d439      	bmi.n	8009a08 <_dtoa_r+0x588>
 8009994:	ee32 5b46 	vsub.f64	d5, d2, d6
 8009998:	eeb4 5bc7 	vcmpe.f64	d5, d7
 800999c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099a0:	d472      	bmi.n	8009a88 <_dtoa_r+0x608>
 80099a2:	45a0      	cmp	r8, r4
 80099a4:	f43f af5d 	beq.w	8009862 <_dtoa_r+0x3e2>
 80099a8:	ee27 7b03 	vmul.f64	d7, d7, d3
 80099ac:	ee26 6b03 	vmul.f64	d6, d6, d3
 80099b0:	e7e0      	b.n	8009974 <_dtoa_r+0x4f4>
 80099b2:	f8dd 8000 	ldr.w	r8, [sp]
 80099b6:	ee27 7b04 	vmul.f64	d7, d7, d4
 80099ba:	4621      	mov	r1, r4
 80099bc:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 80099c0:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 80099c4:	ee14 2a90 	vmov	r2, s9
 80099c8:	3230      	adds	r2, #48	; 0x30
 80099ca:	f808 2b01 	strb.w	r2, [r8], #1
 80099ce:	45a0      	cmp	r8, r4
 80099d0:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 80099d4:	ee36 6b45 	vsub.f64	d6, d6, d5
 80099d8:	d118      	bne.n	8009a0c <_dtoa_r+0x58c>
 80099da:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
 80099de:	ee37 4b05 	vadd.f64	d4, d7, d5
 80099e2:	eeb4 6bc4 	vcmpe.f64	d6, d4
 80099e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099ea:	dc4d      	bgt.n	8009a88 <_dtoa_r+0x608>
 80099ec:	ee35 7b47 	vsub.f64	d7, d5, d7
 80099f0:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80099f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099f8:	f57f af33 	bpl.w	8009862 <_dtoa_r+0x3e2>
 80099fc:	4688      	mov	r8, r1
 80099fe:	3901      	subs	r1, #1
 8009a00:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 8009a04:	2b30      	cmp	r3, #48	; 0x30
 8009a06:	d0f9      	beq.n	80099fc <_dtoa_r+0x57c>
 8009a08:	46bb      	mov	fp, r7
 8009a0a:	e02a      	b.n	8009a62 <_dtoa_r+0x5e2>
 8009a0c:	ee26 6b03 	vmul.f64	d6, d6, d3
 8009a10:	e7d6      	b.n	80099c0 <_dtoa_r+0x540>
 8009a12:	ed9d 7b02 	vldr	d7, [sp, #8]
 8009a16:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
 8009a1a:	f8dd 8000 	ldr.w	r8, [sp]
 8009a1e:	ee87 5b06 	vdiv.f64	d5, d7, d6
 8009a22:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 8009a26:	ee15 3a10 	vmov	r3, s10
 8009a2a:	3330      	adds	r3, #48	; 0x30
 8009a2c:	f808 3b01 	strb.w	r3, [r8], #1
 8009a30:	9b00      	ldr	r3, [sp, #0]
 8009a32:	eba8 0303 	sub.w	r3, r8, r3
 8009a36:	4599      	cmp	r9, r3
 8009a38:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 8009a3c:	eea3 7b46 	vfms.f64	d7, d3, d6
 8009a40:	d133      	bne.n	8009aaa <_dtoa_r+0x62a>
 8009a42:	ee37 7b07 	vadd.f64	d7, d7, d7
 8009a46:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8009a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a4e:	dc1a      	bgt.n	8009a86 <_dtoa_r+0x606>
 8009a50:	eeb4 7b46 	vcmp.f64	d7, d6
 8009a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a58:	d103      	bne.n	8009a62 <_dtoa_r+0x5e2>
 8009a5a:	ee15 3a10 	vmov	r3, s10
 8009a5e:	07d9      	lsls	r1, r3, #31
 8009a60:	d411      	bmi.n	8009a86 <_dtoa_r+0x606>
 8009a62:	4629      	mov	r1, r5
 8009a64:	4630      	mov	r0, r6
 8009a66:	f000 fe7b 	bl	800a760 <_Bfree>
 8009a6a:	2300      	movs	r3, #0
 8009a6c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009a6e:	f888 3000 	strb.w	r3, [r8]
 8009a72:	f10b 0301 	add.w	r3, fp, #1
 8009a76:	6013      	str	r3, [r2, #0]
 8009a78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8009a7a:	2b00      	cmp	r3, #0
 8009a7c:	f43f ad4d 	beq.w	800951a <_dtoa_r+0x9a>
 8009a80:	f8c3 8000 	str.w	r8, [r3]
 8009a84:	e549      	b.n	800951a <_dtoa_r+0x9a>
 8009a86:	465f      	mov	r7, fp
 8009a88:	4643      	mov	r3, r8
 8009a8a:	4698      	mov	r8, r3
 8009a8c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009a90:	2a39      	cmp	r2, #57	; 0x39
 8009a92:	d106      	bne.n	8009aa2 <_dtoa_r+0x622>
 8009a94:	9a00      	ldr	r2, [sp, #0]
 8009a96:	429a      	cmp	r2, r3
 8009a98:	d1f7      	bne.n	8009a8a <_dtoa_r+0x60a>
 8009a9a:	9900      	ldr	r1, [sp, #0]
 8009a9c:	2230      	movs	r2, #48	; 0x30
 8009a9e:	3701      	adds	r7, #1
 8009aa0:	700a      	strb	r2, [r1, #0]
 8009aa2:	781a      	ldrb	r2, [r3, #0]
 8009aa4:	3201      	adds	r2, #1
 8009aa6:	701a      	strb	r2, [r3, #0]
 8009aa8:	e7ae      	b.n	8009a08 <_dtoa_r+0x588>
 8009aaa:	ee27 7b04 	vmul.f64	d7, d7, d4
 8009aae:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8009ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ab6:	d1b2      	bne.n	8009a1e <_dtoa_r+0x59e>
 8009ab8:	e7d3      	b.n	8009a62 <_dtoa_r+0x5e2>
 8009aba:	bf00      	nop
 8009abc:	0800d468 	.word	0x0800d468
 8009ac0:	0800d440 	.word	0x0800d440
 8009ac4:	9908      	ldr	r1, [sp, #32]
 8009ac6:	2900      	cmp	r1, #0
 8009ac8:	f000 80d1 	beq.w	8009c6e <_dtoa_r+0x7ee>
 8009acc:	9907      	ldr	r1, [sp, #28]
 8009ace:	2901      	cmp	r1, #1
 8009ad0:	f300 80b4 	bgt.w	8009c3c <_dtoa_r+0x7bc>
 8009ad4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8009ad6:	2900      	cmp	r1, #0
 8009ad8:	f000 80ac 	beq.w	8009c34 <_dtoa_r+0x7b4>
 8009adc:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8009ae0:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009ae4:	461c      	mov	r4, r3
 8009ae6:	930a      	str	r3, [sp, #40]	; 0x28
 8009ae8:	9b05      	ldr	r3, [sp, #20]
 8009aea:	4413      	add	r3, r2
 8009aec:	9305      	str	r3, [sp, #20]
 8009aee:	9b06      	ldr	r3, [sp, #24]
 8009af0:	2101      	movs	r1, #1
 8009af2:	4413      	add	r3, r2
 8009af4:	4630      	mov	r0, r6
 8009af6:	9306      	str	r3, [sp, #24]
 8009af8:	f000 ff38 	bl	800a96c <__i2b>
 8009afc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009afe:	4607      	mov	r7, r0
 8009b00:	f1b8 0f00 	cmp.w	r8, #0
 8009b04:	dd0d      	ble.n	8009b22 <_dtoa_r+0x6a2>
 8009b06:	9a06      	ldr	r2, [sp, #24]
 8009b08:	2a00      	cmp	r2, #0
 8009b0a:	dd0a      	ble.n	8009b22 <_dtoa_r+0x6a2>
 8009b0c:	4542      	cmp	r2, r8
 8009b0e:	9905      	ldr	r1, [sp, #20]
 8009b10:	bfa8      	it	ge
 8009b12:	4642      	movge	r2, r8
 8009b14:	1a89      	subs	r1, r1, r2
 8009b16:	9105      	str	r1, [sp, #20]
 8009b18:	9906      	ldr	r1, [sp, #24]
 8009b1a:	eba8 0802 	sub.w	r8, r8, r2
 8009b1e:	1a8a      	subs	r2, r1, r2
 8009b20:	9206      	str	r2, [sp, #24]
 8009b22:	b303      	cbz	r3, 8009b66 <_dtoa_r+0x6e6>
 8009b24:	9a08      	ldr	r2, [sp, #32]
 8009b26:	2a00      	cmp	r2, #0
 8009b28:	f000 80a6 	beq.w	8009c78 <_dtoa_r+0x7f8>
 8009b2c:	2c00      	cmp	r4, #0
 8009b2e:	dd13      	ble.n	8009b58 <_dtoa_r+0x6d8>
 8009b30:	4639      	mov	r1, r7
 8009b32:	4622      	mov	r2, r4
 8009b34:	4630      	mov	r0, r6
 8009b36:	930c      	str	r3, [sp, #48]	; 0x30
 8009b38:	f000 ffd4 	bl	800aae4 <__pow5mult>
 8009b3c:	462a      	mov	r2, r5
 8009b3e:	4601      	mov	r1, r0
 8009b40:	4607      	mov	r7, r0
 8009b42:	4630      	mov	r0, r6
 8009b44:	f000 ff28 	bl	800a998 <__multiply>
 8009b48:	4629      	mov	r1, r5
 8009b4a:	900a      	str	r0, [sp, #40]	; 0x28
 8009b4c:	4630      	mov	r0, r6
 8009b4e:	f000 fe07 	bl	800a760 <_Bfree>
 8009b52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009b54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009b56:	4615      	mov	r5, r2
 8009b58:	1b1a      	subs	r2, r3, r4
 8009b5a:	d004      	beq.n	8009b66 <_dtoa_r+0x6e6>
 8009b5c:	4629      	mov	r1, r5
 8009b5e:	4630      	mov	r0, r6
 8009b60:	f000 ffc0 	bl	800aae4 <__pow5mult>
 8009b64:	4605      	mov	r5, r0
 8009b66:	2101      	movs	r1, #1
 8009b68:	4630      	mov	r0, r6
 8009b6a:	f000 feff 	bl	800a96c <__i2b>
 8009b6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	4604      	mov	r4, r0
 8009b74:	f340 8082 	ble.w	8009c7c <_dtoa_r+0x7fc>
 8009b78:	461a      	mov	r2, r3
 8009b7a:	4601      	mov	r1, r0
 8009b7c:	4630      	mov	r0, r6
 8009b7e:	f000 ffb1 	bl	800aae4 <__pow5mult>
 8009b82:	9b07      	ldr	r3, [sp, #28]
 8009b84:	2b01      	cmp	r3, #1
 8009b86:	4604      	mov	r4, r0
 8009b88:	dd7b      	ble.n	8009c82 <_dtoa_r+0x802>
 8009b8a:	2300      	movs	r3, #0
 8009b8c:	930a      	str	r3, [sp, #40]	; 0x28
 8009b8e:	6922      	ldr	r2, [r4, #16]
 8009b90:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8009b94:	6910      	ldr	r0, [r2, #16]
 8009b96:	f000 fe99 	bl	800a8cc <__hi0bits>
 8009b9a:	f1c0 0020 	rsb	r0, r0, #32
 8009b9e:	9b06      	ldr	r3, [sp, #24]
 8009ba0:	4418      	add	r0, r3
 8009ba2:	f010 001f 	ands.w	r0, r0, #31
 8009ba6:	f000 808d 	beq.w	8009cc4 <_dtoa_r+0x844>
 8009baa:	f1c0 0220 	rsb	r2, r0, #32
 8009bae:	2a04      	cmp	r2, #4
 8009bb0:	f340 8086 	ble.w	8009cc0 <_dtoa_r+0x840>
 8009bb4:	f1c0 001c 	rsb	r0, r0, #28
 8009bb8:	9b05      	ldr	r3, [sp, #20]
 8009bba:	4403      	add	r3, r0
 8009bbc:	9305      	str	r3, [sp, #20]
 8009bbe:	9b06      	ldr	r3, [sp, #24]
 8009bc0:	4403      	add	r3, r0
 8009bc2:	4480      	add	r8, r0
 8009bc4:	9306      	str	r3, [sp, #24]
 8009bc6:	9b05      	ldr	r3, [sp, #20]
 8009bc8:	2b00      	cmp	r3, #0
 8009bca:	dd05      	ble.n	8009bd8 <_dtoa_r+0x758>
 8009bcc:	4629      	mov	r1, r5
 8009bce:	461a      	mov	r2, r3
 8009bd0:	4630      	mov	r0, r6
 8009bd2:	f000 ffe1 	bl	800ab98 <__lshift>
 8009bd6:	4605      	mov	r5, r0
 8009bd8:	9b06      	ldr	r3, [sp, #24]
 8009bda:	2b00      	cmp	r3, #0
 8009bdc:	dd05      	ble.n	8009bea <_dtoa_r+0x76a>
 8009bde:	4621      	mov	r1, r4
 8009be0:	461a      	mov	r2, r3
 8009be2:	4630      	mov	r0, r6
 8009be4:	f000 ffd8 	bl	800ab98 <__lshift>
 8009be8:	4604      	mov	r4, r0
 8009bea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009bec:	2b00      	cmp	r3, #0
 8009bee:	d06b      	beq.n	8009cc8 <_dtoa_r+0x848>
 8009bf0:	4621      	mov	r1, r4
 8009bf2:	4628      	mov	r0, r5
 8009bf4:	f001 f83c 	bl	800ac70 <__mcmp>
 8009bf8:	2800      	cmp	r0, #0
 8009bfa:	da65      	bge.n	8009cc8 <_dtoa_r+0x848>
 8009bfc:	2300      	movs	r3, #0
 8009bfe:	4629      	mov	r1, r5
 8009c00:	220a      	movs	r2, #10
 8009c02:	4630      	mov	r0, r6
 8009c04:	f000 fdce 	bl	800a7a4 <__multadd>
 8009c08:	9b08      	ldr	r3, [sp, #32]
 8009c0a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009c0e:	4605      	mov	r5, r0
 8009c10:	2b00      	cmp	r3, #0
 8009c12:	f000 8192 	beq.w	8009f3a <_dtoa_r+0xaba>
 8009c16:	4639      	mov	r1, r7
 8009c18:	2300      	movs	r3, #0
 8009c1a:	220a      	movs	r2, #10
 8009c1c:	4630      	mov	r0, r6
 8009c1e:	f000 fdc1 	bl	800a7a4 <__multadd>
 8009c22:	f1ba 0f00 	cmp.w	sl, #0
 8009c26:	4607      	mov	r7, r0
 8009c28:	f300 808e 	bgt.w	8009d48 <_dtoa_r+0x8c8>
 8009c2c:	9b07      	ldr	r3, [sp, #28]
 8009c2e:	2b02      	cmp	r3, #2
 8009c30:	dc51      	bgt.n	8009cd6 <_dtoa_r+0x856>
 8009c32:	e089      	b.n	8009d48 <_dtoa_r+0x8c8>
 8009c34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8009c36:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8009c3a:	e751      	b.n	8009ae0 <_dtoa_r+0x660>
 8009c3c:	f109 34ff 	add.w	r4, r9, #4294967295
 8009c40:	42a3      	cmp	r3, r4
 8009c42:	bfbf      	itttt	lt
 8009c44:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8009c46:	1ae3      	sublt	r3, r4, r3
 8009c48:	18d2      	addlt	r2, r2, r3
 8009c4a:	4613      	movlt	r3, r2
 8009c4c:	bfb7      	itett	lt
 8009c4e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8009c50:	1b1c      	subge	r4, r3, r4
 8009c52:	4623      	movlt	r3, r4
 8009c54:	2400      	movlt	r4, #0
 8009c56:	f1b9 0f00 	cmp.w	r9, #0
 8009c5a:	bfb5      	itete	lt
 8009c5c:	9a05      	ldrlt	r2, [sp, #20]
 8009c5e:	f8dd 8014 	ldrge.w	r8, [sp, #20]
 8009c62:	eba2 0809 	sublt.w	r8, r2, r9
 8009c66:	464a      	movge	r2, r9
 8009c68:	bfb8      	it	lt
 8009c6a:	2200      	movlt	r2, #0
 8009c6c:	e73b      	b.n	8009ae6 <_dtoa_r+0x666>
 8009c6e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009c72:	9f08      	ldr	r7, [sp, #32]
 8009c74:	461c      	mov	r4, r3
 8009c76:	e743      	b.n	8009b00 <_dtoa_r+0x680>
 8009c78:	461a      	mov	r2, r3
 8009c7a:	e76f      	b.n	8009b5c <_dtoa_r+0x6dc>
 8009c7c:	9b07      	ldr	r3, [sp, #28]
 8009c7e:	2b01      	cmp	r3, #1
 8009c80:	dc18      	bgt.n	8009cb4 <_dtoa_r+0x834>
 8009c82:	9b02      	ldr	r3, [sp, #8]
 8009c84:	b9b3      	cbnz	r3, 8009cb4 <_dtoa_r+0x834>
 8009c86:	9b03      	ldr	r3, [sp, #12]
 8009c88:	f3c3 0213 	ubfx	r2, r3, #0, #20
 8009c8c:	b9a2      	cbnz	r2, 8009cb8 <_dtoa_r+0x838>
 8009c8e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8009c92:	0d12      	lsrs	r2, r2, #20
 8009c94:	0512      	lsls	r2, r2, #20
 8009c96:	b18a      	cbz	r2, 8009cbc <_dtoa_r+0x83c>
 8009c98:	9b05      	ldr	r3, [sp, #20]
 8009c9a:	3301      	adds	r3, #1
 8009c9c:	9305      	str	r3, [sp, #20]
 8009c9e:	9b06      	ldr	r3, [sp, #24]
 8009ca0:	3301      	adds	r3, #1
 8009ca2:	9306      	str	r3, [sp, #24]
 8009ca4:	2301      	movs	r3, #1
 8009ca6:	930a      	str	r3, [sp, #40]	; 0x28
 8009ca8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	f47f af6f 	bne.w	8009b8e <_dtoa_r+0x70e>
 8009cb0:	2001      	movs	r0, #1
 8009cb2:	e774      	b.n	8009b9e <_dtoa_r+0x71e>
 8009cb4:	2300      	movs	r3, #0
 8009cb6:	e7f6      	b.n	8009ca6 <_dtoa_r+0x826>
 8009cb8:	9b02      	ldr	r3, [sp, #8]
 8009cba:	e7f4      	b.n	8009ca6 <_dtoa_r+0x826>
 8009cbc:	920a      	str	r2, [sp, #40]	; 0x28
 8009cbe:	e7f3      	b.n	8009ca8 <_dtoa_r+0x828>
 8009cc0:	d081      	beq.n	8009bc6 <_dtoa_r+0x746>
 8009cc2:	4610      	mov	r0, r2
 8009cc4:	301c      	adds	r0, #28
 8009cc6:	e777      	b.n	8009bb8 <_dtoa_r+0x738>
 8009cc8:	f1b9 0f00 	cmp.w	r9, #0
 8009ccc:	dc37      	bgt.n	8009d3e <_dtoa_r+0x8be>
 8009cce:	9b07      	ldr	r3, [sp, #28]
 8009cd0:	2b02      	cmp	r3, #2
 8009cd2:	dd34      	ble.n	8009d3e <_dtoa_r+0x8be>
 8009cd4:	46ca      	mov	sl, r9
 8009cd6:	f1ba 0f00 	cmp.w	sl, #0
 8009cda:	d10d      	bne.n	8009cf8 <_dtoa_r+0x878>
 8009cdc:	4621      	mov	r1, r4
 8009cde:	4653      	mov	r3, sl
 8009ce0:	2205      	movs	r2, #5
 8009ce2:	4630      	mov	r0, r6
 8009ce4:	f000 fd5e 	bl	800a7a4 <__multadd>
 8009ce8:	4601      	mov	r1, r0
 8009cea:	4604      	mov	r4, r0
 8009cec:	4628      	mov	r0, r5
 8009cee:	f000 ffbf 	bl	800ac70 <__mcmp>
 8009cf2:	2800      	cmp	r0, #0
 8009cf4:	f73f adde 	bgt.w	80098b4 <_dtoa_r+0x434>
 8009cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009cfa:	f8dd 8000 	ldr.w	r8, [sp]
 8009cfe:	ea6f 0b03 	mvn.w	fp, r3
 8009d02:	f04f 0900 	mov.w	r9, #0
 8009d06:	4621      	mov	r1, r4
 8009d08:	4630      	mov	r0, r6
 8009d0a:	f000 fd29 	bl	800a760 <_Bfree>
 8009d0e:	2f00      	cmp	r7, #0
 8009d10:	f43f aea7 	beq.w	8009a62 <_dtoa_r+0x5e2>
 8009d14:	f1b9 0f00 	cmp.w	r9, #0
 8009d18:	d005      	beq.n	8009d26 <_dtoa_r+0x8a6>
 8009d1a:	45b9      	cmp	r9, r7
 8009d1c:	d003      	beq.n	8009d26 <_dtoa_r+0x8a6>
 8009d1e:	4649      	mov	r1, r9
 8009d20:	4630      	mov	r0, r6
 8009d22:	f000 fd1d 	bl	800a760 <_Bfree>
 8009d26:	4639      	mov	r1, r7
 8009d28:	4630      	mov	r0, r6
 8009d2a:	f000 fd19 	bl	800a760 <_Bfree>
 8009d2e:	e698      	b.n	8009a62 <_dtoa_r+0x5e2>
 8009d30:	2400      	movs	r4, #0
 8009d32:	4627      	mov	r7, r4
 8009d34:	e7e0      	b.n	8009cf8 <_dtoa_r+0x878>
 8009d36:	46bb      	mov	fp, r7
 8009d38:	4604      	mov	r4, r0
 8009d3a:	4607      	mov	r7, r0
 8009d3c:	e5ba      	b.n	80098b4 <_dtoa_r+0x434>
 8009d3e:	9b08      	ldr	r3, [sp, #32]
 8009d40:	46ca      	mov	sl, r9
 8009d42:	2b00      	cmp	r3, #0
 8009d44:	f000 8100 	beq.w	8009f48 <_dtoa_r+0xac8>
 8009d48:	f1b8 0f00 	cmp.w	r8, #0
 8009d4c:	dd05      	ble.n	8009d5a <_dtoa_r+0x8da>
 8009d4e:	4639      	mov	r1, r7
 8009d50:	4642      	mov	r2, r8
 8009d52:	4630      	mov	r0, r6
 8009d54:	f000 ff20 	bl	800ab98 <__lshift>
 8009d58:	4607      	mov	r7, r0
 8009d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009d5c:	2b00      	cmp	r3, #0
 8009d5e:	d05d      	beq.n	8009e1c <_dtoa_r+0x99c>
 8009d60:	6879      	ldr	r1, [r7, #4]
 8009d62:	4630      	mov	r0, r6
 8009d64:	f000 fcbc 	bl	800a6e0 <_Balloc>
 8009d68:	4680      	mov	r8, r0
 8009d6a:	b928      	cbnz	r0, 8009d78 <_dtoa_r+0x8f8>
 8009d6c:	4b82      	ldr	r3, [pc, #520]	; (8009f78 <_dtoa_r+0xaf8>)
 8009d6e:	4602      	mov	r2, r0
 8009d70:	f240 21ea 	movw	r1, #746	; 0x2ea
 8009d74:	f7ff bb9a 	b.w	80094ac <_dtoa_r+0x2c>
 8009d78:	693a      	ldr	r2, [r7, #16]
 8009d7a:	3202      	adds	r2, #2
 8009d7c:	0092      	lsls	r2, r2, #2
 8009d7e:	f107 010c 	add.w	r1, r7, #12
 8009d82:	300c      	adds	r0, #12
 8009d84:	f000 fc9e 	bl	800a6c4 <memcpy>
 8009d88:	2201      	movs	r2, #1
 8009d8a:	4641      	mov	r1, r8
 8009d8c:	4630      	mov	r0, r6
 8009d8e:	f000 ff03 	bl	800ab98 <__lshift>
 8009d92:	9b00      	ldr	r3, [sp, #0]
 8009d94:	3301      	adds	r3, #1
 8009d96:	9305      	str	r3, [sp, #20]
 8009d98:	9b00      	ldr	r3, [sp, #0]
 8009d9a:	4453      	add	r3, sl
 8009d9c:	9309      	str	r3, [sp, #36]	; 0x24
 8009d9e:	9b02      	ldr	r3, [sp, #8]
 8009da0:	f003 0301 	and.w	r3, r3, #1
 8009da4:	46b9      	mov	r9, r7
 8009da6:	9308      	str	r3, [sp, #32]
 8009da8:	4607      	mov	r7, r0
 8009daa:	9b05      	ldr	r3, [sp, #20]
 8009dac:	4621      	mov	r1, r4
 8009dae:	3b01      	subs	r3, #1
 8009db0:	4628      	mov	r0, r5
 8009db2:	9302      	str	r3, [sp, #8]
 8009db4:	f7ff fad8 	bl	8009368 <quorem>
 8009db8:	4603      	mov	r3, r0
 8009dba:	3330      	adds	r3, #48	; 0x30
 8009dbc:	9006      	str	r0, [sp, #24]
 8009dbe:	4649      	mov	r1, r9
 8009dc0:	4628      	mov	r0, r5
 8009dc2:	930a      	str	r3, [sp, #40]	; 0x28
 8009dc4:	f000 ff54 	bl	800ac70 <__mcmp>
 8009dc8:	463a      	mov	r2, r7
 8009dca:	4682      	mov	sl, r0
 8009dcc:	4621      	mov	r1, r4
 8009dce:	4630      	mov	r0, r6
 8009dd0:	f000 ff6a 	bl	800aca8 <__mdiff>
 8009dd4:	68c2      	ldr	r2, [r0, #12]
 8009dd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009dd8:	4680      	mov	r8, r0
 8009dda:	bb0a      	cbnz	r2, 8009e20 <_dtoa_r+0x9a0>
 8009ddc:	4601      	mov	r1, r0
 8009dde:	4628      	mov	r0, r5
 8009de0:	f000 ff46 	bl	800ac70 <__mcmp>
 8009de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009de6:	4602      	mov	r2, r0
 8009de8:	4641      	mov	r1, r8
 8009dea:	4630      	mov	r0, r6
 8009dec:	920e      	str	r2, [sp, #56]	; 0x38
 8009dee:	930a      	str	r3, [sp, #40]	; 0x28
 8009df0:	f000 fcb6 	bl	800a760 <_Bfree>
 8009df4:	9b07      	ldr	r3, [sp, #28]
 8009df6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009df8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009dfc:	ea43 0102 	orr.w	r1, r3, r2
 8009e00:	9b08      	ldr	r3, [sp, #32]
 8009e02:	430b      	orrs	r3, r1
 8009e04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009e06:	d10d      	bne.n	8009e24 <_dtoa_r+0x9a4>
 8009e08:	2b39      	cmp	r3, #57	; 0x39
 8009e0a:	d029      	beq.n	8009e60 <_dtoa_r+0x9e0>
 8009e0c:	f1ba 0f00 	cmp.w	sl, #0
 8009e10:	dd01      	ble.n	8009e16 <_dtoa_r+0x996>
 8009e12:	9b06      	ldr	r3, [sp, #24]
 8009e14:	3331      	adds	r3, #49	; 0x31
 8009e16:	9a02      	ldr	r2, [sp, #8]
 8009e18:	7013      	strb	r3, [r2, #0]
 8009e1a:	e774      	b.n	8009d06 <_dtoa_r+0x886>
 8009e1c:	4638      	mov	r0, r7
 8009e1e:	e7b8      	b.n	8009d92 <_dtoa_r+0x912>
 8009e20:	2201      	movs	r2, #1
 8009e22:	e7e1      	b.n	8009de8 <_dtoa_r+0x968>
 8009e24:	f1ba 0f00 	cmp.w	sl, #0
 8009e28:	db06      	blt.n	8009e38 <_dtoa_r+0x9b8>
 8009e2a:	9907      	ldr	r1, [sp, #28]
 8009e2c:	ea41 0a0a 	orr.w	sl, r1, sl
 8009e30:	9908      	ldr	r1, [sp, #32]
 8009e32:	ea5a 0101 	orrs.w	r1, sl, r1
 8009e36:	d120      	bne.n	8009e7a <_dtoa_r+0x9fa>
 8009e38:	2a00      	cmp	r2, #0
 8009e3a:	ddec      	ble.n	8009e16 <_dtoa_r+0x996>
 8009e3c:	4629      	mov	r1, r5
 8009e3e:	2201      	movs	r2, #1
 8009e40:	4630      	mov	r0, r6
 8009e42:	9305      	str	r3, [sp, #20]
 8009e44:	f000 fea8 	bl	800ab98 <__lshift>
 8009e48:	4621      	mov	r1, r4
 8009e4a:	4605      	mov	r5, r0
 8009e4c:	f000 ff10 	bl	800ac70 <__mcmp>
 8009e50:	2800      	cmp	r0, #0
 8009e52:	9b05      	ldr	r3, [sp, #20]
 8009e54:	dc02      	bgt.n	8009e5c <_dtoa_r+0x9dc>
 8009e56:	d1de      	bne.n	8009e16 <_dtoa_r+0x996>
 8009e58:	07da      	lsls	r2, r3, #31
 8009e5a:	d5dc      	bpl.n	8009e16 <_dtoa_r+0x996>
 8009e5c:	2b39      	cmp	r3, #57	; 0x39
 8009e5e:	d1d8      	bne.n	8009e12 <_dtoa_r+0x992>
 8009e60:	9a02      	ldr	r2, [sp, #8]
 8009e62:	2339      	movs	r3, #57	; 0x39
 8009e64:	7013      	strb	r3, [r2, #0]
 8009e66:	4643      	mov	r3, r8
 8009e68:	4698      	mov	r8, r3
 8009e6a:	3b01      	subs	r3, #1
 8009e6c:	f818 2c01 	ldrb.w	r2, [r8, #-1]
 8009e70:	2a39      	cmp	r2, #57	; 0x39
 8009e72:	d051      	beq.n	8009f18 <_dtoa_r+0xa98>
 8009e74:	3201      	adds	r2, #1
 8009e76:	701a      	strb	r2, [r3, #0]
 8009e78:	e745      	b.n	8009d06 <_dtoa_r+0x886>
 8009e7a:	2a00      	cmp	r2, #0
 8009e7c:	dd03      	ble.n	8009e86 <_dtoa_r+0xa06>
 8009e7e:	2b39      	cmp	r3, #57	; 0x39
 8009e80:	d0ee      	beq.n	8009e60 <_dtoa_r+0x9e0>
 8009e82:	3301      	adds	r3, #1
 8009e84:	e7c7      	b.n	8009e16 <_dtoa_r+0x996>
 8009e86:	9a05      	ldr	r2, [sp, #20]
 8009e88:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009e8a:	f802 3c01 	strb.w	r3, [r2, #-1]
 8009e8e:	428a      	cmp	r2, r1
 8009e90:	d02b      	beq.n	8009eea <_dtoa_r+0xa6a>
 8009e92:	4629      	mov	r1, r5
 8009e94:	2300      	movs	r3, #0
 8009e96:	220a      	movs	r2, #10
 8009e98:	4630      	mov	r0, r6
 8009e9a:	f000 fc83 	bl	800a7a4 <__multadd>
 8009e9e:	45b9      	cmp	r9, r7
 8009ea0:	4605      	mov	r5, r0
 8009ea2:	f04f 0300 	mov.w	r3, #0
 8009ea6:	f04f 020a 	mov.w	r2, #10
 8009eaa:	4649      	mov	r1, r9
 8009eac:	4630      	mov	r0, r6
 8009eae:	d107      	bne.n	8009ec0 <_dtoa_r+0xa40>
 8009eb0:	f000 fc78 	bl	800a7a4 <__multadd>
 8009eb4:	4681      	mov	r9, r0
 8009eb6:	4607      	mov	r7, r0
 8009eb8:	9b05      	ldr	r3, [sp, #20]
 8009eba:	3301      	adds	r3, #1
 8009ebc:	9305      	str	r3, [sp, #20]
 8009ebe:	e774      	b.n	8009daa <_dtoa_r+0x92a>
 8009ec0:	f000 fc70 	bl	800a7a4 <__multadd>
 8009ec4:	4639      	mov	r1, r7
 8009ec6:	4681      	mov	r9, r0
 8009ec8:	2300      	movs	r3, #0
 8009eca:	220a      	movs	r2, #10
 8009ecc:	4630      	mov	r0, r6
 8009ece:	f000 fc69 	bl	800a7a4 <__multadd>
 8009ed2:	4607      	mov	r7, r0
 8009ed4:	e7f0      	b.n	8009eb8 <_dtoa_r+0xa38>
 8009ed6:	f1ba 0f00 	cmp.w	sl, #0
 8009eda:	9a00      	ldr	r2, [sp, #0]
 8009edc:	bfcc      	ite	gt
 8009ede:	46d0      	movgt	r8, sl
 8009ee0:	f04f 0801 	movle.w	r8, #1
 8009ee4:	4490      	add	r8, r2
 8009ee6:	f04f 0900 	mov.w	r9, #0
 8009eea:	4629      	mov	r1, r5
 8009eec:	2201      	movs	r2, #1
 8009eee:	4630      	mov	r0, r6
 8009ef0:	9302      	str	r3, [sp, #8]
 8009ef2:	f000 fe51 	bl	800ab98 <__lshift>
 8009ef6:	4621      	mov	r1, r4
 8009ef8:	4605      	mov	r5, r0
 8009efa:	f000 feb9 	bl	800ac70 <__mcmp>
 8009efe:	2800      	cmp	r0, #0
 8009f00:	dcb1      	bgt.n	8009e66 <_dtoa_r+0x9e6>
 8009f02:	d102      	bne.n	8009f0a <_dtoa_r+0xa8a>
 8009f04:	9b02      	ldr	r3, [sp, #8]
 8009f06:	07db      	lsls	r3, r3, #31
 8009f08:	d4ad      	bmi.n	8009e66 <_dtoa_r+0x9e6>
 8009f0a:	4643      	mov	r3, r8
 8009f0c:	4698      	mov	r8, r3
 8009f0e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009f12:	2a30      	cmp	r2, #48	; 0x30
 8009f14:	d0fa      	beq.n	8009f0c <_dtoa_r+0xa8c>
 8009f16:	e6f6      	b.n	8009d06 <_dtoa_r+0x886>
 8009f18:	9a00      	ldr	r2, [sp, #0]
 8009f1a:	429a      	cmp	r2, r3
 8009f1c:	d1a4      	bne.n	8009e68 <_dtoa_r+0x9e8>
 8009f1e:	f10b 0b01 	add.w	fp, fp, #1
 8009f22:	2331      	movs	r3, #49	; 0x31
 8009f24:	e778      	b.n	8009e18 <_dtoa_r+0x998>
 8009f26:	4b15      	ldr	r3, [pc, #84]	; (8009f7c <_dtoa_r+0xafc>)
 8009f28:	f7ff bb12 	b.w	8009550 <_dtoa_r+0xd0>
 8009f2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8009f2e:	2b00      	cmp	r3, #0
 8009f30:	f47f aaee 	bne.w	8009510 <_dtoa_r+0x90>
 8009f34:	4b12      	ldr	r3, [pc, #72]	; (8009f80 <_dtoa_r+0xb00>)
 8009f36:	f7ff bb0b 	b.w	8009550 <_dtoa_r+0xd0>
 8009f3a:	f1ba 0f00 	cmp.w	sl, #0
 8009f3e:	dc03      	bgt.n	8009f48 <_dtoa_r+0xac8>
 8009f40:	9b07      	ldr	r3, [sp, #28]
 8009f42:	2b02      	cmp	r3, #2
 8009f44:	f73f aec7 	bgt.w	8009cd6 <_dtoa_r+0x856>
 8009f48:	f8dd 8000 	ldr.w	r8, [sp]
 8009f4c:	4621      	mov	r1, r4
 8009f4e:	4628      	mov	r0, r5
 8009f50:	f7ff fa0a 	bl	8009368 <quorem>
 8009f54:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8009f58:	f808 3b01 	strb.w	r3, [r8], #1
 8009f5c:	9a00      	ldr	r2, [sp, #0]
 8009f5e:	eba8 0202 	sub.w	r2, r8, r2
 8009f62:	4592      	cmp	sl, r2
 8009f64:	ddb7      	ble.n	8009ed6 <_dtoa_r+0xa56>
 8009f66:	4629      	mov	r1, r5
 8009f68:	2300      	movs	r3, #0
 8009f6a:	220a      	movs	r2, #10
 8009f6c:	4630      	mov	r0, r6
 8009f6e:	f000 fc19 	bl	800a7a4 <__multadd>
 8009f72:	4605      	mov	r5, r0
 8009f74:	e7ea      	b.n	8009f4c <_dtoa_r+0xacc>
 8009f76:	bf00      	nop
 8009f78:	0800d34c 	.word	0x0800d34c
 8009f7c:	0800d551 	.word	0x0800d551
 8009f80:	0800d2c9 	.word	0x0800d2c9

08009f84 <rshift>:
 8009f84:	6903      	ldr	r3, [r0, #16]
 8009f86:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8009f8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f8e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8009f92:	f100 0414 	add.w	r4, r0, #20
 8009f96:	dd45      	ble.n	800a024 <rshift+0xa0>
 8009f98:	f011 011f 	ands.w	r1, r1, #31
 8009f9c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8009fa0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8009fa4:	d10c      	bne.n	8009fc0 <rshift+0x3c>
 8009fa6:	f100 0710 	add.w	r7, r0, #16
 8009faa:	4629      	mov	r1, r5
 8009fac:	42b1      	cmp	r1, r6
 8009fae:	d334      	bcc.n	800a01a <rshift+0x96>
 8009fb0:	1a9b      	subs	r3, r3, r2
 8009fb2:	009b      	lsls	r3, r3, #2
 8009fb4:	1eea      	subs	r2, r5, #3
 8009fb6:	4296      	cmp	r6, r2
 8009fb8:	bf38      	it	cc
 8009fba:	2300      	movcc	r3, #0
 8009fbc:	4423      	add	r3, r4
 8009fbe:	e015      	b.n	8009fec <rshift+0x68>
 8009fc0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8009fc4:	f1c1 0820 	rsb	r8, r1, #32
 8009fc8:	40cf      	lsrs	r7, r1
 8009fca:	f105 0e04 	add.w	lr, r5, #4
 8009fce:	46a1      	mov	r9, r4
 8009fd0:	4576      	cmp	r6, lr
 8009fd2:	46f4      	mov	ip, lr
 8009fd4:	d815      	bhi.n	800a002 <rshift+0x7e>
 8009fd6:	1a9b      	subs	r3, r3, r2
 8009fd8:	009a      	lsls	r2, r3, #2
 8009fda:	3a04      	subs	r2, #4
 8009fdc:	3501      	adds	r5, #1
 8009fde:	42ae      	cmp	r6, r5
 8009fe0:	bf38      	it	cc
 8009fe2:	2200      	movcc	r2, #0
 8009fe4:	18a3      	adds	r3, r4, r2
 8009fe6:	50a7      	str	r7, [r4, r2]
 8009fe8:	b107      	cbz	r7, 8009fec <rshift+0x68>
 8009fea:	3304      	adds	r3, #4
 8009fec:	1b1a      	subs	r2, r3, r4
 8009fee:	42a3      	cmp	r3, r4
 8009ff0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8009ff4:	bf08      	it	eq
 8009ff6:	2300      	moveq	r3, #0
 8009ff8:	6102      	str	r2, [r0, #16]
 8009ffa:	bf08      	it	eq
 8009ffc:	6143      	streq	r3, [r0, #20]
 8009ffe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a002:	f8dc c000 	ldr.w	ip, [ip]
 800a006:	fa0c fc08 	lsl.w	ip, ip, r8
 800a00a:	ea4c 0707 	orr.w	r7, ip, r7
 800a00e:	f849 7b04 	str.w	r7, [r9], #4
 800a012:	f85e 7b04 	ldr.w	r7, [lr], #4
 800a016:	40cf      	lsrs	r7, r1
 800a018:	e7da      	b.n	8009fd0 <rshift+0x4c>
 800a01a:	f851 cb04 	ldr.w	ip, [r1], #4
 800a01e:	f847 cf04 	str.w	ip, [r7, #4]!
 800a022:	e7c3      	b.n	8009fac <rshift+0x28>
 800a024:	4623      	mov	r3, r4
 800a026:	e7e1      	b.n	8009fec <rshift+0x68>

0800a028 <__hexdig_fun>:
 800a028:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800a02c:	2b09      	cmp	r3, #9
 800a02e:	d802      	bhi.n	800a036 <__hexdig_fun+0xe>
 800a030:	3820      	subs	r0, #32
 800a032:	b2c0      	uxtb	r0, r0
 800a034:	4770      	bx	lr
 800a036:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800a03a:	2b05      	cmp	r3, #5
 800a03c:	d801      	bhi.n	800a042 <__hexdig_fun+0x1a>
 800a03e:	3847      	subs	r0, #71	; 0x47
 800a040:	e7f7      	b.n	800a032 <__hexdig_fun+0xa>
 800a042:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a046:	2b05      	cmp	r3, #5
 800a048:	d801      	bhi.n	800a04e <__hexdig_fun+0x26>
 800a04a:	3827      	subs	r0, #39	; 0x27
 800a04c:	e7f1      	b.n	800a032 <__hexdig_fun+0xa>
 800a04e:	2000      	movs	r0, #0
 800a050:	4770      	bx	lr
	...

0800a054 <__gethex>:
 800a054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a058:	ed2d 8b02 	vpush	{d8}
 800a05c:	b089      	sub	sp, #36	; 0x24
 800a05e:	ee08 0a10 	vmov	s16, r0
 800a062:	9304      	str	r3, [sp, #16]
 800a064:	4bbc      	ldr	r3, [pc, #752]	; (800a358 <__gethex+0x304>)
 800a066:	681b      	ldr	r3, [r3, #0]
 800a068:	9301      	str	r3, [sp, #4]
 800a06a:	4618      	mov	r0, r3
 800a06c:	468b      	mov	fp, r1
 800a06e:	4690      	mov	r8, r2
 800a070:	f7f6 f8f0 	bl	8000254 <strlen>
 800a074:	9b01      	ldr	r3, [sp, #4]
 800a076:	f8db 2000 	ldr.w	r2, [fp]
 800a07a:	4403      	add	r3, r0
 800a07c:	4682      	mov	sl, r0
 800a07e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800a082:	9305      	str	r3, [sp, #20]
 800a084:	1c93      	adds	r3, r2, #2
 800a086:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800a08a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800a08e:	32fe      	adds	r2, #254	; 0xfe
 800a090:	18d1      	adds	r1, r2, r3
 800a092:	461f      	mov	r7, r3
 800a094:	f813 0b01 	ldrb.w	r0, [r3], #1
 800a098:	9100      	str	r1, [sp, #0]
 800a09a:	2830      	cmp	r0, #48	; 0x30
 800a09c:	d0f8      	beq.n	800a090 <__gethex+0x3c>
 800a09e:	f7ff ffc3 	bl	800a028 <__hexdig_fun>
 800a0a2:	4604      	mov	r4, r0
 800a0a4:	2800      	cmp	r0, #0
 800a0a6:	d13a      	bne.n	800a11e <__gethex+0xca>
 800a0a8:	9901      	ldr	r1, [sp, #4]
 800a0aa:	4652      	mov	r2, sl
 800a0ac:	4638      	mov	r0, r7
 800a0ae:	f7fe fa98 	bl	80085e2 <strncmp>
 800a0b2:	4605      	mov	r5, r0
 800a0b4:	2800      	cmp	r0, #0
 800a0b6:	d168      	bne.n	800a18a <__gethex+0x136>
 800a0b8:	f817 000a 	ldrb.w	r0, [r7, sl]
 800a0bc:	eb07 060a 	add.w	r6, r7, sl
 800a0c0:	f7ff ffb2 	bl	800a028 <__hexdig_fun>
 800a0c4:	2800      	cmp	r0, #0
 800a0c6:	d062      	beq.n	800a18e <__gethex+0x13a>
 800a0c8:	4633      	mov	r3, r6
 800a0ca:	7818      	ldrb	r0, [r3, #0]
 800a0cc:	2830      	cmp	r0, #48	; 0x30
 800a0ce:	461f      	mov	r7, r3
 800a0d0:	f103 0301 	add.w	r3, r3, #1
 800a0d4:	d0f9      	beq.n	800a0ca <__gethex+0x76>
 800a0d6:	f7ff ffa7 	bl	800a028 <__hexdig_fun>
 800a0da:	2301      	movs	r3, #1
 800a0dc:	fab0 f480 	clz	r4, r0
 800a0e0:	0964      	lsrs	r4, r4, #5
 800a0e2:	4635      	mov	r5, r6
 800a0e4:	9300      	str	r3, [sp, #0]
 800a0e6:	463a      	mov	r2, r7
 800a0e8:	4616      	mov	r6, r2
 800a0ea:	3201      	adds	r2, #1
 800a0ec:	7830      	ldrb	r0, [r6, #0]
 800a0ee:	f7ff ff9b 	bl	800a028 <__hexdig_fun>
 800a0f2:	2800      	cmp	r0, #0
 800a0f4:	d1f8      	bne.n	800a0e8 <__gethex+0x94>
 800a0f6:	9901      	ldr	r1, [sp, #4]
 800a0f8:	4652      	mov	r2, sl
 800a0fa:	4630      	mov	r0, r6
 800a0fc:	f7fe fa71 	bl	80085e2 <strncmp>
 800a100:	b980      	cbnz	r0, 800a124 <__gethex+0xd0>
 800a102:	b94d      	cbnz	r5, 800a118 <__gethex+0xc4>
 800a104:	eb06 050a 	add.w	r5, r6, sl
 800a108:	462a      	mov	r2, r5
 800a10a:	4616      	mov	r6, r2
 800a10c:	3201      	adds	r2, #1
 800a10e:	7830      	ldrb	r0, [r6, #0]
 800a110:	f7ff ff8a 	bl	800a028 <__hexdig_fun>
 800a114:	2800      	cmp	r0, #0
 800a116:	d1f8      	bne.n	800a10a <__gethex+0xb6>
 800a118:	1bad      	subs	r5, r5, r6
 800a11a:	00ad      	lsls	r5, r5, #2
 800a11c:	e004      	b.n	800a128 <__gethex+0xd4>
 800a11e:	2400      	movs	r4, #0
 800a120:	4625      	mov	r5, r4
 800a122:	e7e0      	b.n	800a0e6 <__gethex+0x92>
 800a124:	2d00      	cmp	r5, #0
 800a126:	d1f7      	bne.n	800a118 <__gethex+0xc4>
 800a128:	7833      	ldrb	r3, [r6, #0]
 800a12a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800a12e:	2b50      	cmp	r3, #80	; 0x50
 800a130:	d13b      	bne.n	800a1aa <__gethex+0x156>
 800a132:	7873      	ldrb	r3, [r6, #1]
 800a134:	2b2b      	cmp	r3, #43	; 0x2b
 800a136:	d02c      	beq.n	800a192 <__gethex+0x13e>
 800a138:	2b2d      	cmp	r3, #45	; 0x2d
 800a13a:	d02e      	beq.n	800a19a <__gethex+0x146>
 800a13c:	1c71      	adds	r1, r6, #1
 800a13e:	f04f 0900 	mov.w	r9, #0
 800a142:	7808      	ldrb	r0, [r1, #0]
 800a144:	f7ff ff70 	bl	800a028 <__hexdig_fun>
 800a148:	1e43      	subs	r3, r0, #1
 800a14a:	b2db      	uxtb	r3, r3
 800a14c:	2b18      	cmp	r3, #24
 800a14e:	d82c      	bhi.n	800a1aa <__gethex+0x156>
 800a150:	f1a0 0210 	sub.w	r2, r0, #16
 800a154:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800a158:	f7ff ff66 	bl	800a028 <__hexdig_fun>
 800a15c:	1e43      	subs	r3, r0, #1
 800a15e:	b2db      	uxtb	r3, r3
 800a160:	2b18      	cmp	r3, #24
 800a162:	d91d      	bls.n	800a1a0 <__gethex+0x14c>
 800a164:	f1b9 0f00 	cmp.w	r9, #0
 800a168:	d000      	beq.n	800a16c <__gethex+0x118>
 800a16a:	4252      	negs	r2, r2
 800a16c:	4415      	add	r5, r2
 800a16e:	f8cb 1000 	str.w	r1, [fp]
 800a172:	b1e4      	cbz	r4, 800a1ae <__gethex+0x15a>
 800a174:	9b00      	ldr	r3, [sp, #0]
 800a176:	2b00      	cmp	r3, #0
 800a178:	bf14      	ite	ne
 800a17a:	2700      	movne	r7, #0
 800a17c:	2706      	moveq	r7, #6
 800a17e:	4638      	mov	r0, r7
 800a180:	b009      	add	sp, #36	; 0x24
 800a182:	ecbd 8b02 	vpop	{d8}
 800a186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a18a:	463e      	mov	r6, r7
 800a18c:	4625      	mov	r5, r4
 800a18e:	2401      	movs	r4, #1
 800a190:	e7ca      	b.n	800a128 <__gethex+0xd4>
 800a192:	f04f 0900 	mov.w	r9, #0
 800a196:	1cb1      	adds	r1, r6, #2
 800a198:	e7d3      	b.n	800a142 <__gethex+0xee>
 800a19a:	f04f 0901 	mov.w	r9, #1
 800a19e:	e7fa      	b.n	800a196 <__gethex+0x142>
 800a1a0:	230a      	movs	r3, #10
 800a1a2:	fb03 0202 	mla	r2, r3, r2, r0
 800a1a6:	3a10      	subs	r2, #16
 800a1a8:	e7d4      	b.n	800a154 <__gethex+0x100>
 800a1aa:	4631      	mov	r1, r6
 800a1ac:	e7df      	b.n	800a16e <__gethex+0x11a>
 800a1ae:	1bf3      	subs	r3, r6, r7
 800a1b0:	3b01      	subs	r3, #1
 800a1b2:	4621      	mov	r1, r4
 800a1b4:	2b07      	cmp	r3, #7
 800a1b6:	dc0b      	bgt.n	800a1d0 <__gethex+0x17c>
 800a1b8:	ee18 0a10 	vmov	r0, s16
 800a1bc:	f000 fa90 	bl	800a6e0 <_Balloc>
 800a1c0:	4604      	mov	r4, r0
 800a1c2:	b940      	cbnz	r0, 800a1d6 <__gethex+0x182>
 800a1c4:	4b65      	ldr	r3, [pc, #404]	; (800a35c <__gethex+0x308>)
 800a1c6:	4602      	mov	r2, r0
 800a1c8:	21de      	movs	r1, #222	; 0xde
 800a1ca:	4865      	ldr	r0, [pc, #404]	; (800a360 <__gethex+0x30c>)
 800a1cc:	f001 fda4 	bl	800bd18 <__assert_func>
 800a1d0:	3101      	adds	r1, #1
 800a1d2:	105b      	asrs	r3, r3, #1
 800a1d4:	e7ee      	b.n	800a1b4 <__gethex+0x160>
 800a1d6:	f100 0914 	add.w	r9, r0, #20
 800a1da:	f04f 0b00 	mov.w	fp, #0
 800a1de:	f1ca 0301 	rsb	r3, sl, #1
 800a1e2:	f8cd 9008 	str.w	r9, [sp, #8]
 800a1e6:	f8cd b000 	str.w	fp, [sp]
 800a1ea:	9306      	str	r3, [sp, #24]
 800a1ec:	42b7      	cmp	r7, r6
 800a1ee:	d340      	bcc.n	800a272 <__gethex+0x21e>
 800a1f0:	9802      	ldr	r0, [sp, #8]
 800a1f2:	9b00      	ldr	r3, [sp, #0]
 800a1f4:	f840 3b04 	str.w	r3, [r0], #4
 800a1f8:	eba0 0009 	sub.w	r0, r0, r9
 800a1fc:	1080      	asrs	r0, r0, #2
 800a1fe:	0146      	lsls	r6, r0, #5
 800a200:	6120      	str	r0, [r4, #16]
 800a202:	4618      	mov	r0, r3
 800a204:	f000 fb62 	bl	800a8cc <__hi0bits>
 800a208:	1a30      	subs	r0, r6, r0
 800a20a:	f8d8 6000 	ldr.w	r6, [r8]
 800a20e:	42b0      	cmp	r0, r6
 800a210:	dd63      	ble.n	800a2da <__gethex+0x286>
 800a212:	1b87      	subs	r7, r0, r6
 800a214:	4639      	mov	r1, r7
 800a216:	4620      	mov	r0, r4
 800a218:	f000 fefd 	bl	800b016 <__any_on>
 800a21c:	4682      	mov	sl, r0
 800a21e:	b1a8      	cbz	r0, 800a24c <__gethex+0x1f8>
 800a220:	1e7b      	subs	r3, r7, #1
 800a222:	1159      	asrs	r1, r3, #5
 800a224:	f003 021f 	and.w	r2, r3, #31
 800a228:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800a22c:	f04f 0a01 	mov.w	sl, #1
 800a230:	fa0a f202 	lsl.w	r2, sl, r2
 800a234:	420a      	tst	r2, r1
 800a236:	d009      	beq.n	800a24c <__gethex+0x1f8>
 800a238:	4553      	cmp	r3, sl
 800a23a:	dd05      	ble.n	800a248 <__gethex+0x1f4>
 800a23c:	1eb9      	subs	r1, r7, #2
 800a23e:	4620      	mov	r0, r4
 800a240:	f000 fee9 	bl	800b016 <__any_on>
 800a244:	2800      	cmp	r0, #0
 800a246:	d145      	bne.n	800a2d4 <__gethex+0x280>
 800a248:	f04f 0a02 	mov.w	sl, #2
 800a24c:	4639      	mov	r1, r7
 800a24e:	4620      	mov	r0, r4
 800a250:	f7ff fe98 	bl	8009f84 <rshift>
 800a254:	443d      	add	r5, r7
 800a256:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800a25a:	42ab      	cmp	r3, r5
 800a25c:	da4c      	bge.n	800a2f8 <__gethex+0x2a4>
 800a25e:	ee18 0a10 	vmov	r0, s16
 800a262:	4621      	mov	r1, r4
 800a264:	f000 fa7c 	bl	800a760 <_Bfree>
 800a268:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a26a:	2300      	movs	r3, #0
 800a26c:	6013      	str	r3, [r2, #0]
 800a26e:	27a3      	movs	r7, #163	; 0xa3
 800a270:	e785      	b.n	800a17e <__gethex+0x12a>
 800a272:	1e73      	subs	r3, r6, #1
 800a274:	9a05      	ldr	r2, [sp, #20]
 800a276:	9303      	str	r3, [sp, #12]
 800a278:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800a27c:	4293      	cmp	r3, r2
 800a27e:	d019      	beq.n	800a2b4 <__gethex+0x260>
 800a280:	f1bb 0f20 	cmp.w	fp, #32
 800a284:	d107      	bne.n	800a296 <__gethex+0x242>
 800a286:	9b02      	ldr	r3, [sp, #8]
 800a288:	9a00      	ldr	r2, [sp, #0]
 800a28a:	f843 2b04 	str.w	r2, [r3], #4
 800a28e:	9302      	str	r3, [sp, #8]
 800a290:	2300      	movs	r3, #0
 800a292:	9300      	str	r3, [sp, #0]
 800a294:	469b      	mov	fp, r3
 800a296:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800a29a:	f7ff fec5 	bl	800a028 <__hexdig_fun>
 800a29e:	9b00      	ldr	r3, [sp, #0]
 800a2a0:	f000 000f 	and.w	r0, r0, #15
 800a2a4:	fa00 f00b 	lsl.w	r0, r0, fp
 800a2a8:	4303      	orrs	r3, r0
 800a2aa:	9300      	str	r3, [sp, #0]
 800a2ac:	f10b 0b04 	add.w	fp, fp, #4
 800a2b0:	9b03      	ldr	r3, [sp, #12]
 800a2b2:	e00d      	b.n	800a2d0 <__gethex+0x27c>
 800a2b4:	9b03      	ldr	r3, [sp, #12]
 800a2b6:	9a06      	ldr	r2, [sp, #24]
 800a2b8:	4413      	add	r3, r2
 800a2ba:	42bb      	cmp	r3, r7
 800a2bc:	d3e0      	bcc.n	800a280 <__gethex+0x22c>
 800a2be:	4618      	mov	r0, r3
 800a2c0:	9901      	ldr	r1, [sp, #4]
 800a2c2:	9307      	str	r3, [sp, #28]
 800a2c4:	4652      	mov	r2, sl
 800a2c6:	f7fe f98c 	bl	80085e2 <strncmp>
 800a2ca:	9b07      	ldr	r3, [sp, #28]
 800a2cc:	2800      	cmp	r0, #0
 800a2ce:	d1d7      	bne.n	800a280 <__gethex+0x22c>
 800a2d0:	461e      	mov	r6, r3
 800a2d2:	e78b      	b.n	800a1ec <__gethex+0x198>
 800a2d4:	f04f 0a03 	mov.w	sl, #3
 800a2d8:	e7b8      	b.n	800a24c <__gethex+0x1f8>
 800a2da:	da0a      	bge.n	800a2f2 <__gethex+0x29e>
 800a2dc:	1a37      	subs	r7, r6, r0
 800a2de:	4621      	mov	r1, r4
 800a2e0:	ee18 0a10 	vmov	r0, s16
 800a2e4:	463a      	mov	r2, r7
 800a2e6:	f000 fc57 	bl	800ab98 <__lshift>
 800a2ea:	1bed      	subs	r5, r5, r7
 800a2ec:	4604      	mov	r4, r0
 800a2ee:	f100 0914 	add.w	r9, r0, #20
 800a2f2:	f04f 0a00 	mov.w	sl, #0
 800a2f6:	e7ae      	b.n	800a256 <__gethex+0x202>
 800a2f8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800a2fc:	42a8      	cmp	r0, r5
 800a2fe:	dd72      	ble.n	800a3e6 <__gethex+0x392>
 800a300:	1b45      	subs	r5, r0, r5
 800a302:	42ae      	cmp	r6, r5
 800a304:	dc36      	bgt.n	800a374 <__gethex+0x320>
 800a306:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800a30a:	2b02      	cmp	r3, #2
 800a30c:	d02a      	beq.n	800a364 <__gethex+0x310>
 800a30e:	2b03      	cmp	r3, #3
 800a310:	d02c      	beq.n	800a36c <__gethex+0x318>
 800a312:	2b01      	cmp	r3, #1
 800a314:	d115      	bne.n	800a342 <__gethex+0x2ee>
 800a316:	42ae      	cmp	r6, r5
 800a318:	d113      	bne.n	800a342 <__gethex+0x2ee>
 800a31a:	2e01      	cmp	r6, #1
 800a31c:	d10b      	bne.n	800a336 <__gethex+0x2e2>
 800a31e:	9a04      	ldr	r2, [sp, #16]
 800a320:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800a324:	6013      	str	r3, [r2, #0]
 800a326:	2301      	movs	r3, #1
 800a328:	6123      	str	r3, [r4, #16]
 800a32a:	f8c9 3000 	str.w	r3, [r9]
 800a32e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a330:	2762      	movs	r7, #98	; 0x62
 800a332:	601c      	str	r4, [r3, #0]
 800a334:	e723      	b.n	800a17e <__gethex+0x12a>
 800a336:	1e71      	subs	r1, r6, #1
 800a338:	4620      	mov	r0, r4
 800a33a:	f000 fe6c 	bl	800b016 <__any_on>
 800a33e:	2800      	cmp	r0, #0
 800a340:	d1ed      	bne.n	800a31e <__gethex+0x2ca>
 800a342:	ee18 0a10 	vmov	r0, s16
 800a346:	4621      	mov	r1, r4
 800a348:	f000 fa0a 	bl	800a760 <_Bfree>
 800a34c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a34e:	2300      	movs	r3, #0
 800a350:	6013      	str	r3, [r2, #0]
 800a352:	2750      	movs	r7, #80	; 0x50
 800a354:	e713      	b.n	800a17e <__gethex+0x12a>
 800a356:	bf00      	nop
 800a358:	0800d3c8 	.word	0x0800d3c8
 800a35c:	0800d34c 	.word	0x0800d34c
 800a360:	0800d35d 	.word	0x0800d35d
 800a364:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a366:	2b00      	cmp	r3, #0
 800a368:	d1eb      	bne.n	800a342 <__gethex+0x2ee>
 800a36a:	e7d8      	b.n	800a31e <__gethex+0x2ca>
 800a36c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a36e:	2b00      	cmp	r3, #0
 800a370:	d1d5      	bne.n	800a31e <__gethex+0x2ca>
 800a372:	e7e6      	b.n	800a342 <__gethex+0x2ee>
 800a374:	1e6f      	subs	r7, r5, #1
 800a376:	f1ba 0f00 	cmp.w	sl, #0
 800a37a:	d131      	bne.n	800a3e0 <__gethex+0x38c>
 800a37c:	b127      	cbz	r7, 800a388 <__gethex+0x334>
 800a37e:	4639      	mov	r1, r7
 800a380:	4620      	mov	r0, r4
 800a382:	f000 fe48 	bl	800b016 <__any_on>
 800a386:	4682      	mov	sl, r0
 800a388:	117b      	asrs	r3, r7, #5
 800a38a:	2101      	movs	r1, #1
 800a38c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800a390:	f007 071f 	and.w	r7, r7, #31
 800a394:	fa01 f707 	lsl.w	r7, r1, r7
 800a398:	421f      	tst	r7, r3
 800a39a:	4629      	mov	r1, r5
 800a39c:	4620      	mov	r0, r4
 800a39e:	bf18      	it	ne
 800a3a0:	f04a 0a02 	orrne.w	sl, sl, #2
 800a3a4:	1b76      	subs	r6, r6, r5
 800a3a6:	f7ff fded 	bl	8009f84 <rshift>
 800a3aa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800a3ae:	2702      	movs	r7, #2
 800a3b0:	f1ba 0f00 	cmp.w	sl, #0
 800a3b4:	d048      	beq.n	800a448 <__gethex+0x3f4>
 800a3b6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800a3ba:	2b02      	cmp	r3, #2
 800a3bc:	d015      	beq.n	800a3ea <__gethex+0x396>
 800a3be:	2b03      	cmp	r3, #3
 800a3c0:	d017      	beq.n	800a3f2 <__gethex+0x39e>
 800a3c2:	2b01      	cmp	r3, #1
 800a3c4:	d109      	bne.n	800a3da <__gethex+0x386>
 800a3c6:	f01a 0f02 	tst.w	sl, #2
 800a3ca:	d006      	beq.n	800a3da <__gethex+0x386>
 800a3cc:	f8d9 0000 	ldr.w	r0, [r9]
 800a3d0:	ea4a 0a00 	orr.w	sl, sl, r0
 800a3d4:	f01a 0f01 	tst.w	sl, #1
 800a3d8:	d10e      	bne.n	800a3f8 <__gethex+0x3a4>
 800a3da:	f047 0710 	orr.w	r7, r7, #16
 800a3de:	e033      	b.n	800a448 <__gethex+0x3f4>
 800a3e0:	f04f 0a01 	mov.w	sl, #1
 800a3e4:	e7d0      	b.n	800a388 <__gethex+0x334>
 800a3e6:	2701      	movs	r7, #1
 800a3e8:	e7e2      	b.n	800a3b0 <__gethex+0x35c>
 800a3ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a3ec:	f1c3 0301 	rsb	r3, r3, #1
 800a3f0:	9315      	str	r3, [sp, #84]	; 0x54
 800a3f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a3f4:	2b00      	cmp	r3, #0
 800a3f6:	d0f0      	beq.n	800a3da <__gethex+0x386>
 800a3f8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800a3fc:	f104 0314 	add.w	r3, r4, #20
 800a400:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800a404:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800a408:	f04f 0c00 	mov.w	ip, #0
 800a40c:	4618      	mov	r0, r3
 800a40e:	f853 2b04 	ldr.w	r2, [r3], #4
 800a412:	f1b2 3fff 	cmp.w	r2, #4294967295
 800a416:	d01c      	beq.n	800a452 <__gethex+0x3fe>
 800a418:	3201      	adds	r2, #1
 800a41a:	6002      	str	r2, [r0, #0]
 800a41c:	2f02      	cmp	r7, #2
 800a41e:	f104 0314 	add.w	r3, r4, #20
 800a422:	d13f      	bne.n	800a4a4 <__gethex+0x450>
 800a424:	f8d8 2000 	ldr.w	r2, [r8]
 800a428:	3a01      	subs	r2, #1
 800a42a:	42b2      	cmp	r2, r6
 800a42c:	d10a      	bne.n	800a444 <__gethex+0x3f0>
 800a42e:	1171      	asrs	r1, r6, #5
 800a430:	2201      	movs	r2, #1
 800a432:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800a436:	f006 061f 	and.w	r6, r6, #31
 800a43a:	fa02 f606 	lsl.w	r6, r2, r6
 800a43e:	421e      	tst	r6, r3
 800a440:	bf18      	it	ne
 800a442:	4617      	movne	r7, r2
 800a444:	f047 0720 	orr.w	r7, r7, #32
 800a448:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a44a:	601c      	str	r4, [r3, #0]
 800a44c:	9b04      	ldr	r3, [sp, #16]
 800a44e:	601d      	str	r5, [r3, #0]
 800a450:	e695      	b.n	800a17e <__gethex+0x12a>
 800a452:	4299      	cmp	r1, r3
 800a454:	f843 cc04 	str.w	ip, [r3, #-4]
 800a458:	d8d8      	bhi.n	800a40c <__gethex+0x3b8>
 800a45a:	68a3      	ldr	r3, [r4, #8]
 800a45c:	459b      	cmp	fp, r3
 800a45e:	db19      	blt.n	800a494 <__gethex+0x440>
 800a460:	6861      	ldr	r1, [r4, #4]
 800a462:	ee18 0a10 	vmov	r0, s16
 800a466:	3101      	adds	r1, #1
 800a468:	f000 f93a 	bl	800a6e0 <_Balloc>
 800a46c:	4681      	mov	r9, r0
 800a46e:	b918      	cbnz	r0, 800a478 <__gethex+0x424>
 800a470:	4b1a      	ldr	r3, [pc, #104]	; (800a4dc <__gethex+0x488>)
 800a472:	4602      	mov	r2, r0
 800a474:	2184      	movs	r1, #132	; 0x84
 800a476:	e6a8      	b.n	800a1ca <__gethex+0x176>
 800a478:	6922      	ldr	r2, [r4, #16]
 800a47a:	3202      	adds	r2, #2
 800a47c:	f104 010c 	add.w	r1, r4, #12
 800a480:	0092      	lsls	r2, r2, #2
 800a482:	300c      	adds	r0, #12
 800a484:	f000 f91e 	bl	800a6c4 <memcpy>
 800a488:	4621      	mov	r1, r4
 800a48a:	ee18 0a10 	vmov	r0, s16
 800a48e:	f000 f967 	bl	800a760 <_Bfree>
 800a492:	464c      	mov	r4, r9
 800a494:	6923      	ldr	r3, [r4, #16]
 800a496:	1c5a      	adds	r2, r3, #1
 800a498:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800a49c:	6122      	str	r2, [r4, #16]
 800a49e:	2201      	movs	r2, #1
 800a4a0:	615a      	str	r2, [r3, #20]
 800a4a2:	e7bb      	b.n	800a41c <__gethex+0x3c8>
 800a4a4:	6922      	ldr	r2, [r4, #16]
 800a4a6:	455a      	cmp	r2, fp
 800a4a8:	dd0b      	ble.n	800a4c2 <__gethex+0x46e>
 800a4aa:	2101      	movs	r1, #1
 800a4ac:	4620      	mov	r0, r4
 800a4ae:	f7ff fd69 	bl	8009f84 <rshift>
 800a4b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800a4b6:	3501      	adds	r5, #1
 800a4b8:	42ab      	cmp	r3, r5
 800a4ba:	f6ff aed0 	blt.w	800a25e <__gethex+0x20a>
 800a4be:	2701      	movs	r7, #1
 800a4c0:	e7c0      	b.n	800a444 <__gethex+0x3f0>
 800a4c2:	f016 061f 	ands.w	r6, r6, #31
 800a4c6:	d0fa      	beq.n	800a4be <__gethex+0x46a>
 800a4c8:	449a      	add	sl, r3
 800a4ca:	f1c6 0620 	rsb	r6, r6, #32
 800a4ce:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 800a4d2:	f000 f9fb 	bl	800a8cc <__hi0bits>
 800a4d6:	42b0      	cmp	r0, r6
 800a4d8:	dbe7      	blt.n	800a4aa <__gethex+0x456>
 800a4da:	e7f0      	b.n	800a4be <__gethex+0x46a>
 800a4dc:	0800d34c 	.word	0x0800d34c

0800a4e0 <L_shift>:
 800a4e0:	f1c2 0208 	rsb	r2, r2, #8
 800a4e4:	0092      	lsls	r2, r2, #2
 800a4e6:	b570      	push	{r4, r5, r6, lr}
 800a4e8:	f1c2 0620 	rsb	r6, r2, #32
 800a4ec:	6843      	ldr	r3, [r0, #4]
 800a4ee:	6804      	ldr	r4, [r0, #0]
 800a4f0:	fa03 f506 	lsl.w	r5, r3, r6
 800a4f4:	432c      	orrs	r4, r5
 800a4f6:	40d3      	lsrs	r3, r2
 800a4f8:	6004      	str	r4, [r0, #0]
 800a4fa:	f840 3f04 	str.w	r3, [r0, #4]!
 800a4fe:	4288      	cmp	r0, r1
 800a500:	d3f4      	bcc.n	800a4ec <L_shift+0xc>
 800a502:	bd70      	pop	{r4, r5, r6, pc}

0800a504 <__match>:
 800a504:	b530      	push	{r4, r5, lr}
 800a506:	6803      	ldr	r3, [r0, #0]
 800a508:	3301      	adds	r3, #1
 800a50a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a50e:	b914      	cbnz	r4, 800a516 <__match+0x12>
 800a510:	6003      	str	r3, [r0, #0]
 800a512:	2001      	movs	r0, #1
 800a514:	bd30      	pop	{r4, r5, pc}
 800a516:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a51a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800a51e:	2d19      	cmp	r5, #25
 800a520:	bf98      	it	ls
 800a522:	3220      	addls	r2, #32
 800a524:	42a2      	cmp	r2, r4
 800a526:	d0f0      	beq.n	800a50a <__match+0x6>
 800a528:	2000      	movs	r0, #0
 800a52a:	e7f3      	b.n	800a514 <__match+0x10>

0800a52c <__hexnan>:
 800a52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a530:	680b      	ldr	r3, [r1, #0]
 800a532:	6801      	ldr	r1, [r0, #0]
 800a534:	115e      	asrs	r6, r3, #5
 800a536:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800a53a:	f013 031f 	ands.w	r3, r3, #31
 800a53e:	b087      	sub	sp, #28
 800a540:	bf18      	it	ne
 800a542:	3604      	addne	r6, #4
 800a544:	2500      	movs	r5, #0
 800a546:	1f37      	subs	r7, r6, #4
 800a548:	4682      	mov	sl, r0
 800a54a:	4690      	mov	r8, r2
 800a54c:	9301      	str	r3, [sp, #4]
 800a54e:	f846 5c04 	str.w	r5, [r6, #-4]
 800a552:	46b9      	mov	r9, r7
 800a554:	463c      	mov	r4, r7
 800a556:	9502      	str	r5, [sp, #8]
 800a558:	46ab      	mov	fp, r5
 800a55a:	784a      	ldrb	r2, [r1, #1]
 800a55c:	1c4b      	adds	r3, r1, #1
 800a55e:	9303      	str	r3, [sp, #12]
 800a560:	b342      	cbz	r2, 800a5b4 <__hexnan+0x88>
 800a562:	4610      	mov	r0, r2
 800a564:	9105      	str	r1, [sp, #20]
 800a566:	9204      	str	r2, [sp, #16]
 800a568:	f7ff fd5e 	bl	800a028 <__hexdig_fun>
 800a56c:	2800      	cmp	r0, #0
 800a56e:	d14f      	bne.n	800a610 <__hexnan+0xe4>
 800a570:	9a04      	ldr	r2, [sp, #16]
 800a572:	9905      	ldr	r1, [sp, #20]
 800a574:	2a20      	cmp	r2, #32
 800a576:	d818      	bhi.n	800a5aa <__hexnan+0x7e>
 800a578:	9b02      	ldr	r3, [sp, #8]
 800a57a:	459b      	cmp	fp, r3
 800a57c:	dd13      	ble.n	800a5a6 <__hexnan+0x7a>
 800a57e:	454c      	cmp	r4, r9
 800a580:	d206      	bcs.n	800a590 <__hexnan+0x64>
 800a582:	2d07      	cmp	r5, #7
 800a584:	dc04      	bgt.n	800a590 <__hexnan+0x64>
 800a586:	462a      	mov	r2, r5
 800a588:	4649      	mov	r1, r9
 800a58a:	4620      	mov	r0, r4
 800a58c:	f7ff ffa8 	bl	800a4e0 <L_shift>
 800a590:	4544      	cmp	r4, r8
 800a592:	d950      	bls.n	800a636 <__hexnan+0x10a>
 800a594:	2300      	movs	r3, #0
 800a596:	f1a4 0904 	sub.w	r9, r4, #4
 800a59a:	f844 3c04 	str.w	r3, [r4, #-4]
 800a59e:	f8cd b008 	str.w	fp, [sp, #8]
 800a5a2:	464c      	mov	r4, r9
 800a5a4:	461d      	mov	r5, r3
 800a5a6:	9903      	ldr	r1, [sp, #12]
 800a5a8:	e7d7      	b.n	800a55a <__hexnan+0x2e>
 800a5aa:	2a29      	cmp	r2, #41	; 0x29
 800a5ac:	d156      	bne.n	800a65c <__hexnan+0x130>
 800a5ae:	3102      	adds	r1, #2
 800a5b0:	f8ca 1000 	str.w	r1, [sl]
 800a5b4:	f1bb 0f00 	cmp.w	fp, #0
 800a5b8:	d050      	beq.n	800a65c <__hexnan+0x130>
 800a5ba:	454c      	cmp	r4, r9
 800a5bc:	d206      	bcs.n	800a5cc <__hexnan+0xa0>
 800a5be:	2d07      	cmp	r5, #7
 800a5c0:	dc04      	bgt.n	800a5cc <__hexnan+0xa0>
 800a5c2:	462a      	mov	r2, r5
 800a5c4:	4649      	mov	r1, r9
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	f7ff ff8a 	bl	800a4e0 <L_shift>
 800a5cc:	4544      	cmp	r4, r8
 800a5ce:	d934      	bls.n	800a63a <__hexnan+0x10e>
 800a5d0:	f1a8 0204 	sub.w	r2, r8, #4
 800a5d4:	4623      	mov	r3, r4
 800a5d6:	f853 1b04 	ldr.w	r1, [r3], #4
 800a5da:	f842 1f04 	str.w	r1, [r2, #4]!
 800a5de:	429f      	cmp	r7, r3
 800a5e0:	d2f9      	bcs.n	800a5d6 <__hexnan+0xaa>
 800a5e2:	1b3b      	subs	r3, r7, r4
 800a5e4:	f023 0303 	bic.w	r3, r3, #3
 800a5e8:	3304      	adds	r3, #4
 800a5ea:	3401      	adds	r4, #1
 800a5ec:	3e03      	subs	r6, #3
 800a5ee:	42b4      	cmp	r4, r6
 800a5f0:	bf88      	it	hi
 800a5f2:	2304      	movhi	r3, #4
 800a5f4:	4443      	add	r3, r8
 800a5f6:	2200      	movs	r2, #0
 800a5f8:	f843 2b04 	str.w	r2, [r3], #4
 800a5fc:	429f      	cmp	r7, r3
 800a5fe:	d2fb      	bcs.n	800a5f8 <__hexnan+0xcc>
 800a600:	683b      	ldr	r3, [r7, #0]
 800a602:	b91b      	cbnz	r3, 800a60c <__hexnan+0xe0>
 800a604:	4547      	cmp	r7, r8
 800a606:	d127      	bne.n	800a658 <__hexnan+0x12c>
 800a608:	2301      	movs	r3, #1
 800a60a:	603b      	str	r3, [r7, #0]
 800a60c:	2005      	movs	r0, #5
 800a60e:	e026      	b.n	800a65e <__hexnan+0x132>
 800a610:	3501      	adds	r5, #1
 800a612:	2d08      	cmp	r5, #8
 800a614:	f10b 0b01 	add.w	fp, fp, #1
 800a618:	dd06      	ble.n	800a628 <__hexnan+0xfc>
 800a61a:	4544      	cmp	r4, r8
 800a61c:	d9c3      	bls.n	800a5a6 <__hexnan+0x7a>
 800a61e:	2300      	movs	r3, #0
 800a620:	f844 3c04 	str.w	r3, [r4, #-4]
 800a624:	2501      	movs	r5, #1
 800a626:	3c04      	subs	r4, #4
 800a628:	6822      	ldr	r2, [r4, #0]
 800a62a:	f000 000f 	and.w	r0, r0, #15
 800a62e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800a632:	6022      	str	r2, [r4, #0]
 800a634:	e7b7      	b.n	800a5a6 <__hexnan+0x7a>
 800a636:	2508      	movs	r5, #8
 800a638:	e7b5      	b.n	800a5a6 <__hexnan+0x7a>
 800a63a:	9b01      	ldr	r3, [sp, #4]
 800a63c:	2b00      	cmp	r3, #0
 800a63e:	d0df      	beq.n	800a600 <__hexnan+0xd4>
 800a640:	f04f 32ff 	mov.w	r2, #4294967295
 800a644:	f1c3 0320 	rsb	r3, r3, #32
 800a648:	fa22 f303 	lsr.w	r3, r2, r3
 800a64c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800a650:	401a      	ands	r2, r3
 800a652:	f846 2c04 	str.w	r2, [r6, #-4]
 800a656:	e7d3      	b.n	800a600 <__hexnan+0xd4>
 800a658:	3f04      	subs	r7, #4
 800a65a:	e7d1      	b.n	800a600 <__hexnan+0xd4>
 800a65c:	2004      	movs	r0, #4
 800a65e:	b007      	add	sp, #28
 800a660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a664 <_localeconv_r>:
 800a664:	4800      	ldr	r0, [pc, #0]	; (800a668 <_localeconv_r+0x4>)
 800a666:	4770      	bx	lr
 800a668:	2000028c 	.word	0x2000028c

0800a66c <_lseek_r>:
 800a66c:	b538      	push	{r3, r4, r5, lr}
 800a66e:	4d07      	ldr	r5, [pc, #28]	; (800a68c <_lseek_r+0x20>)
 800a670:	4604      	mov	r4, r0
 800a672:	4608      	mov	r0, r1
 800a674:	4611      	mov	r1, r2
 800a676:	2200      	movs	r2, #0
 800a678:	602a      	str	r2, [r5, #0]
 800a67a:	461a      	mov	r2, r3
 800a67c:	f7f8 f8a8 	bl	80027d0 <_lseek>
 800a680:	1c43      	adds	r3, r0, #1
 800a682:	d102      	bne.n	800a68a <_lseek_r+0x1e>
 800a684:	682b      	ldr	r3, [r5, #0]
 800a686:	b103      	cbz	r3, 800a68a <_lseek_r+0x1e>
 800a688:	6023      	str	r3, [r4, #0]
 800a68a:	bd38      	pop	{r3, r4, r5, pc}
 800a68c:	20018784 	.word	0x20018784

0800a690 <malloc>:
 800a690:	4b02      	ldr	r3, [pc, #8]	; (800a69c <malloc+0xc>)
 800a692:	4601      	mov	r1, r0
 800a694:	6818      	ldr	r0, [r3, #0]
 800a696:	f000 bd3f 	b.w	800b118 <_malloc_r>
 800a69a:	bf00      	nop
 800a69c:	20000134 	.word	0x20000134

0800a6a0 <__ascii_mbtowc>:
 800a6a0:	b082      	sub	sp, #8
 800a6a2:	b901      	cbnz	r1, 800a6a6 <__ascii_mbtowc+0x6>
 800a6a4:	a901      	add	r1, sp, #4
 800a6a6:	b142      	cbz	r2, 800a6ba <__ascii_mbtowc+0x1a>
 800a6a8:	b14b      	cbz	r3, 800a6be <__ascii_mbtowc+0x1e>
 800a6aa:	7813      	ldrb	r3, [r2, #0]
 800a6ac:	600b      	str	r3, [r1, #0]
 800a6ae:	7812      	ldrb	r2, [r2, #0]
 800a6b0:	1e10      	subs	r0, r2, #0
 800a6b2:	bf18      	it	ne
 800a6b4:	2001      	movne	r0, #1
 800a6b6:	b002      	add	sp, #8
 800a6b8:	4770      	bx	lr
 800a6ba:	4610      	mov	r0, r2
 800a6bc:	e7fb      	b.n	800a6b6 <__ascii_mbtowc+0x16>
 800a6be:	f06f 0001 	mvn.w	r0, #1
 800a6c2:	e7f8      	b.n	800a6b6 <__ascii_mbtowc+0x16>

0800a6c4 <memcpy>:
 800a6c4:	440a      	add	r2, r1
 800a6c6:	4291      	cmp	r1, r2
 800a6c8:	f100 33ff 	add.w	r3, r0, #4294967295
 800a6cc:	d100      	bne.n	800a6d0 <memcpy+0xc>
 800a6ce:	4770      	bx	lr
 800a6d0:	b510      	push	{r4, lr}
 800a6d2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a6d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a6da:	4291      	cmp	r1, r2
 800a6dc:	d1f9      	bne.n	800a6d2 <memcpy+0xe>
 800a6de:	bd10      	pop	{r4, pc}

0800a6e0 <_Balloc>:
 800a6e0:	b570      	push	{r4, r5, r6, lr}
 800a6e2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800a6e4:	4604      	mov	r4, r0
 800a6e6:	460d      	mov	r5, r1
 800a6e8:	b976      	cbnz	r6, 800a708 <_Balloc+0x28>
 800a6ea:	2010      	movs	r0, #16
 800a6ec:	f7ff ffd0 	bl	800a690 <malloc>
 800a6f0:	4602      	mov	r2, r0
 800a6f2:	6260      	str	r0, [r4, #36]	; 0x24
 800a6f4:	b920      	cbnz	r0, 800a700 <_Balloc+0x20>
 800a6f6:	4b18      	ldr	r3, [pc, #96]	; (800a758 <_Balloc+0x78>)
 800a6f8:	4818      	ldr	r0, [pc, #96]	; (800a75c <_Balloc+0x7c>)
 800a6fa:	2166      	movs	r1, #102	; 0x66
 800a6fc:	f001 fb0c 	bl	800bd18 <__assert_func>
 800a700:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800a704:	6006      	str	r6, [r0, #0]
 800a706:	60c6      	str	r6, [r0, #12]
 800a708:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800a70a:	68f3      	ldr	r3, [r6, #12]
 800a70c:	b183      	cbz	r3, 800a730 <_Balloc+0x50>
 800a70e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a710:	68db      	ldr	r3, [r3, #12]
 800a712:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800a716:	b9b8      	cbnz	r0, 800a748 <_Balloc+0x68>
 800a718:	2101      	movs	r1, #1
 800a71a:	fa01 f605 	lsl.w	r6, r1, r5
 800a71e:	1d72      	adds	r2, r6, #5
 800a720:	0092      	lsls	r2, r2, #2
 800a722:	4620      	mov	r0, r4
 800a724:	f000 fc98 	bl	800b058 <_calloc_r>
 800a728:	b160      	cbz	r0, 800a744 <_Balloc+0x64>
 800a72a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800a72e:	e00e      	b.n	800a74e <_Balloc+0x6e>
 800a730:	2221      	movs	r2, #33	; 0x21
 800a732:	2104      	movs	r1, #4
 800a734:	4620      	mov	r0, r4
 800a736:	f000 fc8f 	bl	800b058 <_calloc_r>
 800a73a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a73c:	60f0      	str	r0, [r6, #12]
 800a73e:	68db      	ldr	r3, [r3, #12]
 800a740:	2b00      	cmp	r3, #0
 800a742:	d1e4      	bne.n	800a70e <_Balloc+0x2e>
 800a744:	2000      	movs	r0, #0
 800a746:	bd70      	pop	{r4, r5, r6, pc}
 800a748:	6802      	ldr	r2, [r0, #0]
 800a74a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a74e:	2300      	movs	r3, #0
 800a750:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a754:	e7f7      	b.n	800a746 <_Balloc+0x66>
 800a756:	bf00      	nop
 800a758:	0800d2d6 	.word	0x0800d2d6
 800a75c:	0800d3dc 	.word	0x0800d3dc

0800a760 <_Bfree>:
 800a760:	b570      	push	{r4, r5, r6, lr}
 800a762:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800a764:	4605      	mov	r5, r0
 800a766:	460c      	mov	r4, r1
 800a768:	b976      	cbnz	r6, 800a788 <_Bfree+0x28>
 800a76a:	2010      	movs	r0, #16
 800a76c:	f7ff ff90 	bl	800a690 <malloc>
 800a770:	4602      	mov	r2, r0
 800a772:	6268      	str	r0, [r5, #36]	; 0x24
 800a774:	b920      	cbnz	r0, 800a780 <_Bfree+0x20>
 800a776:	4b09      	ldr	r3, [pc, #36]	; (800a79c <_Bfree+0x3c>)
 800a778:	4809      	ldr	r0, [pc, #36]	; (800a7a0 <_Bfree+0x40>)
 800a77a:	218a      	movs	r1, #138	; 0x8a
 800a77c:	f001 facc 	bl	800bd18 <__assert_func>
 800a780:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800a784:	6006      	str	r6, [r0, #0]
 800a786:	60c6      	str	r6, [r0, #12]
 800a788:	b13c      	cbz	r4, 800a79a <_Bfree+0x3a>
 800a78a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800a78c:	6862      	ldr	r2, [r4, #4]
 800a78e:	68db      	ldr	r3, [r3, #12]
 800a790:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800a794:	6021      	str	r1, [r4, #0]
 800a796:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800a79a:	bd70      	pop	{r4, r5, r6, pc}
 800a79c:	0800d2d6 	.word	0x0800d2d6
 800a7a0:	0800d3dc 	.word	0x0800d3dc

0800a7a4 <__multadd>:
 800a7a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7a8:	690e      	ldr	r6, [r1, #16]
 800a7aa:	4607      	mov	r7, r0
 800a7ac:	4698      	mov	r8, r3
 800a7ae:	460c      	mov	r4, r1
 800a7b0:	f101 0014 	add.w	r0, r1, #20
 800a7b4:	2300      	movs	r3, #0
 800a7b6:	6805      	ldr	r5, [r0, #0]
 800a7b8:	b2a9      	uxth	r1, r5
 800a7ba:	fb02 8101 	mla	r1, r2, r1, r8
 800a7be:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 800a7c2:	0c2d      	lsrs	r5, r5, #16
 800a7c4:	fb02 c505 	mla	r5, r2, r5, ip
 800a7c8:	b289      	uxth	r1, r1
 800a7ca:	3301      	adds	r3, #1
 800a7cc:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 800a7d0:	429e      	cmp	r6, r3
 800a7d2:	f840 1b04 	str.w	r1, [r0], #4
 800a7d6:	ea4f 4815 	mov.w	r8, r5, lsr #16
 800a7da:	dcec      	bgt.n	800a7b6 <__multadd+0x12>
 800a7dc:	f1b8 0f00 	cmp.w	r8, #0
 800a7e0:	d022      	beq.n	800a828 <__multadd+0x84>
 800a7e2:	68a3      	ldr	r3, [r4, #8]
 800a7e4:	42b3      	cmp	r3, r6
 800a7e6:	dc19      	bgt.n	800a81c <__multadd+0x78>
 800a7e8:	6861      	ldr	r1, [r4, #4]
 800a7ea:	4638      	mov	r0, r7
 800a7ec:	3101      	adds	r1, #1
 800a7ee:	f7ff ff77 	bl	800a6e0 <_Balloc>
 800a7f2:	4605      	mov	r5, r0
 800a7f4:	b928      	cbnz	r0, 800a802 <__multadd+0x5e>
 800a7f6:	4602      	mov	r2, r0
 800a7f8:	4b0d      	ldr	r3, [pc, #52]	; (800a830 <__multadd+0x8c>)
 800a7fa:	480e      	ldr	r0, [pc, #56]	; (800a834 <__multadd+0x90>)
 800a7fc:	21b5      	movs	r1, #181	; 0xb5
 800a7fe:	f001 fa8b 	bl	800bd18 <__assert_func>
 800a802:	6922      	ldr	r2, [r4, #16]
 800a804:	3202      	adds	r2, #2
 800a806:	f104 010c 	add.w	r1, r4, #12
 800a80a:	0092      	lsls	r2, r2, #2
 800a80c:	300c      	adds	r0, #12
 800a80e:	f7ff ff59 	bl	800a6c4 <memcpy>
 800a812:	4621      	mov	r1, r4
 800a814:	4638      	mov	r0, r7
 800a816:	f7ff ffa3 	bl	800a760 <_Bfree>
 800a81a:	462c      	mov	r4, r5
 800a81c:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 800a820:	3601      	adds	r6, #1
 800a822:	f8c3 8014 	str.w	r8, [r3, #20]
 800a826:	6126      	str	r6, [r4, #16]
 800a828:	4620      	mov	r0, r4
 800a82a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a82e:	bf00      	nop
 800a830:	0800d34c 	.word	0x0800d34c
 800a834:	0800d3dc 	.word	0x0800d3dc

0800a838 <__s2b>:
 800a838:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a83c:	460c      	mov	r4, r1
 800a83e:	4615      	mov	r5, r2
 800a840:	461f      	mov	r7, r3
 800a842:	2209      	movs	r2, #9
 800a844:	3308      	adds	r3, #8
 800a846:	4606      	mov	r6, r0
 800a848:	fb93 f3f2 	sdiv	r3, r3, r2
 800a84c:	2100      	movs	r1, #0
 800a84e:	2201      	movs	r2, #1
 800a850:	429a      	cmp	r2, r3
 800a852:	db09      	blt.n	800a868 <__s2b+0x30>
 800a854:	4630      	mov	r0, r6
 800a856:	f7ff ff43 	bl	800a6e0 <_Balloc>
 800a85a:	b940      	cbnz	r0, 800a86e <__s2b+0x36>
 800a85c:	4602      	mov	r2, r0
 800a85e:	4b19      	ldr	r3, [pc, #100]	; (800a8c4 <__s2b+0x8c>)
 800a860:	4819      	ldr	r0, [pc, #100]	; (800a8c8 <__s2b+0x90>)
 800a862:	21ce      	movs	r1, #206	; 0xce
 800a864:	f001 fa58 	bl	800bd18 <__assert_func>
 800a868:	0052      	lsls	r2, r2, #1
 800a86a:	3101      	adds	r1, #1
 800a86c:	e7f0      	b.n	800a850 <__s2b+0x18>
 800a86e:	9b08      	ldr	r3, [sp, #32]
 800a870:	6143      	str	r3, [r0, #20]
 800a872:	2d09      	cmp	r5, #9
 800a874:	f04f 0301 	mov.w	r3, #1
 800a878:	6103      	str	r3, [r0, #16]
 800a87a:	dd16      	ble.n	800a8aa <__s2b+0x72>
 800a87c:	f104 0909 	add.w	r9, r4, #9
 800a880:	46c8      	mov	r8, r9
 800a882:	442c      	add	r4, r5
 800a884:	f818 3b01 	ldrb.w	r3, [r8], #1
 800a888:	4601      	mov	r1, r0
 800a88a:	3b30      	subs	r3, #48	; 0x30
 800a88c:	220a      	movs	r2, #10
 800a88e:	4630      	mov	r0, r6
 800a890:	f7ff ff88 	bl	800a7a4 <__multadd>
 800a894:	45a0      	cmp	r8, r4
 800a896:	d1f5      	bne.n	800a884 <__s2b+0x4c>
 800a898:	f1a5 0408 	sub.w	r4, r5, #8
 800a89c:	444c      	add	r4, r9
 800a89e:	1b2d      	subs	r5, r5, r4
 800a8a0:	1963      	adds	r3, r4, r5
 800a8a2:	42bb      	cmp	r3, r7
 800a8a4:	db04      	blt.n	800a8b0 <__s2b+0x78>
 800a8a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a8aa:	340a      	adds	r4, #10
 800a8ac:	2509      	movs	r5, #9
 800a8ae:	e7f6      	b.n	800a89e <__s2b+0x66>
 800a8b0:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a8b4:	4601      	mov	r1, r0
 800a8b6:	3b30      	subs	r3, #48	; 0x30
 800a8b8:	220a      	movs	r2, #10
 800a8ba:	4630      	mov	r0, r6
 800a8bc:	f7ff ff72 	bl	800a7a4 <__multadd>
 800a8c0:	e7ee      	b.n	800a8a0 <__s2b+0x68>
 800a8c2:	bf00      	nop
 800a8c4:	0800d34c 	.word	0x0800d34c
 800a8c8:	0800d3dc 	.word	0x0800d3dc

0800a8cc <__hi0bits>:
 800a8cc:	0c03      	lsrs	r3, r0, #16
 800a8ce:	041b      	lsls	r3, r3, #16
 800a8d0:	b9d3      	cbnz	r3, 800a908 <__hi0bits+0x3c>
 800a8d2:	0400      	lsls	r0, r0, #16
 800a8d4:	2310      	movs	r3, #16
 800a8d6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800a8da:	bf04      	itt	eq
 800a8dc:	0200      	lsleq	r0, r0, #8
 800a8de:	3308      	addeq	r3, #8
 800a8e0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800a8e4:	bf04      	itt	eq
 800a8e6:	0100      	lsleq	r0, r0, #4
 800a8e8:	3304      	addeq	r3, #4
 800a8ea:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800a8ee:	bf04      	itt	eq
 800a8f0:	0080      	lsleq	r0, r0, #2
 800a8f2:	3302      	addeq	r3, #2
 800a8f4:	2800      	cmp	r0, #0
 800a8f6:	db05      	blt.n	800a904 <__hi0bits+0x38>
 800a8f8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800a8fc:	f103 0301 	add.w	r3, r3, #1
 800a900:	bf08      	it	eq
 800a902:	2320      	moveq	r3, #32
 800a904:	4618      	mov	r0, r3
 800a906:	4770      	bx	lr
 800a908:	2300      	movs	r3, #0
 800a90a:	e7e4      	b.n	800a8d6 <__hi0bits+0xa>

0800a90c <__lo0bits>:
 800a90c:	6803      	ldr	r3, [r0, #0]
 800a90e:	f013 0207 	ands.w	r2, r3, #7
 800a912:	4601      	mov	r1, r0
 800a914:	d00b      	beq.n	800a92e <__lo0bits+0x22>
 800a916:	07da      	lsls	r2, r3, #31
 800a918:	d424      	bmi.n	800a964 <__lo0bits+0x58>
 800a91a:	0798      	lsls	r0, r3, #30
 800a91c:	bf49      	itett	mi
 800a91e:	085b      	lsrmi	r3, r3, #1
 800a920:	089b      	lsrpl	r3, r3, #2
 800a922:	2001      	movmi	r0, #1
 800a924:	600b      	strmi	r3, [r1, #0]
 800a926:	bf5c      	itt	pl
 800a928:	600b      	strpl	r3, [r1, #0]
 800a92a:	2002      	movpl	r0, #2
 800a92c:	4770      	bx	lr
 800a92e:	b298      	uxth	r0, r3
 800a930:	b9b0      	cbnz	r0, 800a960 <__lo0bits+0x54>
 800a932:	0c1b      	lsrs	r3, r3, #16
 800a934:	2010      	movs	r0, #16
 800a936:	f013 0fff 	tst.w	r3, #255	; 0xff
 800a93a:	bf04      	itt	eq
 800a93c:	0a1b      	lsreq	r3, r3, #8
 800a93e:	3008      	addeq	r0, #8
 800a940:	071a      	lsls	r2, r3, #28
 800a942:	bf04      	itt	eq
 800a944:	091b      	lsreq	r3, r3, #4
 800a946:	3004      	addeq	r0, #4
 800a948:	079a      	lsls	r2, r3, #30
 800a94a:	bf04      	itt	eq
 800a94c:	089b      	lsreq	r3, r3, #2
 800a94e:	3002      	addeq	r0, #2
 800a950:	07da      	lsls	r2, r3, #31
 800a952:	d403      	bmi.n	800a95c <__lo0bits+0x50>
 800a954:	085b      	lsrs	r3, r3, #1
 800a956:	f100 0001 	add.w	r0, r0, #1
 800a95a:	d005      	beq.n	800a968 <__lo0bits+0x5c>
 800a95c:	600b      	str	r3, [r1, #0]
 800a95e:	4770      	bx	lr
 800a960:	4610      	mov	r0, r2
 800a962:	e7e8      	b.n	800a936 <__lo0bits+0x2a>
 800a964:	2000      	movs	r0, #0
 800a966:	4770      	bx	lr
 800a968:	2020      	movs	r0, #32
 800a96a:	4770      	bx	lr

0800a96c <__i2b>:
 800a96c:	b510      	push	{r4, lr}
 800a96e:	460c      	mov	r4, r1
 800a970:	2101      	movs	r1, #1
 800a972:	f7ff feb5 	bl	800a6e0 <_Balloc>
 800a976:	4602      	mov	r2, r0
 800a978:	b928      	cbnz	r0, 800a986 <__i2b+0x1a>
 800a97a:	4b05      	ldr	r3, [pc, #20]	; (800a990 <__i2b+0x24>)
 800a97c:	4805      	ldr	r0, [pc, #20]	; (800a994 <__i2b+0x28>)
 800a97e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a982:	f001 f9c9 	bl	800bd18 <__assert_func>
 800a986:	2301      	movs	r3, #1
 800a988:	6144      	str	r4, [r0, #20]
 800a98a:	6103      	str	r3, [r0, #16]
 800a98c:	bd10      	pop	{r4, pc}
 800a98e:	bf00      	nop
 800a990:	0800d34c 	.word	0x0800d34c
 800a994:	0800d3dc 	.word	0x0800d3dc

0800a998 <__multiply>:
 800a998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a99c:	4614      	mov	r4, r2
 800a99e:	690a      	ldr	r2, [r1, #16]
 800a9a0:	6923      	ldr	r3, [r4, #16]
 800a9a2:	429a      	cmp	r2, r3
 800a9a4:	bfb8      	it	lt
 800a9a6:	460b      	movlt	r3, r1
 800a9a8:	460d      	mov	r5, r1
 800a9aa:	bfbc      	itt	lt
 800a9ac:	4625      	movlt	r5, r4
 800a9ae:	461c      	movlt	r4, r3
 800a9b0:	f8d5 a010 	ldr.w	sl, [r5, #16]
 800a9b4:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800a9b8:	68ab      	ldr	r3, [r5, #8]
 800a9ba:	6869      	ldr	r1, [r5, #4]
 800a9bc:	eb0a 0709 	add.w	r7, sl, r9
 800a9c0:	42bb      	cmp	r3, r7
 800a9c2:	b085      	sub	sp, #20
 800a9c4:	bfb8      	it	lt
 800a9c6:	3101      	addlt	r1, #1
 800a9c8:	f7ff fe8a 	bl	800a6e0 <_Balloc>
 800a9cc:	b930      	cbnz	r0, 800a9dc <__multiply+0x44>
 800a9ce:	4602      	mov	r2, r0
 800a9d0:	4b42      	ldr	r3, [pc, #264]	; (800aadc <__multiply+0x144>)
 800a9d2:	4843      	ldr	r0, [pc, #268]	; (800aae0 <__multiply+0x148>)
 800a9d4:	f240 115d 	movw	r1, #349	; 0x15d
 800a9d8:	f001 f99e 	bl	800bd18 <__assert_func>
 800a9dc:	f100 0614 	add.w	r6, r0, #20
 800a9e0:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 800a9e4:	4633      	mov	r3, r6
 800a9e6:	2200      	movs	r2, #0
 800a9e8:	4543      	cmp	r3, r8
 800a9ea:	d31e      	bcc.n	800aa2a <__multiply+0x92>
 800a9ec:	f105 0c14 	add.w	ip, r5, #20
 800a9f0:	f104 0314 	add.w	r3, r4, #20
 800a9f4:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 800a9f8:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 800a9fc:	9202      	str	r2, [sp, #8]
 800a9fe:	ebac 0205 	sub.w	r2, ip, r5
 800aa02:	3a15      	subs	r2, #21
 800aa04:	f022 0203 	bic.w	r2, r2, #3
 800aa08:	3204      	adds	r2, #4
 800aa0a:	f105 0115 	add.w	r1, r5, #21
 800aa0e:	458c      	cmp	ip, r1
 800aa10:	bf38      	it	cc
 800aa12:	2204      	movcc	r2, #4
 800aa14:	9201      	str	r2, [sp, #4]
 800aa16:	9a02      	ldr	r2, [sp, #8]
 800aa18:	9303      	str	r3, [sp, #12]
 800aa1a:	429a      	cmp	r2, r3
 800aa1c:	d808      	bhi.n	800aa30 <__multiply+0x98>
 800aa1e:	2f00      	cmp	r7, #0
 800aa20:	dc55      	bgt.n	800aace <__multiply+0x136>
 800aa22:	6107      	str	r7, [r0, #16]
 800aa24:	b005      	add	sp, #20
 800aa26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa2a:	f843 2b04 	str.w	r2, [r3], #4
 800aa2e:	e7db      	b.n	800a9e8 <__multiply+0x50>
 800aa30:	f8b3 a000 	ldrh.w	sl, [r3]
 800aa34:	f1ba 0f00 	cmp.w	sl, #0
 800aa38:	d020      	beq.n	800aa7c <__multiply+0xe4>
 800aa3a:	f105 0e14 	add.w	lr, r5, #20
 800aa3e:	46b1      	mov	r9, r6
 800aa40:	2200      	movs	r2, #0
 800aa42:	f85e 4b04 	ldr.w	r4, [lr], #4
 800aa46:	f8d9 b000 	ldr.w	fp, [r9]
 800aa4a:	b2a1      	uxth	r1, r4
 800aa4c:	fa1f fb8b 	uxth.w	fp, fp
 800aa50:	fb0a b101 	mla	r1, sl, r1, fp
 800aa54:	4411      	add	r1, r2
 800aa56:	f8d9 2000 	ldr.w	r2, [r9]
 800aa5a:	0c24      	lsrs	r4, r4, #16
 800aa5c:	0c12      	lsrs	r2, r2, #16
 800aa5e:	fb0a 2404 	mla	r4, sl, r4, r2
 800aa62:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 800aa66:	b289      	uxth	r1, r1
 800aa68:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800aa6c:	45f4      	cmp	ip, lr
 800aa6e:	f849 1b04 	str.w	r1, [r9], #4
 800aa72:	ea4f 4214 	mov.w	r2, r4, lsr #16
 800aa76:	d8e4      	bhi.n	800aa42 <__multiply+0xaa>
 800aa78:	9901      	ldr	r1, [sp, #4]
 800aa7a:	5072      	str	r2, [r6, r1]
 800aa7c:	9a03      	ldr	r2, [sp, #12]
 800aa7e:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800aa82:	3304      	adds	r3, #4
 800aa84:	f1b9 0f00 	cmp.w	r9, #0
 800aa88:	d01f      	beq.n	800aaca <__multiply+0x132>
 800aa8a:	6834      	ldr	r4, [r6, #0]
 800aa8c:	f105 0114 	add.w	r1, r5, #20
 800aa90:	46b6      	mov	lr, r6
 800aa92:	f04f 0a00 	mov.w	sl, #0
 800aa96:	880a      	ldrh	r2, [r1, #0]
 800aa98:	f8be b002 	ldrh.w	fp, [lr, #2]
 800aa9c:	fb09 b202 	mla	r2, r9, r2, fp
 800aaa0:	4492      	add	sl, r2
 800aaa2:	b2a4      	uxth	r4, r4
 800aaa4:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800aaa8:	f84e 4b04 	str.w	r4, [lr], #4
 800aaac:	f851 4b04 	ldr.w	r4, [r1], #4
 800aab0:	f8be 2000 	ldrh.w	r2, [lr]
 800aab4:	0c24      	lsrs	r4, r4, #16
 800aab6:	fb09 2404 	mla	r4, r9, r4, r2
 800aaba:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 800aabe:	458c      	cmp	ip, r1
 800aac0:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 800aac4:	d8e7      	bhi.n	800aa96 <__multiply+0xfe>
 800aac6:	9a01      	ldr	r2, [sp, #4]
 800aac8:	50b4      	str	r4, [r6, r2]
 800aaca:	3604      	adds	r6, #4
 800aacc:	e7a3      	b.n	800aa16 <__multiply+0x7e>
 800aace:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800aad2:	2b00      	cmp	r3, #0
 800aad4:	d1a5      	bne.n	800aa22 <__multiply+0x8a>
 800aad6:	3f01      	subs	r7, #1
 800aad8:	e7a1      	b.n	800aa1e <__multiply+0x86>
 800aada:	bf00      	nop
 800aadc:	0800d34c 	.word	0x0800d34c
 800aae0:	0800d3dc 	.word	0x0800d3dc

0800aae4 <__pow5mult>:
 800aae4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aae8:	4615      	mov	r5, r2
 800aaea:	f012 0203 	ands.w	r2, r2, #3
 800aaee:	4606      	mov	r6, r0
 800aaf0:	460f      	mov	r7, r1
 800aaf2:	d007      	beq.n	800ab04 <__pow5mult+0x20>
 800aaf4:	4c25      	ldr	r4, [pc, #148]	; (800ab8c <__pow5mult+0xa8>)
 800aaf6:	3a01      	subs	r2, #1
 800aaf8:	2300      	movs	r3, #0
 800aafa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800aafe:	f7ff fe51 	bl	800a7a4 <__multadd>
 800ab02:	4607      	mov	r7, r0
 800ab04:	10ad      	asrs	r5, r5, #2
 800ab06:	d03d      	beq.n	800ab84 <__pow5mult+0xa0>
 800ab08:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800ab0a:	b97c      	cbnz	r4, 800ab2c <__pow5mult+0x48>
 800ab0c:	2010      	movs	r0, #16
 800ab0e:	f7ff fdbf 	bl	800a690 <malloc>
 800ab12:	4602      	mov	r2, r0
 800ab14:	6270      	str	r0, [r6, #36]	; 0x24
 800ab16:	b928      	cbnz	r0, 800ab24 <__pow5mult+0x40>
 800ab18:	4b1d      	ldr	r3, [pc, #116]	; (800ab90 <__pow5mult+0xac>)
 800ab1a:	481e      	ldr	r0, [pc, #120]	; (800ab94 <__pow5mult+0xb0>)
 800ab1c:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800ab20:	f001 f8fa 	bl	800bd18 <__assert_func>
 800ab24:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800ab28:	6004      	str	r4, [r0, #0]
 800ab2a:	60c4      	str	r4, [r0, #12]
 800ab2c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800ab30:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800ab34:	b94c      	cbnz	r4, 800ab4a <__pow5mult+0x66>
 800ab36:	f240 2171 	movw	r1, #625	; 0x271
 800ab3a:	4630      	mov	r0, r6
 800ab3c:	f7ff ff16 	bl	800a96c <__i2b>
 800ab40:	2300      	movs	r3, #0
 800ab42:	f8c8 0008 	str.w	r0, [r8, #8]
 800ab46:	4604      	mov	r4, r0
 800ab48:	6003      	str	r3, [r0, #0]
 800ab4a:	f04f 0900 	mov.w	r9, #0
 800ab4e:	07eb      	lsls	r3, r5, #31
 800ab50:	d50a      	bpl.n	800ab68 <__pow5mult+0x84>
 800ab52:	4639      	mov	r1, r7
 800ab54:	4622      	mov	r2, r4
 800ab56:	4630      	mov	r0, r6
 800ab58:	f7ff ff1e 	bl	800a998 <__multiply>
 800ab5c:	4639      	mov	r1, r7
 800ab5e:	4680      	mov	r8, r0
 800ab60:	4630      	mov	r0, r6
 800ab62:	f7ff fdfd 	bl	800a760 <_Bfree>
 800ab66:	4647      	mov	r7, r8
 800ab68:	106d      	asrs	r5, r5, #1
 800ab6a:	d00b      	beq.n	800ab84 <__pow5mult+0xa0>
 800ab6c:	6820      	ldr	r0, [r4, #0]
 800ab6e:	b938      	cbnz	r0, 800ab80 <__pow5mult+0x9c>
 800ab70:	4622      	mov	r2, r4
 800ab72:	4621      	mov	r1, r4
 800ab74:	4630      	mov	r0, r6
 800ab76:	f7ff ff0f 	bl	800a998 <__multiply>
 800ab7a:	6020      	str	r0, [r4, #0]
 800ab7c:	f8c0 9000 	str.w	r9, [r0]
 800ab80:	4604      	mov	r4, r0
 800ab82:	e7e4      	b.n	800ab4e <__pow5mult+0x6a>
 800ab84:	4638      	mov	r0, r7
 800ab86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ab8a:	bf00      	nop
 800ab8c:	0800d530 	.word	0x0800d530
 800ab90:	0800d2d6 	.word	0x0800d2d6
 800ab94:	0800d3dc 	.word	0x0800d3dc

0800ab98 <__lshift>:
 800ab98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab9c:	460c      	mov	r4, r1
 800ab9e:	6849      	ldr	r1, [r1, #4]
 800aba0:	6923      	ldr	r3, [r4, #16]
 800aba2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800aba6:	68a3      	ldr	r3, [r4, #8]
 800aba8:	4607      	mov	r7, r0
 800abaa:	4691      	mov	r9, r2
 800abac:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800abb0:	f108 0601 	add.w	r6, r8, #1
 800abb4:	42b3      	cmp	r3, r6
 800abb6:	db0b      	blt.n	800abd0 <__lshift+0x38>
 800abb8:	4638      	mov	r0, r7
 800abba:	f7ff fd91 	bl	800a6e0 <_Balloc>
 800abbe:	4605      	mov	r5, r0
 800abc0:	b948      	cbnz	r0, 800abd6 <__lshift+0x3e>
 800abc2:	4602      	mov	r2, r0
 800abc4:	4b28      	ldr	r3, [pc, #160]	; (800ac68 <__lshift+0xd0>)
 800abc6:	4829      	ldr	r0, [pc, #164]	; (800ac6c <__lshift+0xd4>)
 800abc8:	f240 11d9 	movw	r1, #473	; 0x1d9
 800abcc:	f001 f8a4 	bl	800bd18 <__assert_func>
 800abd0:	3101      	adds	r1, #1
 800abd2:	005b      	lsls	r3, r3, #1
 800abd4:	e7ee      	b.n	800abb4 <__lshift+0x1c>
 800abd6:	2300      	movs	r3, #0
 800abd8:	f100 0114 	add.w	r1, r0, #20
 800abdc:	f100 0210 	add.w	r2, r0, #16
 800abe0:	4618      	mov	r0, r3
 800abe2:	4553      	cmp	r3, sl
 800abe4:	db33      	blt.n	800ac4e <__lshift+0xb6>
 800abe6:	6920      	ldr	r0, [r4, #16]
 800abe8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800abec:	f104 0314 	add.w	r3, r4, #20
 800abf0:	f019 091f 	ands.w	r9, r9, #31
 800abf4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800abf8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800abfc:	d02b      	beq.n	800ac56 <__lshift+0xbe>
 800abfe:	f1c9 0e20 	rsb	lr, r9, #32
 800ac02:	468a      	mov	sl, r1
 800ac04:	2200      	movs	r2, #0
 800ac06:	6818      	ldr	r0, [r3, #0]
 800ac08:	fa00 f009 	lsl.w	r0, r0, r9
 800ac0c:	4302      	orrs	r2, r0
 800ac0e:	f84a 2b04 	str.w	r2, [sl], #4
 800ac12:	f853 2b04 	ldr.w	r2, [r3], #4
 800ac16:	459c      	cmp	ip, r3
 800ac18:	fa22 f20e 	lsr.w	r2, r2, lr
 800ac1c:	d8f3      	bhi.n	800ac06 <__lshift+0x6e>
 800ac1e:	ebac 0304 	sub.w	r3, ip, r4
 800ac22:	3b15      	subs	r3, #21
 800ac24:	f023 0303 	bic.w	r3, r3, #3
 800ac28:	3304      	adds	r3, #4
 800ac2a:	f104 0015 	add.w	r0, r4, #21
 800ac2e:	4584      	cmp	ip, r0
 800ac30:	bf38      	it	cc
 800ac32:	2304      	movcc	r3, #4
 800ac34:	50ca      	str	r2, [r1, r3]
 800ac36:	b10a      	cbz	r2, 800ac3c <__lshift+0xa4>
 800ac38:	f108 0602 	add.w	r6, r8, #2
 800ac3c:	3e01      	subs	r6, #1
 800ac3e:	4638      	mov	r0, r7
 800ac40:	612e      	str	r6, [r5, #16]
 800ac42:	4621      	mov	r1, r4
 800ac44:	f7ff fd8c 	bl	800a760 <_Bfree>
 800ac48:	4628      	mov	r0, r5
 800ac4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac4e:	f842 0f04 	str.w	r0, [r2, #4]!
 800ac52:	3301      	adds	r3, #1
 800ac54:	e7c5      	b.n	800abe2 <__lshift+0x4a>
 800ac56:	3904      	subs	r1, #4
 800ac58:	f853 2b04 	ldr.w	r2, [r3], #4
 800ac5c:	f841 2f04 	str.w	r2, [r1, #4]!
 800ac60:	459c      	cmp	ip, r3
 800ac62:	d8f9      	bhi.n	800ac58 <__lshift+0xc0>
 800ac64:	e7ea      	b.n	800ac3c <__lshift+0xa4>
 800ac66:	bf00      	nop
 800ac68:	0800d34c 	.word	0x0800d34c
 800ac6c:	0800d3dc 	.word	0x0800d3dc

0800ac70 <__mcmp>:
 800ac70:	b530      	push	{r4, r5, lr}
 800ac72:	6902      	ldr	r2, [r0, #16]
 800ac74:	690c      	ldr	r4, [r1, #16]
 800ac76:	1b12      	subs	r2, r2, r4
 800ac78:	d10e      	bne.n	800ac98 <__mcmp+0x28>
 800ac7a:	f100 0314 	add.w	r3, r0, #20
 800ac7e:	3114      	adds	r1, #20
 800ac80:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ac84:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ac88:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ac8c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ac90:	42a5      	cmp	r5, r4
 800ac92:	d003      	beq.n	800ac9c <__mcmp+0x2c>
 800ac94:	d305      	bcc.n	800aca2 <__mcmp+0x32>
 800ac96:	2201      	movs	r2, #1
 800ac98:	4610      	mov	r0, r2
 800ac9a:	bd30      	pop	{r4, r5, pc}
 800ac9c:	4283      	cmp	r3, r0
 800ac9e:	d3f3      	bcc.n	800ac88 <__mcmp+0x18>
 800aca0:	e7fa      	b.n	800ac98 <__mcmp+0x28>
 800aca2:	f04f 32ff 	mov.w	r2, #4294967295
 800aca6:	e7f7      	b.n	800ac98 <__mcmp+0x28>

0800aca8 <__mdiff>:
 800aca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800acac:	460c      	mov	r4, r1
 800acae:	4606      	mov	r6, r0
 800acb0:	4611      	mov	r1, r2
 800acb2:	4620      	mov	r0, r4
 800acb4:	4617      	mov	r7, r2
 800acb6:	f7ff ffdb 	bl	800ac70 <__mcmp>
 800acba:	1e05      	subs	r5, r0, #0
 800acbc:	d110      	bne.n	800ace0 <__mdiff+0x38>
 800acbe:	4629      	mov	r1, r5
 800acc0:	4630      	mov	r0, r6
 800acc2:	f7ff fd0d 	bl	800a6e0 <_Balloc>
 800acc6:	b930      	cbnz	r0, 800acd6 <__mdiff+0x2e>
 800acc8:	4b39      	ldr	r3, [pc, #228]	; (800adb0 <__mdiff+0x108>)
 800acca:	4602      	mov	r2, r0
 800accc:	f240 2132 	movw	r1, #562	; 0x232
 800acd0:	4838      	ldr	r0, [pc, #224]	; (800adb4 <__mdiff+0x10c>)
 800acd2:	f001 f821 	bl	800bd18 <__assert_func>
 800acd6:	2301      	movs	r3, #1
 800acd8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800acdc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ace0:	bfa4      	itt	ge
 800ace2:	463b      	movge	r3, r7
 800ace4:	4627      	movge	r7, r4
 800ace6:	4630      	mov	r0, r6
 800ace8:	6879      	ldr	r1, [r7, #4]
 800acea:	bfa6      	itte	ge
 800acec:	461c      	movge	r4, r3
 800acee:	2500      	movge	r5, #0
 800acf0:	2501      	movlt	r5, #1
 800acf2:	f7ff fcf5 	bl	800a6e0 <_Balloc>
 800acf6:	b920      	cbnz	r0, 800ad02 <__mdiff+0x5a>
 800acf8:	4b2d      	ldr	r3, [pc, #180]	; (800adb0 <__mdiff+0x108>)
 800acfa:	4602      	mov	r2, r0
 800acfc:	f44f 7110 	mov.w	r1, #576	; 0x240
 800ad00:	e7e6      	b.n	800acd0 <__mdiff+0x28>
 800ad02:	693e      	ldr	r6, [r7, #16]
 800ad04:	60c5      	str	r5, [r0, #12]
 800ad06:	6925      	ldr	r5, [r4, #16]
 800ad08:	f107 0114 	add.w	r1, r7, #20
 800ad0c:	f104 0914 	add.w	r9, r4, #20
 800ad10:	f100 0e14 	add.w	lr, r0, #20
 800ad14:	f107 0210 	add.w	r2, r7, #16
 800ad18:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800ad1c:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 800ad20:	46f2      	mov	sl, lr
 800ad22:	2700      	movs	r7, #0
 800ad24:	f859 3b04 	ldr.w	r3, [r9], #4
 800ad28:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800ad2c:	fa1f f883 	uxth.w	r8, r3
 800ad30:	fa17 f78b 	uxtah	r7, r7, fp
 800ad34:	0c1b      	lsrs	r3, r3, #16
 800ad36:	eba7 0808 	sub.w	r8, r7, r8
 800ad3a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800ad3e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800ad42:	fa1f f888 	uxth.w	r8, r8
 800ad46:	141f      	asrs	r7, r3, #16
 800ad48:	454d      	cmp	r5, r9
 800ad4a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800ad4e:	f84a 3b04 	str.w	r3, [sl], #4
 800ad52:	d8e7      	bhi.n	800ad24 <__mdiff+0x7c>
 800ad54:	1b2b      	subs	r3, r5, r4
 800ad56:	3b15      	subs	r3, #21
 800ad58:	f023 0303 	bic.w	r3, r3, #3
 800ad5c:	3304      	adds	r3, #4
 800ad5e:	3415      	adds	r4, #21
 800ad60:	42a5      	cmp	r5, r4
 800ad62:	bf38      	it	cc
 800ad64:	2304      	movcc	r3, #4
 800ad66:	4419      	add	r1, r3
 800ad68:	4473      	add	r3, lr
 800ad6a:	469e      	mov	lr, r3
 800ad6c:	460d      	mov	r5, r1
 800ad6e:	4565      	cmp	r5, ip
 800ad70:	d30e      	bcc.n	800ad90 <__mdiff+0xe8>
 800ad72:	f10c 0203 	add.w	r2, ip, #3
 800ad76:	1a52      	subs	r2, r2, r1
 800ad78:	f022 0203 	bic.w	r2, r2, #3
 800ad7c:	3903      	subs	r1, #3
 800ad7e:	458c      	cmp	ip, r1
 800ad80:	bf38      	it	cc
 800ad82:	2200      	movcc	r2, #0
 800ad84:	441a      	add	r2, r3
 800ad86:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ad8a:	b17b      	cbz	r3, 800adac <__mdiff+0x104>
 800ad8c:	6106      	str	r6, [r0, #16]
 800ad8e:	e7a5      	b.n	800acdc <__mdiff+0x34>
 800ad90:	f855 8b04 	ldr.w	r8, [r5], #4
 800ad94:	fa17 f488 	uxtah	r4, r7, r8
 800ad98:	1422      	asrs	r2, r4, #16
 800ad9a:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 800ad9e:	b2a4      	uxth	r4, r4
 800ada0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800ada4:	f84e 4b04 	str.w	r4, [lr], #4
 800ada8:	1417      	asrs	r7, r2, #16
 800adaa:	e7e0      	b.n	800ad6e <__mdiff+0xc6>
 800adac:	3e01      	subs	r6, #1
 800adae:	e7ea      	b.n	800ad86 <__mdiff+0xde>
 800adb0:	0800d34c 	.word	0x0800d34c
 800adb4:	0800d3dc 	.word	0x0800d3dc

0800adb8 <__ulp>:
 800adb8:	b082      	sub	sp, #8
 800adba:	ed8d 0b00 	vstr	d0, [sp]
 800adbe:	9b01      	ldr	r3, [sp, #4]
 800adc0:	4912      	ldr	r1, [pc, #72]	; (800ae0c <__ulp+0x54>)
 800adc2:	4019      	ands	r1, r3
 800adc4:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800adc8:	2900      	cmp	r1, #0
 800adca:	dd05      	ble.n	800add8 <__ulp+0x20>
 800adcc:	2200      	movs	r2, #0
 800adce:	460b      	mov	r3, r1
 800add0:	ec43 2b10 	vmov	d0, r2, r3
 800add4:	b002      	add	sp, #8
 800add6:	4770      	bx	lr
 800add8:	4249      	negs	r1, r1
 800adda:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800adde:	ea4f 5021 	mov.w	r0, r1, asr #20
 800ade2:	f04f 0200 	mov.w	r2, #0
 800ade6:	f04f 0300 	mov.w	r3, #0
 800adea:	da04      	bge.n	800adf6 <__ulp+0x3e>
 800adec:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800adf0:	fa41 f300 	asr.w	r3, r1, r0
 800adf4:	e7ec      	b.n	800add0 <__ulp+0x18>
 800adf6:	f1a0 0114 	sub.w	r1, r0, #20
 800adfa:	291e      	cmp	r1, #30
 800adfc:	bfda      	itte	le
 800adfe:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800ae02:	fa20 f101 	lsrle.w	r1, r0, r1
 800ae06:	2101      	movgt	r1, #1
 800ae08:	460a      	mov	r2, r1
 800ae0a:	e7e1      	b.n	800add0 <__ulp+0x18>
 800ae0c:	7ff00000 	.word	0x7ff00000

0800ae10 <__b2d>:
 800ae10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ae12:	6905      	ldr	r5, [r0, #16]
 800ae14:	f100 0714 	add.w	r7, r0, #20
 800ae18:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800ae1c:	1f2e      	subs	r6, r5, #4
 800ae1e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800ae22:	4620      	mov	r0, r4
 800ae24:	f7ff fd52 	bl	800a8cc <__hi0bits>
 800ae28:	f1c0 0320 	rsb	r3, r0, #32
 800ae2c:	280a      	cmp	r0, #10
 800ae2e:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800aeac <__b2d+0x9c>
 800ae32:	600b      	str	r3, [r1, #0]
 800ae34:	dc14      	bgt.n	800ae60 <__b2d+0x50>
 800ae36:	f1c0 0e0b 	rsb	lr, r0, #11
 800ae3a:	fa24 f10e 	lsr.w	r1, r4, lr
 800ae3e:	42b7      	cmp	r7, r6
 800ae40:	ea41 030c 	orr.w	r3, r1, ip
 800ae44:	bf34      	ite	cc
 800ae46:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800ae4a:	2100      	movcs	r1, #0
 800ae4c:	3015      	adds	r0, #21
 800ae4e:	fa04 f000 	lsl.w	r0, r4, r0
 800ae52:	fa21 f10e 	lsr.w	r1, r1, lr
 800ae56:	ea40 0201 	orr.w	r2, r0, r1
 800ae5a:	ec43 2b10 	vmov	d0, r2, r3
 800ae5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ae60:	42b7      	cmp	r7, r6
 800ae62:	bf3a      	itte	cc
 800ae64:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800ae68:	f1a5 0608 	subcc.w	r6, r5, #8
 800ae6c:	2100      	movcs	r1, #0
 800ae6e:	380b      	subs	r0, #11
 800ae70:	d017      	beq.n	800aea2 <__b2d+0x92>
 800ae72:	f1c0 0c20 	rsb	ip, r0, #32
 800ae76:	fa04 f500 	lsl.w	r5, r4, r0
 800ae7a:	42be      	cmp	r6, r7
 800ae7c:	fa21 f40c 	lsr.w	r4, r1, ip
 800ae80:	ea45 0504 	orr.w	r5, r5, r4
 800ae84:	bf8c      	ite	hi
 800ae86:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800ae8a:	2400      	movls	r4, #0
 800ae8c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800ae90:	fa01 f000 	lsl.w	r0, r1, r0
 800ae94:	fa24 f40c 	lsr.w	r4, r4, ip
 800ae98:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800ae9c:	ea40 0204 	orr.w	r2, r0, r4
 800aea0:	e7db      	b.n	800ae5a <__b2d+0x4a>
 800aea2:	ea44 030c 	orr.w	r3, r4, ip
 800aea6:	460a      	mov	r2, r1
 800aea8:	e7d7      	b.n	800ae5a <__b2d+0x4a>
 800aeaa:	bf00      	nop
 800aeac:	3ff00000 	.word	0x3ff00000

0800aeb0 <__d2b>:
 800aeb0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800aeb4:	4689      	mov	r9, r1
 800aeb6:	2101      	movs	r1, #1
 800aeb8:	ec57 6b10 	vmov	r6, r7, d0
 800aebc:	4690      	mov	r8, r2
 800aebe:	f7ff fc0f 	bl	800a6e0 <_Balloc>
 800aec2:	4604      	mov	r4, r0
 800aec4:	b930      	cbnz	r0, 800aed4 <__d2b+0x24>
 800aec6:	4602      	mov	r2, r0
 800aec8:	4b25      	ldr	r3, [pc, #148]	; (800af60 <__d2b+0xb0>)
 800aeca:	4826      	ldr	r0, [pc, #152]	; (800af64 <__d2b+0xb4>)
 800aecc:	f240 310a 	movw	r1, #778	; 0x30a
 800aed0:	f000 ff22 	bl	800bd18 <__assert_func>
 800aed4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800aed8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800aedc:	bb35      	cbnz	r5, 800af2c <__d2b+0x7c>
 800aede:	2e00      	cmp	r6, #0
 800aee0:	9301      	str	r3, [sp, #4]
 800aee2:	d028      	beq.n	800af36 <__d2b+0x86>
 800aee4:	4668      	mov	r0, sp
 800aee6:	9600      	str	r6, [sp, #0]
 800aee8:	f7ff fd10 	bl	800a90c <__lo0bits>
 800aeec:	9900      	ldr	r1, [sp, #0]
 800aeee:	b300      	cbz	r0, 800af32 <__d2b+0x82>
 800aef0:	9a01      	ldr	r2, [sp, #4]
 800aef2:	f1c0 0320 	rsb	r3, r0, #32
 800aef6:	fa02 f303 	lsl.w	r3, r2, r3
 800aefa:	430b      	orrs	r3, r1
 800aefc:	40c2      	lsrs	r2, r0
 800aefe:	6163      	str	r3, [r4, #20]
 800af00:	9201      	str	r2, [sp, #4]
 800af02:	9b01      	ldr	r3, [sp, #4]
 800af04:	61a3      	str	r3, [r4, #24]
 800af06:	2b00      	cmp	r3, #0
 800af08:	bf14      	ite	ne
 800af0a:	2202      	movne	r2, #2
 800af0c:	2201      	moveq	r2, #1
 800af0e:	6122      	str	r2, [r4, #16]
 800af10:	b1d5      	cbz	r5, 800af48 <__d2b+0x98>
 800af12:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800af16:	4405      	add	r5, r0
 800af18:	f8c9 5000 	str.w	r5, [r9]
 800af1c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800af20:	f8c8 0000 	str.w	r0, [r8]
 800af24:	4620      	mov	r0, r4
 800af26:	b003      	add	sp, #12
 800af28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800af2c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800af30:	e7d5      	b.n	800aede <__d2b+0x2e>
 800af32:	6161      	str	r1, [r4, #20]
 800af34:	e7e5      	b.n	800af02 <__d2b+0x52>
 800af36:	a801      	add	r0, sp, #4
 800af38:	f7ff fce8 	bl	800a90c <__lo0bits>
 800af3c:	9b01      	ldr	r3, [sp, #4]
 800af3e:	6163      	str	r3, [r4, #20]
 800af40:	2201      	movs	r2, #1
 800af42:	6122      	str	r2, [r4, #16]
 800af44:	3020      	adds	r0, #32
 800af46:	e7e3      	b.n	800af10 <__d2b+0x60>
 800af48:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800af4c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800af50:	f8c9 0000 	str.w	r0, [r9]
 800af54:	6918      	ldr	r0, [r3, #16]
 800af56:	f7ff fcb9 	bl	800a8cc <__hi0bits>
 800af5a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800af5e:	e7df      	b.n	800af20 <__d2b+0x70>
 800af60:	0800d34c 	.word	0x0800d34c
 800af64:	0800d3dc 	.word	0x0800d3dc

0800af68 <__ratio>:
 800af68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af6c:	468a      	mov	sl, r1
 800af6e:	4669      	mov	r1, sp
 800af70:	4683      	mov	fp, r0
 800af72:	f7ff ff4d 	bl	800ae10 <__b2d>
 800af76:	a901      	add	r1, sp, #4
 800af78:	4650      	mov	r0, sl
 800af7a:	ec59 8b10 	vmov	r8, r9, d0
 800af7e:	ee10 6a10 	vmov	r6, s0
 800af82:	f7ff ff45 	bl	800ae10 <__b2d>
 800af86:	f8db 3010 	ldr.w	r3, [fp, #16]
 800af8a:	f8da 2010 	ldr.w	r2, [sl, #16]
 800af8e:	eba3 0c02 	sub.w	ip, r3, r2
 800af92:	e9dd 3200 	ldrd	r3, r2, [sp]
 800af96:	1a9b      	subs	r3, r3, r2
 800af98:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800af9c:	ec55 4b10 	vmov	r4, r5, d0
 800afa0:	2b00      	cmp	r3, #0
 800afa2:	ee10 0a10 	vmov	r0, s0
 800afa6:	bfce      	itee	gt
 800afa8:	464a      	movgt	r2, r9
 800afaa:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800afae:	462a      	movle	r2, r5
 800afb0:	464f      	mov	r7, r9
 800afb2:	4629      	mov	r1, r5
 800afb4:	bfcc      	ite	gt
 800afb6:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800afba:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
 800afbe:	ec47 6b17 	vmov	d7, r6, r7
 800afc2:	ec41 0b16 	vmov	d6, r0, r1
 800afc6:	ee87 0b06 	vdiv.f64	d0, d7, d6
 800afca:	b003      	add	sp, #12
 800afcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800afd0 <__copybits>:
 800afd0:	3901      	subs	r1, #1
 800afd2:	b570      	push	{r4, r5, r6, lr}
 800afd4:	1149      	asrs	r1, r1, #5
 800afd6:	6914      	ldr	r4, [r2, #16]
 800afd8:	3101      	adds	r1, #1
 800afda:	f102 0314 	add.w	r3, r2, #20
 800afde:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800afe2:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800afe6:	1f05      	subs	r5, r0, #4
 800afe8:	42a3      	cmp	r3, r4
 800afea:	d30c      	bcc.n	800b006 <__copybits+0x36>
 800afec:	1aa3      	subs	r3, r4, r2
 800afee:	3b11      	subs	r3, #17
 800aff0:	f023 0303 	bic.w	r3, r3, #3
 800aff4:	3211      	adds	r2, #17
 800aff6:	42a2      	cmp	r2, r4
 800aff8:	bf88      	it	hi
 800affa:	2300      	movhi	r3, #0
 800affc:	4418      	add	r0, r3
 800affe:	2300      	movs	r3, #0
 800b000:	4288      	cmp	r0, r1
 800b002:	d305      	bcc.n	800b010 <__copybits+0x40>
 800b004:	bd70      	pop	{r4, r5, r6, pc}
 800b006:	f853 6b04 	ldr.w	r6, [r3], #4
 800b00a:	f845 6f04 	str.w	r6, [r5, #4]!
 800b00e:	e7eb      	b.n	800afe8 <__copybits+0x18>
 800b010:	f840 3b04 	str.w	r3, [r0], #4
 800b014:	e7f4      	b.n	800b000 <__copybits+0x30>

0800b016 <__any_on>:
 800b016:	f100 0214 	add.w	r2, r0, #20
 800b01a:	6900      	ldr	r0, [r0, #16]
 800b01c:	114b      	asrs	r3, r1, #5
 800b01e:	4298      	cmp	r0, r3
 800b020:	b510      	push	{r4, lr}
 800b022:	db11      	blt.n	800b048 <__any_on+0x32>
 800b024:	dd0a      	ble.n	800b03c <__any_on+0x26>
 800b026:	f011 011f 	ands.w	r1, r1, #31
 800b02a:	d007      	beq.n	800b03c <__any_on+0x26>
 800b02c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800b030:	fa24 f001 	lsr.w	r0, r4, r1
 800b034:	fa00 f101 	lsl.w	r1, r0, r1
 800b038:	428c      	cmp	r4, r1
 800b03a:	d10b      	bne.n	800b054 <__any_on+0x3e>
 800b03c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800b040:	4293      	cmp	r3, r2
 800b042:	d803      	bhi.n	800b04c <__any_on+0x36>
 800b044:	2000      	movs	r0, #0
 800b046:	bd10      	pop	{r4, pc}
 800b048:	4603      	mov	r3, r0
 800b04a:	e7f7      	b.n	800b03c <__any_on+0x26>
 800b04c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b050:	2900      	cmp	r1, #0
 800b052:	d0f5      	beq.n	800b040 <__any_on+0x2a>
 800b054:	2001      	movs	r0, #1
 800b056:	e7f6      	b.n	800b046 <__any_on+0x30>

0800b058 <_calloc_r>:
 800b058:	b513      	push	{r0, r1, r4, lr}
 800b05a:	434a      	muls	r2, r1
 800b05c:	4611      	mov	r1, r2
 800b05e:	9201      	str	r2, [sp, #4]
 800b060:	f000 f85a 	bl	800b118 <_malloc_r>
 800b064:	4604      	mov	r4, r0
 800b066:	b118      	cbz	r0, 800b070 <_calloc_r+0x18>
 800b068:	9a01      	ldr	r2, [sp, #4]
 800b06a:	2100      	movs	r1, #0
 800b06c:	f7fc fbcc 	bl	8007808 <memset>
 800b070:	4620      	mov	r0, r4
 800b072:	b002      	add	sp, #8
 800b074:	bd10      	pop	{r4, pc}
	...

0800b078 <_free_r>:
 800b078:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b07a:	2900      	cmp	r1, #0
 800b07c:	d048      	beq.n	800b110 <_free_r+0x98>
 800b07e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800b082:	9001      	str	r0, [sp, #4]
 800b084:	2b00      	cmp	r3, #0
 800b086:	f1a1 0404 	sub.w	r4, r1, #4
 800b08a:	bfb8      	it	lt
 800b08c:	18e4      	addlt	r4, r4, r3
 800b08e:	f001 f847 	bl	800c120 <__malloc_lock>
 800b092:	4a20      	ldr	r2, [pc, #128]	; (800b114 <_free_r+0x9c>)
 800b094:	9801      	ldr	r0, [sp, #4]
 800b096:	6813      	ldr	r3, [r2, #0]
 800b098:	4615      	mov	r5, r2
 800b09a:	b933      	cbnz	r3, 800b0aa <_free_r+0x32>
 800b09c:	6063      	str	r3, [r4, #4]
 800b09e:	6014      	str	r4, [r2, #0]
 800b0a0:	b003      	add	sp, #12
 800b0a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b0a6:	f001 b841 	b.w	800c12c <__malloc_unlock>
 800b0aa:	42a3      	cmp	r3, r4
 800b0ac:	d90b      	bls.n	800b0c6 <_free_r+0x4e>
 800b0ae:	6821      	ldr	r1, [r4, #0]
 800b0b0:	1862      	adds	r2, r4, r1
 800b0b2:	4293      	cmp	r3, r2
 800b0b4:	bf04      	itt	eq
 800b0b6:	681a      	ldreq	r2, [r3, #0]
 800b0b8:	685b      	ldreq	r3, [r3, #4]
 800b0ba:	6063      	str	r3, [r4, #4]
 800b0bc:	bf04      	itt	eq
 800b0be:	1852      	addeq	r2, r2, r1
 800b0c0:	6022      	streq	r2, [r4, #0]
 800b0c2:	602c      	str	r4, [r5, #0]
 800b0c4:	e7ec      	b.n	800b0a0 <_free_r+0x28>
 800b0c6:	461a      	mov	r2, r3
 800b0c8:	685b      	ldr	r3, [r3, #4]
 800b0ca:	b10b      	cbz	r3, 800b0d0 <_free_r+0x58>
 800b0cc:	42a3      	cmp	r3, r4
 800b0ce:	d9fa      	bls.n	800b0c6 <_free_r+0x4e>
 800b0d0:	6811      	ldr	r1, [r2, #0]
 800b0d2:	1855      	adds	r5, r2, r1
 800b0d4:	42a5      	cmp	r5, r4
 800b0d6:	d10b      	bne.n	800b0f0 <_free_r+0x78>
 800b0d8:	6824      	ldr	r4, [r4, #0]
 800b0da:	4421      	add	r1, r4
 800b0dc:	1854      	adds	r4, r2, r1
 800b0de:	42a3      	cmp	r3, r4
 800b0e0:	6011      	str	r1, [r2, #0]
 800b0e2:	d1dd      	bne.n	800b0a0 <_free_r+0x28>
 800b0e4:	681c      	ldr	r4, [r3, #0]
 800b0e6:	685b      	ldr	r3, [r3, #4]
 800b0e8:	6053      	str	r3, [r2, #4]
 800b0ea:	4421      	add	r1, r4
 800b0ec:	6011      	str	r1, [r2, #0]
 800b0ee:	e7d7      	b.n	800b0a0 <_free_r+0x28>
 800b0f0:	d902      	bls.n	800b0f8 <_free_r+0x80>
 800b0f2:	230c      	movs	r3, #12
 800b0f4:	6003      	str	r3, [r0, #0]
 800b0f6:	e7d3      	b.n	800b0a0 <_free_r+0x28>
 800b0f8:	6825      	ldr	r5, [r4, #0]
 800b0fa:	1961      	adds	r1, r4, r5
 800b0fc:	428b      	cmp	r3, r1
 800b0fe:	bf04      	itt	eq
 800b100:	6819      	ldreq	r1, [r3, #0]
 800b102:	685b      	ldreq	r3, [r3, #4]
 800b104:	6063      	str	r3, [r4, #4]
 800b106:	bf04      	itt	eq
 800b108:	1949      	addeq	r1, r1, r5
 800b10a:	6021      	streq	r1, [r4, #0]
 800b10c:	6054      	str	r4, [r2, #4]
 800b10e:	e7c7      	b.n	800b0a0 <_free_r+0x28>
 800b110:	b003      	add	sp, #12
 800b112:	bd30      	pop	{r4, r5, pc}
 800b114:	20000334 	.word	0x20000334

0800b118 <_malloc_r>:
 800b118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b11a:	1ccd      	adds	r5, r1, #3
 800b11c:	f025 0503 	bic.w	r5, r5, #3
 800b120:	3508      	adds	r5, #8
 800b122:	2d0c      	cmp	r5, #12
 800b124:	bf38      	it	cc
 800b126:	250c      	movcc	r5, #12
 800b128:	2d00      	cmp	r5, #0
 800b12a:	4606      	mov	r6, r0
 800b12c:	db01      	blt.n	800b132 <_malloc_r+0x1a>
 800b12e:	42a9      	cmp	r1, r5
 800b130:	d903      	bls.n	800b13a <_malloc_r+0x22>
 800b132:	230c      	movs	r3, #12
 800b134:	6033      	str	r3, [r6, #0]
 800b136:	2000      	movs	r0, #0
 800b138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b13a:	f000 fff1 	bl	800c120 <__malloc_lock>
 800b13e:	4921      	ldr	r1, [pc, #132]	; (800b1c4 <_malloc_r+0xac>)
 800b140:	680a      	ldr	r2, [r1, #0]
 800b142:	4614      	mov	r4, r2
 800b144:	b99c      	cbnz	r4, 800b16e <_malloc_r+0x56>
 800b146:	4f20      	ldr	r7, [pc, #128]	; (800b1c8 <_malloc_r+0xb0>)
 800b148:	683b      	ldr	r3, [r7, #0]
 800b14a:	b923      	cbnz	r3, 800b156 <_malloc_r+0x3e>
 800b14c:	4621      	mov	r1, r4
 800b14e:	4630      	mov	r0, r6
 800b150:	f000 fcd2 	bl	800baf8 <_sbrk_r>
 800b154:	6038      	str	r0, [r7, #0]
 800b156:	4629      	mov	r1, r5
 800b158:	4630      	mov	r0, r6
 800b15a:	f000 fccd 	bl	800baf8 <_sbrk_r>
 800b15e:	1c43      	adds	r3, r0, #1
 800b160:	d123      	bne.n	800b1aa <_malloc_r+0x92>
 800b162:	230c      	movs	r3, #12
 800b164:	6033      	str	r3, [r6, #0]
 800b166:	4630      	mov	r0, r6
 800b168:	f000 ffe0 	bl	800c12c <__malloc_unlock>
 800b16c:	e7e3      	b.n	800b136 <_malloc_r+0x1e>
 800b16e:	6823      	ldr	r3, [r4, #0]
 800b170:	1b5b      	subs	r3, r3, r5
 800b172:	d417      	bmi.n	800b1a4 <_malloc_r+0x8c>
 800b174:	2b0b      	cmp	r3, #11
 800b176:	d903      	bls.n	800b180 <_malloc_r+0x68>
 800b178:	6023      	str	r3, [r4, #0]
 800b17a:	441c      	add	r4, r3
 800b17c:	6025      	str	r5, [r4, #0]
 800b17e:	e004      	b.n	800b18a <_malloc_r+0x72>
 800b180:	6863      	ldr	r3, [r4, #4]
 800b182:	42a2      	cmp	r2, r4
 800b184:	bf0c      	ite	eq
 800b186:	600b      	streq	r3, [r1, #0]
 800b188:	6053      	strne	r3, [r2, #4]
 800b18a:	4630      	mov	r0, r6
 800b18c:	f000 ffce 	bl	800c12c <__malloc_unlock>
 800b190:	f104 000b 	add.w	r0, r4, #11
 800b194:	1d23      	adds	r3, r4, #4
 800b196:	f020 0007 	bic.w	r0, r0, #7
 800b19a:	1ac2      	subs	r2, r0, r3
 800b19c:	d0cc      	beq.n	800b138 <_malloc_r+0x20>
 800b19e:	1a1b      	subs	r3, r3, r0
 800b1a0:	50a3      	str	r3, [r4, r2]
 800b1a2:	e7c9      	b.n	800b138 <_malloc_r+0x20>
 800b1a4:	4622      	mov	r2, r4
 800b1a6:	6864      	ldr	r4, [r4, #4]
 800b1a8:	e7cc      	b.n	800b144 <_malloc_r+0x2c>
 800b1aa:	1cc4      	adds	r4, r0, #3
 800b1ac:	f024 0403 	bic.w	r4, r4, #3
 800b1b0:	42a0      	cmp	r0, r4
 800b1b2:	d0e3      	beq.n	800b17c <_malloc_r+0x64>
 800b1b4:	1a21      	subs	r1, r4, r0
 800b1b6:	4630      	mov	r0, r6
 800b1b8:	f000 fc9e 	bl	800baf8 <_sbrk_r>
 800b1bc:	3001      	adds	r0, #1
 800b1be:	d1dd      	bne.n	800b17c <_malloc_r+0x64>
 800b1c0:	e7cf      	b.n	800b162 <_malloc_r+0x4a>
 800b1c2:	bf00      	nop
 800b1c4:	20000334 	.word	0x20000334
 800b1c8:	20000338 	.word	0x20000338

0800b1cc <__ssputs_r>:
 800b1cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b1d0:	688e      	ldr	r6, [r1, #8]
 800b1d2:	429e      	cmp	r6, r3
 800b1d4:	4682      	mov	sl, r0
 800b1d6:	460c      	mov	r4, r1
 800b1d8:	4690      	mov	r8, r2
 800b1da:	461f      	mov	r7, r3
 800b1dc:	d838      	bhi.n	800b250 <__ssputs_r+0x84>
 800b1de:	898a      	ldrh	r2, [r1, #12]
 800b1e0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800b1e4:	d032      	beq.n	800b24c <__ssputs_r+0x80>
 800b1e6:	6825      	ldr	r5, [r4, #0]
 800b1e8:	6909      	ldr	r1, [r1, #16]
 800b1ea:	eba5 0901 	sub.w	r9, r5, r1
 800b1ee:	6965      	ldr	r5, [r4, #20]
 800b1f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b1f4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800b1f8:	3301      	adds	r3, #1
 800b1fa:	444b      	add	r3, r9
 800b1fc:	106d      	asrs	r5, r5, #1
 800b1fe:	429d      	cmp	r5, r3
 800b200:	bf38      	it	cc
 800b202:	461d      	movcc	r5, r3
 800b204:	0553      	lsls	r3, r2, #21
 800b206:	d531      	bpl.n	800b26c <__ssputs_r+0xa0>
 800b208:	4629      	mov	r1, r5
 800b20a:	f7ff ff85 	bl	800b118 <_malloc_r>
 800b20e:	4606      	mov	r6, r0
 800b210:	b950      	cbnz	r0, 800b228 <__ssputs_r+0x5c>
 800b212:	230c      	movs	r3, #12
 800b214:	f8ca 3000 	str.w	r3, [sl]
 800b218:	89a3      	ldrh	r3, [r4, #12]
 800b21a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b21e:	81a3      	strh	r3, [r4, #12]
 800b220:	f04f 30ff 	mov.w	r0, #4294967295
 800b224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b228:	6921      	ldr	r1, [r4, #16]
 800b22a:	464a      	mov	r2, r9
 800b22c:	f7ff fa4a 	bl	800a6c4 <memcpy>
 800b230:	89a3      	ldrh	r3, [r4, #12]
 800b232:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800b236:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b23a:	81a3      	strh	r3, [r4, #12]
 800b23c:	6126      	str	r6, [r4, #16]
 800b23e:	6165      	str	r5, [r4, #20]
 800b240:	444e      	add	r6, r9
 800b242:	eba5 0509 	sub.w	r5, r5, r9
 800b246:	6026      	str	r6, [r4, #0]
 800b248:	60a5      	str	r5, [r4, #8]
 800b24a:	463e      	mov	r6, r7
 800b24c:	42be      	cmp	r6, r7
 800b24e:	d900      	bls.n	800b252 <__ssputs_r+0x86>
 800b250:	463e      	mov	r6, r7
 800b252:	4632      	mov	r2, r6
 800b254:	6820      	ldr	r0, [r4, #0]
 800b256:	4641      	mov	r1, r8
 800b258:	f000 ff48 	bl	800c0ec <memmove>
 800b25c:	68a3      	ldr	r3, [r4, #8]
 800b25e:	6822      	ldr	r2, [r4, #0]
 800b260:	1b9b      	subs	r3, r3, r6
 800b262:	4432      	add	r2, r6
 800b264:	60a3      	str	r3, [r4, #8]
 800b266:	6022      	str	r2, [r4, #0]
 800b268:	2000      	movs	r0, #0
 800b26a:	e7db      	b.n	800b224 <__ssputs_r+0x58>
 800b26c:	462a      	mov	r2, r5
 800b26e:	f000 ff63 	bl	800c138 <_realloc_r>
 800b272:	4606      	mov	r6, r0
 800b274:	2800      	cmp	r0, #0
 800b276:	d1e1      	bne.n	800b23c <__ssputs_r+0x70>
 800b278:	6921      	ldr	r1, [r4, #16]
 800b27a:	4650      	mov	r0, sl
 800b27c:	f7ff fefc 	bl	800b078 <_free_r>
 800b280:	e7c7      	b.n	800b212 <__ssputs_r+0x46>
	...

0800b284 <_svfiprintf_r>:
 800b284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b288:	4698      	mov	r8, r3
 800b28a:	898b      	ldrh	r3, [r1, #12]
 800b28c:	061b      	lsls	r3, r3, #24
 800b28e:	b09d      	sub	sp, #116	; 0x74
 800b290:	4607      	mov	r7, r0
 800b292:	460d      	mov	r5, r1
 800b294:	4614      	mov	r4, r2
 800b296:	d50e      	bpl.n	800b2b6 <_svfiprintf_r+0x32>
 800b298:	690b      	ldr	r3, [r1, #16]
 800b29a:	b963      	cbnz	r3, 800b2b6 <_svfiprintf_r+0x32>
 800b29c:	2140      	movs	r1, #64	; 0x40
 800b29e:	f7ff ff3b 	bl	800b118 <_malloc_r>
 800b2a2:	6028      	str	r0, [r5, #0]
 800b2a4:	6128      	str	r0, [r5, #16]
 800b2a6:	b920      	cbnz	r0, 800b2b2 <_svfiprintf_r+0x2e>
 800b2a8:	230c      	movs	r3, #12
 800b2aa:	603b      	str	r3, [r7, #0]
 800b2ac:	f04f 30ff 	mov.w	r0, #4294967295
 800b2b0:	e0d1      	b.n	800b456 <_svfiprintf_r+0x1d2>
 800b2b2:	2340      	movs	r3, #64	; 0x40
 800b2b4:	616b      	str	r3, [r5, #20]
 800b2b6:	2300      	movs	r3, #0
 800b2b8:	9309      	str	r3, [sp, #36]	; 0x24
 800b2ba:	2320      	movs	r3, #32
 800b2bc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800b2c0:	f8cd 800c 	str.w	r8, [sp, #12]
 800b2c4:	2330      	movs	r3, #48	; 0x30
 800b2c6:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800b470 <_svfiprintf_r+0x1ec>
 800b2ca:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800b2ce:	f04f 0901 	mov.w	r9, #1
 800b2d2:	4623      	mov	r3, r4
 800b2d4:	469a      	mov	sl, r3
 800b2d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b2da:	b10a      	cbz	r2, 800b2e0 <_svfiprintf_r+0x5c>
 800b2dc:	2a25      	cmp	r2, #37	; 0x25
 800b2de:	d1f9      	bne.n	800b2d4 <_svfiprintf_r+0x50>
 800b2e0:	ebba 0b04 	subs.w	fp, sl, r4
 800b2e4:	d00b      	beq.n	800b2fe <_svfiprintf_r+0x7a>
 800b2e6:	465b      	mov	r3, fp
 800b2e8:	4622      	mov	r2, r4
 800b2ea:	4629      	mov	r1, r5
 800b2ec:	4638      	mov	r0, r7
 800b2ee:	f7ff ff6d 	bl	800b1cc <__ssputs_r>
 800b2f2:	3001      	adds	r0, #1
 800b2f4:	f000 80aa 	beq.w	800b44c <_svfiprintf_r+0x1c8>
 800b2f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b2fa:	445a      	add	r2, fp
 800b2fc:	9209      	str	r2, [sp, #36]	; 0x24
 800b2fe:	f89a 3000 	ldrb.w	r3, [sl]
 800b302:	2b00      	cmp	r3, #0
 800b304:	f000 80a2 	beq.w	800b44c <_svfiprintf_r+0x1c8>
 800b308:	2300      	movs	r3, #0
 800b30a:	f04f 32ff 	mov.w	r2, #4294967295
 800b30e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800b312:	f10a 0a01 	add.w	sl, sl, #1
 800b316:	9304      	str	r3, [sp, #16]
 800b318:	9307      	str	r3, [sp, #28]
 800b31a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800b31e:	931a      	str	r3, [sp, #104]	; 0x68
 800b320:	4654      	mov	r4, sl
 800b322:	2205      	movs	r2, #5
 800b324:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b328:	4851      	ldr	r0, [pc, #324]	; (800b470 <_svfiprintf_r+0x1ec>)
 800b32a:	f7f4 ffa1 	bl	8000270 <memchr>
 800b32e:	9a04      	ldr	r2, [sp, #16]
 800b330:	b9d8      	cbnz	r0, 800b36a <_svfiprintf_r+0xe6>
 800b332:	06d0      	lsls	r0, r2, #27
 800b334:	bf44      	itt	mi
 800b336:	2320      	movmi	r3, #32
 800b338:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b33c:	0711      	lsls	r1, r2, #28
 800b33e:	bf44      	itt	mi
 800b340:	232b      	movmi	r3, #43	; 0x2b
 800b342:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b346:	f89a 3000 	ldrb.w	r3, [sl]
 800b34a:	2b2a      	cmp	r3, #42	; 0x2a
 800b34c:	d015      	beq.n	800b37a <_svfiprintf_r+0xf6>
 800b34e:	9a07      	ldr	r2, [sp, #28]
 800b350:	4654      	mov	r4, sl
 800b352:	2000      	movs	r0, #0
 800b354:	f04f 0c0a 	mov.w	ip, #10
 800b358:	4621      	mov	r1, r4
 800b35a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b35e:	3b30      	subs	r3, #48	; 0x30
 800b360:	2b09      	cmp	r3, #9
 800b362:	d94e      	bls.n	800b402 <_svfiprintf_r+0x17e>
 800b364:	b1b0      	cbz	r0, 800b394 <_svfiprintf_r+0x110>
 800b366:	9207      	str	r2, [sp, #28]
 800b368:	e014      	b.n	800b394 <_svfiprintf_r+0x110>
 800b36a:	eba0 0308 	sub.w	r3, r0, r8
 800b36e:	fa09 f303 	lsl.w	r3, r9, r3
 800b372:	4313      	orrs	r3, r2
 800b374:	9304      	str	r3, [sp, #16]
 800b376:	46a2      	mov	sl, r4
 800b378:	e7d2      	b.n	800b320 <_svfiprintf_r+0x9c>
 800b37a:	9b03      	ldr	r3, [sp, #12]
 800b37c:	1d19      	adds	r1, r3, #4
 800b37e:	681b      	ldr	r3, [r3, #0]
 800b380:	9103      	str	r1, [sp, #12]
 800b382:	2b00      	cmp	r3, #0
 800b384:	bfbb      	ittet	lt
 800b386:	425b      	neglt	r3, r3
 800b388:	f042 0202 	orrlt.w	r2, r2, #2
 800b38c:	9307      	strge	r3, [sp, #28]
 800b38e:	9307      	strlt	r3, [sp, #28]
 800b390:	bfb8      	it	lt
 800b392:	9204      	strlt	r2, [sp, #16]
 800b394:	7823      	ldrb	r3, [r4, #0]
 800b396:	2b2e      	cmp	r3, #46	; 0x2e
 800b398:	d10c      	bne.n	800b3b4 <_svfiprintf_r+0x130>
 800b39a:	7863      	ldrb	r3, [r4, #1]
 800b39c:	2b2a      	cmp	r3, #42	; 0x2a
 800b39e:	d135      	bne.n	800b40c <_svfiprintf_r+0x188>
 800b3a0:	9b03      	ldr	r3, [sp, #12]
 800b3a2:	1d1a      	adds	r2, r3, #4
 800b3a4:	681b      	ldr	r3, [r3, #0]
 800b3a6:	9203      	str	r2, [sp, #12]
 800b3a8:	2b00      	cmp	r3, #0
 800b3aa:	bfb8      	it	lt
 800b3ac:	f04f 33ff 	movlt.w	r3, #4294967295
 800b3b0:	3402      	adds	r4, #2
 800b3b2:	9305      	str	r3, [sp, #20]
 800b3b4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800b480 <_svfiprintf_r+0x1fc>
 800b3b8:	7821      	ldrb	r1, [r4, #0]
 800b3ba:	2203      	movs	r2, #3
 800b3bc:	4650      	mov	r0, sl
 800b3be:	f7f4 ff57 	bl	8000270 <memchr>
 800b3c2:	b140      	cbz	r0, 800b3d6 <_svfiprintf_r+0x152>
 800b3c4:	2340      	movs	r3, #64	; 0x40
 800b3c6:	eba0 000a 	sub.w	r0, r0, sl
 800b3ca:	fa03 f000 	lsl.w	r0, r3, r0
 800b3ce:	9b04      	ldr	r3, [sp, #16]
 800b3d0:	4303      	orrs	r3, r0
 800b3d2:	3401      	adds	r4, #1
 800b3d4:	9304      	str	r3, [sp, #16]
 800b3d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b3da:	4826      	ldr	r0, [pc, #152]	; (800b474 <_svfiprintf_r+0x1f0>)
 800b3dc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800b3e0:	2206      	movs	r2, #6
 800b3e2:	f7f4 ff45 	bl	8000270 <memchr>
 800b3e6:	2800      	cmp	r0, #0
 800b3e8:	d038      	beq.n	800b45c <_svfiprintf_r+0x1d8>
 800b3ea:	4b23      	ldr	r3, [pc, #140]	; (800b478 <_svfiprintf_r+0x1f4>)
 800b3ec:	bb1b      	cbnz	r3, 800b436 <_svfiprintf_r+0x1b2>
 800b3ee:	9b03      	ldr	r3, [sp, #12]
 800b3f0:	3307      	adds	r3, #7
 800b3f2:	f023 0307 	bic.w	r3, r3, #7
 800b3f6:	3308      	adds	r3, #8
 800b3f8:	9303      	str	r3, [sp, #12]
 800b3fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3fc:	4433      	add	r3, r6
 800b3fe:	9309      	str	r3, [sp, #36]	; 0x24
 800b400:	e767      	b.n	800b2d2 <_svfiprintf_r+0x4e>
 800b402:	fb0c 3202 	mla	r2, ip, r2, r3
 800b406:	460c      	mov	r4, r1
 800b408:	2001      	movs	r0, #1
 800b40a:	e7a5      	b.n	800b358 <_svfiprintf_r+0xd4>
 800b40c:	2300      	movs	r3, #0
 800b40e:	3401      	adds	r4, #1
 800b410:	9305      	str	r3, [sp, #20]
 800b412:	4619      	mov	r1, r3
 800b414:	f04f 0c0a 	mov.w	ip, #10
 800b418:	4620      	mov	r0, r4
 800b41a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b41e:	3a30      	subs	r2, #48	; 0x30
 800b420:	2a09      	cmp	r2, #9
 800b422:	d903      	bls.n	800b42c <_svfiprintf_r+0x1a8>
 800b424:	2b00      	cmp	r3, #0
 800b426:	d0c5      	beq.n	800b3b4 <_svfiprintf_r+0x130>
 800b428:	9105      	str	r1, [sp, #20]
 800b42a:	e7c3      	b.n	800b3b4 <_svfiprintf_r+0x130>
 800b42c:	fb0c 2101 	mla	r1, ip, r1, r2
 800b430:	4604      	mov	r4, r0
 800b432:	2301      	movs	r3, #1
 800b434:	e7f0      	b.n	800b418 <_svfiprintf_r+0x194>
 800b436:	ab03      	add	r3, sp, #12
 800b438:	9300      	str	r3, [sp, #0]
 800b43a:	462a      	mov	r2, r5
 800b43c:	4b0f      	ldr	r3, [pc, #60]	; (800b47c <_svfiprintf_r+0x1f8>)
 800b43e:	a904      	add	r1, sp, #16
 800b440:	4638      	mov	r0, r7
 800b442:	f7fc fa79 	bl	8007938 <_printf_float>
 800b446:	1c42      	adds	r2, r0, #1
 800b448:	4606      	mov	r6, r0
 800b44a:	d1d6      	bne.n	800b3fa <_svfiprintf_r+0x176>
 800b44c:	89ab      	ldrh	r3, [r5, #12]
 800b44e:	065b      	lsls	r3, r3, #25
 800b450:	f53f af2c 	bmi.w	800b2ac <_svfiprintf_r+0x28>
 800b454:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b456:	b01d      	add	sp, #116	; 0x74
 800b458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b45c:	ab03      	add	r3, sp, #12
 800b45e:	9300      	str	r3, [sp, #0]
 800b460:	462a      	mov	r2, r5
 800b462:	4b06      	ldr	r3, [pc, #24]	; (800b47c <_svfiprintf_r+0x1f8>)
 800b464:	a904      	add	r1, sp, #16
 800b466:	4638      	mov	r0, r7
 800b468:	f7fc fcf2 	bl	8007e50 <_printf_i>
 800b46c:	e7eb      	b.n	800b446 <_svfiprintf_r+0x1c2>
 800b46e:	bf00      	nop
 800b470:	0800d53c 	.word	0x0800d53c
 800b474:	0800d546 	.word	0x0800d546
 800b478:	08007939 	.word	0x08007939
 800b47c:	0800b1cd 	.word	0x0800b1cd
 800b480:	0800d542 	.word	0x0800d542

0800b484 <_sungetc_r>:
 800b484:	b538      	push	{r3, r4, r5, lr}
 800b486:	1c4b      	adds	r3, r1, #1
 800b488:	4614      	mov	r4, r2
 800b48a:	d103      	bne.n	800b494 <_sungetc_r+0x10>
 800b48c:	f04f 35ff 	mov.w	r5, #4294967295
 800b490:	4628      	mov	r0, r5
 800b492:	bd38      	pop	{r3, r4, r5, pc}
 800b494:	8993      	ldrh	r3, [r2, #12]
 800b496:	f023 0320 	bic.w	r3, r3, #32
 800b49a:	8193      	strh	r3, [r2, #12]
 800b49c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b49e:	6852      	ldr	r2, [r2, #4]
 800b4a0:	b2cd      	uxtb	r5, r1
 800b4a2:	b18b      	cbz	r3, 800b4c8 <_sungetc_r+0x44>
 800b4a4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b4a6:	4293      	cmp	r3, r2
 800b4a8:	dd08      	ble.n	800b4bc <_sungetc_r+0x38>
 800b4aa:	6823      	ldr	r3, [r4, #0]
 800b4ac:	1e5a      	subs	r2, r3, #1
 800b4ae:	6022      	str	r2, [r4, #0]
 800b4b0:	f803 5c01 	strb.w	r5, [r3, #-1]
 800b4b4:	6863      	ldr	r3, [r4, #4]
 800b4b6:	3301      	adds	r3, #1
 800b4b8:	6063      	str	r3, [r4, #4]
 800b4ba:	e7e9      	b.n	800b490 <_sungetc_r+0xc>
 800b4bc:	4621      	mov	r1, r4
 800b4be:	f000 fbe3 	bl	800bc88 <__submore>
 800b4c2:	2800      	cmp	r0, #0
 800b4c4:	d0f1      	beq.n	800b4aa <_sungetc_r+0x26>
 800b4c6:	e7e1      	b.n	800b48c <_sungetc_r+0x8>
 800b4c8:	6921      	ldr	r1, [r4, #16]
 800b4ca:	6823      	ldr	r3, [r4, #0]
 800b4cc:	b151      	cbz	r1, 800b4e4 <_sungetc_r+0x60>
 800b4ce:	4299      	cmp	r1, r3
 800b4d0:	d208      	bcs.n	800b4e4 <_sungetc_r+0x60>
 800b4d2:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800b4d6:	42a9      	cmp	r1, r5
 800b4d8:	d104      	bne.n	800b4e4 <_sungetc_r+0x60>
 800b4da:	3b01      	subs	r3, #1
 800b4dc:	3201      	adds	r2, #1
 800b4de:	6023      	str	r3, [r4, #0]
 800b4e0:	6062      	str	r2, [r4, #4]
 800b4e2:	e7d5      	b.n	800b490 <_sungetc_r+0xc>
 800b4e4:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800b4e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800b4ec:	6363      	str	r3, [r4, #52]	; 0x34
 800b4ee:	2303      	movs	r3, #3
 800b4f0:	63a3      	str	r3, [r4, #56]	; 0x38
 800b4f2:	4623      	mov	r3, r4
 800b4f4:	f803 5f46 	strb.w	r5, [r3, #70]!
 800b4f8:	6023      	str	r3, [r4, #0]
 800b4fa:	2301      	movs	r3, #1
 800b4fc:	e7dc      	b.n	800b4b8 <_sungetc_r+0x34>

0800b4fe <__ssrefill_r>:
 800b4fe:	b510      	push	{r4, lr}
 800b500:	460c      	mov	r4, r1
 800b502:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800b504:	b169      	cbz	r1, 800b522 <__ssrefill_r+0x24>
 800b506:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800b50a:	4299      	cmp	r1, r3
 800b50c:	d001      	beq.n	800b512 <__ssrefill_r+0x14>
 800b50e:	f7ff fdb3 	bl	800b078 <_free_r>
 800b512:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b514:	6063      	str	r3, [r4, #4]
 800b516:	2000      	movs	r0, #0
 800b518:	6360      	str	r0, [r4, #52]	; 0x34
 800b51a:	b113      	cbz	r3, 800b522 <__ssrefill_r+0x24>
 800b51c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b51e:	6023      	str	r3, [r4, #0]
 800b520:	bd10      	pop	{r4, pc}
 800b522:	6923      	ldr	r3, [r4, #16]
 800b524:	6023      	str	r3, [r4, #0]
 800b526:	2300      	movs	r3, #0
 800b528:	6063      	str	r3, [r4, #4]
 800b52a:	89a3      	ldrh	r3, [r4, #12]
 800b52c:	f043 0320 	orr.w	r3, r3, #32
 800b530:	81a3      	strh	r3, [r4, #12]
 800b532:	f04f 30ff 	mov.w	r0, #4294967295
 800b536:	e7f3      	b.n	800b520 <__ssrefill_r+0x22>

0800b538 <__ssvfiscanf_r>:
 800b538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b53c:	460c      	mov	r4, r1
 800b53e:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 800b542:	2100      	movs	r1, #0
 800b544:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800b548:	49b2      	ldr	r1, [pc, #712]	; (800b814 <__ssvfiscanf_r+0x2dc>)
 800b54a:	91a0      	str	r1, [sp, #640]	; 0x280
 800b54c:	f10d 0804 	add.w	r8, sp, #4
 800b550:	49b1      	ldr	r1, [pc, #708]	; (800b818 <__ssvfiscanf_r+0x2e0>)
 800b552:	4fb2      	ldr	r7, [pc, #712]	; (800b81c <__ssvfiscanf_r+0x2e4>)
 800b554:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 800b820 <__ssvfiscanf_r+0x2e8>
 800b558:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800b55c:	4606      	mov	r6, r0
 800b55e:	91a1      	str	r1, [sp, #644]	; 0x284
 800b560:	9300      	str	r3, [sp, #0]
 800b562:	f892 a000 	ldrb.w	sl, [r2]
 800b566:	f1ba 0f00 	cmp.w	sl, #0
 800b56a:	f000 8151 	beq.w	800b810 <__ssvfiscanf_r+0x2d8>
 800b56e:	f81a 3007 	ldrb.w	r3, [sl, r7]
 800b572:	f013 0308 	ands.w	r3, r3, #8
 800b576:	f102 0501 	add.w	r5, r2, #1
 800b57a:	d019      	beq.n	800b5b0 <__ssvfiscanf_r+0x78>
 800b57c:	6863      	ldr	r3, [r4, #4]
 800b57e:	2b00      	cmp	r3, #0
 800b580:	dd0f      	ble.n	800b5a2 <__ssvfiscanf_r+0x6a>
 800b582:	6823      	ldr	r3, [r4, #0]
 800b584:	781a      	ldrb	r2, [r3, #0]
 800b586:	5cba      	ldrb	r2, [r7, r2]
 800b588:	0712      	lsls	r2, r2, #28
 800b58a:	d401      	bmi.n	800b590 <__ssvfiscanf_r+0x58>
 800b58c:	462a      	mov	r2, r5
 800b58e:	e7e8      	b.n	800b562 <__ssvfiscanf_r+0x2a>
 800b590:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b592:	3201      	adds	r2, #1
 800b594:	9245      	str	r2, [sp, #276]	; 0x114
 800b596:	6862      	ldr	r2, [r4, #4]
 800b598:	3301      	adds	r3, #1
 800b59a:	3a01      	subs	r2, #1
 800b59c:	6062      	str	r2, [r4, #4]
 800b59e:	6023      	str	r3, [r4, #0]
 800b5a0:	e7ec      	b.n	800b57c <__ssvfiscanf_r+0x44>
 800b5a2:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800b5a4:	4621      	mov	r1, r4
 800b5a6:	4630      	mov	r0, r6
 800b5a8:	4798      	blx	r3
 800b5aa:	2800      	cmp	r0, #0
 800b5ac:	d0e9      	beq.n	800b582 <__ssvfiscanf_r+0x4a>
 800b5ae:	e7ed      	b.n	800b58c <__ssvfiscanf_r+0x54>
 800b5b0:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 800b5b4:	f040 8083 	bne.w	800b6be <__ssvfiscanf_r+0x186>
 800b5b8:	9341      	str	r3, [sp, #260]	; 0x104
 800b5ba:	9343      	str	r3, [sp, #268]	; 0x10c
 800b5bc:	7853      	ldrb	r3, [r2, #1]
 800b5be:	2b2a      	cmp	r3, #42	; 0x2a
 800b5c0:	bf02      	ittt	eq
 800b5c2:	2310      	moveq	r3, #16
 800b5c4:	1c95      	addeq	r5, r2, #2
 800b5c6:	9341      	streq	r3, [sp, #260]	; 0x104
 800b5c8:	220a      	movs	r2, #10
 800b5ca:	46ab      	mov	fp, r5
 800b5cc:	f81b 1b01 	ldrb.w	r1, [fp], #1
 800b5d0:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800b5d4:	2b09      	cmp	r3, #9
 800b5d6:	d91d      	bls.n	800b614 <__ssvfiscanf_r+0xdc>
 800b5d8:	4891      	ldr	r0, [pc, #580]	; (800b820 <__ssvfiscanf_r+0x2e8>)
 800b5da:	2203      	movs	r2, #3
 800b5dc:	f7f4 fe48 	bl	8000270 <memchr>
 800b5e0:	b140      	cbz	r0, 800b5f4 <__ssvfiscanf_r+0xbc>
 800b5e2:	2301      	movs	r3, #1
 800b5e4:	eba0 0009 	sub.w	r0, r0, r9
 800b5e8:	fa03 f000 	lsl.w	r0, r3, r0
 800b5ec:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800b5ee:	4318      	orrs	r0, r3
 800b5f0:	9041      	str	r0, [sp, #260]	; 0x104
 800b5f2:	465d      	mov	r5, fp
 800b5f4:	f815 3b01 	ldrb.w	r3, [r5], #1
 800b5f8:	2b78      	cmp	r3, #120	; 0x78
 800b5fa:	d806      	bhi.n	800b60a <__ssvfiscanf_r+0xd2>
 800b5fc:	2b57      	cmp	r3, #87	; 0x57
 800b5fe:	d810      	bhi.n	800b622 <__ssvfiscanf_r+0xea>
 800b600:	2b25      	cmp	r3, #37	; 0x25
 800b602:	d05c      	beq.n	800b6be <__ssvfiscanf_r+0x186>
 800b604:	d856      	bhi.n	800b6b4 <__ssvfiscanf_r+0x17c>
 800b606:	2b00      	cmp	r3, #0
 800b608:	d074      	beq.n	800b6f4 <__ssvfiscanf_r+0x1bc>
 800b60a:	2303      	movs	r3, #3
 800b60c:	9347      	str	r3, [sp, #284]	; 0x11c
 800b60e:	230a      	movs	r3, #10
 800b610:	9342      	str	r3, [sp, #264]	; 0x108
 800b612:	e081      	b.n	800b718 <__ssvfiscanf_r+0x1e0>
 800b614:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800b616:	fb02 1303 	mla	r3, r2, r3, r1
 800b61a:	3b30      	subs	r3, #48	; 0x30
 800b61c:	9343      	str	r3, [sp, #268]	; 0x10c
 800b61e:	465d      	mov	r5, fp
 800b620:	e7d3      	b.n	800b5ca <__ssvfiscanf_r+0x92>
 800b622:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800b626:	2a20      	cmp	r2, #32
 800b628:	d8ef      	bhi.n	800b60a <__ssvfiscanf_r+0xd2>
 800b62a:	a101      	add	r1, pc, #4	; (adr r1, 800b630 <__ssvfiscanf_r+0xf8>)
 800b62c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800b630:	0800b703 	.word	0x0800b703
 800b634:	0800b60b 	.word	0x0800b60b
 800b638:	0800b60b 	.word	0x0800b60b
 800b63c:	0800b761 	.word	0x0800b761
 800b640:	0800b60b 	.word	0x0800b60b
 800b644:	0800b60b 	.word	0x0800b60b
 800b648:	0800b60b 	.word	0x0800b60b
 800b64c:	0800b60b 	.word	0x0800b60b
 800b650:	0800b60b 	.word	0x0800b60b
 800b654:	0800b60b 	.word	0x0800b60b
 800b658:	0800b60b 	.word	0x0800b60b
 800b65c:	0800b777 	.word	0x0800b777
 800b660:	0800b74d 	.word	0x0800b74d
 800b664:	0800b6bb 	.word	0x0800b6bb
 800b668:	0800b6bb 	.word	0x0800b6bb
 800b66c:	0800b6bb 	.word	0x0800b6bb
 800b670:	0800b60b 	.word	0x0800b60b
 800b674:	0800b751 	.word	0x0800b751
 800b678:	0800b60b 	.word	0x0800b60b
 800b67c:	0800b60b 	.word	0x0800b60b
 800b680:	0800b60b 	.word	0x0800b60b
 800b684:	0800b60b 	.word	0x0800b60b
 800b688:	0800b787 	.word	0x0800b787
 800b68c:	0800b759 	.word	0x0800b759
 800b690:	0800b6fb 	.word	0x0800b6fb
 800b694:	0800b60b 	.word	0x0800b60b
 800b698:	0800b60b 	.word	0x0800b60b
 800b69c:	0800b783 	.word	0x0800b783
 800b6a0:	0800b60b 	.word	0x0800b60b
 800b6a4:	0800b74d 	.word	0x0800b74d
 800b6a8:	0800b60b 	.word	0x0800b60b
 800b6ac:	0800b60b 	.word	0x0800b60b
 800b6b0:	0800b703 	.word	0x0800b703
 800b6b4:	3b45      	subs	r3, #69	; 0x45
 800b6b6:	2b02      	cmp	r3, #2
 800b6b8:	d8a7      	bhi.n	800b60a <__ssvfiscanf_r+0xd2>
 800b6ba:	2305      	movs	r3, #5
 800b6bc:	e02b      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b6be:	6863      	ldr	r3, [r4, #4]
 800b6c0:	2b00      	cmp	r3, #0
 800b6c2:	dd0d      	ble.n	800b6e0 <__ssvfiscanf_r+0x1a8>
 800b6c4:	6823      	ldr	r3, [r4, #0]
 800b6c6:	781a      	ldrb	r2, [r3, #0]
 800b6c8:	4552      	cmp	r2, sl
 800b6ca:	f040 80a1 	bne.w	800b810 <__ssvfiscanf_r+0x2d8>
 800b6ce:	3301      	adds	r3, #1
 800b6d0:	6862      	ldr	r2, [r4, #4]
 800b6d2:	6023      	str	r3, [r4, #0]
 800b6d4:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800b6d6:	3a01      	subs	r2, #1
 800b6d8:	3301      	adds	r3, #1
 800b6da:	6062      	str	r2, [r4, #4]
 800b6dc:	9345      	str	r3, [sp, #276]	; 0x114
 800b6de:	e755      	b.n	800b58c <__ssvfiscanf_r+0x54>
 800b6e0:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800b6e2:	4621      	mov	r1, r4
 800b6e4:	4630      	mov	r0, r6
 800b6e6:	4798      	blx	r3
 800b6e8:	2800      	cmp	r0, #0
 800b6ea:	d0eb      	beq.n	800b6c4 <__ssvfiscanf_r+0x18c>
 800b6ec:	9844      	ldr	r0, [sp, #272]	; 0x110
 800b6ee:	2800      	cmp	r0, #0
 800b6f0:	f040 8084 	bne.w	800b7fc <__ssvfiscanf_r+0x2c4>
 800b6f4:	f04f 30ff 	mov.w	r0, #4294967295
 800b6f8:	e086      	b.n	800b808 <__ssvfiscanf_r+0x2d0>
 800b6fa:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800b6fc:	f042 0220 	orr.w	r2, r2, #32
 800b700:	9241      	str	r2, [sp, #260]	; 0x104
 800b702:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800b704:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b708:	9241      	str	r2, [sp, #260]	; 0x104
 800b70a:	2210      	movs	r2, #16
 800b70c:	2b6f      	cmp	r3, #111	; 0x6f
 800b70e:	9242      	str	r2, [sp, #264]	; 0x108
 800b710:	bf34      	ite	cc
 800b712:	2303      	movcc	r3, #3
 800b714:	2304      	movcs	r3, #4
 800b716:	9347      	str	r3, [sp, #284]	; 0x11c
 800b718:	6863      	ldr	r3, [r4, #4]
 800b71a:	2b00      	cmp	r3, #0
 800b71c:	dd41      	ble.n	800b7a2 <__ssvfiscanf_r+0x26a>
 800b71e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800b720:	0659      	lsls	r1, r3, #25
 800b722:	d404      	bmi.n	800b72e <__ssvfiscanf_r+0x1f6>
 800b724:	6823      	ldr	r3, [r4, #0]
 800b726:	781a      	ldrb	r2, [r3, #0]
 800b728:	5cba      	ldrb	r2, [r7, r2]
 800b72a:	0712      	lsls	r2, r2, #28
 800b72c:	d440      	bmi.n	800b7b0 <__ssvfiscanf_r+0x278>
 800b72e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800b730:	2b02      	cmp	r3, #2
 800b732:	dc4f      	bgt.n	800b7d4 <__ssvfiscanf_r+0x29c>
 800b734:	466b      	mov	r3, sp
 800b736:	4622      	mov	r2, r4
 800b738:	a941      	add	r1, sp, #260	; 0x104
 800b73a:	4630      	mov	r0, r6
 800b73c:	f000 f874 	bl	800b828 <_scanf_chars>
 800b740:	2801      	cmp	r0, #1
 800b742:	d065      	beq.n	800b810 <__ssvfiscanf_r+0x2d8>
 800b744:	2802      	cmp	r0, #2
 800b746:	f47f af21 	bne.w	800b58c <__ssvfiscanf_r+0x54>
 800b74a:	e7cf      	b.n	800b6ec <__ssvfiscanf_r+0x1b4>
 800b74c:	220a      	movs	r2, #10
 800b74e:	e7dd      	b.n	800b70c <__ssvfiscanf_r+0x1d4>
 800b750:	2300      	movs	r3, #0
 800b752:	9342      	str	r3, [sp, #264]	; 0x108
 800b754:	2303      	movs	r3, #3
 800b756:	e7de      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b758:	2308      	movs	r3, #8
 800b75a:	9342      	str	r3, [sp, #264]	; 0x108
 800b75c:	2304      	movs	r3, #4
 800b75e:	e7da      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b760:	4629      	mov	r1, r5
 800b762:	4640      	mov	r0, r8
 800b764:	f000 f9d8 	bl	800bb18 <__sccl>
 800b768:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800b76a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b76e:	9341      	str	r3, [sp, #260]	; 0x104
 800b770:	4605      	mov	r5, r0
 800b772:	2301      	movs	r3, #1
 800b774:	e7cf      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b776:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800b778:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b77c:	9341      	str	r3, [sp, #260]	; 0x104
 800b77e:	2300      	movs	r3, #0
 800b780:	e7c9      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b782:	2302      	movs	r3, #2
 800b784:	e7c7      	b.n	800b716 <__ssvfiscanf_r+0x1de>
 800b786:	9841      	ldr	r0, [sp, #260]	; 0x104
 800b788:	06c3      	lsls	r3, r0, #27
 800b78a:	f53f aeff 	bmi.w	800b58c <__ssvfiscanf_r+0x54>
 800b78e:	9b00      	ldr	r3, [sp, #0]
 800b790:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b792:	1d19      	adds	r1, r3, #4
 800b794:	9100      	str	r1, [sp, #0]
 800b796:	681b      	ldr	r3, [r3, #0]
 800b798:	07c0      	lsls	r0, r0, #31
 800b79a:	bf4c      	ite	mi
 800b79c:	801a      	strhmi	r2, [r3, #0]
 800b79e:	601a      	strpl	r2, [r3, #0]
 800b7a0:	e6f4      	b.n	800b58c <__ssvfiscanf_r+0x54>
 800b7a2:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800b7a4:	4621      	mov	r1, r4
 800b7a6:	4630      	mov	r0, r6
 800b7a8:	4798      	blx	r3
 800b7aa:	2800      	cmp	r0, #0
 800b7ac:	d0b7      	beq.n	800b71e <__ssvfiscanf_r+0x1e6>
 800b7ae:	e79d      	b.n	800b6ec <__ssvfiscanf_r+0x1b4>
 800b7b0:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800b7b2:	3201      	adds	r2, #1
 800b7b4:	9245      	str	r2, [sp, #276]	; 0x114
 800b7b6:	6862      	ldr	r2, [r4, #4]
 800b7b8:	3a01      	subs	r2, #1
 800b7ba:	2a00      	cmp	r2, #0
 800b7bc:	6062      	str	r2, [r4, #4]
 800b7be:	dd02      	ble.n	800b7c6 <__ssvfiscanf_r+0x28e>
 800b7c0:	3301      	adds	r3, #1
 800b7c2:	6023      	str	r3, [r4, #0]
 800b7c4:	e7ae      	b.n	800b724 <__ssvfiscanf_r+0x1ec>
 800b7c6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800b7c8:	4621      	mov	r1, r4
 800b7ca:	4630      	mov	r0, r6
 800b7cc:	4798      	blx	r3
 800b7ce:	2800      	cmp	r0, #0
 800b7d0:	d0a8      	beq.n	800b724 <__ssvfiscanf_r+0x1ec>
 800b7d2:	e78b      	b.n	800b6ec <__ssvfiscanf_r+0x1b4>
 800b7d4:	2b04      	cmp	r3, #4
 800b7d6:	dc06      	bgt.n	800b7e6 <__ssvfiscanf_r+0x2ae>
 800b7d8:	466b      	mov	r3, sp
 800b7da:	4622      	mov	r2, r4
 800b7dc:	a941      	add	r1, sp, #260	; 0x104
 800b7de:	4630      	mov	r0, r6
 800b7e0:	f000 f87a 	bl	800b8d8 <_scanf_i>
 800b7e4:	e7ac      	b.n	800b740 <__ssvfiscanf_r+0x208>
 800b7e6:	4b0f      	ldr	r3, [pc, #60]	; (800b824 <__ssvfiscanf_r+0x2ec>)
 800b7e8:	2b00      	cmp	r3, #0
 800b7ea:	f43f aecf 	beq.w	800b58c <__ssvfiscanf_r+0x54>
 800b7ee:	466b      	mov	r3, sp
 800b7f0:	4622      	mov	r2, r4
 800b7f2:	a941      	add	r1, sp, #260	; 0x104
 800b7f4:	4630      	mov	r0, r6
 800b7f6:	f7fc fc51 	bl	800809c <_scanf_float>
 800b7fa:	e7a1      	b.n	800b740 <__ssvfiscanf_r+0x208>
 800b7fc:	89a3      	ldrh	r3, [r4, #12]
 800b7fe:	f013 0f40 	tst.w	r3, #64	; 0x40
 800b802:	bf18      	it	ne
 800b804:	f04f 30ff 	movne.w	r0, #4294967295
 800b808:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 800b80c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b810:	9844      	ldr	r0, [sp, #272]	; 0x110
 800b812:	e7f9      	b.n	800b808 <__ssvfiscanf_r+0x2d0>
 800b814:	0800b485 	.word	0x0800b485
 800b818:	0800b4ff 	.word	0x0800b4ff
 800b81c:	0800d1c9 	.word	0x0800d1c9
 800b820:	0800d542 	.word	0x0800d542
 800b824:	0800809d 	.word	0x0800809d

0800b828 <_scanf_chars>:
 800b828:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b82c:	4615      	mov	r5, r2
 800b82e:	688a      	ldr	r2, [r1, #8]
 800b830:	4680      	mov	r8, r0
 800b832:	460c      	mov	r4, r1
 800b834:	b932      	cbnz	r2, 800b844 <_scanf_chars+0x1c>
 800b836:	698a      	ldr	r2, [r1, #24]
 800b838:	2a00      	cmp	r2, #0
 800b83a:	bf0c      	ite	eq
 800b83c:	2201      	moveq	r2, #1
 800b83e:	f04f 32ff 	movne.w	r2, #4294967295
 800b842:	608a      	str	r2, [r1, #8]
 800b844:	6822      	ldr	r2, [r4, #0]
 800b846:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800b8d4 <_scanf_chars+0xac>
 800b84a:	06d1      	lsls	r1, r2, #27
 800b84c:	bf5f      	itttt	pl
 800b84e:	681a      	ldrpl	r2, [r3, #0]
 800b850:	1d11      	addpl	r1, r2, #4
 800b852:	6019      	strpl	r1, [r3, #0]
 800b854:	6816      	ldrpl	r6, [r2, #0]
 800b856:	2700      	movs	r7, #0
 800b858:	69a0      	ldr	r0, [r4, #24]
 800b85a:	b188      	cbz	r0, 800b880 <_scanf_chars+0x58>
 800b85c:	2801      	cmp	r0, #1
 800b85e:	d107      	bne.n	800b870 <_scanf_chars+0x48>
 800b860:	682b      	ldr	r3, [r5, #0]
 800b862:	781a      	ldrb	r2, [r3, #0]
 800b864:	6963      	ldr	r3, [r4, #20]
 800b866:	5c9b      	ldrb	r3, [r3, r2]
 800b868:	b953      	cbnz	r3, 800b880 <_scanf_chars+0x58>
 800b86a:	bb27      	cbnz	r7, 800b8b6 <_scanf_chars+0x8e>
 800b86c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b870:	2802      	cmp	r0, #2
 800b872:	d120      	bne.n	800b8b6 <_scanf_chars+0x8e>
 800b874:	682b      	ldr	r3, [r5, #0]
 800b876:	781b      	ldrb	r3, [r3, #0]
 800b878:	f813 3009 	ldrb.w	r3, [r3, r9]
 800b87c:	071b      	lsls	r3, r3, #28
 800b87e:	d41a      	bmi.n	800b8b6 <_scanf_chars+0x8e>
 800b880:	6823      	ldr	r3, [r4, #0]
 800b882:	06da      	lsls	r2, r3, #27
 800b884:	bf5e      	ittt	pl
 800b886:	682b      	ldrpl	r3, [r5, #0]
 800b888:	781b      	ldrbpl	r3, [r3, #0]
 800b88a:	f806 3b01 	strbpl.w	r3, [r6], #1
 800b88e:	682a      	ldr	r2, [r5, #0]
 800b890:	686b      	ldr	r3, [r5, #4]
 800b892:	3201      	adds	r2, #1
 800b894:	602a      	str	r2, [r5, #0]
 800b896:	68a2      	ldr	r2, [r4, #8]
 800b898:	3b01      	subs	r3, #1
 800b89a:	3a01      	subs	r2, #1
 800b89c:	606b      	str	r3, [r5, #4]
 800b89e:	3701      	adds	r7, #1
 800b8a0:	60a2      	str	r2, [r4, #8]
 800b8a2:	b142      	cbz	r2, 800b8b6 <_scanf_chars+0x8e>
 800b8a4:	2b00      	cmp	r3, #0
 800b8a6:	dcd7      	bgt.n	800b858 <_scanf_chars+0x30>
 800b8a8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800b8ac:	4629      	mov	r1, r5
 800b8ae:	4640      	mov	r0, r8
 800b8b0:	4798      	blx	r3
 800b8b2:	2800      	cmp	r0, #0
 800b8b4:	d0d0      	beq.n	800b858 <_scanf_chars+0x30>
 800b8b6:	6823      	ldr	r3, [r4, #0]
 800b8b8:	f013 0310 	ands.w	r3, r3, #16
 800b8bc:	d105      	bne.n	800b8ca <_scanf_chars+0xa2>
 800b8be:	68e2      	ldr	r2, [r4, #12]
 800b8c0:	3201      	adds	r2, #1
 800b8c2:	60e2      	str	r2, [r4, #12]
 800b8c4:	69a2      	ldr	r2, [r4, #24]
 800b8c6:	b102      	cbz	r2, 800b8ca <_scanf_chars+0xa2>
 800b8c8:	7033      	strb	r3, [r6, #0]
 800b8ca:	6923      	ldr	r3, [r4, #16]
 800b8cc:	441f      	add	r7, r3
 800b8ce:	6127      	str	r7, [r4, #16]
 800b8d0:	2000      	movs	r0, #0
 800b8d2:	e7cb      	b.n	800b86c <_scanf_chars+0x44>
 800b8d4:	0800d1c9 	.word	0x0800d1c9

0800b8d8 <_scanf_i>:
 800b8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8dc:	4698      	mov	r8, r3
 800b8de:	4b74      	ldr	r3, [pc, #464]	; (800bab0 <_scanf_i+0x1d8>)
 800b8e0:	460c      	mov	r4, r1
 800b8e2:	4682      	mov	sl, r0
 800b8e4:	4616      	mov	r6, r2
 800b8e6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800b8ea:	b087      	sub	sp, #28
 800b8ec:	ab03      	add	r3, sp, #12
 800b8ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800b8f2:	4b70      	ldr	r3, [pc, #448]	; (800bab4 <_scanf_i+0x1dc>)
 800b8f4:	69a1      	ldr	r1, [r4, #24]
 800b8f6:	4a70      	ldr	r2, [pc, #448]	; (800bab8 <_scanf_i+0x1e0>)
 800b8f8:	2903      	cmp	r1, #3
 800b8fa:	bf18      	it	ne
 800b8fc:	461a      	movne	r2, r3
 800b8fe:	68a3      	ldr	r3, [r4, #8]
 800b900:	9201      	str	r2, [sp, #4]
 800b902:	1e5a      	subs	r2, r3, #1
 800b904:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800b908:	bf88      	it	hi
 800b90a:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800b90e:	4627      	mov	r7, r4
 800b910:	bf82      	ittt	hi
 800b912:	eb03 0905 	addhi.w	r9, r3, r5
 800b916:	f240 135d 	movwhi	r3, #349	; 0x15d
 800b91a:	60a3      	strhi	r3, [r4, #8]
 800b91c:	f857 3b1c 	ldr.w	r3, [r7], #28
 800b920:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800b924:	bf98      	it	ls
 800b926:	f04f 0900 	movls.w	r9, #0
 800b92a:	6023      	str	r3, [r4, #0]
 800b92c:	463d      	mov	r5, r7
 800b92e:	f04f 0b00 	mov.w	fp, #0
 800b932:	6831      	ldr	r1, [r6, #0]
 800b934:	ab03      	add	r3, sp, #12
 800b936:	7809      	ldrb	r1, [r1, #0]
 800b938:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800b93c:	2202      	movs	r2, #2
 800b93e:	f7f4 fc97 	bl	8000270 <memchr>
 800b942:	b328      	cbz	r0, 800b990 <_scanf_i+0xb8>
 800b944:	f1bb 0f01 	cmp.w	fp, #1
 800b948:	d159      	bne.n	800b9fe <_scanf_i+0x126>
 800b94a:	6862      	ldr	r2, [r4, #4]
 800b94c:	b92a      	cbnz	r2, 800b95a <_scanf_i+0x82>
 800b94e:	6822      	ldr	r2, [r4, #0]
 800b950:	2308      	movs	r3, #8
 800b952:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b956:	6063      	str	r3, [r4, #4]
 800b958:	6022      	str	r2, [r4, #0]
 800b95a:	6822      	ldr	r2, [r4, #0]
 800b95c:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800b960:	6022      	str	r2, [r4, #0]
 800b962:	68a2      	ldr	r2, [r4, #8]
 800b964:	1e51      	subs	r1, r2, #1
 800b966:	60a1      	str	r1, [r4, #8]
 800b968:	b192      	cbz	r2, 800b990 <_scanf_i+0xb8>
 800b96a:	6832      	ldr	r2, [r6, #0]
 800b96c:	1c51      	adds	r1, r2, #1
 800b96e:	6031      	str	r1, [r6, #0]
 800b970:	7812      	ldrb	r2, [r2, #0]
 800b972:	f805 2b01 	strb.w	r2, [r5], #1
 800b976:	6872      	ldr	r2, [r6, #4]
 800b978:	3a01      	subs	r2, #1
 800b97a:	2a00      	cmp	r2, #0
 800b97c:	6072      	str	r2, [r6, #4]
 800b97e:	dc07      	bgt.n	800b990 <_scanf_i+0xb8>
 800b980:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800b984:	4631      	mov	r1, r6
 800b986:	4650      	mov	r0, sl
 800b988:	4790      	blx	r2
 800b98a:	2800      	cmp	r0, #0
 800b98c:	f040 8085 	bne.w	800ba9a <_scanf_i+0x1c2>
 800b990:	f10b 0b01 	add.w	fp, fp, #1
 800b994:	f1bb 0f03 	cmp.w	fp, #3
 800b998:	d1cb      	bne.n	800b932 <_scanf_i+0x5a>
 800b99a:	6863      	ldr	r3, [r4, #4]
 800b99c:	b90b      	cbnz	r3, 800b9a2 <_scanf_i+0xca>
 800b99e:	230a      	movs	r3, #10
 800b9a0:	6063      	str	r3, [r4, #4]
 800b9a2:	6863      	ldr	r3, [r4, #4]
 800b9a4:	4945      	ldr	r1, [pc, #276]	; (800babc <_scanf_i+0x1e4>)
 800b9a6:	6960      	ldr	r0, [r4, #20]
 800b9a8:	1ac9      	subs	r1, r1, r3
 800b9aa:	f000 f8b5 	bl	800bb18 <__sccl>
 800b9ae:	f04f 0b00 	mov.w	fp, #0
 800b9b2:	68a3      	ldr	r3, [r4, #8]
 800b9b4:	6822      	ldr	r2, [r4, #0]
 800b9b6:	2b00      	cmp	r3, #0
 800b9b8:	d03d      	beq.n	800ba36 <_scanf_i+0x15e>
 800b9ba:	6831      	ldr	r1, [r6, #0]
 800b9bc:	6960      	ldr	r0, [r4, #20]
 800b9be:	f891 c000 	ldrb.w	ip, [r1]
 800b9c2:	f810 000c 	ldrb.w	r0, [r0, ip]
 800b9c6:	2800      	cmp	r0, #0
 800b9c8:	d035      	beq.n	800ba36 <_scanf_i+0x15e>
 800b9ca:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800b9ce:	d124      	bne.n	800ba1a <_scanf_i+0x142>
 800b9d0:	0510      	lsls	r0, r2, #20
 800b9d2:	d522      	bpl.n	800ba1a <_scanf_i+0x142>
 800b9d4:	f10b 0b01 	add.w	fp, fp, #1
 800b9d8:	f1b9 0f00 	cmp.w	r9, #0
 800b9dc:	d003      	beq.n	800b9e6 <_scanf_i+0x10e>
 800b9de:	3301      	adds	r3, #1
 800b9e0:	f109 39ff 	add.w	r9, r9, #4294967295
 800b9e4:	60a3      	str	r3, [r4, #8]
 800b9e6:	6873      	ldr	r3, [r6, #4]
 800b9e8:	3b01      	subs	r3, #1
 800b9ea:	2b00      	cmp	r3, #0
 800b9ec:	6073      	str	r3, [r6, #4]
 800b9ee:	dd1b      	ble.n	800ba28 <_scanf_i+0x150>
 800b9f0:	6833      	ldr	r3, [r6, #0]
 800b9f2:	3301      	adds	r3, #1
 800b9f4:	6033      	str	r3, [r6, #0]
 800b9f6:	68a3      	ldr	r3, [r4, #8]
 800b9f8:	3b01      	subs	r3, #1
 800b9fa:	60a3      	str	r3, [r4, #8]
 800b9fc:	e7d9      	b.n	800b9b2 <_scanf_i+0xda>
 800b9fe:	f1bb 0f02 	cmp.w	fp, #2
 800ba02:	d1ae      	bne.n	800b962 <_scanf_i+0x8a>
 800ba04:	6822      	ldr	r2, [r4, #0]
 800ba06:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800ba0a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800ba0e:	d1bf      	bne.n	800b990 <_scanf_i+0xb8>
 800ba10:	2310      	movs	r3, #16
 800ba12:	6063      	str	r3, [r4, #4]
 800ba14:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba18:	e7a2      	b.n	800b960 <_scanf_i+0x88>
 800ba1a:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800ba1e:	6022      	str	r2, [r4, #0]
 800ba20:	780b      	ldrb	r3, [r1, #0]
 800ba22:	f805 3b01 	strb.w	r3, [r5], #1
 800ba26:	e7de      	b.n	800b9e6 <_scanf_i+0x10e>
 800ba28:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ba2c:	4631      	mov	r1, r6
 800ba2e:	4650      	mov	r0, sl
 800ba30:	4798      	blx	r3
 800ba32:	2800      	cmp	r0, #0
 800ba34:	d0df      	beq.n	800b9f6 <_scanf_i+0x11e>
 800ba36:	6823      	ldr	r3, [r4, #0]
 800ba38:	05d9      	lsls	r1, r3, #23
 800ba3a:	d50d      	bpl.n	800ba58 <_scanf_i+0x180>
 800ba3c:	42bd      	cmp	r5, r7
 800ba3e:	d909      	bls.n	800ba54 <_scanf_i+0x17c>
 800ba40:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800ba44:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ba48:	4632      	mov	r2, r6
 800ba4a:	4650      	mov	r0, sl
 800ba4c:	4798      	blx	r3
 800ba4e:	f105 39ff 	add.w	r9, r5, #4294967295
 800ba52:	464d      	mov	r5, r9
 800ba54:	42bd      	cmp	r5, r7
 800ba56:	d028      	beq.n	800baaa <_scanf_i+0x1d2>
 800ba58:	6822      	ldr	r2, [r4, #0]
 800ba5a:	f012 0210 	ands.w	r2, r2, #16
 800ba5e:	d113      	bne.n	800ba88 <_scanf_i+0x1b0>
 800ba60:	702a      	strb	r2, [r5, #0]
 800ba62:	6863      	ldr	r3, [r4, #4]
 800ba64:	9e01      	ldr	r6, [sp, #4]
 800ba66:	4639      	mov	r1, r7
 800ba68:	4650      	mov	r0, sl
 800ba6a:	47b0      	blx	r6
 800ba6c:	f8d8 3000 	ldr.w	r3, [r8]
 800ba70:	6821      	ldr	r1, [r4, #0]
 800ba72:	1d1a      	adds	r2, r3, #4
 800ba74:	f8c8 2000 	str.w	r2, [r8]
 800ba78:	f011 0f20 	tst.w	r1, #32
 800ba7c:	681b      	ldr	r3, [r3, #0]
 800ba7e:	d00f      	beq.n	800baa0 <_scanf_i+0x1c8>
 800ba80:	6018      	str	r0, [r3, #0]
 800ba82:	68e3      	ldr	r3, [r4, #12]
 800ba84:	3301      	adds	r3, #1
 800ba86:	60e3      	str	r3, [r4, #12]
 800ba88:	1bed      	subs	r5, r5, r7
 800ba8a:	44ab      	add	fp, r5
 800ba8c:	6925      	ldr	r5, [r4, #16]
 800ba8e:	445d      	add	r5, fp
 800ba90:	6125      	str	r5, [r4, #16]
 800ba92:	2000      	movs	r0, #0
 800ba94:	b007      	add	sp, #28
 800ba96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba9a:	f04f 0b00 	mov.w	fp, #0
 800ba9e:	e7ca      	b.n	800ba36 <_scanf_i+0x15e>
 800baa0:	07ca      	lsls	r2, r1, #31
 800baa2:	bf4c      	ite	mi
 800baa4:	8018      	strhmi	r0, [r3, #0]
 800baa6:	6018      	strpl	r0, [r3, #0]
 800baa8:	e7eb      	b.n	800ba82 <_scanf_i+0x1aa>
 800baaa:	2001      	movs	r0, #1
 800baac:	e7f2      	b.n	800ba94 <_scanf_i+0x1bc>
 800baae:	bf00      	nop
 800bab0:	0800d114 	.word	0x0800d114
 800bab4:	0800bc85 	.word	0x0800bc85
 800bab8:	08009321 	.word	0x08009321
 800babc:	0800d566 	.word	0x0800d566

0800bac0 <_read_r>:
 800bac0:	b538      	push	{r3, r4, r5, lr}
 800bac2:	4d07      	ldr	r5, [pc, #28]	; (800bae0 <_read_r+0x20>)
 800bac4:	4604      	mov	r4, r0
 800bac6:	4608      	mov	r0, r1
 800bac8:	4611      	mov	r1, r2
 800baca:	2200      	movs	r2, #0
 800bacc:	602a      	str	r2, [r5, #0]
 800bace:	461a      	mov	r2, r3
 800bad0:	f7f6 fe1e 	bl	8002710 <_read>
 800bad4:	1c43      	adds	r3, r0, #1
 800bad6:	d102      	bne.n	800bade <_read_r+0x1e>
 800bad8:	682b      	ldr	r3, [r5, #0]
 800bada:	b103      	cbz	r3, 800bade <_read_r+0x1e>
 800badc:	6023      	str	r3, [r4, #0]
 800bade:	bd38      	pop	{r3, r4, r5, pc}
 800bae0:	20018784 	.word	0x20018784
 800bae4:	00000000 	.word	0x00000000

0800bae8 <nan>:
 800bae8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800baf0 <nan+0x8>
 800baec:	4770      	bx	lr
 800baee:	bf00      	nop
 800baf0:	00000000 	.word	0x00000000
 800baf4:	7ff80000 	.word	0x7ff80000

0800baf8 <_sbrk_r>:
 800baf8:	b538      	push	{r3, r4, r5, lr}
 800bafa:	4d06      	ldr	r5, [pc, #24]	; (800bb14 <_sbrk_r+0x1c>)
 800bafc:	2300      	movs	r3, #0
 800bafe:	4604      	mov	r4, r0
 800bb00:	4608      	mov	r0, r1
 800bb02:	602b      	str	r3, [r5, #0]
 800bb04:	f7f6 fe72 	bl	80027ec <_sbrk>
 800bb08:	1c43      	adds	r3, r0, #1
 800bb0a:	d102      	bne.n	800bb12 <_sbrk_r+0x1a>
 800bb0c:	682b      	ldr	r3, [r5, #0]
 800bb0e:	b103      	cbz	r3, 800bb12 <_sbrk_r+0x1a>
 800bb10:	6023      	str	r3, [r4, #0]
 800bb12:	bd38      	pop	{r3, r4, r5, pc}
 800bb14:	20018784 	.word	0x20018784

0800bb18 <__sccl>:
 800bb18:	b570      	push	{r4, r5, r6, lr}
 800bb1a:	780b      	ldrb	r3, [r1, #0]
 800bb1c:	4604      	mov	r4, r0
 800bb1e:	2b5e      	cmp	r3, #94	; 0x5e
 800bb20:	bf0b      	itete	eq
 800bb22:	784b      	ldrbeq	r3, [r1, #1]
 800bb24:	1c48      	addne	r0, r1, #1
 800bb26:	1c88      	addeq	r0, r1, #2
 800bb28:	2200      	movne	r2, #0
 800bb2a:	bf08      	it	eq
 800bb2c:	2201      	moveq	r2, #1
 800bb2e:	1e61      	subs	r1, r4, #1
 800bb30:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800bb34:	f801 2f01 	strb.w	r2, [r1, #1]!
 800bb38:	42a9      	cmp	r1, r5
 800bb3a:	d1fb      	bne.n	800bb34 <__sccl+0x1c>
 800bb3c:	b90b      	cbnz	r3, 800bb42 <__sccl+0x2a>
 800bb3e:	3801      	subs	r0, #1
 800bb40:	bd70      	pop	{r4, r5, r6, pc}
 800bb42:	f082 0101 	eor.w	r1, r2, #1
 800bb46:	54e1      	strb	r1, [r4, r3]
 800bb48:	1c42      	adds	r2, r0, #1
 800bb4a:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 800bb4e:	2d2d      	cmp	r5, #45	; 0x2d
 800bb50:	f102 36ff 	add.w	r6, r2, #4294967295
 800bb54:	4610      	mov	r0, r2
 800bb56:	d006      	beq.n	800bb66 <__sccl+0x4e>
 800bb58:	2d5d      	cmp	r5, #93	; 0x5d
 800bb5a:	d0f1      	beq.n	800bb40 <__sccl+0x28>
 800bb5c:	b90d      	cbnz	r5, 800bb62 <__sccl+0x4a>
 800bb5e:	4630      	mov	r0, r6
 800bb60:	e7ee      	b.n	800bb40 <__sccl+0x28>
 800bb62:	462b      	mov	r3, r5
 800bb64:	e7ef      	b.n	800bb46 <__sccl+0x2e>
 800bb66:	7816      	ldrb	r6, [r2, #0]
 800bb68:	2e5d      	cmp	r6, #93	; 0x5d
 800bb6a:	d0fa      	beq.n	800bb62 <__sccl+0x4a>
 800bb6c:	42b3      	cmp	r3, r6
 800bb6e:	dcf8      	bgt.n	800bb62 <__sccl+0x4a>
 800bb70:	4618      	mov	r0, r3
 800bb72:	3001      	adds	r0, #1
 800bb74:	4286      	cmp	r6, r0
 800bb76:	5421      	strb	r1, [r4, r0]
 800bb78:	dcfb      	bgt.n	800bb72 <__sccl+0x5a>
 800bb7a:	43d8      	mvns	r0, r3
 800bb7c:	4430      	add	r0, r6
 800bb7e:	1c5d      	adds	r5, r3, #1
 800bb80:	42b3      	cmp	r3, r6
 800bb82:	bfa8      	it	ge
 800bb84:	2000      	movge	r0, #0
 800bb86:	182b      	adds	r3, r5, r0
 800bb88:	3202      	adds	r2, #2
 800bb8a:	e7de      	b.n	800bb4a <__sccl+0x32>

0800bb8c <_strtoul_l.isra.0>:
 800bb8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bb90:	4e3b      	ldr	r6, [pc, #236]	; (800bc80 <_strtoul_l.isra.0+0xf4>)
 800bb92:	4686      	mov	lr, r0
 800bb94:	468c      	mov	ip, r1
 800bb96:	4660      	mov	r0, ip
 800bb98:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800bb9c:	5da5      	ldrb	r5, [r4, r6]
 800bb9e:	f015 0508 	ands.w	r5, r5, #8
 800bba2:	d1f8      	bne.n	800bb96 <_strtoul_l.isra.0+0xa>
 800bba4:	2c2d      	cmp	r4, #45	; 0x2d
 800bba6:	d134      	bne.n	800bc12 <_strtoul_l.isra.0+0x86>
 800bba8:	f89c 4000 	ldrb.w	r4, [ip]
 800bbac:	f04f 0801 	mov.w	r8, #1
 800bbb0:	f100 0c02 	add.w	ip, r0, #2
 800bbb4:	2b00      	cmp	r3, #0
 800bbb6:	d05e      	beq.n	800bc76 <_strtoul_l.isra.0+0xea>
 800bbb8:	2b10      	cmp	r3, #16
 800bbba:	d10c      	bne.n	800bbd6 <_strtoul_l.isra.0+0x4a>
 800bbbc:	2c30      	cmp	r4, #48	; 0x30
 800bbbe:	d10a      	bne.n	800bbd6 <_strtoul_l.isra.0+0x4a>
 800bbc0:	f89c 0000 	ldrb.w	r0, [ip]
 800bbc4:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800bbc8:	2858      	cmp	r0, #88	; 0x58
 800bbca:	d14f      	bne.n	800bc6c <_strtoul_l.isra.0+0xe0>
 800bbcc:	f89c 4001 	ldrb.w	r4, [ip, #1]
 800bbd0:	2310      	movs	r3, #16
 800bbd2:	f10c 0c02 	add.w	ip, ip, #2
 800bbd6:	f04f 37ff 	mov.w	r7, #4294967295
 800bbda:	2500      	movs	r5, #0
 800bbdc:	fbb7 f7f3 	udiv	r7, r7, r3
 800bbe0:	fb03 f907 	mul.w	r9, r3, r7
 800bbe4:	ea6f 0909 	mvn.w	r9, r9
 800bbe8:	4628      	mov	r0, r5
 800bbea:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 800bbee:	2e09      	cmp	r6, #9
 800bbf0:	d818      	bhi.n	800bc24 <_strtoul_l.isra.0+0x98>
 800bbf2:	4634      	mov	r4, r6
 800bbf4:	42a3      	cmp	r3, r4
 800bbf6:	dd24      	ble.n	800bc42 <_strtoul_l.isra.0+0xb6>
 800bbf8:	2d00      	cmp	r5, #0
 800bbfa:	db1f      	blt.n	800bc3c <_strtoul_l.isra.0+0xb0>
 800bbfc:	4287      	cmp	r7, r0
 800bbfe:	d31d      	bcc.n	800bc3c <_strtoul_l.isra.0+0xb0>
 800bc00:	d101      	bne.n	800bc06 <_strtoul_l.isra.0+0x7a>
 800bc02:	45a1      	cmp	r9, r4
 800bc04:	db1a      	blt.n	800bc3c <_strtoul_l.isra.0+0xb0>
 800bc06:	fb00 4003 	mla	r0, r0, r3, r4
 800bc0a:	2501      	movs	r5, #1
 800bc0c:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800bc10:	e7eb      	b.n	800bbea <_strtoul_l.isra.0+0x5e>
 800bc12:	2c2b      	cmp	r4, #43	; 0x2b
 800bc14:	bf08      	it	eq
 800bc16:	f89c 4000 	ldrbeq.w	r4, [ip]
 800bc1a:	46a8      	mov	r8, r5
 800bc1c:	bf08      	it	eq
 800bc1e:	f100 0c02 	addeq.w	ip, r0, #2
 800bc22:	e7c7      	b.n	800bbb4 <_strtoul_l.isra.0+0x28>
 800bc24:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 800bc28:	2e19      	cmp	r6, #25
 800bc2a:	d801      	bhi.n	800bc30 <_strtoul_l.isra.0+0xa4>
 800bc2c:	3c37      	subs	r4, #55	; 0x37
 800bc2e:	e7e1      	b.n	800bbf4 <_strtoul_l.isra.0+0x68>
 800bc30:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 800bc34:	2e19      	cmp	r6, #25
 800bc36:	d804      	bhi.n	800bc42 <_strtoul_l.isra.0+0xb6>
 800bc38:	3c57      	subs	r4, #87	; 0x57
 800bc3a:	e7db      	b.n	800bbf4 <_strtoul_l.isra.0+0x68>
 800bc3c:	f04f 35ff 	mov.w	r5, #4294967295
 800bc40:	e7e4      	b.n	800bc0c <_strtoul_l.isra.0+0x80>
 800bc42:	2d00      	cmp	r5, #0
 800bc44:	da07      	bge.n	800bc56 <_strtoul_l.isra.0+0xca>
 800bc46:	2322      	movs	r3, #34	; 0x22
 800bc48:	f8ce 3000 	str.w	r3, [lr]
 800bc4c:	f04f 30ff 	mov.w	r0, #4294967295
 800bc50:	b942      	cbnz	r2, 800bc64 <_strtoul_l.isra.0+0xd8>
 800bc52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc56:	f1b8 0f00 	cmp.w	r8, #0
 800bc5a:	d000      	beq.n	800bc5e <_strtoul_l.isra.0+0xd2>
 800bc5c:	4240      	negs	r0, r0
 800bc5e:	2a00      	cmp	r2, #0
 800bc60:	d0f7      	beq.n	800bc52 <_strtoul_l.isra.0+0xc6>
 800bc62:	b10d      	cbz	r5, 800bc68 <_strtoul_l.isra.0+0xdc>
 800bc64:	f10c 31ff 	add.w	r1, ip, #4294967295
 800bc68:	6011      	str	r1, [r2, #0]
 800bc6a:	e7f2      	b.n	800bc52 <_strtoul_l.isra.0+0xc6>
 800bc6c:	2430      	movs	r4, #48	; 0x30
 800bc6e:	2b00      	cmp	r3, #0
 800bc70:	d1b1      	bne.n	800bbd6 <_strtoul_l.isra.0+0x4a>
 800bc72:	2308      	movs	r3, #8
 800bc74:	e7af      	b.n	800bbd6 <_strtoul_l.isra.0+0x4a>
 800bc76:	2c30      	cmp	r4, #48	; 0x30
 800bc78:	d0a2      	beq.n	800bbc0 <_strtoul_l.isra.0+0x34>
 800bc7a:	230a      	movs	r3, #10
 800bc7c:	e7ab      	b.n	800bbd6 <_strtoul_l.isra.0+0x4a>
 800bc7e:	bf00      	nop
 800bc80:	0800d1c9 	.word	0x0800d1c9

0800bc84 <_strtoul_r>:
 800bc84:	f7ff bf82 	b.w	800bb8c <_strtoul_l.isra.0>

0800bc88 <__submore>:
 800bc88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc8c:	460c      	mov	r4, r1
 800bc8e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800bc90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bc94:	4299      	cmp	r1, r3
 800bc96:	d11d      	bne.n	800bcd4 <__submore+0x4c>
 800bc98:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800bc9c:	f7ff fa3c 	bl	800b118 <_malloc_r>
 800bca0:	b918      	cbnz	r0, 800bcaa <__submore+0x22>
 800bca2:	f04f 30ff 	mov.w	r0, #4294967295
 800bca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bcaa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800bcae:	63a3      	str	r3, [r4, #56]	; 0x38
 800bcb0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800bcb4:	6360      	str	r0, [r4, #52]	; 0x34
 800bcb6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800bcba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800bcbe:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800bcc2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800bcc6:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 800bcca:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800bcce:	6020      	str	r0, [r4, #0]
 800bcd0:	2000      	movs	r0, #0
 800bcd2:	e7e8      	b.n	800bca6 <__submore+0x1e>
 800bcd4:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800bcd6:	0077      	lsls	r7, r6, #1
 800bcd8:	463a      	mov	r2, r7
 800bcda:	f000 fa2d 	bl	800c138 <_realloc_r>
 800bcde:	4605      	mov	r5, r0
 800bce0:	2800      	cmp	r0, #0
 800bce2:	d0de      	beq.n	800bca2 <__submore+0x1a>
 800bce4:	eb00 0806 	add.w	r8, r0, r6
 800bce8:	4601      	mov	r1, r0
 800bcea:	4632      	mov	r2, r6
 800bcec:	4640      	mov	r0, r8
 800bcee:	f7fe fce9 	bl	800a6c4 <memcpy>
 800bcf2:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800bcf6:	f8c4 8000 	str.w	r8, [r4]
 800bcfa:	e7e9      	b.n	800bcd0 <__submore+0x48>

0800bcfc <__ascii_wctomb>:
 800bcfc:	b149      	cbz	r1, 800bd12 <__ascii_wctomb+0x16>
 800bcfe:	2aff      	cmp	r2, #255	; 0xff
 800bd00:	bf85      	ittet	hi
 800bd02:	238a      	movhi	r3, #138	; 0x8a
 800bd04:	6003      	strhi	r3, [r0, #0]
 800bd06:	700a      	strbls	r2, [r1, #0]
 800bd08:	f04f 30ff 	movhi.w	r0, #4294967295
 800bd0c:	bf98      	it	ls
 800bd0e:	2001      	movls	r0, #1
 800bd10:	4770      	bx	lr
 800bd12:	4608      	mov	r0, r1
 800bd14:	4770      	bx	lr
	...

0800bd18 <__assert_func>:
 800bd18:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd1a:	4614      	mov	r4, r2
 800bd1c:	461a      	mov	r2, r3
 800bd1e:	4b09      	ldr	r3, [pc, #36]	; (800bd44 <__assert_func+0x2c>)
 800bd20:	681b      	ldr	r3, [r3, #0]
 800bd22:	4605      	mov	r5, r0
 800bd24:	68d8      	ldr	r0, [r3, #12]
 800bd26:	b14c      	cbz	r4, 800bd3c <__assert_func+0x24>
 800bd28:	4b07      	ldr	r3, [pc, #28]	; (800bd48 <__assert_func+0x30>)
 800bd2a:	9100      	str	r1, [sp, #0]
 800bd2c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bd30:	4906      	ldr	r1, [pc, #24]	; (800bd4c <__assert_func+0x34>)
 800bd32:	462b      	mov	r3, r5
 800bd34:	f000 f9a6 	bl	800c084 <fiprintf>
 800bd38:	f000 fc3e 	bl	800c5b8 <abort>
 800bd3c:	4b04      	ldr	r3, [pc, #16]	; (800bd50 <__assert_func+0x38>)
 800bd3e:	461c      	mov	r4, r3
 800bd40:	e7f3      	b.n	800bd2a <__assert_func+0x12>
 800bd42:	bf00      	nop
 800bd44:	20000134 	.word	0x20000134
 800bd48:	0800d568 	.word	0x0800d568
 800bd4c:	0800d575 	.word	0x0800d575
 800bd50:	0800d5a3 	.word	0x0800d5a3

0800bd54 <__sflush_r>:
 800bd54:	898a      	ldrh	r2, [r1, #12]
 800bd56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd5a:	4605      	mov	r5, r0
 800bd5c:	0710      	lsls	r0, r2, #28
 800bd5e:	460c      	mov	r4, r1
 800bd60:	d458      	bmi.n	800be14 <__sflush_r+0xc0>
 800bd62:	684b      	ldr	r3, [r1, #4]
 800bd64:	2b00      	cmp	r3, #0
 800bd66:	dc05      	bgt.n	800bd74 <__sflush_r+0x20>
 800bd68:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800bd6a:	2b00      	cmp	r3, #0
 800bd6c:	dc02      	bgt.n	800bd74 <__sflush_r+0x20>
 800bd6e:	2000      	movs	r0, #0
 800bd70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800bd76:	2e00      	cmp	r6, #0
 800bd78:	d0f9      	beq.n	800bd6e <__sflush_r+0x1a>
 800bd7a:	2300      	movs	r3, #0
 800bd7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800bd80:	682f      	ldr	r7, [r5, #0]
 800bd82:	602b      	str	r3, [r5, #0]
 800bd84:	d032      	beq.n	800bdec <__sflush_r+0x98>
 800bd86:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800bd88:	89a3      	ldrh	r3, [r4, #12]
 800bd8a:	075a      	lsls	r2, r3, #29
 800bd8c:	d505      	bpl.n	800bd9a <__sflush_r+0x46>
 800bd8e:	6863      	ldr	r3, [r4, #4]
 800bd90:	1ac0      	subs	r0, r0, r3
 800bd92:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd94:	b10b      	cbz	r3, 800bd9a <__sflush_r+0x46>
 800bd96:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd98:	1ac0      	subs	r0, r0, r3
 800bd9a:	2300      	movs	r3, #0
 800bd9c:	4602      	mov	r2, r0
 800bd9e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800bda0:	6a21      	ldr	r1, [r4, #32]
 800bda2:	4628      	mov	r0, r5
 800bda4:	47b0      	blx	r6
 800bda6:	1c43      	adds	r3, r0, #1
 800bda8:	89a3      	ldrh	r3, [r4, #12]
 800bdaa:	d106      	bne.n	800bdba <__sflush_r+0x66>
 800bdac:	6829      	ldr	r1, [r5, #0]
 800bdae:	291d      	cmp	r1, #29
 800bdb0:	d82c      	bhi.n	800be0c <__sflush_r+0xb8>
 800bdb2:	4a2a      	ldr	r2, [pc, #168]	; (800be5c <__sflush_r+0x108>)
 800bdb4:	40ca      	lsrs	r2, r1
 800bdb6:	07d6      	lsls	r6, r2, #31
 800bdb8:	d528      	bpl.n	800be0c <__sflush_r+0xb8>
 800bdba:	2200      	movs	r2, #0
 800bdbc:	6062      	str	r2, [r4, #4]
 800bdbe:	04d9      	lsls	r1, r3, #19
 800bdc0:	6922      	ldr	r2, [r4, #16]
 800bdc2:	6022      	str	r2, [r4, #0]
 800bdc4:	d504      	bpl.n	800bdd0 <__sflush_r+0x7c>
 800bdc6:	1c42      	adds	r2, r0, #1
 800bdc8:	d101      	bne.n	800bdce <__sflush_r+0x7a>
 800bdca:	682b      	ldr	r3, [r5, #0]
 800bdcc:	b903      	cbnz	r3, 800bdd0 <__sflush_r+0x7c>
 800bdce:	6560      	str	r0, [r4, #84]	; 0x54
 800bdd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bdd2:	602f      	str	r7, [r5, #0]
 800bdd4:	2900      	cmp	r1, #0
 800bdd6:	d0ca      	beq.n	800bd6e <__sflush_r+0x1a>
 800bdd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bddc:	4299      	cmp	r1, r3
 800bdde:	d002      	beq.n	800bde6 <__sflush_r+0x92>
 800bde0:	4628      	mov	r0, r5
 800bde2:	f7ff f949 	bl	800b078 <_free_r>
 800bde6:	2000      	movs	r0, #0
 800bde8:	6360      	str	r0, [r4, #52]	; 0x34
 800bdea:	e7c1      	b.n	800bd70 <__sflush_r+0x1c>
 800bdec:	6a21      	ldr	r1, [r4, #32]
 800bdee:	2301      	movs	r3, #1
 800bdf0:	4628      	mov	r0, r5
 800bdf2:	47b0      	blx	r6
 800bdf4:	1c41      	adds	r1, r0, #1
 800bdf6:	d1c7      	bne.n	800bd88 <__sflush_r+0x34>
 800bdf8:	682b      	ldr	r3, [r5, #0]
 800bdfa:	2b00      	cmp	r3, #0
 800bdfc:	d0c4      	beq.n	800bd88 <__sflush_r+0x34>
 800bdfe:	2b1d      	cmp	r3, #29
 800be00:	d001      	beq.n	800be06 <__sflush_r+0xb2>
 800be02:	2b16      	cmp	r3, #22
 800be04:	d101      	bne.n	800be0a <__sflush_r+0xb6>
 800be06:	602f      	str	r7, [r5, #0]
 800be08:	e7b1      	b.n	800bd6e <__sflush_r+0x1a>
 800be0a:	89a3      	ldrh	r3, [r4, #12]
 800be0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800be10:	81a3      	strh	r3, [r4, #12]
 800be12:	e7ad      	b.n	800bd70 <__sflush_r+0x1c>
 800be14:	690f      	ldr	r7, [r1, #16]
 800be16:	2f00      	cmp	r7, #0
 800be18:	d0a9      	beq.n	800bd6e <__sflush_r+0x1a>
 800be1a:	0793      	lsls	r3, r2, #30
 800be1c:	680e      	ldr	r6, [r1, #0]
 800be1e:	bf08      	it	eq
 800be20:	694b      	ldreq	r3, [r1, #20]
 800be22:	600f      	str	r7, [r1, #0]
 800be24:	bf18      	it	ne
 800be26:	2300      	movne	r3, #0
 800be28:	eba6 0807 	sub.w	r8, r6, r7
 800be2c:	608b      	str	r3, [r1, #8]
 800be2e:	f1b8 0f00 	cmp.w	r8, #0
 800be32:	dd9c      	ble.n	800bd6e <__sflush_r+0x1a>
 800be34:	6a21      	ldr	r1, [r4, #32]
 800be36:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800be38:	4643      	mov	r3, r8
 800be3a:	463a      	mov	r2, r7
 800be3c:	4628      	mov	r0, r5
 800be3e:	47b0      	blx	r6
 800be40:	2800      	cmp	r0, #0
 800be42:	dc06      	bgt.n	800be52 <__sflush_r+0xfe>
 800be44:	89a3      	ldrh	r3, [r4, #12]
 800be46:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800be4a:	81a3      	strh	r3, [r4, #12]
 800be4c:	f04f 30ff 	mov.w	r0, #4294967295
 800be50:	e78e      	b.n	800bd70 <__sflush_r+0x1c>
 800be52:	4407      	add	r7, r0
 800be54:	eba8 0800 	sub.w	r8, r8, r0
 800be58:	e7e9      	b.n	800be2e <__sflush_r+0xda>
 800be5a:	bf00      	nop
 800be5c:	20400001 	.word	0x20400001

0800be60 <_fflush_r>:
 800be60:	b538      	push	{r3, r4, r5, lr}
 800be62:	690b      	ldr	r3, [r1, #16]
 800be64:	4605      	mov	r5, r0
 800be66:	460c      	mov	r4, r1
 800be68:	b913      	cbnz	r3, 800be70 <_fflush_r+0x10>
 800be6a:	2500      	movs	r5, #0
 800be6c:	4628      	mov	r0, r5
 800be6e:	bd38      	pop	{r3, r4, r5, pc}
 800be70:	b118      	cbz	r0, 800be7a <_fflush_r+0x1a>
 800be72:	6983      	ldr	r3, [r0, #24]
 800be74:	b90b      	cbnz	r3, 800be7a <_fflush_r+0x1a>
 800be76:	f000 f887 	bl	800bf88 <__sinit>
 800be7a:	4b14      	ldr	r3, [pc, #80]	; (800becc <_fflush_r+0x6c>)
 800be7c:	429c      	cmp	r4, r3
 800be7e:	d11b      	bne.n	800beb8 <_fflush_r+0x58>
 800be80:	686c      	ldr	r4, [r5, #4]
 800be82:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800be86:	2b00      	cmp	r3, #0
 800be88:	d0ef      	beq.n	800be6a <_fflush_r+0xa>
 800be8a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800be8c:	07d0      	lsls	r0, r2, #31
 800be8e:	d404      	bmi.n	800be9a <_fflush_r+0x3a>
 800be90:	0599      	lsls	r1, r3, #22
 800be92:	d402      	bmi.n	800be9a <_fflush_r+0x3a>
 800be94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800be96:	f000 f927 	bl	800c0e8 <__retarget_lock_acquire_recursive>
 800be9a:	4628      	mov	r0, r5
 800be9c:	4621      	mov	r1, r4
 800be9e:	f7ff ff59 	bl	800bd54 <__sflush_r>
 800bea2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800bea4:	07da      	lsls	r2, r3, #31
 800bea6:	4605      	mov	r5, r0
 800bea8:	d4e0      	bmi.n	800be6c <_fflush_r+0xc>
 800beaa:	89a3      	ldrh	r3, [r4, #12]
 800beac:	059b      	lsls	r3, r3, #22
 800beae:	d4dd      	bmi.n	800be6c <_fflush_r+0xc>
 800beb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800beb2:	f000 f91a 	bl	800c0ea <__retarget_lock_release_recursive>
 800beb6:	e7d9      	b.n	800be6c <_fflush_r+0xc>
 800beb8:	4b05      	ldr	r3, [pc, #20]	; (800bed0 <_fflush_r+0x70>)
 800beba:	429c      	cmp	r4, r3
 800bebc:	d101      	bne.n	800bec2 <_fflush_r+0x62>
 800bebe:	68ac      	ldr	r4, [r5, #8]
 800bec0:	e7df      	b.n	800be82 <_fflush_r+0x22>
 800bec2:	4b04      	ldr	r3, [pc, #16]	; (800bed4 <_fflush_r+0x74>)
 800bec4:	429c      	cmp	r4, r3
 800bec6:	bf08      	it	eq
 800bec8:	68ec      	ldreq	r4, [r5, #12]
 800beca:	e7da      	b.n	800be82 <_fflush_r+0x22>
 800becc:	0800d5c4 	.word	0x0800d5c4
 800bed0:	0800d5e4 	.word	0x0800d5e4
 800bed4:	0800d5a4 	.word	0x0800d5a4

0800bed8 <std>:
 800bed8:	2300      	movs	r3, #0
 800beda:	b510      	push	{r4, lr}
 800bedc:	4604      	mov	r4, r0
 800bede:	e9c0 3300 	strd	r3, r3, [r0]
 800bee2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800bee6:	6083      	str	r3, [r0, #8]
 800bee8:	8181      	strh	r1, [r0, #12]
 800beea:	6643      	str	r3, [r0, #100]	; 0x64
 800beec:	81c2      	strh	r2, [r0, #14]
 800beee:	6183      	str	r3, [r0, #24]
 800bef0:	4619      	mov	r1, r3
 800bef2:	2208      	movs	r2, #8
 800bef4:	305c      	adds	r0, #92	; 0x5c
 800bef6:	f7fb fc87 	bl	8007808 <memset>
 800befa:	4b05      	ldr	r3, [pc, #20]	; (800bf10 <std+0x38>)
 800befc:	6263      	str	r3, [r4, #36]	; 0x24
 800befe:	4b05      	ldr	r3, [pc, #20]	; (800bf14 <std+0x3c>)
 800bf00:	62a3      	str	r3, [r4, #40]	; 0x28
 800bf02:	4b05      	ldr	r3, [pc, #20]	; (800bf18 <std+0x40>)
 800bf04:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bf06:	4b05      	ldr	r3, [pc, #20]	; (800bf1c <std+0x44>)
 800bf08:	6224      	str	r4, [r4, #32]
 800bf0a:	6323      	str	r3, [r4, #48]	; 0x30
 800bf0c:	bd10      	pop	{r4, pc}
 800bf0e:	bf00      	nop
 800bf10:	08008549 	.word	0x08008549
 800bf14:	0800856f 	.word	0x0800856f
 800bf18:	080085a7 	.word	0x080085a7
 800bf1c:	080085cb 	.word	0x080085cb

0800bf20 <_cleanup_r>:
 800bf20:	4901      	ldr	r1, [pc, #4]	; (800bf28 <_cleanup_r+0x8>)
 800bf22:	f000 b8c1 	b.w	800c0a8 <_fwalk_reent>
 800bf26:	bf00      	nop
 800bf28:	0800be61 	.word	0x0800be61

0800bf2c <__sfmoreglue>:
 800bf2c:	b570      	push	{r4, r5, r6, lr}
 800bf2e:	1e4a      	subs	r2, r1, #1
 800bf30:	2568      	movs	r5, #104	; 0x68
 800bf32:	4355      	muls	r5, r2
 800bf34:	460e      	mov	r6, r1
 800bf36:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800bf3a:	f7ff f8ed 	bl	800b118 <_malloc_r>
 800bf3e:	4604      	mov	r4, r0
 800bf40:	b140      	cbz	r0, 800bf54 <__sfmoreglue+0x28>
 800bf42:	2100      	movs	r1, #0
 800bf44:	e9c0 1600 	strd	r1, r6, [r0]
 800bf48:	300c      	adds	r0, #12
 800bf4a:	60a0      	str	r0, [r4, #8]
 800bf4c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800bf50:	f7fb fc5a 	bl	8007808 <memset>
 800bf54:	4620      	mov	r0, r4
 800bf56:	bd70      	pop	{r4, r5, r6, pc}

0800bf58 <__sfp_lock_acquire>:
 800bf58:	4801      	ldr	r0, [pc, #4]	; (800bf60 <__sfp_lock_acquire+0x8>)
 800bf5a:	f000 b8c5 	b.w	800c0e8 <__retarget_lock_acquire_recursive>
 800bf5e:	bf00      	nop
 800bf60:	20018790 	.word	0x20018790

0800bf64 <__sfp_lock_release>:
 800bf64:	4801      	ldr	r0, [pc, #4]	; (800bf6c <__sfp_lock_release+0x8>)
 800bf66:	f000 b8c0 	b.w	800c0ea <__retarget_lock_release_recursive>
 800bf6a:	bf00      	nop
 800bf6c:	20018790 	.word	0x20018790

0800bf70 <__sinit_lock_acquire>:
 800bf70:	4801      	ldr	r0, [pc, #4]	; (800bf78 <__sinit_lock_acquire+0x8>)
 800bf72:	f000 b8b9 	b.w	800c0e8 <__retarget_lock_acquire_recursive>
 800bf76:	bf00      	nop
 800bf78:	2001878b 	.word	0x2001878b

0800bf7c <__sinit_lock_release>:
 800bf7c:	4801      	ldr	r0, [pc, #4]	; (800bf84 <__sinit_lock_release+0x8>)
 800bf7e:	f000 b8b4 	b.w	800c0ea <__retarget_lock_release_recursive>
 800bf82:	bf00      	nop
 800bf84:	2001878b 	.word	0x2001878b

0800bf88 <__sinit>:
 800bf88:	b510      	push	{r4, lr}
 800bf8a:	4604      	mov	r4, r0
 800bf8c:	f7ff fff0 	bl	800bf70 <__sinit_lock_acquire>
 800bf90:	69a3      	ldr	r3, [r4, #24]
 800bf92:	b11b      	cbz	r3, 800bf9c <__sinit+0x14>
 800bf94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf98:	f7ff bff0 	b.w	800bf7c <__sinit_lock_release>
 800bf9c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800bfa0:	6523      	str	r3, [r4, #80]	; 0x50
 800bfa2:	4b13      	ldr	r3, [pc, #76]	; (800bff0 <__sinit+0x68>)
 800bfa4:	4a13      	ldr	r2, [pc, #76]	; (800bff4 <__sinit+0x6c>)
 800bfa6:	681b      	ldr	r3, [r3, #0]
 800bfa8:	62a2      	str	r2, [r4, #40]	; 0x28
 800bfaa:	42a3      	cmp	r3, r4
 800bfac:	bf04      	itt	eq
 800bfae:	2301      	moveq	r3, #1
 800bfb0:	61a3      	streq	r3, [r4, #24]
 800bfb2:	4620      	mov	r0, r4
 800bfb4:	f000 f820 	bl	800bff8 <__sfp>
 800bfb8:	6060      	str	r0, [r4, #4]
 800bfba:	4620      	mov	r0, r4
 800bfbc:	f000 f81c 	bl	800bff8 <__sfp>
 800bfc0:	60a0      	str	r0, [r4, #8]
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	f000 f818 	bl	800bff8 <__sfp>
 800bfc8:	2200      	movs	r2, #0
 800bfca:	60e0      	str	r0, [r4, #12]
 800bfcc:	2104      	movs	r1, #4
 800bfce:	6860      	ldr	r0, [r4, #4]
 800bfd0:	f7ff ff82 	bl	800bed8 <std>
 800bfd4:	68a0      	ldr	r0, [r4, #8]
 800bfd6:	2201      	movs	r2, #1
 800bfd8:	2109      	movs	r1, #9
 800bfda:	f7ff ff7d 	bl	800bed8 <std>
 800bfde:	68e0      	ldr	r0, [r4, #12]
 800bfe0:	2202      	movs	r2, #2
 800bfe2:	2112      	movs	r1, #18
 800bfe4:	f7ff ff78 	bl	800bed8 <std>
 800bfe8:	2301      	movs	r3, #1
 800bfea:	61a3      	str	r3, [r4, #24]
 800bfec:	e7d2      	b.n	800bf94 <__sinit+0xc>
 800bfee:	bf00      	nop
 800bff0:	0800d138 	.word	0x0800d138
 800bff4:	0800bf21 	.word	0x0800bf21

0800bff8 <__sfp>:
 800bff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bffa:	4607      	mov	r7, r0
 800bffc:	f7ff ffac 	bl	800bf58 <__sfp_lock_acquire>
 800c000:	4b1e      	ldr	r3, [pc, #120]	; (800c07c <__sfp+0x84>)
 800c002:	681e      	ldr	r6, [r3, #0]
 800c004:	69b3      	ldr	r3, [r6, #24]
 800c006:	b913      	cbnz	r3, 800c00e <__sfp+0x16>
 800c008:	4630      	mov	r0, r6
 800c00a:	f7ff ffbd 	bl	800bf88 <__sinit>
 800c00e:	3648      	adds	r6, #72	; 0x48
 800c010:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800c014:	3b01      	subs	r3, #1
 800c016:	d503      	bpl.n	800c020 <__sfp+0x28>
 800c018:	6833      	ldr	r3, [r6, #0]
 800c01a:	b30b      	cbz	r3, 800c060 <__sfp+0x68>
 800c01c:	6836      	ldr	r6, [r6, #0]
 800c01e:	e7f7      	b.n	800c010 <__sfp+0x18>
 800c020:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800c024:	b9d5      	cbnz	r5, 800c05c <__sfp+0x64>
 800c026:	4b16      	ldr	r3, [pc, #88]	; (800c080 <__sfp+0x88>)
 800c028:	60e3      	str	r3, [r4, #12]
 800c02a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c02e:	6665      	str	r5, [r4, #100]	; 0x64
 800c030:	f000 f859 	bl	800c0e6 <__retarget_lock_init_recursive>
 800c034:	f7ff ff96 	bl	800bf64 <__sfp_lock_release>
 800c038:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800c03c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800c040:	6025      	str	r5, [r4, #0]
 800c042:	61a5      	str	r5, [r4, #24]
 800c044:	2208      	movs	r2, #8
 800c046:	4629      	mov	r1, r5
 800c048:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800c04c:	f7fb fbdc 	bl	8007808 <memset>
 800c050:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800c054:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800c058:	4620      	mov	r0, r4
 800c05a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c05c:	3468      	adds	r4, #104	; 0x68
 800c05e:	e7d9      	b.n	800c014 <__sfp+0x1c>
 800c060:	2104      	movs	r1, #4
 800c062:	4638      	mov	r0, r7
 800c064:	f7ff ff62 	bl	800bf2c <__sfmoreglue>
 800c068:	4604      	mov	r4, r0
 800c06a:	6030      	str	r0, [r6, #0]
 800c06c:	2800      	cmp	r0, #0
 800c06e:	d1d5      	bne.n	800c01c <__sfp+0x24>
 800c070:	f7ff ff78 	bl	800bf64 <__sfp_lock_release>
 800c074:	230c      	movs	r3, #12
 800c076:	603b      	str	r3, [r7, #0]
 800c078:	e7ee      	b.n	800c058 <__sfp+0x60>
 800c07a:	bf00      	nop
 800c07c:	0800d138 	.word	0x0800d138
 800c080:	ffff0001 	.word	0xffff0001

0800c084 <fiprintf>:
 800c084:	b40e      	push	{r1, r2, r3}
 800c086:	b503      	push	{r0, r1, lr}
 800c088:	4601      	mov	r1, r0
 800c08a:	ab03      	add	r3, sp, #12
 800c08c:	4805      	ldr	r0, [pc, #20]	; (800c0a4 <fiprintf+0x20>)
 800c08e:	f853 2b04 	ldr.w	r2, [r3], #4
 800c092:	6800      	ldr	r0, [r0, #0]
 800c094:	9301      	str	r3, [sp, #4]
 800c096:	f000 f89f 	bl	800c1d8 <_vfiprintf_r>
 800c09a:	b002      	add	sp, #8
 800c09c:	f85d eb04 	ldr.w	lr, [sp], #4
 800c0a0:	b003      	add	sp, #12
 800c0a2:	4770      	bx	lr
 800c0a4:	20000134 	.word	0x20000134

0800c0a8 <_fwalk_reent>:
 800c0a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c0ac:	4606      	mov	r6, r0
 800c0ae:	4688      	mov	r8, r1
 800c0b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800c0b4:	2700      	movs	r7, #0
 800c0b6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800c0ba:	f1b9 0901 	subs.w	r9, r9, #1
 800c0be:	d505      	bpl.n	800c0cc <_fwalk_reent+0x24>
 800c0c0:	6824      	ldr	r4, [r4, #0]
 800c0c2:	2c00      	cmp	r4, #0
 800c0c4:	d1f7      	bne.n	800c0b6 <_fwalk_reent+0xe>
 800c0c6:	4638      	mov	r0, r7
 800c0c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c0cc:	89ab      	ldrh	r3, [r5, #12]
 800c0ce:	2b01      	cmp	r3, #1
 800c0d0:	d907      	bls.n	800c0e2 <_fwalk_reent+0x3a>
 800c0d2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800c0d6:	3301      	adds	r3, #1
 800c0d8:	d003      	beq.n	800c0e2 <_fwalk_reent+0x3a>
 800c0da:	4629      	mov	r1, r5
 800c0dc:	4630      	mov	r0, r6
 800c0de:	47c0      	blx	r8
 800c0e0:	4307      	orrs	r7, r0
 800c0e2:	3568      	adds	r5, #104	; 0x68
 800c0e4:	e7e9      	b.n	800c0ba <_fwalk_reent+0x12>

0800c0e6 <__retarget_lock_init_recursive>:
 800c0e6:	4770      	bx	lr

0800c0e8 <__retarget_lock_acquire_recursive>:
 800c0e8:	4770      	bx	lr

0800c0ea <__retarget_lock_release_recursive>:
 800c0ea:	4770      	bx	lr

0800c0ec <memmove>:
 800c0ec:	4288      	cmp	r0, r1
 800c0ee:	b510      	push	{r4, lr}
 800c0f0:	eb01 0402 	add.w	r4, r1, r2
 800c0f4:	d902      	bls.n	800c0fc <memmove+0x10>
 800c0f6:	4284      	cmp	r4, r0
 800c0f8:	4623      	mov	r3, r4
 800c0fa:	d807      	bhi.n	800c10c <memmove+0x20>
 800c0fc:	1e43      	subs	r3, r0, #1
 800c0fe:	42a1      	cmp	r1, r4
 800c100:	d008      	beq.n	800c114 <memmove+0x28>
 800c102:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c106:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c10a:	e7f8      	b.n	800c0fe <memmove+0x12>
 800c10c:	4402      	add	r2, r0
 800c10e:	4601      	mov	r1, r0
 800c110:	428a      	cmp	r2, r1
 800c112:	d100      	bne.n	800c116 <memmove+0x2a>
 800c114:	bd10      	pop	{r4, pc}
 800c116:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c11a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c11e:	e7f7      	b.n	800c110 <memmove+0x24>

0800c120 <__malloc_lock>:
 800c120:	4801      	ldr	r0, [pc, #4]	; (800c128 <__malloc_lock+0x8>)
 800c122:	f7ff bfe1 	b.w	800c0e8 <__retarget_lock_acquire_recursive>
 800c126:	bf00      	nop
 800c128:	2001878c 	.word	0x2001878c

0800c12c <__malloc_unlock>:
 800c12c:	4801      	ldr	r0, [pc, #4]	; (800c134 <__malloc_unlock+0x8>)
 800c12e:	f7ff bfdc 	b.w	800c0ea <__retarget_lock_release_recursive>
 800c132:	bf00      	nop
 800c134:	2001878c 	.word	0x2001878c

0800c138 <_realloc_r>:
 800c138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c13a:	4607      	mov	r7, r0
 800c13c:	4614      	mov	r4, r2
 800c13e:	460e      	mov	r6, r1
 800c140:	b921      	cbnz	r1, 800c14c <_realloc_r+0x14>
 800c142:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c146:	4611      	mov	r1, r2
 800c148:	f7fe bfe6 	b.w	800b118 <_malloc_r>
 800c14c:	b922      	cbnz	r2, 800c158 <_realloc_r+0x20>
 800c14e:	f7fe ff93 	bl	800b078 <_free_r>
 800c152:	4625      	mov	r5, r4
 800c154:	4628      	mov	r0, r5
 800c156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c158:	f000 fa9a 	bl	800c690 <_malloc_usable_size_r>
 800c15c:	42a0      	cmp	r0, r4
 800c15e:	d20f      	bcs.n	800c180 <_realloc_r+0x48>
 800c160:	4621      	mov	r1, r4
 800c162:	4638      	mov	r0, r7
 800c164:	f7fe ffd8 	bl	800b118 <_malloc_r>
 800c168:	4605      	mov	r5, r0
 800c16a:	2800      	cmp	r0, #0
 800c16c:	d0f2      	beq.n	800c154 <_realloc_r+0x1c>
 800c16e:	4631      	mov	r1, r6
 800c170:	4622      	mov	r2, r4
 800c172:	f7fe faa7 	bl	800a6c4 <memcpy>
 800c176:	4631      	mov	r1, r6
 800c178:	4638      	mov	r0, r7
 800c17a:	f7fe ff7d 	bl	800b078 <_free_r>
 800c17e:	e7e9      	b.n	800c154 <_realloc_r+0x1c>
 800c180:	4635      	mov	r5, r6
 800c182:	e7e7      	b.n	800c154 <_realloc_r+0x1c>

0800c184 <__sfputc_r>:
 800c184:	6893      	ldr	r3, [r2, #8]
 800c186:	3b01      	subs	r3, #1
 800c188:	2b00      	cmp	r3, #0
 800c18a:	b410      	push	{r4}
 800c18c:	6093      	str	r3, [r2, #8]
 800c18e:	da08      	bge.n	800c1a2 <__sfputc_r+0x1e>
 800c190:	6994      	ldr	r4, [r2, #24]
 800c192:	42a3      	cmp	r3, r4
 800c194:	db01      	blt.n	800c19a <__sfputc_r+0x16>
 800c196:	290a      	cmp	r1, #10
 800c198:	d103      	bne.n	800c1a2 <__sfputc_r+0x1e>
 800c19a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c19e:	f000 b94b 	b.w	800c438 <__swbuf_r>
 800c1a2:	6813      	ldr	r3, [r2, #0]
 800c1a4:	1c58      	adds	r0, r3, #1
 800c1a6:	6010      	str	r0, [r2, #0]
 800c1a8:	7019      	strb	r1, [r3, #0]
 800c1aa:	4608      	mov	r0, r1
 800c1ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c1b0:	4770      	bx	lr

0800c1b2 <__sfputs_r>:
 800c1b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1b4:	4606      	mov	r6, r0
 800c1b6:	460f      	mov	r7, r1
 800c1b8:	4614      	mov	r4, r2
 800c1ba:	18d5      	adds	r5, r2, r3
 800c1bc:	42ac      	cmp	r4, r5
 800c1be:	d101      	bne.n	800c1c4 <__sfputs_r+0x12>
 800c1c0:	2000      	movs	r0, #0
 800c1c2:	e007      	b.n	800c1d4 <__sfputs_r+0x22>
 800c1c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c1c8:	463a      	mov	r2, r7
 800c1ca:	4630      	mov	r0, r6
 800c1cc:	f7ff ffda 	bl	800c184 <__sfputc_r>
 800c1d0:	1c43      	adds	r3, r0, #1
 800c1d2:	d1f3      	bne.n	800c1bc <__sfputs_r+0xa>
 800c1d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c1d8 <_vfiprintf_r>:
 800c1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1dc:	460d      	mov	r5, r1
 800c1de:	b09d      	sub	sp, #116	; 0x74
 800c1e0:	4614      	mov	r4, r2
 800c1e2:	4698      	mov	r8, r3
 800c1e4:	4606      	mov	r6, r0
 800c1e6:	b118      	cbz	r0, 800c1f0 <_vfiprintf_r+0x18>
 800c1e8:	6983      	ldr	r3, [r0, #24]
 800c1ea:	b90b      	cbnz	r3, 800c1f0 <_vfiprintf_r+0x18>
 800c1ec:	f7ff fecc 	bl	800bf88 <__sinit>
 800c1f0:	4b89      	ldr	r3, [pc, #548]	; (800c418 <_vfiprintf_r+0x240>)
 800c1f2:	429d      	cmp	r5, r3
 800c1f4:	d11b      	bne.n	800c22e <_vfiprintf_r+0x56>
 800c1f6:	6875      	ldr	r5, [r6, #4]
 800c1f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c1fa:	07d9      	lsls	r1, r3, #31
 800c1fc:	d405      	bmi.n	800c20a <_vfiprintf_r+0x32>
 800c1fe:	89ab      	ldrh	r3, [r5, #12]
 800c200:	059a      	lsls	r2, r3, #22
 800c202:	d402      	bmi.n	800c20a <_vfiprintf_r+0x32>
 800c204:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c206:	f7ff ff6f 	bl	800c0e8 <__retarget_lock_acquire_recursive>
 800c20a:	89ab      	ldrh	r3, [r5, #12]
 800c20c:	071b      	lsls	r3, r3, #28
 800c20e:	d501      	bpl.n	800c214 <_vfiprintf_r+0x3c>
 800c210:	692b      	ldr	r3, [r5, #16]
 800c212:	b9eb      	cbnz	r3, 800c250 <_vfiprintf_r+0x78>
 800c214:	4629      	mov	r1, r5
 800c216:	4630      	mov	r0, r6
 800c218:	f000 f960 	bl	800c4dc <__swsetup_r>
 800c21c:	b1c0      	cbz	r0, 800c250 <_vfiprintf_r+0x78>
 800c21e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c220:	07dc      	lsls	r4, r3, #31
 800c222:	d50e      	bpl.n	800c242 <_vfiprintf_r+0x6a>
 800c224:	f04f 30ff 	mov.w	r0, #4294967295
 800c228:	b01d      	add	sp, #116	; 0x74
 800c22a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c22e:	4b7b      	ldr	r3, [pc, #492]	; (800c41c <_vfiprintf_r+0x244>)
 800c230:	429d      	cmp	r5, r3
 800c232:	d101      	bne.n	800c238 <_vfiprintf_r+0x60>
 800c234:	68b5      	ldr	r5, [r6, #8]
 800c236:	e7df      	b.n	800c1f8 <_vfiprintf_r+0x20>
 800c238:	4b79      	ldr	r3, [pc, #484]	; (800c420 <_vfiprintf_r+0x248>)
 800c23a:	429d      	cmp	r5, r3
 800c23c:	bf08      	it	eq
 800c23e:	68f5      	ldreq	r5, [r6, #12]
 800c240:	e7da      	b.n	800c1f8 <_vfiprintf_r+0x20>
 800c242:	89ab      	ldrh	r3, [r5, #12]
 800c244:	0598      	lsls	r0, r3, #22
 800c246:	d4ed      	bmi.n	800c224 <_vfiprintf_r+0x4c>
 800c248:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c24a:	f7ff ff4e 	bl	800c0ea <__retarget_lock_release_recursive>
 800c24e:	e7e9      	b.n	800c224 <_vfiprintf_r+0x4c>
 800c250:	2300      	movs	r3, #0
 800c252:	9309      	str	r3, [sp, #36]	; 0x24
 800c254:	2320      	movs	r3, #32
 800c256:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c25a:	f8cd 800c 	str.w	r8, [sp, #12]
 800c25e:	2330      	movs	r3, #48	; 0x30
 800c260:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800c424 <_vfiprintf_r+0x24c>
 800c264:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c268:	f04f 0901 	mov.w	r9, #1
 800c26c:	4623      	mov	r3, r4
 800c26e:	469a      	mov	sl, r3
 800c270:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c274:	b10a      	cbz	r2, 800c27a <_vfiprintf_r+0xa2>
 800c276:	2a25      	cmp	r2, #37	; 0x25
 800c278:	d1f9      	bne.n	800c26e <_vfiprintf_r+0x96>
 800c27a:	ebba 0b04 	subs.w	fp, sl, r4
 800c27e:	d00b      	beq.n	800c298 <_vfiprintf_r+0xc0>
 800c280:	465b      	mov	r3, fp
 800c282:	4622      	mov	r2, r4
 800c284:	4629      	mov	r1, r5
 800c286:	4630      	mov	r0, r6
 800c288:	f7ff ff93 	bl	800c1b2 <__sfputs_r>
 800c28c:	3001      	adds	r0, #1
 800c28e:	f000 80aa 	beq.w	800c3e6 <_vfiprintf_r+0x20e>
 800c292:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c294:	445a      	add	r2, fp
 800c296:	9209      	str	r2, [sp, #36]	; 0x24
 800c298:	f89a 3000 	ldrb.w	r3, [sl]
 800c29c:	2b00      	cmp	r3, #0
 800c29e:	f000 80a2 	beq.w	800c3e6 <_vfiprintf_r+0x20e>
 800c2a2:	2300      	movs	r3, #0
 800c2a4:	f04f 32ff 	mov.w	r2, #4294967295
 800c2a8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c2ac:	f10a 0a01 	add.w	sl, sl, #1
 800c2b0:	9304      	str	r3, [sp, #16]
 800c2b2:	9307      	str	r3, [sp, #28]
 800c2b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c2b8:	931a      	str	r3, [sp, #104]	; 0x68
 800c2ba:	4654      	mov	r4, sl
 800c2bc:	2205      	movs	r2, #5
 800c2be:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c2c2:	4858      	ldr	r0, [pc, #352]	; (800c424 <_vfiprintf_r+0x24c>)
 800c2c4:	f7f3 ffd4 	bl	8000270 <memchr>
 800c2c8:	9a04      	ldr	r2, [sp, #16]
 800c2ca:	b9d8      	cbnz	r0, 800c304 <_vfiprintf_r+0x12c>
 800c2cc:	06d1      	lsls	r1, r2, #27
 800c2ce:	bf44      	itt	mi
 800c2d0:	2320      	movmi	r3, #32
 800c2d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c2d6:	0713      	lsls	r3, r2, #28
 800c2d8:	bf44      	itt	mi
 800c2da:	232b      	movmi	r3, #43	; 0x2b
 800c2dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c2e0:	f89a 3000 	ldrb.w	r3, [sl]
 800c2e4:	2b2a      	cmp	r3, #42	; 0x2a
 800c2e6:	d015      	beq.n	800c314 <_vfiprintf_r+0x13c>
 800c2e8:	9a07      	ldr	r2, [sp, #28]
 800c2ea:	4654      	mov	r4, sl
 800c2ec:	2000      	movs	r0, #0
 800c2ee:	f04f 0c0a 	mov.w	ip, #10
 800c2f2:	4621      	mov	r1, r4
 800c2f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c2f8:	3b30      	subs	r3, #48	; 0x30
 800c2fa:	2b09      	cmp	r3, #9
 800c2fc:	d94e      	bls.n	800c39c <_vfiprintf_r+0x1c4>
 800c2fe:	b1b0      	cbz	r0, 800c32e <_vfiprintf_r+0x156>
 800c300:	9207      	str	r2, [sp, #28]
 800c302:	e014      	b.n	800c32e <_vfiprintf_r+0x156>
 800c304:	eba0 0308 	sub.w	r3, r0, r8
 800c308:	fa09 f303 	lsl.w	r3, r9, r3
 800c30c:	4313      	orrs	r3, r2
 800c30e:	9304      	str	r3, [sp, #16]
 800c310:	46a2      	mov	sl, r4
 800c312:	e7d2      	b.n	800c2ba <_vfiprintf_r+0xe2>
 800c314:	9b03      	ldr	r3, [sp, #12]
 800c316:	1d19      	adds	r1, r3, #4
 800c318:	681b      	ldr	r3, [r3, #0]
 800c31a:	9103      	str	r1, [sp, #12]
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	bfbb      	ittet	lt
 800c320:	425b      	neglt	r3, r3
 800c322:	f042 0202 	orrlt.w	r2, r2, #2
 800c326:	9307      	strge	r3, [sp, #28]
 800c328:	9307      	strlt	r3, [sp, #28]
 800c32a:	bfb8      	it	lt
 800c32c:	9204      	strlt	r2, [sp, #16]
 800c32e:	7823      	ldrb	r3, [r4, #0]
 800c330:	2b2e      	cmp	r3, #46	; 0x2e
 800c332:	d10c      	bne.n	800c34e <_vfiprintf_r+0x176>
 800c334:	7863      	ldrb	r3, [r4, #1]
 800c336:	2b2a      	cmp	r3, #42	; 0x2a
 800c338:	d135      	bne.n	800c3a6 <_vfiprintf_r+0x1ce>
 800c33a:	9b03      	ldr	r3, [sp, #12]
 800c33c:	1d1a      	adds	r2, r3, #4
 800c33e:	681b      	ldr	r3, [r3, #0]
 800c340:	9203      	str	r2, [sp, #12]
 800c342:	2b00      	cmp	r3, #0
 800c344:	bfb8      	it	lt
 800c346:	f04f 33ff 	movlt.w	r3, #4294967295
 800c34a:	3402      	adds	r4, #2
 800c34c:	9305      	str	r3, [sp, #20]
 800c34e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800c434 <_vfiprintf_r+0x25c>
 800c352:	7821      	ldrb	r1, [r4, #0]
 800c354:	2203      	movs	r2, #3
 800c356:	4650      	mov	r0, sl
 800c358:	f7f3 ff8a 	bl	8000270 <memchr>
 800c35c:	b140      	cbz	r0, 800c370 <_vfiprintf_r+0x198>
 800c35e:	2340      	movs	r3, #64	; 0x40
 800c360:	eba0 000a 	sub.w	r0, r0, sl
 800c364:	fa03 f000 	lsl.w	r0, r3, r0
 800c368:	9b04      	ldr	r3, [sp, #16]
 800c36a:	4303      	orrs	r3, r0
 800c36c:	3401      	adds	r4, #1
 800c36e:	9304      	str	r3, [sp, #16]
 800c370:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c374:	482c      	ldr	r0, [pc, #176]	; (800c428 <_vfiprintf_r+0x250>)
 800c376:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c37a:	2206      	movs	r2, #6
 800c37c:	f7f3 ff78 	bl	8000270 <memchr>
 800c380:	2800      	cmp	r0, #0
 800c382:	d03f      	beq.n	800c404 <_vfiprintf_r+0x22c>
 800c384:	4b29      	ldr	r3, [pc, #164]	; (800c42c <_vfiprintf_r+0x254>)
 800c386:	bb1b      	cbnz	r3, 800c3d0 <_vfiprintf_r+0x1f8>
 800c388:	9b03      	ldr	r3, [sp, #12]
 800c38a:	3307      	adds	r3, #7
 800c38c:	f023 0307 	bic.w	r3, r3, #7
 800c390:	3308      	adds	r3, #8
 800c392:	9303      	str	r3, [sp, #12]
 800c394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c396:	443b      	add	r3, r7
 800c398:	9309      	str	r3, [sp, #36]	; 0x24
 800c39a:	e767      	b.n	800c26c <_vfiprintf_r+0x94>
 800c39c:	fb0c 3202 	mla	r2, ip, r2, r3
 800c3a0:	460c      	mov	r4, r1
 800c3a2:	2001      	movs	r0, #1
 800c3a4:	e7a5      	b.n	800c2f2 <_vfiprintf_r+0x11a>
 800c3a6:	2300      	movs	r3, #0
 800c3a8:	3401      	adds	r4, #1
 800c3aa:	9305      	str	r3, [sp, #20]
 800c3ac:	4619      	mov	r1, r3
 800c3ae:	f04f 0c0a 	mov.w	ip, #10
 800c3b2:	4620      	mov	r0, r4
 800c3b4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c3b8:	3a30      	subs	r2, #48	; 0x30
 800c3ba:	2a09      	cmp	r2, #9
 800c3bc:	d903      	bls.n	800c3c6 <_vfiprintf_r+0x1ee>
 800c3be:	2b00      	cmp	r3, #0
 800c3c0:	d0c5      	beq.n	800c34e <_vfiprintf_r+0x176>
 800c3c2:	9105      	str	r1, [sp, #20]
 800c3c4:	e7c3      	b.n	800c34e <_vfiprintf_r+0x176>
 800c3c6:	fb0c 2101 	mla	r1, ip, r1, r2
 800c3ca:	4604      	mov	r4, r0
 800c3cc:	2301      	movs	r3, #1
 800c3ce:	e7f0      	b.n	800c3b2 <_vfiprintf_r+0x1da>
 800c3d0:	ab03      	add	r3, sp, #12
 800c3d2:	9300      	str	r3, [sp, #0]
 800c3d4:	462a      	mov	r2, r5
 800c3d6:	4b16      	ldr	r3, [pc, #88]	; (800c430 <_vfiprintf_r+0x258>)
 800c3d8:	a904      	add	r1, sp, #16
 800c3da:	4630      	mov	r0, r6
 800c3dc:	f7fb faac 	bl	8007938 <_printf_float>
 800c3e0:	4607      	mov	r7, r0
 800c3e2:	1c78      	adds	r0, r7, #1
 800c3e4:	d1d6      	bne.n	800c394 <_vfiprintf_r+0x1bc>
 800c3e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c3e8:	07d9      	lsls	r1, r3, #31
 800c3ea:	d405      	bmi.n	800c3f8 <_vfiprintf_r+0x220>
 800c3ec:	89ab      	ldrh	r3, [r5, #12]
 800c3ee:	059a      	lsls	r2, r3, #22
 800c3f0:	d402      	bmi.n	800c3f8 <_vfiprintf_r+0x220>
 800c3f2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c3f4:	f7ff fe79 	bl	800c0ea <__retarget_lock_release_recursive>
 800c3f8:	89ab      	ldrh	r3, [r5, #12]
 800c3fa:	065b      	lsls	r3, r3, #25
 800c3fc:	f53f af12 	bmi.w	800c224 <_vfiprintf_r+0x4c>
 800c400:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c402:	e711      	b.n	800c228 <_vfiprintf_r+0x50>
 800c404:	ab03      	add	r3, sp, #12
 800c406:	9300      	str	r3, [sp, #0]
 800c408:	462a      	mov	r2, r5
 800c40a:	4b09      	ldr	r3, [pc, #36]	; (800c430 <_vfiprintf_r+0x258>)
 800c40c:	a904      	add	r1, sp, #16
 800c40e:	4630      	mov	r0, r6
 800c410:	f7fb fd1e 	bl	8007e50 <_printf_i>
 800c414:	e7e4      	b.n	800c3e0 <_vfiprintf_r+0x208>
 800c416:	bf00      	nop
 800c418:	0800d5c4 	.word	0x0800d5c4
 800c41c:	0800d5e4 	.word	0x0800d5e4
 800c420:	0800d5a4 	.word	0x0800d5a4
 800c424:	0800d53c 	.word	0x0800d53c
 800c428:	0800d546 	.word	0x0800d546
 800c42c:	08007939 	.word	0x08007939
 800c430:	0800c1b3 	.word	0x0800c1b3
 800c434:	0800d542 	.word	0x0800d542

0800c438 <__swbuf_r>:
 800c438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c43a:	460e      	mov	r6, r1
 800c43c:	4614      	mov	r4, r2
 800c43e:	4605      	mov	r5, r0
 800c440:	b118      	cbz	r0, 800c44a <__swbuf_r+0x12>
 800c442:	6983      	ldr	r3, [r0, #24]
 800c444:	b90b      	cbnz	r3, 800c44a <__swbuf_r+0x12>
 800c446:	f7ff fd9f 	bl	800bf88 <__sinit>
 800c44a:	4b21      	ldr	r3, [pc, #132]	; (800c4d0 <__swbuf_r+0x98>)
 800c44c:	429c      	cmp	r4, r3
 800c44e:	d12b      	bne.n	800c4a8 <__swbuf_r+0x70>
 800c450:	686c      	ldr	r4, [r5, #4]
 800c452:	69a3      	ldr	r3, [r4, #24]
 800c454:	60a3      	str	r3, [r4, #8]
 800c456:	89a3      	ldrh	r3, [r4, #12]
 800c458:	071a      	lsls	r2, r3, #28
 800c45a:	d52f      	bpl.n	800c4bc <__swbuf_r+0x84>
 800c45c:	6923      	ldr	r3, [r4, #16]
 800c45e:	b36b      	cbz	r3, 800c4bc <__swbuf_r+0x84>
 800c460:	6923      	ldr	r3, [r4, #16]
 800c462:	6820      	ldr	r0, [r4, #0]
 800c464:	1ac0      	subs	r0, r0, r3
 800c466:	6963      	ldr	r3, [r4, #20]
 800c468:	b2f6      	uxtb	r6, r6
 800c46a:	4283      	cmp	r3, r0
 800c46c:	4637      	mov	r7, r6
 800c46e:	dc04      	bgt.n	800c47a <__swbuf_r+0x42>
 800c470:	4621      	mov	r1, r4
 800c472:	4628      	mov	r0, r5
 800c474:	f7ff fcf4 	bl	800be60 <_fflush_r>
 800c478:	bb30      	cbnz	r0, 800c4c8 <__swbuf_r+0x90>
 800c47a:	68a3      	ldr	r3, [r4, #8]
 800c47c:	3b01      	subs	r3, #1
 800c47e:	60a3      	str	r3, [r4, #8]
 800c480:	6823      	ldr	r3, [r4, #0]
 800c482:	1c5a      	adds	r2, r3, #1
 800c484:	6022      	str	r2, [r4, #0]
 800c486:	701e      	strb	r6, [r3, #0]
 800c488:	6963      	ldr	r3, [r4, #20]
 800c48a:	3001      	adds	r0, #1
 800c48c:	4283      	cmp	r3, r0
 800c48e:	d004      	beq.n	800c49a <__swbuf_r+0x62>
 800c490:	89a3      	ldrh	r3, [r4, #12]
 800c492:	07db      	lsls	r3, r3, #31
 800c494:	d506      	bpl.n	800c4a4 <__swbuf_r+0x6c>
 800c496:	2e0a      	cmp	r6, #10
 800c498:	d104      	bne.n	800c4a4 <__swbuf_r+0x6c>
 800c49a:	4621      	mov	r1, r4
 800c49c:	4628      	mov	r0, r5
 800c49e:	f7ff fcdf 	bl	800be60 <_fflush_r>
 800c4a2:	b988      	cbnz	r0, 800c4c8 <__swbuf_r+0x90>
 800c4a4:	4638      	mov	r0, r7
 800c4a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4a8:	4b0a      	ldr	r3, [pc, #40]	; (800c4d4 <__swbuf_r+0x9c>)
 800c4aa:	429c      	cmp	r4, r3
 800c4ac:	d101      	bne.n	800c4b2 <__swbuf_r+0x7a>
 800c4ae:	68ac      	ldr	r4, [r5, #8]
 800c4b0:	e7cf      	b.n	800c452 <__swbuf_r+0x1a>
 800c4b2:	4b09      	ldr	r3, [pc, #36]	; (800c4d8 <__swbuf_r+0xa0>)
 800c4b4:	429c      	cmp	r4, r3
 800c4b6:	bf08      	it	eq
 800c4b8:	68ec      	ldreq	r4, [r5, #12]
 800c4ba:	e7ca      	b.n	800c452 <__swbuf_r+0x1a>
 800c4bc:	4621      	mov	r1, r4
 800c4be:	4628      	mov	r0, r5
 800c4c0:	f000 f80c 	bl	800c4dc <__swsetup_r>
 800c4c4:	2800      	cmp	r0, #0
 800c4c6:	d0cb      	beq.n	800c460 <__swbuf_r+0x28>
 800c4c8:	f04f 37ff 	mov.w	r7, #4294967295
 800c4cc:	e7ea      	b.n	800c4a4 <__swbuf_r+0x6c>
 800c4ce:	bf00      	nop
 800c4d0:	0800d5c4 	.word	0x0800d5c4
 800c4d4:	0800d5e4 	.word	0x0800d5e4
 800c4d8:	0800d5a4 	.word	0x0800d5a4

0800c4dc <__swsetup_r>:
 800c4dc:	4b32      	ldr	r3, [pc, #200]	; (800c5a8 <__swsetup_r+0xcc>)
 800c4de:	b570      	push	{r4, r5, r6, lr}
 800c4e0:	681d      	ldr	r5, [r3, #0]
 800c4e2:	4606      	mov	r6, r0
 800c4e4:	460c      	mov	r4, r1
 800c4e6:	b125      	cbz	r5, 800c4f2 <__swsetup_r+0x16>
 800c4e8:	69ab      	ldr	r3, [r5, #24]
 800c4ea:	b913      	cbnz	r3, 800c4f2 <__swsetup_r+0x16>
 800c4ec:	4628      	mov	r0, r5
 800c4ee:	f7ff fd4b 	bl	800bf88 <__sinit>
 800c4f2:	4b2e      	ldr	r3, [pc, #184]	; (800c5ac <__swsetup_r+0xd0>)
 800c4f4:	429c      	cmp	r4, r3
 800c4f6:	d10f      	bne.n	800c518 <__swsetup_r+0x3c>
 800c4f8:	686c      	ldr	r4, [r5, #4]
 800c4fa:	89a3      	ldrh	r3, [r4, #12]
 800c4fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800c500:	0719      	lsls	r1, r3, #28
 800c502:	d42c      	bmi.n	800c55e <__swsetup_r+0x82>
 800c504:	06dd      	lsls	r5, r3, #27
 800c506:	d411      	bmi.n	800c52c <__swsetup_r+0x50>
 800c508:	2309      	movs	r3, #9
 800c50a:	6033      	str	r3, [r6, #0]
 800c50c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800c510:	81a3      	strh	r3, [r4, #12]
 800c512:	f04f 30ff 	mov.w	r0, #4294967295
 800c516:	e03e      	b.n	800c596 <__swsetup_r+0xba>
 800c518:	4b25      	ldr	r3, [pc, #148]	; (800c5b0 <__swsetup_r+0xd4>)
 800c51a:	429c      	cmp	r4, r3
 800c51c:	d101      	bne.n	800c522 <__swsetup_r+0x46>
 800c51e:	68ac      	ldr	r4, [r5, #8]
 800c520:	e7eb      	b.n	800c4fa <__swsetup_r+0x1e>
 800c522:	4b24      	ldr	r3, [pc, #144]	; (800c5b4 <__swsetup_r+0xd8>)
 800c524:	429c      	cmp	r4, r3
 800c526:	bf08      	it	eq
 800c528:	68ec      	ldreq	r4, [r5, #12]
 800c52a:	e7e6      	b.n	800c4fa <__swsetup_r+0x1e>
 800c52c:	0758      	lsls	r0, r3, #29
 800c52e:	d512      	bpl.n	800c556 <__swsetup_r+0x7a>
 800c530:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c532:	b141      	cbz	r1, 800c546 <__swsetup_r+0x6a>
 800c534:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c538:	4299      	cmp	r1, r3
 800c53a:	d002      	beq.n	800c542 <__swsetup_r+0x66>
 800c53c:	4630      	mov	r0, r6
 800c53e:	f7fe fd9b 	bl	800b078 <_free_r>
 800c542:	2300      	movs	r3, #0
 800c544:	6363      	str	r3, [r4, #52]	; 0x34
 800c546:	89a3      	ldrh	r3, [r4, #12]
 800c548:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800c54c:	81a3      	strh	r3, [r4, #12]
 800c54e:	2300      	movs	r3, #0
 800c550:	6063      	str	r3, [r4, #4]
 800c552:	6923      	ldr	r3, [r4, #16]
 800c554:	6023      	str	r3, [r4, #0]
 800c556:	89a3      	ldrh	r3, [r4, #12]
 800c558:	f043 0308 	orr.w	r3, r3, #8
 800c55c:	81a3      	strh	r3, [r4, #12]
 800c55e:	6923      	ldr	r3, [r4, #16]
 800c560:	b94b      	cbnz	r3, 800c576 <__swsetup_r+0x9a>
 800c562:	89a3      	ldrh	r3, [r4, #12]
 800c564:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800c568:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c56c:	d003      	beq.n	800c576 <__swsetup_r+0x9a>
 800c56e:	4621      	mov	r1, r4
 800c570:	4630      	mov	r0, r6
 800c572:	f000 f84d 	bl	800c610 <__smakebuf_r>
 800c576:	89a0      	ldrh	r0, [r4, #12]
 800c578:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800c57c:	f010 0301 	ands.w	r3, r0, #1
 800c580:	d00a      	beq.n	800c598 <__swsetup_r+0xbc>
 800c582:	2300      	movs	r3, #0
 800c584:	60a3      	str	r3, [r4, #8]
 800c586:	6963      	ldr	r3, [r4, #20]
 800c588:	425b      	negs	r3, r3
 800c58a:	61a3      	str	r3, [r4, #24]
 800c58c:	6923      	ldr	r3, [r4, #16]
 800c58e:	b943      	cbnz	r3, 800c5a2 <__swsetup_r+0xc6>
 800c590:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800c594:	d1ba      	bne.n	800c50c <__swsetup_r+0x30>
 800c596:	bd70      	pop	{r4, r5, r6, pc}
 800c598:	0781      	lsls	r1, r0, #30
 800c59a:	bf58      	it	pl
 800c59c:	6963      	ldrpl	r3, [r4, #20]
 800c59e:	60a3      	str	r3, [r4, #8]
 800c5a0:	e7f4      	b.n	800c58c <__swsetup_r+0xb0>
 800c5a2:	2000      	movs	r0, #0
 800c5a4:	e7f7      	b.n	800c596 <__swsetup_r+0xba>
 800c5a6:	bf00      	nop
 800c5a8:	20000134 	.word	0x20000134
 800c5ac:	0800d5c4 	.word	0x0800d5c4
 800c5b0:	0800d5e4 	.word	0x0800d5e4
 800c5b4:	0800d5a4 	.word	0x0800d5a4

0800c5b8 <abort>:
 800c5b8:	b508      	push	{r3, lr}
 800c5ba:	2006      	movs	r0, #6
 800c5bc:	f000 f898 	bl	800c6f0 <raise>
 800c5c0:	2001      	movs	r0, #1
 800c5c2:	f7f6 f89b 	bl	80026fc <_exit>

0800c5c6 <__swhatbuf_r>:
 800c5c6:	b570      	push	{r4, r5, r6, lr}
 800c5c8:	460e      	mov	r6, r1
 800c5ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c5ce:	2900      	cmp	r1, #0
 800c5d0:	b096      	sub	sp, #88	; 0x58
 800c5d2:	4614      	mov	r4, r2
 800c5d4:	461d      	mov	r5, r3
 800c5d6:	da07      	bge.n	800c5e8 <__swhatbuf_r+0x22>
 800c5d8:	2300      	movs	r3, #0
 800c5da:	602b      	str	r3, [r5, #0]
 800c5dc:	89b3      	ldrh	r3, [r6, #12]
 800c5de:	061a      	lsls	r2, r3, #24
 800c5e0:	d410      	bmi.n	800c604 <__swhatbuf_r+0x3e>
 800c5e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c5e6:	e00e      	b.n	800c606 <__swhatbuf_r+0x40>
 800c5e8:	466a      	mov	r2, sp
 800c5ea:	f000 f89d 	bl	800c728 <_fstat_r>
 800c5ee:	2800      	cmp	r0, #0
 800c5f0:	dbf2      	blt.n	800c5d8 <__swhatbuf_r+0x12>
 800c5f2:	9a01      	ldr	r2, [sp, #4]
 800c5f4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800c5f8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800c5fc:	425a      	negs	r2, r3
 800c5fe:	415a      	adcs	r2, r3
 800c600:	602a      	str	r2, [r5, #0]
 800c602:	e7ee      	b.n	800c5e2 <__swhatbuf_r+0x1c>
 800c604:	2340      	movs	r3, #64	; 0x40
 800c606:	2000      	movs	r0, #0
 800c608:	6023      	str	r3, [r4, #0]
 800c60a:	b016      	add	sp, #88	; 0x58
 800c60c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c610 <__smakebuf_r>:
 800c610:	898b      	ldrh	r3, [r1, #12]
 800c612:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c614:	079d      	lsls	r5, r3, #30
 800c616:	4606      	mov	r6, r0
 800c618:	460c      	mov	r4, r1
 800c61a:	d507      	bpl.n	800c62c <__smakebuf_r+0x1c>
 800c61c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800c620:	6023      	str	r3, [r4, #0]
 800c622:	6123      	str	r3, [r4, #16]
 800c624:	2301      	movs	r3, #1
 800c626:	6163      	str	r3, [r4, #20]
 800c628:	b002      	add	sp, #8
 800c62a:	bd70      	pop	{r4, r5, r6, pc}
 800c62c:	ab01      	add	r3, sp, #4
 800c62e:	466a      	mov	r2, sp
 800c630:	f7ff ffc9 	bl	800c5c6 <__swhatbuf_r>
 800c634:	9900      	ldr	r1, [sp, #0]
 800c636:	4605      	mov	r5, r0
 800c638:	4630      	mov	r0, r6
 800c63a:	f7fe fd6d 	bl	800b118 <_malloc_r>
 800c63e:	b948      	cbnz	r0, 800c654 <__smakebuf_r+0x44>
 800c640:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c644:	059a      	lsls	r2, r3, #22
 800c646:	d4ef      	bmi.n	800c628 <__smakebuf_r+0x18>
 800c648:	f023 0303 	bic.w	r3, r3, #3
 800c64c:	f043 0302 	orr.w	r3, r3, #2
 800c650:	81a3      	strh	r3, [r4, #12]
 800c652:	e7e3      	b.n	800c61c <__smakebuf_r+0xc>
 800c654:	4b0d      	ldr	r3, [pc, #52]	; (800c68c <__smakebuf_r+0x7c>)
 800c656:	62b3      	str	r3, [r6, #40]	; 0x28
 800c658:	89a3      	ldrh	r3, [r4, #12]
 800c65a:	6020      	str	r0, [r4, #0]
 800c65c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c660:	81a3      	strh	r3, [r4, #12]
 800c662:	9b00      	ldr	r3, [sp, #0]
 800c664:	6163      	str	r3, [r4, #20]
 800c666:	9b01      	ldr	r3, [sp, #4]
 800c668:	6120      	str	r0, [r4, #16]
 800c66a:	b15b      	cbz	r3, 800c684 <__smakebuf_r+0x74>
 800c66c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c670:	4630      	mov	r0, r6
 800c672:	f000 f86b 	bl	800c74c <_isatty_r>
 800c676:	b128      	cbz	r0, 800c684 <__smakebuf_r+0x74>
 800c678:	89a3      	ldrh	r3, [r4, #12]
 800c67a:	f023 0303 	bic.w	r3, r3, #3
 800c67e:	f043 0301 	orr.w	r3, r3, #1
 800c682:	81a3      	strh	r3, [r4, #12]
 800c684:	89a0      	ldrh	r0, [r4, #12]
 800c686:	4305      	orrs	r5, r0
 800c688:	81a5      	strh	r5, [r4, #12]
 800c68a:	e7cd      	b.n	800c628 <__smakebuf_r+0x18>
 800c68c:	0800bf21 	.word	0x0800bf21

0800c690 <_malloc_usable_size_r>:
 800c690:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c694:	1f18      	subs	r0, r3, #4
 800c696:	2b00      	cmp	r3, #0
 800c698:	bfbc      	itt	lt
 800c69a:	580b      	ldrlt	r3, [r1, r0]
 800c69c:	18c0      	addlt	r0, r0, r3
 800c69e:	4770      	bx	lr

0800c6a0 <_raise_r>:
 800c6a0:	291f      	cmp	r1, #31
 800c6a2:	b538      	push	{r3, r4, r5, lr}
 800c6a4:	4604      	mov	r4, r0
 800c6a6:	460d      	mov	r5, r1
 800c6a8:	d904      	bls.n	800c6b4 <_raise_r+0x14>
 800c6aa:	2316      	movs	r3, #22
 800c6ac:	6003      	str	r3, [r0, #0]
 800c6ae:	f04f 30ff 	mov.w	r0, #4294967295
 800c6b2:	bd38      	pop	{r3, r4, r5, pc}
 800c6b4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800c6b6:	b112      	cbz	r2, 800c6be <_raise_r+0x1e>
 800c6b8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800c6bc:	b94b      	cbnz	r3, 800c6d2 <_raise_r+0x32>
 800c6be:	4620      	mov	r0, r4
 800c6c0:	f000 f830 	bl	800c724 <_getpid_r>
 800c6c4:	462a      	mov	r2, r5
 800c6c6:	4601      	mov	r1, r0
 800c6c8:	4620      	mov	r0, r4
 800c6ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6ce:	f000 b817 	b.w	800c700 <_kill_r>
 800c6d2:	2b01      	cmp	r3, #1
 800c6d4:	d00a      	beq.n	800c6ec <_raise_r+0x4c>
 800c6d6:	1c59      	adds	r1, r3, #1
 800c6d8:	d103      	bne.n	800c6e2 <_raise_r+0x42>
 800c6da:	2316      	movs	r3, #22
 800c6dc:	6003      	str	r3, [r0, #0]
 800c6de:	2001      	movs	r0, #1
 800c6e0:	e7e7      	b.n	800c6b2 <_raise_r+0x12>
 800c6e2:	2400      	movs	r4, #0
 800c6e4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800c6e8:	4628      	mov	r0, r5
 800c6ea:	4798      	blx	r3
 800c6ec:	2000      	movs	r0, #0
 800c6ee:	e7e0      	b.n	800c6b2 <_raise_r+0x12>

0800c6f0 <raise>:
 800c6f0:	4b02      	ldr	r3, [pc, #8]	; (800c6fc <raise+0xc>)
 800c6f2:	4601      	mov	r1, r0
 800c6f4:	6818      	ldr	r0, [r3, #0]
 800c6f6:	f7ff bfd3 	b.w	800c6a0 <_raise_r>
 800c6fa:	bf00      	nop
 800c6fc:	20000134 	.word	0x20000134

0800c700 <_kill_r>:
 800c700:	b538      	push	{r3, r4, r5, lr}
 800c702:	4d07      	ldr	r5, [pc, #28]	; (800c720 <_kill_r+0x20>)
 800c704:	2300      	movs	r3, #0
 800c706:	4604      	mov	r4, r0
 800c708:	4608      	mov	r0, r1
 800c70a:	4611      	mov	r1, r2
 800c70c:	602b      	str	r3, [r5, #0]
 800c70e:	f7f5 ffe5 	bl	80026dc <_kill>
 800c712:	1c43      	adds	r3, r0, #1
 800c714:	d102      	bne.n	800c71c <_kill_r+0x1c>
 800c716:	682b      	ldr	r3, [r5, #0]
 800c718:	b103      	cbz	r3, 800c71c <_kill_r+0x1c>
 800c71a:	6023      	str	r3, [r4, #0]
 800c71c:	bd38      	pop	{r3, r4, r5, pc}
 800c71e:	bf00      	nop
 800c720:	20018784 	.word	0x20018784

0800c724 <_getpid_r>:
 800c724:	f7f5 bfd2 	b.w	80026cc <_getpid>

0800c728 <_fstat_r>:
 800c728:	b538      	push	{r3, r4, r5, lr}
 800c72a:	4d07      	ldr	r5, [pc, #28]	; (800c748 <_fstat_r+0x20>)
 800c72c:	2300      	movs	r3, #0
 800c72e:	4604      	mov	r4, r0
 800c730:	4608      	mov	r0, r1
 800c732:	4611      	mov	r1, r2
 800c734:	602b      	str	r3, [r5, #0]
 800c736:	f7f6 f830 	bl	800279a <_fstat>
 800c73a:	1c43      	adds	r3, r0, #1
 800c73c:	d102      	bne.n	800c744 <_fstat_r+0x1c>
 800c73e:	682b      	ldr	r3, [r5, #0]
 800c740:	b103      	cbz	r3, 800c744 <_fstat_r+0x1c>
 800c742:	6023      	str	r3, [r4, #0]
 800c744:	bd38      	pop	{r3, r4, r5, pc}
 800c746:	bf00      	nop
 800c748:	20018784 	.word	0x20018784

0800c74c <_isatty_r>:
 800c74c:	b538      	push	{r3, r4, r5, lr}
 800c74e:	4d06      	ldr	r5, [pc, #24]	; (800c768 <_isatty_r+0x1c>)
 800c750:	2300      	movs	r3, #0
 800c752:	4604      	mov	r4, r0
 800c754:	4608      	mov	r0, r1
 800c756:	602b      	str	r3, [r5, #0]
 800c758:	f7f6 f82f 	bl	80027ba <_isatty>
 800c75c:	1c43      	adds	r3, r0, #1
 800c75e:	d102      	bne.n	800c766 <_isatty_r+0x1a>
 800c760:	682b      	ldr	r3, [r5, #0]
 800c762:	b103      	cbz	r3, 800c766 <_isatty_r+0x1a>
 800c764:	6023      	str	r3, [r4, #0]
 800c766:	bd38      	pop	{r3, r4, r5, pc}
 800c768:	20018784 	.word	0x20018784

0800c76c <_init>:
 800c76c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c76e:	bf00      	nop
 800c770:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c772:	bc08      	pop	{r3}
 800c774:	469e      	mov	lr, r3
 800c776:	4770      	bx	lr

0800c778 <_fini>:
 800c778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c77a:	bf00      	nop
 800c77c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c77e:	bc08      	pop	{r3}
 800c780:	469e      	mov	lr, r3
 800c782:	4770      	bx	lr
