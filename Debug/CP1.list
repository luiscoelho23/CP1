
CP1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d89c  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000113c  0800daa0  0800daa0  0001daa0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ebdc  0800ebdc  000202e8  2**0
                  CONTENTS
  4 .ARM          00000008  0800ebdc  0800ebdc  0001ebdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800ebe4  0800ebe4  000202e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ebe4  0800ebe4  0001ebe4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800ebe8  0800ebe8  0001ebe8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002e8  20000000  0800ebec  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000184e4  200002e8  0800eed4  000202e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200187cc  0800eed4  000287cc  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000202e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001dfdb  00000000  00000000  00020316  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003742  00000000  00000000  0003e2f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012f8  00000000  00000000  00041a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000011c0  00000000  00000000  00042d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002b56d  00000000  00000000  00043ef0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00018be4  00000000  00000000  0006f45d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00104219  00000000  00000000  00088041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0018c25a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006490  00000000  00000000  0018c2b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	200002e8 	.word	0x200002e8
 800021c:	00000000 	.word	0x00000000
 8000220:	0800da84 	.word	0x0800da84

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	200002ec 	.word	0x200002ec
 800023c:	0800da84 	.word	0x0800da84

08000240 <strcmp>:
 8000240:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000244:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000248:	2a01      	cmp	r2, #1
 800024a:	bf28      	it	cs
 800024c:	429a      	cmpcs	r2, r3
 800024e:	d0f7      	beq.n	8000240 <strcmp>
 8000250:	1ad0      	subs	r0, r2, r3
 8000252:	4770      	bx	lr

08000254 <strlen>:
 8000254:	4603      	mov	r3, r0
 8000256:	f813 2b01 	ldrb.w	r2, [r3], #1
 800025a:	2a00      	cmp	r2, #0
 800025c:	d1fb      	bne.n	8000256 <strlen+0x2>
 800025e:	1a18      	subs	r0, r3, r0
 8000260:	3801      	subs	r0, #1
 8000262:	4770      	bx	lr
	...

08000270 <memchr>:
 8000270:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000274:	2a10      	cmp	r2, #16
 8000276:	db2b      	blt.n	80002d0 <memchr+0x60>
 8000278:	f010 0f07 	tst.w	r0, #7
 800027c:	d008      	beq.n	8000290 <memchr+0x20>
 800027e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000282:	3a01      	subs	r2, #1
 8000284:	428b      	cmp	r3, r1
 8000286:	d02d      	beq.n	80002e4 <memchr+0x74>
 8000288:	f010 0f07 	tst.w	r0, #7
 800028c:	b342      	cbz	r2, 80002e0 <memchr+0x70>
 800028e:	d1f6      	bne.n	800027e <memchr+0xe>
 8000290:	b4f0      	push	{r4, r5, r6, r7}
 8000292:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000296:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800029a:	f022 0407 	bic.w	r4, r2, #7
 800029e:	f07f 0700 	mvns.w	r7, #0
 80002a2:	2300      	movs	r3, #0
 80002a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002a8:	3c08      	subs	r4, #8
 80002aa:	ea85 0501 	eor.w	r5, r5, r1
 80002ae:	ea86 0601 	eor.w	r6, r6, r1
 80002b2:	fa85 f547 	uadd8	r5, r5, r7
 80002b6:	faa3 f587 	sel	r5, r3, r7
 80002ba:	fa86 f647 	uadd8	r6, r6, r7
 80002be:	faa5 f687 	sel	r6, r5, r7
 80002c2:	b98e      	cbnz	r6, 80002e8 <memchr+0x78>
 80002c4:	d1ee      	bne.n	80002a4 <memchr+0x34>
 80002c6:	bcf0      	pop	{r4, r5, r6, r7}
 80002c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002cc:	f002 0207 	and.w	r2, r2, #7
 80002d0:	b132      	cbz	r2, 80002e0 <memchr+0x70>
 80002d2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002d6:	3a01      	subs	r2, #1
 80002d8:	ea83 0301 	eor.w	r3, r3, r1
 80002dc:	b113      	cbz	r3, 80002e4 <memchr+0x74>
 80002de:	d1f8      	bne.n	80002d2 <memchr+0x62>
 80002e0:	2000      	movs	r0, #0
 80002e2:	4770      	bx	lr
 80002e4:	3801      	subs	r0, #1
 80002e6:	4770      	bx	lr
 80002e8:	2d00      	cmp	r5, #0
 80002ea:	bf06      	itte	eq
 80002ec:	4635      	moveq	r5, r6
 80002ee:	3803      	subeq	r0, #3
 80002f0:	3807      	subne	r0, #7
 80002f2:	f015 0f01 	tst.w	r5, #1
 80002f6:	d107      	bne.n	8000308 <memchr+0x98>
 80002f8:	3001      	adds	r0, #1
 80002fa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002fe:	bf02      	ittt	eq
 8000300:	3001      	addeq	r0, #1
 8000302:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000306:	3001      	addeq	r0, #1
 8000308:	bcf0      	pop	{r4, r5, r6, r7}
 800030a:	3801      	subs	r0, #1
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop

08000310 <__aeabi_drsub>:
 8000310:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000314:	e002      	b.n	800031c <__adddf3>
 8000316:	bf00      	nop

08000318 <__aeabi_dsub>:
 8000318:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800031c <__adddf3>:
 800031c:	b530      	push	{r4, r5, lr}
 800031e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000322:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000326:	ea94 0f05 	teq	r4, r5
 800032a:	bf08      	it	eq
 800032c:	ea90 0f02 	teqeq	r0, r2
 8000330:	bf1f      	itttt	ne
 8000332:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000336:	ea55 0c02 	orrsne.w	ip, r5, r2
 800033a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800033e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000342:	f000 80e2 	beq.w	800050a <__adddf3+0x1ee>
 8000346:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800034a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800034e:	bfb8      	it	lt
 8000350:	426d      	neglt	r5, r5
 8000352:	dd0c      	ble.n	800036e <__adddf3+0x52>
 8000354:	442c      	add	r4, r5
 8000356:	ea80 0202 	eor.w	r2, r0, r2
 800035a:	ea81 0303 	eor.w	r3, r1, r3
 800035e:	ea82 0000 	eor.w	r0, r2, r0
 8000362:	ea83 0101 	eor.w	r1, r3, r1
 8000366:	ea80 0202 	eor.w	r2, r0, r2
 800036a:	ea81 0303 	eor.w	r3, r1, r3
 800036e:	2d36      	cmp	r5, #54	; 0x36
 8000370:	bf88      	it	hi
 8000372:	bd30      	pophi	{r4, r5, pc}
 8000374:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000378:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800037c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000380:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000384:	d002      	beq.n	800038c <__adddf3+0x70>
 8000386:	4240      	negs	r0, r0
 8000388:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800038c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000390:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000394:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000398:	d002      	beq.n	80003a0 <__adddf3+0x84>
 800039a:	4252      	negs	r2, r2
 800039c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003a0:	ea94 0f05 	teq	r4, r5
 80003a4:	f000 80a7 	beq.w	80004f6 <__adddf3+0x1da>
 80003a8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ac:	f1d5 0e20 	rsbs	lr, r5, #32
 80003b0:	db0d      	blt.n	80003ce <__adddf3+0xb2>
 80003b2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003b6:	fa22 f205 	lsr.w	r2, r2, r5
 80003ba:	1880      	adds	r0, r0, r2
 80003bc:	f141 0100 	adc.w	r1, r1, #0
 80003c0:	fa03 f20e 	lsl.w	r2, r3, lr
 80003c4:	1880      	adds	r0, r0, r2
 80003c6:	fa43 f305 	asr.w	r3, r3, r5
 80003ca:	4159      	adcs	r1, r3
 80003cc:	e00e      	b.n	80003ec <__adddf3+0xd0>
 80003ce:	f1a5 0520 	sub.w	r5, r5, #32
 80003d2:	f10e 0e20 	add.w	lr, lr, #32
 80003d6:	2a01      	cmp	r2, #1
 80003d8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003dc:	bf28      	it	cs
 80003de:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003e2:	fa43 f305 	asr.w	r3, r3, r5
 80003e6:	18c0      	adds	r0, r0, r3
 80003e8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	d507      	bpl.n	8000402 <__adddf3+0xe6>
 80003f2:	f04f 0e00 	mov.w	lr, #0
 80003f6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003fa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003fe:	eb6e 0101 	sbc.w	r1, lr, r1
 8000402:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000406:	d31b      	bcc.n	8000440 <__adddf3+0x124>
 8000408:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800040c:	d30c      	bcc.n	8000428 <__adddf3+0x10c>
 800040e:	0849      	lsrs	r1, r1, #1
 8000410:	ea5f 0030 	movs.w	r0, r0, rrx
 8000414:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000418:	f104 0401 	add.w	r4, r4, #1
 800041c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000420:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000424:	f080 809a 	bcs.w	800055c <__adddf3+0x240>
 8000428:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800042c:	bf08      	it	eq
 800042e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000432:	f150 0000 	adcs.w	r0, r0, #0
 8000436:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800043a:	ea41 0105 	orr.w	r1, r1, r5
 800043e:	bd30      	pop	{r4, r5, pc}
 8000440:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000444:	4140      	adcs	r0, r0
 8000446:	eb41 0101 	adc.w	r1, r1, r1
 800044a:	3c01      	subs	r4, #1
 800044c:	bf28      	it	cs
 800044e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000452:	d2e9      	bcs.n	8000428 <__adddf3+0x10c>
 8000454:	f091 0f00 	teq	r1, #0
 8000458:	bf04      	itt	eq
 800045a:	4601      	moveq	r1, r0
 800045c:	2000      	moveq	r0, #0
 800045e:	fab1 f381 	clz	r3, r1
 8000462:	bf08      	it	eq
 8000464:	3320      	addeq	r3, #32
 8000466:	f1a3 030b 	sub.w	r3, r3, #11
 800046a:	f1b3 0220 	subs.w	r2, r3, #32
 800046e:	da0c      	bge.n	800048a <__adddf3+0x16e>
 8000470:	320c      	adds	r2, #12
 8000472:	dd08      	ble.n	8000486 <__adddf3+0x16a>
 8000474:	f102 0c14 	add.w	ip, r2, #20
 8000478:	f1c2 020c 	rsb	r2, r2, #12
 800047c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000480:	fa21 f102 	lsr.w	r1, r1, r2
 8000484:	e00c      	b.n	80004a0 <__adddf3+0x184>
 8000486:	f102 0214 	add.w	r2, r2, #20
 800048a:	bfd8      	it	le
 800048c:	f1c2 0c20 	rsble	ip, r2, #32
 8000490:	fa01 f102 	lsl.w	r1, r1, r2
 8000494:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000498:	bfdc      	itt	le
 800049a:	ea41 010c 	orrle.w	r1, r1, ip
 800049e:	4090      	lslle	r0, r2
 80004a0:	1ae4      	subs	r4, r4, r3
 80004a2:	bfa2      	ittt	ge
 80004a4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004a8:	4329      	orrge	r1, r5
 80004aa:	bd30      	popge	{r4, r5, pc}
 80004ac:	ea6f 0404 	mvn.w	r4, r4
 80004b0:	3c1f      	subs	r4, #31
 80004b2:	da1c      	bge.n	80004ee <__adddf3+0x1d2>
 80004b4:	340c      	adds	r4, #12
 80004b6:	dc0e      	bgt.n	80004d6 <__adddf3+0x1ba>
 80004b8:	f104 0414 	add.w	r4, r4, #20
 80004bc:	f1c4 0220 	rsb	r2, r4, #32
 80004c0:	fa20 f004 	lsr.w	r0, r0, r4
 80004c4:	fa01 f302 	lsl.w	r3, r1, r2
 80004c8:	ea40 0003 	orr.w	r0, r0, r3
 80004cc:	fa21 f304 	lsr.w	r3, r1, r4
 80004d0:	ea45 0103 	orr.w	r1, r5, r3
 80004d4:	bd30      	pop	{r4, r5, pc}
 80004d6:	f1c4 040c 	rsb	r4, r4, #12
 80004da:	f1c4 0220 	rsb	r2, r4, #32
 80004de:	fa20 f002 	lsr.w	r0, r0, r2
 80004e2:	fa01 f304 	lsl.w	r3, r1, r4
 80004e6:	ea40 0003 	orr.w	r0, r0, r3
 80004ea:	4629      	mov	r1, r5
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	fa21 f004 	lsr.w	r0, r1, r4
 80004f2:	4629      	mov	r1, r5
 80004f4:	bd30      	pop	{r4, r5, pc}
 80004f6:	f094 0f00 	teq	r4, #0
 80004fa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004fe:	bf06      	itte	eq
 8000500:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000504:	3401      	addeq	r4, #1
 8000506:	3d01      	subne	r5, #1
 8000508:	e74e      	b.n	80003a8 <__adddf3+0x8c>
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf18      	it	ne
 8000510:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000514:	d029      	beq.n	800056a <__adddf3+0x24e>
 8000516:	ea94 0f05 	teq	r4, r5
 800051a:	bf08      	it	eq
 800051c:	ea90 0f02 	teqeq	r0, r2
 8000520:	d005      	beq.n	800052e <__adddf3+0x212>
 8000522:	ea54 0c00 	orrs.w	ip, r4, r0
 8000526:	bf04      	itt	eq
 8000528:	4619      	moveq	r1, r3
 800052a:	4610      	moveq	r0, r2
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	ea91 0f03 	teq	r1, r3
 8000532:	bf1e      	ittt	ne
 8000534:	2100      	movne	r1, #0
 8000536:	2000      	movne	r0, #0
 8000538:	bd30      	popne	{r4, r5, pc}
 800053a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800053e:	d105      	bne.n	800054c <__adddf3+0x230>
 8000540:	0040      	lsls	r0, r0, #1
 8000542:	4149      	adcs	r1, r1
 8000544:	bf28      	it	cs
 8000546:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800054a:	bd30      	pop	{r4, r5, pc}
 800054c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000550:	bf3c      	itt	cc
 8000552:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000556:	bd30      	popcc	{r4, r5, pc}
 8000558:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800055c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000560:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000564:	f04f 0000 	mov.w	r0, #0
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800056e:	bf1a      	itte	ne
 8000570:	4619      	movne	r1, r3
 8000572:	4610      	movne	r0, r2
 8000574:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000578:	bf1c      	itt	ne
 800057a:	460b      	movne	r3, r1
 800057c:	4602      	movne	r2, r0
 800057e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000582:	bf06      	itte	eq
 8000584:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000588:	ea91 0f03 	teqeq	r1, r3
 800058c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000590:	bd30      	pop	{r4, r5, pc}
 8000592:	bf00      	nop

08000594 <__aeabi_ui2d>:
 8000594:	f090 0f00 	teq	r0, #0
 8000598:	bf04      	itt	eq
 800059a:	2100      	moveq	r1, #0
 800059c:	4770      	bxeq	lr
 800059e:	b530      	push	{r4, r5, lr}
 80005a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005a8:	f04f 0500 	mov.w	r5, #0
 80005ac:	f04f 0100 	mov.w	r1, #0
 80005b0:	e750      	b.n	8000454 <__adddf3+0x138>
 80005b2:	bf00      	nop

080005b4 <__aeabi_i2d>:
 80005b4:	f090 0f00 	teq	r0, #0
 80005b8:	bf04      	itt	eq
 80005ba:	2100      	moveq	r1, #0
 80005bc:	4770      	bxeq	lr
 80005be:	b530      	push	{r4, r5, lr}
 80005c0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005c8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80005cc:	bf48      	it	mi
 80005ce:	4240      	negmi	r0, r0
 80005d0:	f04f 0100 	mov.w	r1, #0
 80005d4:	e73e      	b.n	8000454 <__adddf3+0x138>
 80005d6:	bf00      	nop

080005d8 <__aeabi_f2d>:
 80005d8:	0042      	lsls	r2, r0, #1
 80005da:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005de:	ea4f 0131 	mov.w	r1, r1, rrx
 80005e2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005e6:	bf1f      	itttt	ne
 80005e8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005ec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005f0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005f4:	4770      	bxne	lr
 80005f6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005fa:	bf08      	it	eq
 80005fc:	4770      	bxeq	lr
 80005fe:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000602:	bf04      	itt	eq
 8000604:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000608:	4770      	bxeq	lr
 800060a:	b530      	push	{r4, r5, lr}
 800060c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000610:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000614:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000618:	e71c      	b.n	8000454 <__adddf3+0x138>
 800061a:	bf00      	nop

0800061c <__aeabi_ul2d>:
 800061c:	ea50 0201 	orrs.w	r2, r0, r1
 8000620:	bf08      	it	eq
 8000622:	4770      	bxeq	lr
 8000624:	b530      	push	{r4, r5, lr}
 8000626:	f04f 0500 	mov.w	r5, #0
 800062a:	e00a      	b.n	8000642 <__aeabi_l2d+0x16>

0800062c <__aeabi_l2d>:
 800062c:	ea50 0201 	orrs.w	r2, r0, r1
 8000630:	bf08      	it	eq
 8000632:	4770      	bxeq	lr
 8000634:	b530      	push	{r4, r5, lr}
 8000636:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800063a:	d502      	bpl.n	8000642 <__aeabi_l2d+0x16>
 800063c:	4240      	negs	r0, r0
 800063e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000642:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000646:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800064a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800064e:	f43f aed8 	beq.w	8000402 <__adddf3+0xe6>
 8000652:	f04f 0203 	mov.w	r2, #3
 8000656:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800065a:	bf18      	it	ne
 800065c:	3203      	addne	r2, #3
 800065e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000662:	bf18      	it	ne
 8000664:	3203      	addne	r2, #3
 8000666:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800066a:	f1c2 0320 	rsb	r3, r2, #32
 800066e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000672:	fa20 f002 	lsr.w	r0, r0, r2
 8000676:	fa01 fe03 	lsl.w	lr, r1, r3
 800067a:	ea40 000e 	orr.w	r0, r0, lr
 800067e:	fa21 f102 	lsr.w	r1, r1, r2
 8000682:	4414      	add	r4, r2
 8000684:	e6bd      	b.n	8000402 <__adddf3+0xe6>
 8000686:	bf00      	nop

08000688 <__aeabi_uldivmod>:
 8000688:	b953      	cbnz	r3, 80006a0 <__aeabi_uldivmod+0x18>
 800068a:	b94a      	cbnz	r2, 80006a0 <__aeabi_uldivmod+0x18>
 800068c:	2900      	cmp	r1, #0
 800068e:	bf08      	it	eq
 8000690:	2800      	cmpeq	r0, #0
 8000692:	bf1c      	itt	ne
 8000694:	f04f 31ff 	movne.w	r1, #4294967295
 8000698:	f04f 30ff 	movne.w	r0, #4294967295
 800069c:	f000 b9a6 	b.w	80009ec <__aeabi_idiv0>
 80006a0:	f1ad 0c08 	sub.w	ip, sp, #8
 80006a4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006a8:	f000 f83e 	bl	8000728 <__udivmoddi4>
 80006ac:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006b0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006b4:	b004      	add	sp, #16
 80006b6:	4770      	bx	lr

080006b8 <__aeabi_d2lz>:
 80006b8:	b508      	push	{r3, lr}
 80006ba:	4602      	mov	r2, r0
 80006bc:	460b      	mov	r3, r1
 80006be:	ec43 2b17 	vmov	d7, r2, r3
 80006c2:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80006c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80006ca:	d403      	bmi.n	80006d4 <__aeabi_d2lz+0x1c>
 80006cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80006d0:	f000 b80a 	b.w	80006e8 <__aeabi_d2ulz>
 80006d4:	eeb1 7b47 	vneg.f64	d7, d7
 80006d8:	ec51 0b17 	vmov	r0, r1, d7
 80006dc:	f000 f804 	bl	80006e8 <__aeabi_d2ulz>
 80006e0:	4240      	negs	r0, r0
 80006e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006e6:	bd08      	pop	{r3, pc}

080006e8 <__aeabi_d2ulz>:
 80006e8:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000718 <__aeabi_d2ulz+0x30>
 80006ec:	ec41 0b17 	vmov	d7, r0, r1
 80006f0:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 8000720 <__aeabi_d2ulz+0x38>
 80006f4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80006f8:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 80006fc:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 8000700:	eea4 7b45 	vfms.f64	d7, d4, d5
 8000704:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8000708:	ee16 1a10 	vmov	r1, s12
 800070c:	ee17 0a90 	vmov	r0, s15
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	f3af 8000 	nop.w
 8000718:	00000000 	.word	0x00000000
 800071c:	3df00000 	.word	0x3df00000
 8000720:	00000000 	.word	0x00000000
 8000724:	41f00000 	.word	0x41f00000

08000728 <__udivmoddi4>:
 8000728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800072c:	9d08      	ldr	r5, [sp, #32]
 800072e:	4604      	mov	r4, r0
 8000730:	468c      	mov	ip, r1
 8000732:	2b00      	cmp	r3, #0
 8000734:	f040 8083 	bne.w	800083e <__udivmoddi4+0x116>
 8000738:	428a      	cmp	r2, r1
 800073a:	4617      	mov	r7, r2
 800073c:	d947      	bls.n	80007ce <__udivmoddi4+0xa6>
 800073e:	fab2 f282 	clz	r2, r2
 8000742:	b142      	cbz	r2, 8000756 <__udivmoddi4+0x2e>
 8000744:	f1c2 0020 	rsb	r0, r2, #32
 8000748:	fa24 f000 	lsr.w	r0, r4, r0
 800074c:	4091      	lsls	r1, r2
 800074e:	4097      	lsls	r7, r2
 8000750:	ea40 0c01 	orr.w	ip, r0, r1
 8000754:	4094      	lsls	r4, r2
 8000756:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800075a:	0c23      	lsrs	r3, r4, #16
 800075c:	fbbc f6f8 	udiv	r6, ip, r8
 8000760:	fa1f fe87 	uxth.w	lr, r7
 8000764:	fb08 c116 	mls	r1, r8, r6, ip
 8000768:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800076c:	fb06 f10e 	mul.w	r1, r6, lr
 8000770:	4299      	cmp	r1, r3
 8000772:	d909      	bls.n	8000788 <__udivmoddi4+0x60>
 8000774:	18fb      	adds	r3, r7, r3
 8000776:	f106 30ff 	add.w	r0, r6, #4294967295
 800077a:	f080 8119 	bcs.w	80009b0 <__udivmoddi4+0x288>
 800077e:	4299      	cmp	r1, r3
 8000780:	f240 8116 	bls.w	80009b0 <__udivmoddi4+0x288>
 8000784:	3e02      	subs	r6, #2
 8000786:	443b      	add	r3, r7
 8000788:	1a5b      	subs	r3, r3, r1
 800078a:	b2a4      	uxth	r4, r4
 800078c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000790:	fb08 3310 	mls	r3, r8, r0, r3
 8000794:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000798:	fb00 fe0e 	mul.w	lr, r0, lr
 800079c:	45a6      	cmp	lr, r4
 800079e:	d909      	bls.n	80007b4 <__udivmoddi4+0x8c>
 80007a0:	193c      	adds	r4, r7, r4
 80007a2:	f100 33ff 	add.w	r3, r0, #4294967295
 80007a6:	f080 8105 	bcs.w	80009b4 <__udivmoddi4+0x28c>
 80007aa:	45a6      	cmp	lr, r4
 80007ac:	f240 8102 	bls.w	80009b4 <__udivmoddi4+0x28c>
 80007b0:	3802      	subs	r0, #2
 80007b2:	443c      	add	r4, r7
 80007b4:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80007b8:	eba4 040e 	sub.w	r4, r4, lr
 80007bc:	2600      	movs	r6, #0
 80007be:	b11d      	cbz	r5, 80007c8 <__udivmoddi4+0xa0>
 80007c0:	40d4      	lsrs	r4, r2
 80007c2:	2300      	movs	r3, #0
 80007c4:	e9c5 4300 	strd	r4, r3, [r5]
 80007c8:	4631      	mov	r1, r6
 80007ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007ce:	b902      	cbnz	r2, 80007d2 <__udivmoddi4+0xaa>
 80007d0:	deff      	udf	#255	; 0xff
 80007d2:	fab2 f282 	clz	r2, r2
 80007d6:	2a00      	cmp	r2, #0
 80007d8:	d150      	bne.n	800087c <__udivmoddi4+0x154>
 80007da:	1bcb      	subs	r3, r1, r7
 80007dc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80007e0:	fa1f f887 	uxth.w	r8, r7
 80007e4:	2601      	movs	r6, #1
 80007e6:	fbb3 fcfe 	udiv	ip, r3, lr
 80007ea:	0c21      	lsrs	r1, r4, #16
 80007ec:	fb0e 331c 	mls	r3, lr, ip, r3
 80007f0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80007f4:	fb08 f30c 	mul.w	r3, r8, ip
 80007f8:	428b      	cmp	r3, r1
 80007fa:	d907      	bls.n	800080c <__udivmoddi4+0xe4>
 80007fc:	1879      	adds	r1, r7, r1
 80007fe:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000802:	d202      	bcs.n	800080a <__udivmoddi4+0xe2>
 8000804:	428b      	cmp	r3, r1
 8000806:	f200 80e9 	bhi.w	80009dc <__udivmoddi4+0x2b4>
 800080a:	4684      	mov	ip, r0
 800080c:	1ac9      	subs	r1, r1, r3
 800080e:	b2a3      	uxth	r3, r4
 8000810:	fbb1 f0fe 	udiv	r0, r1, lr
 8000814:	fb0e 1110 	mls	r1, lr, r0, r1
 8000818:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 800081c:	fb08 f800 	mul.w	r8, r8, r0
 8000820:	45a0      	cmp	r8, r4
 8000822:	d907      	bls.n	8000834 <__udivmoddi4+0x10c>
 8000824:	193c      	adds	r4, r7, r4
 8000826:	f100 33ff 	add.w	r3, r0, #4294967295
 800082a:	d202      	bcs.n	8000832 <__udivmoddi4+0x10a>
 800082c:	45a0      	cmp	r8, r4
 800082e:	f200 80d9 	bhi.w	80009e4 <__udivmoddi4+0x2bc>
 8000832:	4618      	mov	r0, r3
 8000834:	eba4 0408 	sub.w	r4, r4, r8
 8000838:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800083c:	e7bf      	b.n	80007be <__udivmoddi4+0x96>
 800083e:	428b      	cmp	r3, r1
 8000840:	d909      	bls.n	8000856 <__udivmoddi4+0x12e>
 8000842:	2d00      	cmp	r5, #0
 8000844:	f000 80b1 	beq.w	80009aa <__udivmoddi4+0x282>
 8000848:	2600      	movs	r6, #0
 800084a:	e9c5 0100 	strd	r0, r1, [r5]
 800084e:	4630      	mov	r0, r6
 8000850:	4631      	mov	r1, r6
 8000852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000856:	fab3 f683 	clz	r6, r3
 800085a:	2e00      	cmp	r6, #0
 800085c:	d14a      	bne.n	80008f4 <__udivmoddi4+0x1cc>
 800085e:	428b      	cmp	r3, r1
 8000860:	d302      	bcc.n	8000868 <__udivmoddi4+0x140>
 8000862:	4282      	cmp	r2, r0
 8000864:	f200 80b8 	bhi.w	80009d8 <__udivmoddi4+0x2b0>
 8000868:	1a84      	subs	r4, r0, r2
 800086a:	eb61 0103 	sbc.w	r1, r1, r3
 800086e:	2001      	movs	r0, #1
 8000870:	468c      	mov	ip, r1
 8000872:	2d00      	cmp	r5, #0
 8000874:	d0a8      	beq.n	80007c8 <__udivmoddi4+0xa0>
 8000876:	e9c5 4c00 	strd	r4, ip, [r5]
 800087a:	e7a5      	b.n	80007c8 <__udivmoddi4+0xa0>
 800087c:	f1c2 0320 	rsb	r3, r2, #32
 8000880:	fa20 f603 	lsr.w	r6, r0, r3
 8000884:	4097      	lsls	r7, r2
 8000886:	fa01 f002 	lsl.w	r0, r1, r2
 800088a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800088e:	40d9      	lsrs	r1, r3
 8000890:	4330      	orrs	r0, r6
 8000892:	0c03      	lsrs	r3, r0, #16
 8000894:	fbb1 f6fe 	udiv	r6, r1, lr
 8000898:	fa1f f887 	uxth.w	r8, r7
 800089c:	fb0e 1116 	mls	r1, lr, r6, r1
 80008a0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80008a4:	fb06 f108 	mul.w	r1, r6, r8
 80008a8:	4299      	cmp	r1, r3
 80008aa:	fa04 f402 	lsl.w	r4, r4, r2
 80008ae:	d909      	bls.n	80008c4 <__udivmoddi4+0x19c>
 80008b0:	18fb      	adds	r3, r7, r3
 80008b2:	f106 3cff 	add.w	ip, r6, #4294967295
 80008b6:	f080 808d 	bcs.w	80009d4 <__udivmoddi4+0x2ac>
 80008ba:	4299      	cmp	r1, r3
 80008bc:	f240 808a 	bls.w	80009d4 <__udivmoddi4+0x2ac>
 80008c0:	3e02      	subs	r6, #2
 80008c2:	443b      	add	r3, r7
 80008c4:	1a5b      	subs	r3, r3, r1
 80008c6:	b281      	uxth	r1, r0
 80008c8:	fbb3 f0fe 	udiv	r0, r3, lr
 80008cc:	fb0e 3310 	mls	r3, lr, r0, r3
 80008d0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80008d4:	fb00 f308 	mul.w	r3, r0, r8
 80008d8:	428b      	cmp	r3, r1
 80008da:	d907      	bls.n	80008ec <__udivmoddi4+0x1c4>
 80008dc:	1879      	adds	r1, r7, r1
 80008de:	f100 3cff 	add.w	ip, r0, #4294967295
 80008e2:	d273      	bcs.n	80009cc <__udivmoddi4+0x2a4>
 80008e4:	428b      	cmp	r3, r1
 80008e6:	d971      	bls.n	80009cc <__udivmoddi4+0x2a4>
 80008e8:	3802      	subs	r0, #2
 80008ea:	4439      	add	r1, r7
 80008ec:	1acb      	subs	r3, r1, r3
 80008ee:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80008f2:	e778      	b.n	80007e6 <__udivmoddi4+0xbe>
 80008f4:	f1c6 0c20 	rsb	ip, r6, #32
 80008f8:	fa03 f406 	lsl.w	r4, r3, r6
 80008fc:	fa22 f30c 	lsr.w	r3, r2, ip
 8000900:	431c      	orrs	r4, r3
 8000902:	fa20 f70c 	lsr.w	r7, r0, ip
 8000906:	fa01 f306 	lsl.w	r3, r1, r6
 800090a:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 800090e:	fa21 f10c 	lsr.w	r1, r1, ip
 8000912:	431f      	orrs	r7, r3
 8000914:	0c3b      	lsrs	r3, r7, #16
 8000916:	fbb1 f9fe 	udiv	r9, r1, lr
 800091a:	fa1f f884 	uxth.w	r8, r4
 800091e:	fb0e 1119 	mls	r1, lr, r9, r1
 8000922:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000926:	fb09 fa08 	mul.w	sl, r9, r8
 800092a:	458a      	cmp	sl, r1
 800092c:	fa02 f206 	lsl.w	r2, r2, r6
 8000930:	fa00 f306 	lsl.w	r3, r0, r6
 8000934:	d908      	bls.n	8000948 <__udivmoddi4+0x220>
 8000936:	1861      	adds	r1, r4, r1
 8000938:	f109 30ff 	add.w	r0, r9, #4294967295
 800093c:	d248      	bcs.n	80009d0 <__udivmoddi4+0x2a8>
 800093e:	458a      	cmp	sl, r1
 8000940:	d946      	bls.n	80009d0 <__udivmoddi4+0x2a8>
 8000942:	f1a9 0902 	sub.w	r9, r9, #2
 8000946:	4421      	add	r1, r4
 8000948:	eba1 010a 	sub.w	r1, r1, sl
 800094c:	b2bf      	uxth	r7, r7
 800094e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000952:	fb0e 1110 	mls	r1, lr, r0, r1
 8000956:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800095a:	fb00 f808 	mul.w	r8, r0, r8
 800095e:	45b8      	cmp	r8, r7
 8000960:	d907      	bls.n	8000972 <__udivmoddi4+0x24a>
 8000962:	19e7      	adds	r7, r4, r7
 8000964:	f100 31ff 	add.w	r1, r0, #4294967295
 8000968:	d22e      	bcs.n	80009c8 <__udivmoddi4+0x2a0>
 800096a:	45b8      	cmp	r8, r7
 800096c:	d92c      	bls.n	80009c8 <__udivmoddi4+0x2a0>
 800096e:	3802      	subs	r0, #2
 8000970:	4427      	add	r7, r4
 8000972:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000976:	eba7 0708 	sub.w	r7, r7, r8
 800097a:	fba0 8902 	umull	r8, r9, r0, r2
 800097e:	454f      	cmp	r7, r9
 8000980:	46c6      	mov	lr, r8
 8000982:	4649      	mov	r1, r9
 8000984:	d31a      	bcc.n	80009bc <__udivmoddi4+0x294>
 8000986:	d017      	beq.n	80009b8 <__udivmoddi4+0x290>
 8000988:	b15d      	cbz	r5, 80009a2 <__udivmoddi4+0x27a>
 800098a:	ebb3 020e 	subs.w	r2, r3, lr
 800098e:	eb67 0701 	sbc.w	r7, r7, r1
 8000992:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000996:	40f2      	lsrs	r2, r6
 8000998:	ea4c 0202 	orr.w	r2, ip, r2
 800099c:	40f7      	lsrs	r7, r6
 800099e:	e9c5 2700 	strd	r2, r7, [r5]
 80009a2:	2600      	movs	r6, #0
 80009a4:	4631      	mov	r1, r6
 80009a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009aa:	462e      	mov	r6, r5
 80009ac:	4628      	mov	r0, r5
 80009ae:	e70b      	b.n	80007c8 <__udivmoddi4+0xa0>
 80009b0:	4606      	mov	r6, r0
 80009b2:	e6e9      	b.n	8000788 <__udivmoddi4+0x60>
 80009b4:	4618      	mov	r0, r3
 80009b6:	e6fd      	b.n	80007b4 <__udivmoddi4+0x8c>
 80009b8:	4543      	cmp	r3, r8
 80009ba:	d2e5      	bcs.n	8000988 <__udivmoddi4+0x260>
 80009bc:	ebb8 0e02 	subs.w	lr, r8, r2
 80009c0:	eb69 0104 	sbc.w	r1, r9, r4
 80009c4:	3801      	subs	r0, #1
 80009c6:	e7df      	b.n	8000988 <__udivmoddi4+0x260>
 80009c8:	4608      	mov	r0, r1
 80009ca:	e7d2      	b.n	8000972 <__udivmoddi4+0x24a>
 80009cc:	4660      	mov	r0, ip
 80009ce:	e78d      	b.n	80008ec <__udivmoddi4+0x1c4>
 80009d0:	4681      	mov	r9, r0
 80009d2:	e7b9      	b.n	8000948 <__udivmoddi4+0x220>
 80009d4:	4666      	mov	r6, ip
 80009d6:	e775      	b.n	80008c4 <__udivmoddi4+0x19c>
 80009d8:	4630      	mov	r0, r6
 80009da:	e74a      	b.n	8000872 <__udivmoddi4+0x14a>
 80009dc:	f1ac 0c02 	sub.w	ip, ip, #2
 80009e0:	4439      	add	r1, r7
 80009e2:	e713      	b.n	800080c <__udivmoddi4+0xe4>
 80009e4:	3802      	subs	r0, #2
 80009e6:	443c      	add	r4, r7
 80009e8:	e724      	b.n	8000834 <__udivmoddi4+0x10c>
 80009ea:	bf00      	nop

080009ec <__aeabi_idiv0>:
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop

080009f0 <MX_ADC3_Init1>:
bool Read;
uint32_t adc_value;
bool run = 0;

void MX_ADC3_Init1(bool software1)
{
 80009f0:	b580      	push	{r7, lr}
 80009f2:	b086      	sub	sp, #24
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	4603      	mov	r3, r0
 80009f8:	71fb      	strb	r3, [r7, #7]
  software = software1;
 80009fa:	4a2b      	ldr	r2, [pc, #172]	; (8000aa8 <MX_ADC3_Init1+0xb8>)
 80009fc:	79fb      	ldrb	r3, [r7, #7]
 80009fe:	7013      	strb	r3, [r2, #0]

  ADC_ChannelConfTypeDef sConfig = {0};
 8000a00:	f107 0308 	add.w	r3, r7, #8
 8000a04:	2200      	movs	r2, #0
 8000a06:	601a      	str	r2, [r3, #0]
 8000a08:	605a      	str	r2, [r3, #4]
 8000a0a:	609a      	str	r2, [r3, #8]
 8000a0c:	60da      	str	r2, [r3, #12]

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 8000a0e:	4b27      	ldr	r3, [pc, #156]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a10:	4a27      	ldr	r2, [pc, #156]	; (8000ab0 <MX_ADC3_Init1+0xc0>)
 8000a12:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000a14:	4b25      	ldr	r3, [pc, #148]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a16:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000a1a:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000a1c:	4b23      	ldr	r3, [pc, #140]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a1e:	2200      	movs	r2, #0
 8000a20:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000a22:	4b22      	ldr	r3, [pc, #136]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a24:	2200      	movs	r2, #0
 8000a26:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 8000a28:	4b20      	ldr	r3, [pc, #128]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8000a2e:	4b1f      	ldr	r3, [pc, #124]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a30:	2200      	movs	r2, #0
 8000a32:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000a36:	4b1d      	ldr	r3, [pc, #116]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000a3c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_TRGO;
 8000a3e:	4b1b      	ldr	r3, [pc, #108]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a40:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 8000a44:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000a46:	4b19      	ldr	r3, [pc, #100]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a48:	2200      	movs	r2, #0
 8000a4a:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8000a4c:	4b17      	ldr	r3, [pc, #92]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a4e:	2201      	movs	r2, #1
 8000a50:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8000a52:	4b16      	ldr	r3, [pc, #88]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a54:	2200      	movs	r2, #0
 8000a56:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a5a:	4b14      	ldr	r3, [pc, #80]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a5c:	2201      	movs	r2, #1
 8000a5e:	615a      	str	r2, [r3, #20]

  if(software)
 8000a60:	4b11      	ldr	r3, [pc, #68]	; (8000aa8 <MX_ADC3_Init1+0xb8>)
 8000a62:	781b      	ldrb	r3, [r3, #0]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d002      	beq.n	8000a6e <MX_ADC3_Init1+0x7e>
	  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a68:	4b10      	ldr	r3, [pc, #64]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a6a:	4a12      	ldr	r2, [pc, #72]	; (8000ab4 <MX_ADC3_Init1+0xc4>)
 8000a6c:	629a      	str	r2, [r3, #40]	; 0x28


  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000a6e:	480f      	ldr	r0, [pc, #60]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a70:	f002 feae 	bl	80037d0 <HAL_ADC_Init>
 8000a74:	4603      	mov	r3, r0
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	d001      	beq.n	8000a7e <MX_ADC3_Init1+0x8e>
  {
    Error_Handler();
 8000a7a:	f002 f917 	bl	8002cac <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	60bb      	str	r3, [r7, #8]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a82:	2301      	movs	r3, #1
 8000a84:	60fb      	str	r3, [r7, #12]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000a86:	2300      	movs	r3, #0
 8000a88:	613b      	str	r3, [r7, #16]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000a8a:	f107 0308 	add.w	r3, r7, #8
 8000a8e:	4619      	mov	r1, r3
 8000a90:	4806      	ldr	r0, [pc, #24]	; (8000aac <MX_ADC3_Init1+0xbc>)
 8000a92:	f003 f929 	bl	8003ce8 <HAL_ADC_ConfigChannel>
 8000a96:	4603      	mov	r3, r0
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d001      	beq.n	8000aa0 <MX_ADC3_Init1+0xb0>
  {
    Error_Handler();
 8000a9c:	f002 f906 	bl	8002cac <Error_Handler>
  }

}
 8000aa0:	bf00      	nop
 8000aa2:	3718      	adds	r7, #24
 8000aa4:	46bd      	mov	sp, r7
 8000aa6:	bd80      	pop	{r7, pc}
 8000aa8:	20000429 	.word	0x20000429
 8000aac:	20010430 	.word	0x20010430
 8000ab0:	40012200 	.word	0x40012200
 8000ab4:	0f000001 	.word	0x0f000001

08000ab8 <MX_ADC3_Init>:

ADC_HandleTypeDef hadc3;

/* ADC3 init function */
void MX_ADC3_Init(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b084      	sub	sp, #16
 8000abc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000abe:	463b      	mov	r3, r7
 8000ac0:	2200      	movs	r2, #0
 8000ac2:	601a      	str	r2, [r3, #0]
 8000ac4:	605a      	str	r2, [r3, #4]
 8000ac6:	609a      	str	r2, [r3, #8]
 8000ac8:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC3_Init 1 */

  /* USER CODE END ADC3_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 8000aca:	4b22      	ldr	r3, [pc, #136]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000acc:	4a22      	ldr	r2, [pc, #136]	; (8000b58 <MX_ADC3_Init+0xa0>)
 8000ace:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000ad0:	4b20      	ldr	r3, [pc, #128]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000ad6:	4b1f      	ldr	r3, [pc, #124]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ad8:	2200      	movs	r2, #0
 8000ada:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000adc:	4b1d      	ldr	r3, [pc, #116]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ade:	2200      	movs	r2, #0
 8000ae0:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 8000ae2:	4b1c      	ldr	r3, [pc, #112]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8000ae8:	4b1a      	ldr	r3, [pc, #104]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000aea:	2200      	movs	r2, #0
 8000aec:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000af0:	4b18      	ldr	r3, [pc, #96]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000af2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000af6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_TRGO;
 8000af8:	4b16      	ldr	r3, [pc, #88]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000afa:	f04f 6210 	mov.w	r2, #150994944	; 0x9000000
 8000afe:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000b00:	4b14      	ldr	r3, [pc, #80]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8000b06:	4b13      	ldr	r3, [pc, #76]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b08:	2201      	movs	r2, #1
 8000b0a:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8000b0c:	4b11      	ldr	r3, [pc, #68]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b0e:	2200      	movs	r2, #0
 8000b10:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000b14:	4b0f      	ldr	r3, [pc, #60]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b16:	2201      	movs	r2, #1
 8000b18:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b1c:	f002 fe58 	bl	80037d0 <HAL_ADC_Init>
 8000b20:	4603      	mov	r3, r0
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d001      	beq.n	8000b2a <MX_ADC3_Init+0x72>
  {
    Error_Handler();
 8000b26:	f002 f8c1 	bl	8002cac <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b2e:	2301      	movs	r3, #1
 8000b30:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000b32:	2300      	movs	r3, #0
 8000b34:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000b36:	463b      	mov	r3, r7
 8000b38:	4619      	mov	r1, r3
 8000b3a:	4806      	ldr	r0, [pc, #24]	; (8000b54 <MX_ADC3_Init+0x9c>)
 8000b3c:	f003 f8d4 	bl	8003ce8 <HAL_ADC_ConfigChannel>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <MX_ADC3_Init+0x92>
  {
    Error_Handler();
 8000b46:	f002 f8b1 	bl	8002cac <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8000b4a:	bf00      	nop
 8000b4c:	3710      	adds	r7, #16
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	20010430 	.word	0x20010430
 8000b58:	40012200 	.word	0x40012200

08000b5c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b08c      	sub	sp, #48	; 0x30
 8000b60:	af00      	add	r7, sp, #0
 8000b62:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b64:	f107 031c 	add.w	r3, r7, #28
 8000b68:	2200      	movs	r2, #0
 8000b6a:	601a      	str	r2, [r3, #0]
 8000b6c:	605a      	str	r2, [r3, #4]
 8000b6e:	609a      	str	r2, [r3, #8]
 8000b70:	60da      	str	r2, [r3, #12]
 8000b72:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC3)
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	4a31      	ldr	r2, [pc, #196]	; (8000c40 <HAL_ADC_MspInit+0xe4>)
 8000b7a:	4293      	cmp	r3, r2
 8000b7c:	d15c      	bne.n	8000c38 <HAL_ADC_MspInit+0xdc>
  {
  /* USER CODE BEGIN ADC3_MspInit 0 */

  /* USER CODE END ADC3_MspInit 0 */
    /* ADC3 clock enable */
    __HAL_RCC_ADC3_CLK_ENABLE();
 8000b7e:	4b31      	ldr	r3, [pc, #196]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b82:	4a30      	ldr	r2, [pc, #192]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b84:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000b88:	6453      	str	r3, [r2, #68]	; 0x44
 8000b8a:	4b2e      	ldr	r3, [pc, #184]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b8e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000b92:	61bb      	str	r3, [r7, #24]
 8000b94:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b96:	4b2b      	ldr	r3, [pc, #172]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b9a:	4a2a      	ldr	r2, [pc, #168]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000b9c:	f043 0320 	orr.w	r3, r3, #32
 8000ba0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ba2:	4b28      	ldr	r3, [pc, #160]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000ba4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ba6:	f003 0320 	and.w	r3, r3, #32
 8000baa:	617b      	str	r3, [r7, #20]
 8000bac:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bae:	4b25      	ldr	r3, [pc, #148]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bb2:	4a24      	ldr	r2, [pc, #144]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bb4:	f043 0304 	orr.w	r3, r3, #4
 8000bb8:	6313      	str	r3, [r2, #48]	; 0x30
 8000bba:	4b22      	ldr	r3, [pc, #136]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bbe:	f003 0304 	and.w	r3, r3, #4
 8000bc2:	613b      	str	r3, [r7, #16]
 8000bc4:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bca:	4a1e      	ldr	r2, [pc, #120]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bcc:	f043 0301 	orr.w	r3, r3, #1
 8000bd0:	6313      	str	r3, [r2, #48]	; 0x30
 8000bd2:	4b1c      	ldr	r3, [pc, #112]	; (8000c44 <HAL_ADC_MspInit+0xe8>)
 8000bd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bd6:	f003 0301 	and.w	r3, r3, #1
 8000bda:	60fb      	str	r3, [r7, #12]
 8000bdc:	68fb      	ldr	r3, [r7, #12]
    PA0/WKUP     ------> ADC3_IN0
    PA1     ------> ADC3_IN1
    PA2     ------> ADC3_IN2
    PA3     ------> ADC3_IN3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8000bde:	f44f 63ff 	mov.w	r3, #2040	; 0x7f8
 8000be2:	61fb      	str	r3, [r7, #28]
                          |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000be4:	2303      	movs	r3, #3
 8000be6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000be8:	2300      	movs	r3, #0
 8000bea:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000bec:	f107 031c 	add.w	r3, r7, #28
 8000bf0:	4619      	mov	r1, r3
 8000bf2:	4815      	ldr	r0, [pc, #84]	; (8000c48 <HAL_ADC_MspInit+0xec>)
 8000bf4:	f003 fd5e 	bl	80046b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000bf8:	230f      	movs	r3, #15
 8000bfa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000bfc:	2303      	movs	r3, #3
 8000bfe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c00:	2300      	movs	r3, #0
 8000c02:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c04:	f107 031c 	add.w	r3, r7, #28
 8000c08:	4619      	mov	r1, r3
 8000c0a:	4810      	ldr	r0, [pc, #64]	; (8000c4c <HAL_ADC_MspInit+0xf0>)
 8000c0c:	f003 fd52 	bl	80046b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000c10:	230f      	movs	r3, #15
 8000c12:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000c14:	2303      	movs	r3, #3
 8000c16:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c18:	2300      	movs	r3, #0
 8000c1a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c1c:	f107 031c 	add.w	r3, r7, #28
 8000c20:	4619      	mov	r1, r3
 8000c22:	480b      	ldr	r0, [pc, #44]	; (8000c50 <HAL_ADC_MspInit+0xf4>)
 8000c24:	f003 fd46 	bl	80046b4 <HAL_GPIO_Init>

    /* ADC3 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 8000c28:	2200      	movs	r2, #0
 8000c2a:	2100      	movs	r1, #0
 8000c2c:	2012      	movs	r0, #18
 8000c2e:	f003 fb90 	bl	8004352 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 8000c32:	2012      	movs	r0, #18
 8000c34:	f003 fba9 	bl	800438a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }
}
 8000c38:	bf00      	nop
 8000c3a:	3730      	adds	r7, #48	; 0x30
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	40012200 	.word	0x40012200
 8000c44:	40023800 	.word	0x40023800
 8000c48:	40021400 	.word	0x40021400
 8000c4c:	40020800 	.word	0x40020800
 8000c50:	40020000 	.word	0x40020000

08000c54 <config_ADC>:
}

/* USER CODE BEGIN 1 */

void config_ADC(unsigned int channel)
{
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b086      	sub	sp, #24
 8000c58:	af00      	add	r7, sp, #0
 8000c5a:	6078      	str	r0, [r7, #4]
	ADC_ChannelConfTypeDef sConfig = {0};
 8000c5c:	f107 0308 	add.w	r3, r7, #8
 8000c60:	2200      	movs	r2, #0
 8000c62:	601a      	str	r2, [r3, #0]
 8000c64:	605a      	str	r2, [r3, #4]
 8000c66:	609a      	str	r2, [r3, #8]
 8000c68:	60da      	str	r2, [r3, #12]

	sConfig.Channel = (uint32_t) channel;
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	60bb      	str	r3, [r7, #8]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000c6e:	2301      	movs	r3, #1
 8000c70:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000c72:	2300      	movs	r3, #0
 8000c74:	613b      	str	r3, [r7, #16]

	HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000c76:	f107 0308 	add.w	r3, r7, #8
 8000c7a:	4619      	mov	r1, r3
 8000c7c:	4803      	ldr	r0, [pc, #12]	; (8000c8c <config_ADC+0x38>)
 8000c7e:	f003 f833 	bl	8003ce8 <HAL_ADC_ConfigChannel>
}
 8000c82:	bf00      	nop
 8000c84:	3718      	adds	r7, #24
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
 8000c8a:	bf00      	nop
 8000c8c:	20010430 	.word	0x20010430

08000c90 <read_ADC>:

uint32_t read_ADC(void)
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	af00      	add	r7, sp, #0
	Read = false;
 8000c94:	4b0b      	ldr	r3, [pc, #44]	; (8000cc4 <read_ADC+0x34>)
 8000c96:	2200      	movs	r2, #0
 8000c98:	701a      	strb	r2, [r3, #0]
	if(HAL_ADC_Start_IT(&hadc3) == HAL_OK)
 8000c9a:	480b      	ldr	r0, [pc, #44]	; (8000cc8 <read_ADC+0x38>)
 8000c9c:	f002 fddc 	bl	8003858 <HAL_ADC_Start_IT>
 8000ca0:	4603      	mov	r3, r0
 8000ca2:	2b00      	cmp	r3, #0
 8000ca4:	d10a      	bne.n	8000cbc <read_ADC+0x2c>
	{
	  while(!Read);
 8000ca6:	bf00      	nop
 8000ca8:	4b06      	ldr	r3, [pc, #24]	; (8000cc4 <read_ADC+0x34>)
 8000caa:	781b      	ldrb	r3, [r3, #0]
 8000cac:	f083 0301 	eor.w	r3, r3, #1
 8000cb0:	b2db      	uxtb	r3, r3
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d1f8      	bne.n	8000ca8 <read_ADC+0x18>
	  HAL_ADC_Stop_IT(&hadc3);
 8000cb6:	4804      	ldr	r0, [pc, #16]	; (8000cc8 <read_ADC+0x38>)
 8000cb8:	f002 fea6 	bl	8003a08 <HAL_ADC_Stop_IT>
	}
	return adc_value;
 8000cbc:	4b03      	ldr	r3, [pc, #12]	; (8000ccc <read_ADC+0x3c>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
}
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	bd80      	pop	{r7, pc}
 8000cc4:	20000428 	.word	0x20000428
 8000cc8:	20010430 	.word	0x20010430
 8000ccc:	2001042c 	.word	0x2001042c

08000cd0 <reset_adc_buf>:

void reset_adc_buf(void)
{
 8000cd0:	b480      	push	{r7}
 8000cd2:	b083      	sub	sp, #12
 8000cd4:	af00      	add	r7, sp, #0
	for(int i = 0 ; i < ADC_BUF_SIZE - 1 ; i++)
 8000cd6:	2300      	movs	r3, #0
 8000cd8:	607b      	str	r3, [r7, #4]
 8000cda:	e007      	b.n	8000cec <reset_adc_buf+0x1c>
		adc_buf[i] = 0;
 8000cdc:	4a0a      	ldr	r2, [pc, #40]	; (8000d08 <reset_adc_buf+0x38>)
 8000cde:	687b      	ldr	r3, [r7, #4]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0 ; i < ADC_BUF_SIZE - 1 ; i++)
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	3301      	adds	r3, #1
 8000cea:	607b      	str	r3, [r7, #4]
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	f640 72fe 	movw	r2, #4094	; 0xffe
 8000cf2:	4293      	cmp	r3, r2
 8000cf4:	ddf2      	ble.n	8000cdc <reset_adc_buf+0xc>

	adc_buf_index = 0;
 8000cf6:	4b05      	ldr	r3, [pc, #20]	; (8000d0c <reset_adc_buf+0x3c>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	601a      	str	r2, [r3, #0]
}
 8000cfc:	bf00      	nop
 8000cfe:	370c      	adds	r7, #12
 8000d00:	46bd      	mov	sp, r7
 8000d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d06:	4770      	bx	lr
 8000d08:	20010580 	.word	0x20010580
 8000d0c:	20000304 	.word	0x20000304

08000d10 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b082      	sub	sp, #8
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	6078      	str	r0, [r7, #4]
	adc_it[software]();
 8000d18:	4b05      	ldr	r3, [pc, #20]	; (8000d30 <HAL_ADC_ConvCpltCallback+0x20>)
 8000d1a:	781b      	ldrb	r3, [r3, #0]
 8000d1c:	461a      	mov	r2, r3
 8000d1e:	4b05      	ldr	r3, [pc, #20]	; (8000d34 <HAL_ADC_ConvCpltCallback+0x24>)
 8000d20:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000d24:	4798      	blx	r3
}
 8000d26:	bf00      	nop
 8000d28:	3708      	adds	r7, #8
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}
 8000d2e:	bf00      	nop
 8000d30:	20000429 	.word	0x20000429
 8000d34:	20000000 	.word	0x20000000

08000d38 <software_adc_it>:
void (*adc_it[])() = {
	timer_adc_it,
	software_adc_it
};

void software_adc_it(){
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	af00      	add	r7, sp, #0

	adc_value = HAL_ADC_GetValue(&hadc3);
 8000d3c:	4805      	ldr	r0, [pc, #20]	; (8000d54 <software_adc_it+0x1c>)
 8000d3e:	f002 ffb1 	bl	8003ca4 <HAL_ADC_GetValue>
 8000d42:	4603      	mov	r3, r0
 8000d44:	4a04      	ldr	r2, [pc, #16]	; (8000d58 <software_adc_it+0x20>)
 8000d46:	6013      	str	r3, [r2, #0]
	Read = true;
 8000d48:	4b04      	ldr	r3, [pc, #16]	; (8000d5c <software_adc_it+0x24>)
 8000d4a:	2201      	movs	r2, #1
 8000d4c:	701a      	strb	r2, [r3, #0]
}
 8000d4e:	bf00      	nop
 8000d50:	bd80      	pop	{r7, pc}
 8000d52:	bf00      	nop
 8000d54:	20010430 	.word	0x20010430
 8000d58:	2001042c 	.word	0x2001042c
 8000d5c:	20000428 	.word	0x20000428

08000d60 <timer_adc_it>:

void timer_adc_it(){
 8000d60:	b598      	push	{r3, r4, r7, lr}
 8000d62:	af00      	add	r7, sp, #0
	adc_buf[adc_buf_index] = HAL_ADC_GetValue(&hadc3);
 8000d64:	4b0d      	ldr	r3, [pc, #52]	; (8000d9c <timer_adc_it+0x3c>)
 8000d66:	681c      	ldr	r4, [r3, #0]
 8000d68:	480d      	ldr	r0, [pc, #52]	; (8000da0 <timer_adc_it+0x40>)
 8000d6a:	f002 ff9b 	bl	8003ca4 <HAL_ADC_GetValue>
 8000d6e:	4603      	mov	r3, r0
 8000d70:	4a0c      	ldr	r2, [pc, #48]	; (8000da4 <timer_adc_it+0x44>)
 8000d72:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
	process_buf(adc_buf, adc_buf_index);
 8000d76:	4b09      	ldr	r3, [pc, #36]	; (8000d9c <timer_adc_it+0x3c>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	4809      	ldr	r0, [pc, #36]	; (8000da4 <timer_adc_it+0x44>)
 8000d7e:	f001 fd1b 	bl	80027b8 <process_buf>
	adc_buf_index++;
 8000d82:	4b06      	ldr	r3, [pc, #24]	; (8000d9c <timer_adc_it+0x3c>)
 8000d84:	681b      	ldr	r3, [r3, #0]
 8000d86:	3301      	adds	r3, #1
 8000d88:	4a04      	ldr	r2, [pc, #16]	; (8000d9c <timer_adc_it+0x3c>)
 8000d8a:	6013      	str	r3, [r2, #0]
	adc_buf_index &= ADC_BUF_SIZE - 1;
 8000d8c:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <timer_adc_it+0x3c>)
 8000d8e:	681b      	ldr	r3, [r3, #0]
 8000d90:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000d94:	4a01      	ldr	r2, [pc, #4]	; (8000d9c <timer_adc_it+0x3c>)
 8000d96:	6013      	str	r3, [r2, #0]
}
 8000d98:	bf00      	nop
 8000d9a:	bd98      	pop	{r3, r4, r7, pc}
 8000d9c:	20000304 	.word	0x20000304
 8000da0:	20010430 	.word	0x20010430
 8000da4:	20010580 	.word	0x20010580

08000da8 <check_command>:
bool mode_speed = false, enable = false, direction = false;
unsigned int duty_cycle = 0, speed = 0;


unsigned char check_command(char* message)
{
 8000da8:	b580      	push	{r7, lr}
 8000daa:	b084      	sub	sp, #16
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
    char cmd = INV;
 8000db0:	2300      	movs	r3, #0
 8000db2:	73fb      	strb	r3, [r7, #15]

    if((!strncmp((char*) message, "VER", 3)))
 8000db4:	2203      	movs	r2, #3
 8000db6:	49a0      	ldr	r1, [pc, #640]	; (8001038 <check_command+0x290>)
 8000db8:	6878      	ldr	r0, [r7, #4]
 8000dba:	f008 fd9e 	bl	80098fa <strncmp>
 8000dbe:	4603      	mov	r3, r0
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d102      	bne.n	8000dca <check_command+0x22>
        cmd = VER;
 8000dc4:	230b      	movs	r3, #11
 8000dc6:	73fb      	strb	r3, [r7, #15]
 8000dc8:	e130      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "FNF", 3)))
 8000dca:	2203      	movs	r2, #3
 8000dcc:	499b      	ldr	r1, [pc, #620]	; (800103c <check_command+0x294>)
 8000dce:	6878      	ldr	r0, [r7, #4]
 8000dd0:	f008 fd93 	bl	80098fa <strncmp>
 8000dd4:	4603      	mov	r3, r0
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	d102      	bne.n	8000de0 <check_command+0x38>
        cmd = FNF;
 8000dda:	2310      	movs	r3, #16
 8000ddc:	73fb      	strb	r3, [r7, #15]
 8000dde:	e125      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "FFF", 3)))
 8000de0:	2203      	movs	r2, #3
 8000de2:	4997      	ldr	r1, [pc, #604]	; (8001040 <check_command+0x298>)
 8000de4:	6878      	ldr	r0, [r7, #4]
 8000de6:	f008 fd88 	bl	80098fa <strncmp>
 8000dea:	4603      	mov	r3, r0
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	d102      	bne.n	8000df6 <check_command+0x4e>
        cmd = FFF;
 8000df0:	2311      	movs	r3, #17
 8000df2:	73fb      	strb	r3, [r7, #15]
 8000df4:	e11a      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "FNI", 3)))
 8000df6:	2203      	movs	r2, #3
 8000df8:	4992      	ldr	r1, [pc, #584]	; (8001044 <check_command+0x29c>)
 8000dfa:	6878      	ldr	r0, [r7, #4]
 8000dfc:	f008 fd7d 	bl	80098fa <strncmp>
 8000e00:	4603      	mov	r3, r0
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	d102      	bne.n	8000e0c <check_command+0x64>
        cmd = FNI;
 8000e06:	230e      	movs	r3, #14
 8000e08:	73fb      	strb	r3, [r7, #15]
 8000e0a:	e10f      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "FFI", 3)))
 8000e0c:	2203      	movs	r2, #3
 8000e0e:	498e      	ldr	r1, [pc, #568]	; (8001048 <check_command+0x2a0>)
 8000e10:	6878      	ldr	r0, [r7, #4]
 8000e12:	f008 fd72 	bl	80098fa <strncmp>
 8000e16:	4603      	mov	r3, r0
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	d102      	bne.n	8000e22 <check_command+0x7a>
        cmd = FFI;
 8000e1c:	230f      	movs	r3, #15
 8000e1e:	73fb      	strb	r3, [r7, #15]
 8000e20:	e104      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "ST", 2)))
 8000e22:	2202      	movs	r2, #2
 8000e24:	4989      	ldr	r1, [pc, #548]	; (800104c <check_command+0x2a4>)
 8000e26:	6878      	ldr	r0, [r7, #4]
 8000e28:	f008 fd67 	bl	80098fa <strncmp>
 8000e2c:	4603      	mov	r3, r0
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d102      	bne.n	8000e38 <check_command+0x90>
        cmd = ST;
 8000e32:	2313      	movs	r3, #19
 8000e34:	73fb      	strb	r3, [r7, #15]
 8000e36:	e0f9      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "MR", 2)))
 8000e38:	2202      	movs	r2, #2
 8000e3a:	4985      	ldr	r1, [pc, #532]	; (8001050 <check_command+0x2a8>)
 8000e3c:	6878      	ldr	r0, [r7, #4]
 8000e3e:	f008 fd5c 	bl	80098fa <strncmp>
 8000e42:	4603      	mov	r3, r0
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d102      	bne.n	8000e4e <check_command+0xa6>
        cmd = FFI;
 8000e48:	230f      	movs	r3, #15
 8000e4a:	73fb      	strb	r3, [r7, #15]
 8000e4c:	e0ee      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "MW", 2)))
 8000e4e:	2202      	movs	r2, #2
 8000e50:	4980      	ldr	r1, [pc, #512]	; (8001054 <check_command+0x2ac>)
 8000e52:	6878      	ldr	r0, [r7, #4]
 8000e54:	f008 fd51 	bl	80098fa <strncmp>
 8000e58:	4603      	mov	r3, r0
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d102      	bne.n	8000e64 <check_command+0xbc>
        cmd = MW;
 8000e5e:	2302      	movs	r3, #2
 8000e60:	73fb      	strb	r3, [r7, #15]
 8000e62:	e0e3      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "MI", 2)))
 8000e64:	2202      	movs	r2, #2
 8000e66:	497c      	ldr	r1, [pc, #496]	; (8001058 <check_command+0x2b0>)
 8000e68:	6878      	ldr	r0, [r7, #4]
 8000e6a:	f008 fd46 	bl	80098fa <strncmp>
 8000e6e:	4603      	mov	r3, r0
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d102      	bne.n	8000e7a <check_command+0xd2>
        cmd = MI;
 8000e74:	2303      	movs	r3, #3
 8000e76:	73fb      	strb	r3, [r7, #15]
 8000e78:	e0d8      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "MO", 2)))
 8000e7a:	2202      	movs	r2, #2
 8000e7c:	4977      	ldr	r1, [pc, #476]	; (800105c <check_command+0x2b4>)
 8000e7e:	6878      	ldr	r0, [r7, #4]
 8000e80:	f008 fd3b 	bl	80098fa <strncmp>
 8000e84:	4603      	mov	r3, r0
 8000e86:	2b00      	cmp	r3, #0
 8000e88:	d102      	bne.n	8000e90 <check_command+0xe8>
        cmd = MO;
 8000e8a:	2304      	movs	r3, #4
 8000e8c:	73fb      	strb	r3, [r7, #15]
 8000e8e:	e0cd      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "RD", 2)))
 8000e90:	2202      	movs	r2, #2
 8000e92:	4973      	ldr	r1, [pc, #460]	; (8001060 <check_command+0x2b8>)
 8000e94:	6878      	ldr	r0, [r7, #4]
 8000e96:	f008 fd30 	bl	80098fa <strncmp>
 8000e9a:	4603      	mov	r3, r0
 8000e9c:	2b00      	cmp	r3, #0
 8000e9e:	d102      	bne.n	8000ea6 <check_command+0xfe>
        cmd = RD;
 8000ea0:	2305      	movs	r3, #5
 8000ea2:	73fb      	strb	r3, [r7, #15]
 8000ea4:	e0c2      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "WD", 2)))
 8000ea6:	2202      	movs	r2, #2
 8000ea8:	496e      	ldr	r1, [pc, #440]	; (8001064 <check_command+0x2bc>)
 8000eaa:	6878      	ldr	r0, [r7, #4]
 8000eac:	f008 fd25 	bl	80098fa <strncmp>
 8000eb0:	4603      	mov	r3, r0
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	d102      	bne.n	8000ebc <check_command+0x114>
        cmd = WD;
 8000eb6:	2306      	movs	r3, #6
 8000eb8:	73fb      	strb	r3, [r7, #15]
 8000eba:	e0b7      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "RA", 2)))
 8000ebc:	2202      	movs	r2, #2
 8000ebe:	496a      	ldr	r1, [pc, #424]	; (8001068 <check_command+0x2c0>)
 8000ec0:	6878      	ldr	r0, [r7, #4]
 8000ec2:	f008 fd1a 	bl	80098fa <strncmp>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d102      	bne.n	8000ed2 <check_command+0x12a>
        cmd = RA;
 8000ecc:	2307      	movs	r3, #7
 8000ece:	73fb      	strb	r3, [r7, #15]
 8000ed0:	e0ac      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "WA", 2)))
 8000ed2:	2202      	movs	r2, #2
 8000ed4:	4965      	ldr	r1, [pc, #404]	; (800106c <check_command+0x2c4>)
 8000ed6:	6878      	ldr	r0, [r7, #4]
 8000ed8:	f008 fd0f 	bl	80098fa <strncmp>
 8000edc:	4603      	mov	r3, r0
 8000ede:	2b00      	cmp	r3, #0
 8000ee0:	d102      	bne.n	8000ee8 <check_command+0x140>
        cmd = WA;
 8000ee2:	2308      	movs	r3, #8
 8000ee4:	73fb      	strb	r3, [r7, #15]
 8000ee6:	e0a1      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "SP", 2)))
 8000ee8:	2202      	movs	r2, #2
 8000eea:	4961      	ldr	r1, [pc, #388]	; (8001070 <check_command+0x2c8>)
 8000eec:	6878      	ldr	r0, [r7, #4]
 8000eee:	f008 fd04 	bl	80098fa <strncmp>
 8000ef2:	4603      	mov	r3, r0
 8000ef4:	2b00      	cmp	r3, #0
 8000ef6:	d102      	bne.n	8000efe <check_command+0x156>
        cmd = SP;
 8000ef8:	230c      	movs	r3, #12
 8000efa:	73fb      	strb	r3, [r7, #15]
 8000efc:	e096      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "AC", 2)))
 8000efe:	2202      	movs	r2, #2
 8000f00:	495c      	ldr	r1, [pc, #368]	; (8001074 <check_command+0x2cc>)
 8000f02:	6878      	ldr	r0, [r7, #4]
 8000f04:	f008 fcf9 	bl	80098fa <strncmp>
 8000f08:	4603      	mov	r3, r0
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d102      	bne.n	8000f14 <check_command+0x16c>
        cmd = AC;
 8000f0e:	230d      	movs	r3, #13
 8000f10:	73fb      	strb	r3, [r7, #15]
 8000f12:	e08b      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "UN", 2)))
 8000f14:	2202      	movs	r2, #2
 8000f16:	4958      	ldr	r1, [pc, #352]	; (8001078 <check_command+0x2d0>)
 8000f18:	6878      	ldr	r0, [r7, #4]
 8000f1a:	f008 fcee 	bl	80098fa <strncmp>
 8000f1e:	4603      	mov	r3, r0
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	d102      	bne.n	8000f2a <check_command+0x182>
        cmd = UN;
 8000f24:	2316      	movs	r3, #22
 8000f26:	73fb      	strb	r3, [r7, #15]
 8000f28:	e080      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "EN", 2)))
 8000f2a:	2202      	movs	r2, #2
 8000f2c:	4953      	ldr	r1, [pc, #332]	; (800107c <check_command+0x2d4>)
 8000f2e:	6878      	ldr	r0, [r7, #4]
 8000f30:	f008 fce3 	bl	80098fa <strncmp>
 8000f34:	4603      	mov	r3, r0
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d102      	bne.n	8000f40 <check_command+0x198>
        cmd = EN;
 8000f3a:	2315      	movs	r3, #21
 8000f3c:	73fb      	strb	r3, [r7, #15]
 8000f3e:	e075      	b.n	800102c <check_command+0x284>
    else if( (!strncmp((char*) message, "CS", 2)))
 8000f40:	2202      	movs	r2, #2
 8000f42:	494f      	ldr	r1, [pc, #316]	; (8001080 <check_command+0x2d8>)
 8000f44:	6878      	ldr	r0, [r7, #4]
 8000f46:	f008 fcd8 	bl	80098fa <strncmp>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d102      	bne.n	8000f56 <check_command+0x1ae>
        cmd = CS;
 8000f50:	2314      	movs	r3, #20
 8000f52:	73fb      	strb	r3, [r7, #15]
 8000f54:	e06a      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "VR", 2)))
 8000f56:	2202      	movs	r2, #2
 8000f58:	494a      	ldr	r1, [pc, #296]	; (8001084 <check_command+0x2dc>)
 8000f5a:	6878      	ldr	r0, [r7, #4]
 8000f5c:	f008 fccd 	bl	80098fa <strncmp>
 8000f60:	4603      	mov	r3, r0
 8000f62:	2b00      	cmp	r3, #0
 8000f64:	d102      	bne.n	8000f6c <check_command+0x1c4>
        cmd = VR;
 8000f66:	2317      	movs	r3, #23
 8000f68:	73fb      	strb	r3, [r7, #15]
 8000f6a:	e05f      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "HW", 2)))
 8000f6c:	2202      	movs	r2, #2
 8000f6e:	4946      	ldr	r1, [pc, #280]	; (8001088 <check_command+0x2e0>)
 8000f70:	6878      	ldr	r0, [r7, #4]
 8000f72:	f008 fcc2 	bl	80098fa <strncmp>
 8000f76:	4603      	mov	r3, r0
 8000f78:	2b00      	cmp	r3, #0
 8000f7a:	d102      	bne.n	8000f82 <check_command+0x1da>
		cmd = HW;
 8000f7c:	231a      	movs	r3, #26
 8000f7e:	73fb      	strb	r3, [r7, #15]
 8000f80:	e054      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "FSW", 2)))
 8000f82:	2202      	movs	r2, #2
 8000f84:	4941      	ldr	r1, [pc, #260]	; (800108c <check_command+0x2e4>)
 8000f86:	6878      	ldr	r0, [r7, #4]
 8000f88:	f008 fcb7 	bl	80098fa <strncmp>
 8000f8c:	4603      	mov	r3, r0
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d102      	bne.n	8000f98 <check_command+0x1f0>
		cmd = FSW;
 8000f92:	231b      	movs	r3, #27
 8000f94:	73fb      	strb	r3, [r7, #15]
 8000f96:	e049      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "SW", 2)))
 8000f98:	2202      	movs	r2, #2
 8000f9a:	493d      	ldr	r1, [pc, #244]	; (8001090 <check_command+0x2e8>)
 8000f9c:	6878      	ldr	r0, [r7, #4]
 8000f9e:	f008 fcac 	bl	80098fa <strncmp>
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d102      	bne.n	8000fae <check_command+0x206>
		cmd = SW;
 8000fa8:	231c      	movs	r3, #28
 8000faa:	73fb      	strb	r3, [r7, #15]
 8000fac:	e03e      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "STW", 2)))
 8000fae:	2202      	movs	r2, #2
 8000fb0:	4938      	ldr	r1, [pc, #224]	; (8001094 <check_command+0x2ec>)
 8000fb2:	6878      	ldr	r0, [r7, #4]
 8000fb4:	f008 fca1 	bl	80098fa <strncmp>
 8000fb8:	4603      	mov	r3, r0
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	d102      	bne.n	8000fc4 <check_command+0x21c>
		cmd = STW;
 8000fbe:	231d      	movs	r3, #29
 8000fc0:	73fb      	strb	r3, [r7, #15]
 8000fc2:	e033      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "$", 1)))
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	781a      	ldrb	r2, [r3, #0]
 8000fc8:	4b33      	ldr	r3, [pc, #204]	; (8001098 <check_command+0x2f0>)
 8000fca:	781b      	ldrb	r3, [r3, #0]
 8000fcc:	1ad3      	subs	r3, r2, r3
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d102      	bne.n	8000fd8 <check_command+0x230>
        cmd = LAST;
 8000fd2:	2309      	movs	r3, #9
 8000fd4:	73fb      	strb	r3, [r7, #15]
 8000fd6:	e029      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "?", 1)))
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	781a      	ldrb	r2, [r3, #0]
 8000fdc:	4b2f      	ldr	r3, [pc, #188]	; (800109c <check_command+0x2f4>)
 8000fde:	781b      	ldrb	r3, [r3, #0]
 8000fe0:	1ad3      	subs	r3, r2, r3
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	d102      	bne.n	8000fec <check_command+0x244>
        cmd = HELP;
 8000fe6:	230a      	movs	r3, #10
 8000fe8:	73fb      	strb	r3, [r7, #15]
 8000fea:	e01f      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "S", 1)))
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	781a      	ldrb	r2, [r3, #0]
 8000ff0:	4b2b      	ldr	r3, [pc, #172]	; (80010a0 <check_command+0x2f8>)
 8000ff2:	781b      	ldrb	r3, [r3, #0]
 8000ff4:	1ad3      	subs	r3, r2, r3
 8000ff6:	2b00      	cmp	r3, #0
 8000ff8:	d102      	bne.n	8001000 <check_command+0x258>
        cmd = S;
 8000ffa:	2312      	movs	r3, #18
 8000ffc:	73fb      	strb	r3, [r7, #15]
 8000ffe:	e015      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "/", 1)))
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	781a      	ldrb	r2, [r3, #0]
 8001004:	4b27      	ldr	r3, [pc, #156]	; (80010a4 <check_command+0x2fc>)
 8001006:	781b      	ldrb	r3, [r3, #0]
 8001008:	1ad3      	subs	r3, r2, r3
 800100a:	2b00      	cmp	r3, #0
 800100c:	d102      	bne.n	8001014 <check_command+0x26c>
		cmd = INC;
 800100e:	2318      	movs	r3, #24
 8001010:	73fb      	strb	r3, [r7, #15]
 8001012:	e00b      	b.n	800102c <check_command+0x284>
    else if((!strncmp((char*) message, "\\", 1)))
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	781a      	ldrb	r2, [r3, #0]
 8001018:	4b23      	ldr	r3, [pc, #140]	; (80010a8 <check_command+0x300>)
 800101a:	781b      	ldrb	r3, [r3, #0]
 800101c:	1ad3      	subs	r3, r2, r3
 800101e:	2b00      	cmp	r3, #0
 8001020:	d102      	bne.n	8001028 <check_command+0x280>
		cmd = DEC;
 8001022:	2319      	movs	r3, #25
 8001024:	73fb      	strb	r3, [r7, #15]
 8001026:	e001      	b.n	800102c <check_command+0x284>
    else
    	cmd = INV;
 8001028:	2300      	movs	r3, #0
 800102a:	73fb      	strb	r3, [r7, #15]

    return cmd;
 800102c:	7bfb      	ldrb	r3, [r7, #15]
}
 800102e:	4618      	mov	r0, r3
 8001030:	3710      	adds	r7, #16
 8001032:	46bd      	mov	sp, r7
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	0800daa0 	.word	0x0800daa0
 800103c:	0800daa4 	.word	0x0800daa4
 8001040:	0800daa8 	.word	0x0800daa8
 8001044:	0800daac 	.word	0x0800daac
 8001048:	0800dab0 	.word	0x0800dab0
 800104c:	0800dab4 	.word	0x0800dab4
 8001050:	0800dab8 	.word	0x0800dab8
 8001054:	0800dabc 	.word	0x0800dabc
 8001058:	0800dac0 	.word	0x0800dac0
 800105c:	0800dac4 	.word	0x0800dac4
 8001060:	0800dac8 	.word	0x0800dac8
 8001064:	0800dacc 	.word	0x0800dacc
 8001068:	0800dad0 	.word	0x0800dad0
 800106c:	0800dad4 	.word	0x0800dad4
 8001070:	0800dad8 	.word	0x0800dad8
 8001074:	0800dadc 	.word	0x0800dadc
 8001078:	0800dae0 	.word	0x0800dae0
 800107c:	0800dae4 	.word	0x0800dae4
 8001080:	0800dae8 	.word	0x0800dae8
 8001084:	0800daec 	.word	0x0800daec
 8001088:	0800daf0 	.word	0x0800daf0
 800108c:	0800daf4 	.word	0x0800daf4
 8001090:	0800daf8 	.word	0x0800daf8
 8001094:	0800dafc 	.word	0x0800dafc
 8001098:	0800db00 	.word	0x0800db00
 800109c:	0800db04 	.word	0x0800db04
 80010a0:	0800db08 	.word	0x0800db08
 80010a4:	0800db0c 	.word	0x0800db0c
 80010a8:	0800db10 	.word	0x0800db10

080010ac <proc_inv_cmd>:

//------------------------------------------------------------------------------------------------------------------


void proc_inv_cmd(char* message)
{
 80010ac:	b580      	push	{r7, lr}
 80010ae:	b082      	sub	sp, #8
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	6078      	str	r0, [r7, #4]
	send_UART("Invalid instruction. Type '?' for Help.");
 80010b4:	4803      	ldr	r0, [pc, #12]	; (80010c4 <proc_inv_cmd+0x18>)
 80010b6:	f002 fa03 	bl	80034c0 <send_UART>
}
 80010ba:	bf00      	nop
 80010bc:	3708      	adds	r7, #8
 80010be:	46bd      	mov	sp, r7
 80010c0:	bd80      	pop	{r7, pc}
 80010c2:	bf00      	nop
 80010c4:	0800db14 	.word	0x0800db14

080010c8 <proc_mr_cmd>:


void proc_mr_cmd(char* message)
{
 80010c8:	b5b0      	push	{r4, r5, r7, lr}
 80010ca:	b088      	sub	sp, #32
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
	unsigned int addr, length;

	if(sscanf((char*)message, "MR %x %x", &addr, &length) == 2)
 80010d0:	f107 030c 	add.w	r3, r7, #12
 80010d4:	f107 0210 	add.w	r2, r7, #16
 80010d8:	4932      	ldr	r1, [pc, #200]	; (80011a4 <proc_mr_cmd+0xdc>)
 80010da:	6878      	ldr	r0, [r7, #4]
 80010dc:	f008 fb94 	bl	8009808 <siscanf>
 80010e0:	4603      	mov	r3, r0
 80010e2:	2b02      	cmp	r3, #2
 80010e4:	d157      	bne.n	8001196 <proc_mr_cmd+0xce>
	{
 80010e6:	466b      	mov	r3, sp
 80010e8:	461d      	mov	r5, r3
		char data[length];
 80010ea:	68fc      	ldr	r4, [r7, #12]
 80010ec:	4623      	mov	r3, r4
 80010ee:	3b01      	subs	r3, #1
 80010f0:	61bb      	str	r3, [r7, #24]
 80010f2:	4620      	mov	r0, r4
 80010f4:	f04f 0100 	mov.w	r1, #0
 80010f8:	f04f 0200 	mov.w	r2, #0
 80010fc:	f04f 0300 	mov.w	r3, #0
 8001100:	00cb      	lsls	r3, r1, #3
 8001102:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8001106:	00c2      	lsls	r2, r0, #3
 8001108:	4620      	mov	r0, r4
 800110a:	f04f 0100 	mov.w	r1, #0
 800110e:	f04f 0200 	mov.w	r2, #0
 8001112:	f04f 0300 	mov.w	r3, #0
 8001116:	00cb      	lsls	r3, r1, #3
 8001118:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 800111c:	00c2      	lsls	r2, r0, #3
 800111e:	1de3      	adds	r3, r4, #7
 8001120:	08db      	lsrs	r3, r3, #3
 8001122:	00db      	lsls	r3, r3, #3
 8001124:	ebad 0d03 	sub.w	sp, sp, r3
 8001128:	466b      	mov	r3, sp
 800112a:	3300      	adds	r3, #0
 800112c:	617b      	str	r3, [r7, #20]

		if(memory_read(addr, length, data))
 800112e:	693b      	ldr	r3, [r7, #16]
 8001130:	68f9      	ldr	r1, [r7, #12]
 8001132:	697a      	ldr	r2, [r7, #20]
 8001134:	4618      	mov	r0, r3
 8001136:	f001 f81b 	bl	8002170 <memory_read>
 800113a:	4603      	mov	r3, r0
 800113c:	2b00      	cmp	r3, #0
 800113e:	d025      	beq.n	800118c <proc_mr_cmd+0xc4>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001140:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001144:	6879      	ldr	r1, [r7, #4]
 8001146:	4818      	ldr	r0, [pc, #96]	; (80011a8 <proc_mr_cmd+0xe0>)
 8001148:	f008 fbe9 	bl	800991e <strncpy>

			sprintf((char*) message, "Memory read: ");
 800114c:	4917      	ldr	r1, [pc, #92]	; (80011ac <proc_mr_cmd+0xe4>)
 800114e:	6878      	ldr	r0, [r7, #4]
 8001150:	f008 fb3a 	bl	80097c8 <siprintf>

			for(int i = 0; i < length; i++)
 8001154:	2300      	movs	r3, #0
 8001156:	61fb      	str	r3, [r7, #28]
 8001158:	e010      	b.n	800117c <proc_mr_cmd+0xb4>
			{
				sprintf((char*) message + strlen((char*) message), "%02X ", data[i]);
 800115a:	6878      	ldr	r0, [r7, #4]
 800115c:	f7ff f87a 	bl	8000254 <strlen>
 8001160:	4602      	mov	r2, r0
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	1898      	adds	r0, r3, r2
 8001166:	697a      	ldr	r2, [r7, #20]
 8001168:	69fb      	ldr	r3, [r7, #28]
 800116a:	4413      	add	r3, r2
 800116c:	781b      	ldrb	r3, [r3, #0]
 800116e:	461a      	mov	r2, r3
 8001170:	490f      	ldr	r1, [pc, #60]	; (80011b0 <proc_mr_cmd+0xe8>)
 8001172:	f008 fb29 	bl	80097c8 <siprintf>
			for(int i = 0; i < length; i++)
 8001176:	69fb      	ldr	r3, [r7, #28]
 8001178:	3301      	adds	r3, #1
 800117a:	61fb      	str	r3, [r7, #28]
 800117c:	69fa      	ldr	r2, [r7, #28]
 800117e:	68fb      	ldr	r3, [r7, #12]
 8001180:	429a      	cmp	r2, r3
 8001182:	d3ea      	bcc.n	800115a <proc_mr_cmd+0x92>
			}
			send_UART((char*) message);
 8001184:	6878      	ldr	r0, [r7, #4]
 8001186:	f002 f99b 	bl	80034c0 <send_UART>
 800118a:	e002      	b.n	8001192 <proc_mr_cmd+0xca>
		}
		else
			send_UART("Invalid Memory Read instruction argument values.\r");
 800118c:	4809      	ldr	r0, [pc, #36]	; (80011b4 <proc_mr_cmd+0xec>)
 800118e:	f002 f997 	bl	80034c0 <send_UART>
 8001192:	46ad      	mov	sp, r5
	}
	else
		send_UART("Invalid Memory Read instruction syntax.");
}
 8001194:	e002      	b.n	800119c <proc_mr_cmd+0xd4>
		send_UART("Invalid Memory Read instruction syntax.");
 8001196:	4808      	ldr	r0, [pc, #32]	; (80011b8 <proc_mr_cmd+0xf0>)
 8001198:	f002 f992 	bl	80034c0 <send_UART>
}
 800119c:	bf00      	nop
 800119e:	3720      	adds	r7, #32
 80011a0:	46bd      	mov	sp, r7
 80011a2:	bdb0      	pop	{r4, r5, r7, pc}
 80011a4:	0800db3c 	.word	0x0800db3c
 80011a8:	20014580 	.word	0x20014580
 80011ac:	0800db48 	.word	0x0800db48
 80011b0:	0800db58 	.word	0x0800db58
 80011b4:	0800db60 	.word	0x0800db60
 80011b8:	0800db94 	.word	0x0800db94

080011bc <proc_mw_cmd>:


void proc_mw_cmd(char* message)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	b088      	sub	sp, #32
 80011c0:	af02      	add	r7, sp, #8
 80011c2:	6078      	str	r0, [r7, #4]
	unsigned int addr, length, data;

	if(sscanf((char*) message, "MW %x %x %x", &addr, &length, &data) == 3)
 80011c4:	f107 0110 	add.w	r1, r7, #16
 80011c8:	f107 0214 	add.w	r2, r7, #20
 80011cc:	f107 030c 	add.w	r3, r7, #12
 80011d0:	9300      	str	r3, [sp, #0]
 80011d2:	460b      	mov	r3, r1
 80011d4:	4912      	ldr	r1, [pc, #72]	; (8001220 <proc_mw_cmd+0x64>)
 80011d6:	6878      	ldr	r0, [r7, #4]
 80011d8:	f008 fb16 	bl	8009808 <siscanf>
 80011dc:	4603      	mov	r3, r0
 80011de:	2b03      	cmp	r3, #3
 80011e0:	d116      	bne.n	8001210 <proc_mw_cmd+0x54>
	{
		if(memory_write(addr, length, data))
 80011e2:	697b      	ldr	r3, [r7, #20]
 80011e4:	6939      	ldr	r1, [r7, #16]
 80011e6:	68fa      	ldr	r2, [r7, #12]
 80011e8:	4618      	mov	r0, r3
 80011ea:	f000 fff5 	bl	80021d8 <memory_write>
 80011ee:	4603      	mov	r3, r0
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d009      	beq.n	8001208 <proc_mw_cmd+0x4c>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80011f4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80011f8:	6879      	ldr	r1, [r7, #4]
 80011fa:	480a      	ldr	r0, [pc, #40]	; (8001224 <proc_mw_cmd+0x68>)
 80011fc:	f008 fb8f 	bl	800991e <strncpy>
			send_UART("Memory written with success.");
 8001200:	4809      	ldr	r0, [pc, #36]	; (8001228 <proc_mw_cmd+0x6c>)
 8001202:	f002 f95d 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Memory Write instruction argument values.");
	}
	else
		send_UART("Invalid Memory Write instruction syntax.");
}
 8001206:	e006      	b.n	8001216 <proc_mw_cmd+0x5a>
			send_UART("Invalid Memory Write instruction argument values.");
 8001208:	4808      	ldr	r0, [pc, #32]	; (800122c <proc_mw_cmd+0x70>)
 800120a:	f002 f959 	bl	80034c0 <send_UART>
}
 800120e:	e002      	b.n	8001216 <proc_mw_cmd+0x5a>
		send_UART("Invalid Memory Write instruction syntax.");
 8001210:	4807      	ldr	r0, [pc, #28]	; (8001230 <proc_mw_cmd+0x74>)
 8001212:	f002 f955 	bl	80034c0 <send_UART>
}
 8001216:	bf00      	nop
 8001218:	3718      	adds	r7, #24
 800121a:	46bd      	mov	sp, r7
 800121c:	bd80      	pop	{r7, pc}
 800121e:	bf00      	nop
 8001220:	0800dbbc 	.word	0x0800dbbc
 8001224:	20014580 	.word	0x20014580
 8001228:	0800dbc8 	.word	0x0800dbc8
 800122c:	0800dbe8 	.word	0x0800dbe8
 8001230:	0800dc1c 	.word	0x0800dc1c

08001234 <proc_mi_cmd>:


void proc_mi_cmd(char* message)
{
 8001234:	b580      	push	{r7, lr}
 8001236:	b084      	sub	sp, #16
 8001238:	af00      	add	r7, sp, #0
 800123a:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "MI %x %x", &port_addr, &pin_setting) == 2)
 800123c:	f107 0308 	add.w	r3, r7, #8
 8001240:	f107 020c 	add.w	r2, r7, #12
 8001244:	4918      	ldr	r1, [pc, #96]	; (80012a8 <proc_mi_cmd+0x74>)
 8001246:	6878      	ldr	r0, [r7, #4]
 8001248:	f008 fade 	bl	8009808 <siscanf>
 800124c:	4603      	mov	r3, r0
 800124e:	2b02      	cmp	r3, #2
 8001250:	d123      	bne.n	800129a <proc_mi_cmd+0x66>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 8001252:	68fb      	ldr	r3, [r7, #12]
 8001254:	68ba      	ldr	r2, [r7, #8]
 8001256:	4611      	mov	r1, r2
 8001258:	4618      	mov	r0, r3
 800125a:	f001 fc1d 	bl	8002a98 <is_GPIO_pin_free>
 800125e:	4603      	mov	r3, r0
 8001260:	2b00      	cmp	r3, #0
 8001262:	d016      	beq.n	8001292 <proc_mi_cmd+0x5e>
		{
			if(make_pin_input(port_addr, pin_setting))
 8001264:	68fb      	ldr	r3, [r7, #12]
 8001266:	68ba      	ldr	r2, [r7, #8]
 8001268:	4611      	mov	r1, r2
 800126a:	4618      	mov	r0, r3
 800126c:	f000 ffec 	bl	8002248 <make_pin_input>
 8001270:	4603      	mov	r3, r0
 8001272:	2b00      	cmp	r3, #0
 8001274:	d009      	beq.n	800128a <proc_mi_cmd+0x56>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001276:	f44f 7280 	mov.w	r2, #256	; 0x100
 800127a:	6879      	ldr	r1, [r7, #4]
 800127c:	480b      	ldr	r0, [pc, #44]	; (80012ac <proc_mi_cmd+0x78>)
 800127e:	f008 fb4e 	bl	800991e <strncpy>
				send_UART("Pin(s) set as input with success.");
 8001282:	480b      	ldr	r0, [pc, #44]	; (80012b0 <proc_mi_cmd+0x7c>)
 8001284:	f002 f91c 	bl	80034c0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
	  send_UART("Invalid Make Pin Input instruction syntax.");
}
 8001288:	e00a      	b.n	80012a0 <proc_mi_cmd+0x6c>
				send_UART("Invalid Make Pin Input instruction argument values.");
 800128a:	480a      	ldr	r0, [pc, #40]	; (80012b4 <proc_mi_cmd+0x80>)
 800128c:	f002 f918 	bl	80034c0 <send_UART>
}
 8001290:	e006      	b.n	80012a0 <proc_mi_cmd+0x6c>
			send_UART("At least one inputted pin is reserved to peripherals.");
 8001292:	4809      	ldr	r0, [pc, #36]	; (80012b8 <proc_mi_cmd+0x84>)
 8001294:	f002 f914 	bl	80034c0 <send_UART>
}
 8001298:	e002      	b.n	80012a0 <proc_mi_cmd+0x6c>
	  send_UART("Invalid Make Pin Input instruction syntax.");
 800129a:	4808      	ldr	r0, [pc, #32]	; (80012bc <proc_mi_cmd+0x88>)
 800129c:	f002 f910 	bl	80034c0 <send_UART>
}
 80012a0:	bf00      	nop
 80012a2:	3710      	adds	r7, #16
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}
 80012a8:	0800dc48 	.word	0x0800dc48
 80012ac:	20014580 	.word	0x20014580
 80012b0:	0800dc54 	.word	0x0800dc54
 80012b4:	0800dc78 	.word	0x0800dc78
 80012b8:	0800dcac 	.word	0x0800dcac
 80012bc:	0800dce4 	.word	0x0800dce4

080012c0 <proc_mo_cmd>:


void proc_mo_cmd(char* message)
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b084      	sub	sp, #16
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "MO %x %x", &port_addr, &pin_setting) == 2)
 80012c8:	f107 0308 	add.w	r3, r7, #8
 80012cc:	f107 020c 	add.w	r2, r7, #12
 80012d0:	4918      	ldr	r1, [pc, #96]	; (8001334 <proc_mo_cmd+0x74>)
 80012d2:	6878      	ldr	r0, [r7, #4]
 80012d4:	f008 fa98 	bl	8009808 <siscanf>
 80012d8:	4603      	mov	r3, r0
 80012da:	2b02      	cmp	r3, #2
 80012dc:	d123      	bne.n	8001326 <proc_mo_cmd+0x66>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 80012de:	68fb      	ldr	r3, [r7, #12]
 80012e0:	68ba      	ldr	r2, [r7, #8]
 80012e2:	4611      	mov	r1, r2
 80012e4:	4618      	mov	r0, r3
 80012e6:	f001 fbd7 	bl	8002a98 <is_GPIO_pin_free>
 80012ea:	4603      	mov	r3, r0
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d016      	beq.n	800131e <proc_mo_cmd+0x5e>
		{
			if(make_pin_output(port_addr, pin_setting))
 80012f0:	68fb      	ldr	r3, [r7, #12]
 80012f2:	68ba      	ldr	r2, [r7, #8]
 80012f4:	4611      	mov	r1, r2
 80012f6:	4618      	mov	r0, r3
 80012f8:	f001 f842 	bl	8002380 <make_pin_output>
 80012fc:	4603      	mov	r3, r0
 80012fe:	2b00      	cmp	r3, #0
 8001300:	d009      	beq.n	8001316 <proc_mo_cmd+0x56>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001302:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001306:	6879      	ldr	r1, [r7, #4]
 8001308:	480b      	ldr	r0, [pc, #44]	; (8001338 <proc_mo_cmd+0x78>)
 800130a:	f008 fb08 	bl	800991e <strncpy>
				send_UART("Pin(s) set as output with success.");
 800130e:	480b      	ldr	r0, [pc, #44]	; (800133c <proc_mo_cmd+0x7c>)
 8001310:	f002 f8d6 	bl	80034c0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
		send_UART("Invalid Make Pin Output instruction syntax.");
}
 8001314:	e00a      	b.n	800132c <proc_mo_cmd+0x6c>
				send_UART("Invalid Make Pin Output instruction argument values.");
 8001316:	480a      	ldr	r0, [pc, #40]	; (8001340 <proc_mo_cmd+0x80>)
 8001318:	f002 f8d2 	bl	80034c0 <send_UART>
}
 800131c:	e006      	b.n	800132c <proc_mo_cmd+0x6c>
			send_UART("At least one inputted pin is reserved to peripherals.");
 800131e:	4809      	ldr	r0, [pc, #36]	; (8001344 <proc_mo_cmd+0x84>)
 8001320:	f002 f8ce 	bl	80034c0 <send_UART>
}
 8001324:	e002      	b.n	800132c <proc_mo_cmd+0x6c>
		send_UART("Invalid Make Pin Output instruction syntax.");
 8001326:	4808      	ldr	r0, [pc, #32]	; (8001348 <proc_mo_cmd+0x88>)
 8001328:	f002 f8ca 	bl	80034c0 <send_UART>
}
 800132c:	bf00      	nop
 800132e:	3710      	adds	r7, #16
 8001330:	46bd      	mov	sp, r7
 8001332:	bd80      	pop	{r7, pc}
 8001334:	0800dd10 	.word	0x0800dd10
 8001338:	20014580 	.word	0x20014580
 800133c:	0800dd1c 	.word	0x0800dd1c
 8001340:	0800dd40 	.word	0x0800dd40
 8001344:	0800dcac 	.word	0x0800dcac
 8001348:	0800dd78 	.word	0x0800dd78

0800134c <proc_rd_cmd>:


void proc_rd_cmd(char* message)
{
 800134c:	b580      	push	{r7, lr}
 800134e:	b08a      	sub	sp, #40	; 0x28
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting;

	if(sscanf((char*) message, "RD %x %x", &port_addr, &pin_setting) == 2)
 8001354:	f107 031c 	add.w	r3, r7, #28
 8001358:	f107 0220 	add.w	r2, r7, #32
 800135c:	492a      	ldr	r1, [pc, #168]	; (8001408 <proc_rd_cmd+0xbc>)
 800135e:	6878      	ldr	r0, [r7, #4]
 8001360:	f008 fa52 	bl	8009808 <siscanf>
 8001364:	4603      	mov	r3, r0
 8001366:	2b02      	cmp	r3, #2
 8001368:	d147      	bne.n	80013fa <proc_rd_cmd+0xae>
	{
		GPIO_PinState pin_values[16];

		if(read_dig_input(port_addr, pin_setting, pin_values))
 800136a:	6a3b      	ldr	r3, [r7, #32]
 800136c:	69f9      	ldr	r1, [r7, #28]
 800136e:	f107 020c 	add.w	r2, r7, #12
 8001372:	4618      	mov	r0, r3
 8001374:	f001 f8a2 	bl	80024bc <read_dig_input>
 8001378:	4603      	mov	r3, r0
 800137a:	2b00      	cmp	r3, #0
 800137c:	d039      	beq.n	80013f2 <proc_rd_cmd+0xa6>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800137e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001382:	6879      	ldr	r1, [r7, #4]
 8001384:	4821      	ldr	r0, [pc, #132]	; (800140c <proc_rd_cmd+0xc0>)
 8001386:	f008 faca 	bl	800991e <strncpy>

			sprintf((char*) message, "Digital input read: ");
 800138a:	4921      	ldr	r1, [pc, #132]	; (8001410 <proc_rd_cmd+0xc4>)
 800138c:	6878      	ldr	r0, [r7, #4]
 800138e:	f008 fa1b 	bl	80097c8 <siprintf>

			for(int i = 15; i >= 0; i--)
 8001392:	230f      	movs	r3, #15
 8001394:	627b      	str	r3, [r7, #36]	; 0x24
 8001396:	e025      	b.n	80013e4 <proc_rd_cmd+0x98>
			{
				sprintf((char*) message + strlen((char*) message), "%d", pin_values[i]);
 8001398:	6878      	ldr	r0, [r7, #4]
 800139a:	f7fe ff5b 	bl	8000254 <strlen>
 800139e:	4602      	mov	r2, r0
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	1898      	adds	r0, r3, r2
 80013a4:	f107 020c 	add.w	r2, r7, #12
 80013a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013aa:	4413      	add	r3, r2
 80013ac:	781b      	ldrb	r3, [r3, #0]
 80013ae:	461a      	mov	r2, r3
 80013b0:	4918      	ldr	r1, [pc, #96]	; (8001414 <proc_rd_cmd+0xc8>)
 80013b2:	f008 fa09 	bl	80097c8 <siprintf>

				if(!(i % 4) && i)
 80013b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013b8:	f003 0303 	and.w	r3, r3, #3
 80013bc:	2b00      	cmp	r3, #0
 80013be:	d10e      	bne.n	80013de <proc_rd_cmd+0x92>
 80013c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d00b      	beq.n	80013de <proc_rd_cmd+0x92>
					strcat((char*) message, " ");
 80013c6:	6878      	ldr	r0, [r7, #4]
 80013c8:	f7fe ff44 	bl	8000254 <strlen>
 80013cc:	4603      	mov	r3, r0
 80013ce:	461a      	mov	r2, r3
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	4413      	add	r3, r2
 80013d4:	4910      	ldr	r1, [pc, #64]	; (8001418 <proc_rd_cmd+0xcc>)
 80013d6:	461a      	mov	r2, r3
 80013d8:	460b      	mov	r3, r1
 80013da:	881b      	ldrh	r3, [r3, #0]
 80013dc:	8013      	strh	r3, [r2, #0]
			for(int i = 15; i >= 0; i--)
 80013de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013e0:	3b01      	subs	r3, #1
 80013e2:	627b      	str	r3, [r7, #36]	; 0x24
 80013e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013e6:	2b00      	cmp	r3, #0
 80013e8:	dad6      	bge.n	8001398 <proc_rd_cmd+0x4c>
			}
			send_UART((char*) message);
 80013ea:	6878      	ldr	r0, [r7, #4]
 80013ec:	f002 f868 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Read Digital Input instruction argument values.");
	}
	else
		send_UART("Invalid Read Digital Input instruction syntax.");
}
 80013f0:	e006      	b.n	8001400 <proc_rd_cmd+0xb4>
			send_UART("Invalid Read Digital Input instruction argument values.");
 80013f2:	480a      	ldr	r0, [pc, #40]	; (800141c <proc_rd_cmd+0xd0>)
 80013f4:	f002 f864 	bl	80034c0 <send_UART>
}
 80013f8:	e002      	b.n	8001400 <proc_rd_cmd+0xb4>
		send_UART("Invalid Read Digital Input instruction syntax.");
 80013fa:	4809      	ldr	r0, [pc, #36]	; (8001420 <proc_rd_cmd+0xd4>)
 80013fc:	f002 f860 	bl	80034c0 <send_UART>
}
 8001400:	bf00      	nop
 8001402:	3728      	adds	r7, #40	; 0x28
 8001404:	46bd      	mov	sp, r7
 8001406:	bd80      	pop	{r7, pc}
 8001408:	0800dda4 	.word	0x0800dda4
 800140c:	20014580 	.word	0x20014580
 8001410:	0800ddb0 	.word	0x0800ddb0
 8001414:	0800ddc8 	.word	0x0800ddc8
 8001418:	0800ddcc 	.word	0x0800ddcc
 800141c:	0800ddd0 	.word	0x0800ddd0
 8001420:	0800de08 	.word	0x0800de08

08001424 <proc_wd_cmd>:


void proc_wd_cmd(char* message)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	b088      	sub	sp, #32
 8001428:	af02      	add	r7, sp, #8
 800142a:	6078      	str	r0, [r7, #4]
	unsigned int port_addr, pin_setting, pin_values;

	if(sscanf((char*) message, "WD %x %x %x", &port_addr, &pin_setting, &pin_values) == 3)
 800142c:	f107 0110 	add.w	r1, r7, #16
 8001430:	f107 0214 	add.w	r2, r7, #20
 8001434:	f107 030c 	add.w	r3, r7, #12
 8001438:	9300      	str	r3, [sp, #0]
 800143a:	460b      	mov	r3, r1
 800143c:	4918      	ldr	r1, [pc, #96]	; (80014a0 <proc_wd_cmd+0x7c>)
 800143e:	6878      	ldr	r0, [r7, #4]
 8001440:	f008 f9e2 	bl	8009808 <siscanf>
 8001444:	4603      	mov	r3, r0
 8001446:	2b03      	cmp	r3, #3
 8001448:	d123      	bne.n	8001492 <proc_wd_cmd+0x6e>
	{
		if(is_GPIO_pin_free(port_addr, pin_setting))
 800144a:	697b      	ldr	r3, [r7, #20]
 800144c:	693a      	ldr	r2, [r7, #16]
 800144e:	4611      	mov	r1, r2
 8001450:	4618      	mov	r0, r3
 8001452:	f001 fb21 	bl	8002a98 <is_GPIO_pin_free>
 8001456:	4603      	mov	r3, r0
 8001458:	2b00      	cmp	r3, #0
 800145a:	d016      	beq.n	800148a <proc_wd_cmd+0x66>
		{
			if(write_dig_output(port_addr, pin_setting, pin_values))
 800145c:	697b      	ldr	r3, [r7, #20]
 800145e:	6939      	ldr	r1, [r7, #16]
 8001460:	68fa      	ldr	r2, [r7, #12]
 8001462:	4618      	mov	r0, r3
 8001464:	f001 f874 	bl	8002550 <write_dig_output>
 8001468:	4603      	mov	r3, r0
 800146a:	2b00      	cmp	r3, #0
 800146c:	d009      	beq.n	8001482 <proc_wd_cmd+0x5e>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800146e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001472:	6879      	ldr	r1, [r7, #4]
 8001474:	480b      	ldr	r0, [pc, #44]	; (80014a4 <proc_wd_cmd+0x80>)
 8001476:	f008 fa52 	bl	800991e <strncpy>
				send_UART("Digital output value wrote with success.");
 800147a:	480b      	ldr	r0, [pc, #44]	; (80014a8 <proc_wd_cmd+0x84>)
 800147c:	f002 f820 	bl	80034c0 <send_UART>
		else
			send_UART("At least one inputted pin is reserved to peripherals.");
	}
	else
		send_UART("Invalid Write Digital Output instruction syntax.");
}
 8001480:	e00a      	b.n	8001498 <proc_wd_cmd+0x74>
				send_UART("Invalid Write Digital Output instruction argument values.");
 8001482:	480a      	ldr	r0, [pc, #40]	; (80014ac <proc_wd_cmd+0x88>)
 8001484:	f002 f81c 	bl	80034c0 <send_UART>
}
 8001488:	e006      	b.n	8001498 <proc_wd_cmd+0x74>
			send_UART("At least one inputted pin is reserved to peripherals.");
 800148a:	4809      	ldr	r0, [pc, #36]	; (80014b0 <proc_wd_cmd+0x8c>)
 800148c:	f002 f818 	bl	80034c0 <send_UART>
}
 8001490:	e002      	b.n	8001498 <proc_wd_cmd+0x74>
		send_UART("Invalid Write Digital Output instruction syntax.");
 8001492:	4808      	ldr	r0, [pc, #32]	; (80014b4 <proc_wd_cmd+0x90>)
 8001494:	f002 f814 	bl	80034c0 <send_UART>
}
 8001498:	bf00      	nop
 800149a:	3718      	adds	r7, #24
 800149c:	46bd      	mov	sp, r7
 800149e:	bd80      	pop	{r7, pc}
 80014a0:	0800de38 	.word	0x0800de38
 80014a4:	20014580 	.word	0x20014580
 80014a8:	0800de44 	.word	0x0800de44
 80014ac:	0800de70 	.word	0x0800de70
 80014b0:	0800dcac 	.word	0x0800dcac
 80014b4:	0800deac 	.word	0x0800deac

080014b8 <proc_ra_cmd>:


void proc_ra_cmd(char* message)
{
 80014b8:	b580      	push	{r7, lr}
 80014ba:	b088      	sub	sp, #32
 80014bc:	af02      	add	r7, sp, #8
 80014be:	6078      	str	r0, [r7, #4]
	unsigned int addr3, value;

	if(sscanf((char*) message, "RA %x", &addr3) == 1)
 80014c0:	f107 0310 	add.w	r3, r7, #16
 80014c4:	461a      	mov	r2, r3
 80014c6:	492c      	ldr	r1, [pc, #176]	; (8001578 <proc_ra_cmd+0xc0>)
 80014c8:	6878      	ldr	r0, [r7, #4]
 80014ca:	f008 f99d 	bl	8009808 <siscanf>
 80014ce:	4603      	mov	r3, r0
 80014d0:	2b01      	cmp	r3, #1
 80014d2:	d13f      	bne.n	8001554 <proc_ra_cmd+0x9c>
	{
		if(analog_read(addr3, &value))
 80014d4:	693b      	ldr	r3, [r7, #16]
 80014d6:	f107 020c 	add.w	r2, r7, #12
 80014da:	4611      	mov	r1, r2
 80014dc:	4618      	mov	r0, r3
 80014de:	f001 f881 	bl	80025e4 <analog_read>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d031      	beq.n	800154c <proc_ra_cmd+0x94>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80014e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80014ec:	6879      	ldr	r1, [r7, #4]
 80014ee:	4823      	ldr	r0, [pc, #140]	; (800157c <proc_ra_cmd+0xc4>)
 80014f0:	f008 fa15 	bl	800991e <strncpy>

			float volts = (float) value * 3.3 / 4095;
 80014f4:	68fb      	ldr	r3, [r7, #12]
 80014f6:	ee07 3a90 	vmov	s15, r3
 80014fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80014fe:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8001502:	ed9f 6b19 	vldr	d6, [pc, #100]	; 8001568 <proc_ra_cmd+0xb0>
 8001506:	ee27 6b06 	vmul.f64	d6, d7, d6
 800150a:	ed9f 5b19 	vldr	d5, [pc, #100]	; 8001570 <proc_ra_cmd+0xb8>
 800150e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001512:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8001516:	edc7 7a05 	vstr	s15, [r7, #20]

			sprintf((char*) message, "Analog read digital value: ");
 800151a:	4919      	ldr	r1, [pc, #100]	; (8001580 <proc_ra_cmd+0xc8>)
 800151c:	6878      	ldr	r0, [r7, #4]
 800151e:	f008 f953 	bl	80097c8 <siprintf>
			sprintf((char*) message + strlen((char*) message), "%d // %.2fV", value, volts);
 8001522:	6878      	ldr	r0, [r7, #4]
 8001524:	f7fe fe96 	bl	8000254 <strlen>
 8001528:	4602      	mov	r2, r0
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	4413      	add	r3, r2
 800152e:	68fa      	ldr	r2, [r7, #12]
 8001530:	edd7 7a05 	vldr	s15, [r7, #20]
 8001534:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8001538:	ed8d 7b00 	vstr	d7, [sp]
 800153c:	4911      	ldr	r1, [pc, #68]	; (8001584 <proc_ra_cmd+0xcc>)
 800153e:	4618      	mov	r0, r3
 8001540:	f008 f942 	bl	80097c8 <siprintf>

			send_UART((char*) message);
 8001544:	6878      	ldr	r0, [r7, #4]
 8001546:	f001 ffbb 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Analog Read instruction argument values.");
	}
	else
		send_UART("Invalid Analog Read instruction syntax.");
}
 800154a:	e006      	b.n	800155a <proc_ra_cmd+0xa2>
			send_UART("Invalid Analog Read instruction argument values.");
 800154c:	480e      	ldr	r0, [pc, #56]	; (8001588 <proc_ra_cmd+0xd0>)
 800154e:	f001 ffb7 	bl	80034c0 <send_UART>
}
 8001552:	e002      	b.n	800155a <proc_ra_cmd+0xa2>
		send_UART("Invalid Analog Read instruction syntax.");
 8001554:	480d      	ldr	r0, [pc, #52]	; (800158c <proc_ra_cmd+0xd4>)
 8001556:	f001 ffb3 	bl	80034c0 <send_UART>
}
 800155a:	bf00      	nop
 800155c:	3718      	adds	r7, #24
 800155e:	46bd      	mov	sp, r7
 8001560:	bd80      	pop	{r7, pc}
 8001562:	bf00      	nop
 8001564:	f3af 8000 	nop.w
 8001568:	66666666 	.word	0x66666666
 800156c:	400a6666 	.word	0x400a6666
 8001570:	00000000 	.word	0x00000000
 8001574:	40affe00 	.word	0x40affe00
 8001578:	0800dee0 	.word	0x0800dee0
 800157c:	20014580 	.word	0x20014580
 8001580:	0800dee8 	.word	0x0800dee8
 8001584:	0800df04 	.word	0x0800df04
 8001588:	0800df10 	.word	0x0800df10
 800158c:	0800df44 	.word	0x0800df44

08001590 <proc_wa_cmd>:

void proc_wa_cmd(char* message)
{
 8001590:	b580      	push	{r7, lr}
 8001592:	b086      	sub	sp, #24
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
    unsigned int addr3, volts;

    if(sscanf((char*) message, "WA %x %d", &addr3, &volts) == 2)
 8001598:	f107 030c 	add.w	r3, r7, #12
 800159c:	f107 0210 	add.w	r2, r7, #16
 80015a0:	491f      	ldr	r1, [pc, #124]	; (8001620 <proc_wa_cmd+0x90>)
 80015a2:	6878      	ldr	r0, [r7, #4]
 80015a4:	f008 f930 	bl	8009808 <siscanf>
 80015a8:	4603      	mov	r3, r0
 80015aa:	2b02      	cmp	r3, #2
 80015ac:	d12d      	bne.n	800160a <proc_wa_cmd+0x7a>
    {
    	float value = (float) volts * 4095 / 3.3;
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	ee07 3a90 	vmov	s15, r3
 80015b4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80015b8:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001624 <proc_wa_cmd+0x94>
 80015bc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80015c0:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80015c4:	ed9f 5b14 	vldr	d5, [pc, #80]	; 8001618 <proc_wa_cmd+0x88>
 80015c8:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80015cc:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80015d0:	edc7 7a05 	vstr	s15, [r7, #20]

        if(analog_write(addr3, value))
 80015d4:	693b      	ldr	r3, [r7, #16]
 80015d6:	edd7 7a05 	vldr	s15, [r7, #20]
 80015da:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80015de:	ee17 1a90 	vmov	r1, s15
 80015e2:	4618      	mov	r0, r3
 80015e4:	f001 f818 	bl	8002618 <analog_write>
 80015e8:	4603      	mov	r3, r0
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d009      	beq.n	8001602 <proc_wa_cmd+0x72>
        {
            strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80015ee:	f44f 7280 	mov.w	r2, #256	; 0x100
 80015f2:	6879      	ldr	r1, [r7, #4]
 80015f4:	480c      	ldr	r0, [pc, #48]	; (8001628 <proc_wa_cmd+0x98>)
 80015f6:	f008 f992 	bl	800991e <strncpy>
            send_UART("Analog value wrote with success.");
 80015fa:	480c      	ldr	r0, [pc, #48]	; (800162c <proc_wa_cmd+0x9c>)
 80015fc:	f001 ff60 	bl	80034c0 <send_UART>
        else
            send_UART("Invalid Analog Write instruction argument values.");
    }
    else
        send_UART("Invalid Analog Write instruction syntax.");
}
 8001600:	e006      	b.n	8001610 <proc_wa_cmd+0x80>
            send_UART("Invalid Analog Write instruction argument values.");
 8001602:	480b      	ldr	r0, [pc, #44]	; (8001630 <proc_wa_cmd+0xa0>)
 8001604:	f001 ff5c 	bl	80034c0 <send_UART>
}
 8001608:	e002      	b.n	8001610 <proc_wa_cmd+0x80>
        send_UART("Invalid Analog Write instruction syntax.");
 800160a:	480a      	ldr	r0, [pc, #40]	; (8001634 <proc_wa_cmd+0xa4>)
 800160c:	f001 ff58 	bl	80034c0 <send_UART>
}
 8001610:	bf00      	nop
 8001612:	3718      	adds	r7, #24
 8001614:	46bd      	mov	sp, r7
 8001616:	bd80      	pop	{r7, pc}
 8001618:	66666666 	.word	0x66666666
 800161c:	400a6666 	.word	0x400a6666
 8001620:	0800df6c 	.word	0x0800df6c
 8001624:	457ff000 	.word	0x457ff000
 8001628:	20014580 	.word	0x20014580
 800162c:	0800df78 	.word	0x0800df78
 8001630:	0800df9c 	.word	0x0800df9c
 8001634:	0800dfd0 	.word	0x0800dfd0

08001638 <proc_last_cmd>:


void proc_last_cmd(char* message)
{
 8001638:	b580      	push	{r7, lr}
 800163a:	b0c4      	sub	sp, #272	; 0x110
 800163c:	af00      	add	r7, sp, #0
 800163e:	1d3b      	adds	r3, r7, #4
 8001640:	6018      	str	r0, [r3, #0]
	if(message[1] == '\r')
 8001642:	1d3b      	adds	r3, r7, #4
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	3301      	adds	r3, #1
 8001648:	781b      	ldrb	r3, [r3, #0]
 800164a:	2b0d      	cmp	r3, #13
 800164c:	d12a      	bne.n	80016a4 <proc_last_cmd+0x6c>
	{
		char temp[BUFFER_SIZE];

		for(int i = 0; i < BUFFER_SIZE; i++)
 800164e:	2300      	movs	r3, #0
 8001650:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001654:	e010      	b.n	8001678 <proc_last_cmd+0x40>
			temp[i] = last_message[i];
 8001656:	4a17      	ldr	r2, [pc, #92]	; (80016b4 <proc_last_cmd+0x7c>)
 8001658:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800165c:	4413      	add	r3, r2
 800165e:	7819      	ldrb	r1, [r3, #0]
 8001660:	f107 0208 	add.w	r2, r7, #8
 8001664:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001668:	4413      	add	r3, r2
 800166a:	460a      	mov	r2, r1
 800166c:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < BUFFER_SIZE; i++)
 800166e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001672:	3301      	adds	r3, #1
 8001674:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001678:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800167c:	2bff      	cmp	r3, #255	; 0xff
 800167e:	ddea      	ble.n	8001656 <proc_last_cmd+0x1e>

		unsigned char cmd = check_command((char*) temp);
 8001680:	f107 0308 	add.w	r3, r7, #8
 8001684:	4618      	mov	r0, r3
 8001686:	f7ff fb8f 	bl	8000da8 <check_command>
 800168a:	4603      	mov	r3, r0
 800168c:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
		exec_command[cmd]((char*) temp);
 8001690:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 8001694:	4a08      	ldr	r2, [pc, #32]	; (80016b8 <proc_last_cmd+0x80>)
 8001696:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800169a:	f107 0208 	add.w	r2, r7, #8
 800169e:	4610      	mov	r0, r2
 80016a0:	4798      	blx	r3
	}
	else
		send_UART("Invalid $ instruction syntax.");
}
 80016a2:	e002      	b.n	80016aa <proc_last_cmd+0x72>
		send_UART("Invalid $ instruction syntax.");
 80016a4:	4805      	ldr	r0, [pc, #20]	; (80016bc <proc_last_cmd+0x84>)
 80016a6:	f001 ff0b 	bl	80034c0 <send_UART>
}
 80016aa:	bf00      	nop
 80016ac:	f507 7788 	add.w	r7, r7, #272	; 0x110
 80016b0:	46bd      	mov	sp, r7
 80016b2:	bd80      	pop	{r7, pc}
 80016b4:	20014580 	.word	0x20014580
 80016b8:	20000008 	.word	0x20000008
 80016bc:	0800dffc 	.word	0x0800dffc

080016c0 <proc_help_cmd>:


void proc_help_cmd(char* message)
{
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b082      	sub	sp, #8
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	6078      	str	r0, [r7, #4]
	if(message[1] == '\r')
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	3301      	adds	r3, #1
 80016cc:	781b      	ldrb	r3, [r3, #0]
 80016ce:	2b0d      	cmp	r3, #13
 80016d0:	d109      	bne.n	80016e6 <proc_help_cmd+0x26>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80016d2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80016d6:	6879      	ldr	r1, [r7, #4]
 80016d8:	4806      	ldr	r0, [pc, #24]	; (80016f4 <proc_help_cmd+0x34>)
 80016da:	f008 f920 	bl	800991e <strncpy>

		send_UART("MR <addr> <length>\n\r"
 80016de:	4806      	ldr	r0, [pc, #24]	; (80016f8 <proc_help_cmd+0x38>)
 80016e0:	f001 feee 	bl	80034c0 <send_UART>
					"$\n\r"
					"VER");
	}
	else
		send_UART("Invalid ? instruction syntax.");
}
 80016e4:	e002      	b.n	80016ec <proc_help_cmd+0x2c>
		send_UART("Invalid ? instruction syntax.");
 80016e6:	4805      	ldr	r0, [pc, #20]	; (80016fc <proc_help_cmd+0x3c>)
 80016e8:	f001 feea 	bl	80034c0 <send_UART>
}
 80016ec:	bf00      	nop
 80016ee:	3708      	adds	r7, #8
 80016f0:	46bd      	mov	sp, r7
 80016f2:	bd80      	pop	{r7, pc}
 80016f4:	20014580 	.word	0x20014580
 80016f8:	0800e01c 	.word	0x0800e01c
 80016fc:	0800e0d8 	.word	0x0800e0d8

08001700 <proc_ver_cmd>:


void proc_ver_cmd(char* message)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	b082      	sub	sp, #8
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
	static int procs = 0;	// EASTER EGG

	if(message[3] == '\r')
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	3303      	adds	r3, #3
 800170c:	781b      	ldrb	r3, [r3, #0]
 800170e:	2b0d      	cmp	r3, #13
 8001710:	d113      	bne.n	800173a <proc_ver_cmd+0x3a>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001712:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001716:	6879      	ldr	r1, [r7, #4]
 8001718:	480b      	ldr	r0, [pc, #44]	; (8001748 <proc_ver_cmd+0x48>)
 800171a:	f008 f900 	bl	800991e <strncpy>
		sprintf((char*) message, "v1.%d - BOCKS & PRIEST - G5 PIEEIC2 EEIC UM - 2022", procs++);
 800171e:	4b0b      	ldr	r3, [pc, #44]	; (800174c <proc_ver_cmd+0x4c>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	1c5a      	adds	r2, r3, #1
 8001724:	4909      	ldr	r1, [pc, #36]	; (800174c <proc_ver_cmd+0x4c>)
 8001726:	600a      	str	r2, [r1, #0]
 8001728:	461a      	mov	r2, r3
 800172a:	4909      	ldr	r1, [pc, #36]	; (8001750 <proc_ver_cmd+0x50>)
 800172c:	6878      	ldr	r0, [r7, #4]
 800172e:	f008 f84b 	bl	80097c8 <siprintf>
		send_UART((char*) message);
 8001732:	6878      	ldr	r0, [r7, #4]
 8001734:	f001 fec4 	bl	80034c0 <send_UART>
	}
	else
		send_UART("Invalid VER instruction syntax.");
}
 8001738:	e002      	b.n	8001740 <proc_ver_cmd+0x40>
		send_UART("Invalid VER instruction syntax.");
 800173a:	4806      	ldr	r0, [pc, #24]	; (8001754 <proc_ver_cmd+0x54>)
 800173c:	f001 fec0 	bl	80034c0 <send_UART>
}
 8001740:	bf00      	nop
 8001742:	3708      	adds	r7, #8
 8001744:	46bd      	mov	sp, r7
 8001746:	bd80      	pop	{r7, pc}
 8001748:	20014580 	.word	0x20014580
 800174c:	20000318 	.word	0x20000318
 8001750:	0800e0f8 	.word	0x0800e0f8
 8001754:	0800e12c 	.word	0x0800e12c

08001758 <proc_sp_cmd>:

void proc_sp_cmd(char* message)
{
 8001758:	b580      	push	{r7, lr}
 800175a:	b084      	sub	sp, #16
 800175c:	af00      	add	r7, sp, #0
 800175e:	6078      	str	r0, [r7, #4]
	unsigned int unit;
	char timeunit[2];

	if(sscanf((char*)message, "SP %s %d", timeunit, &unit) == 2)
 8001760:	f107 030c 	add.w	r3, r7, #12
 8001764:	f107 0208 	add.w	r2, r7, #8
 8001768:	491f      	ldr	r1, [pc, #124]	; (80017e8 <proc_sp_cmd+0x90>)
 800176a:	6878      	ldr	r0, [r7, #4]
 800176c:	f008 f84c 	bl	8009808 <siscanf>
 8001770:	4603      	mov	r3, r0
 8001772:	2b02      	cmp	r3, #2
 8001774:	d131      	bne.n	80017da <proc_sp_cmd+0x82>
		{
			if(!strcmp(timeunit,"ms") == 0 || !strcmp(timeunit,"s") == 0 || !strcmp(timeunit,"us") == 0)
 8001776:	f107 0308 	add.w	r3, r7, #8
 800177a:	491c      	ldr	r1, [pc, #112]	; (80017ec <proc_sp_cmd+0x94>)
 800177c:	4618      	mov	r0, r3
 800177e:	f7fe fd5f 	bl	8000240 <strcmp>
 8001782:	4603      	mov	r3, r0
 8001784:	2b00      	cmp	r3, #0
 8001786:	d111      	bne.n	80017ac <proc_sp_cmd+0x54>
 8001788:	f107 0308 	add.w	r3, r7, #8
 800178c:	4918      	ldr	r1, [pc, #96]	; (80017f0 <proc_sp_cmd+0x98>)
 800178e:	4618      	mov	r0, r3
 8001790:	f7fe fd56 	bl	8000240 <strcmp>
 8001794:	4603      	mov	r3, r0
 8001796:	2b00      	cmp	r3, #0
 8001798:	d108      	bne.n	80017ac <proc_sp_cmd+0x54>
 800179a:	f107 0308 	add.w	r3, r7, #8
 800179e:	4915      	ldr	r1, [pc, #84]	; (80017f4 <proc_sp_cmd+0x9c>)
 80017a0:	4618      	mov	r0, r3
 80017a2:	f7fe fd4d 	bl	8000240 <strcmp>
 80017a6:	4603      	mov	r3, r0
 80017a8:	2b00      	cmp	r3, #0
 80017aa:	d012      	beq.n	80017d2 <proc_sp_cmd+0x7a>
			{
				strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80017ac:	f44f 7280 	mov.w	r2, #256	; 0x100
 80017b0:	6879      	ldr	r1, [r7, #4]
 80017b2:	4811      	ldr	r0, [pc, #68]	; (80017f8 <proc_sp_cmd+0xa0>)
 80017b4:	f008 f8b3 	bl	800991e <strncpy>

				strcpy(sp_config.timeunit,timeunit);
 80017b8:	f107 0308 	add.w	r3, r7, #8
 80017bc:	4619      	mov	r1, r3
 80017be:	480f      	ldr	r0, [pc, #60]	; (80017fc <proc_sp_cmd+0xa4>)
 80017c0:	f008 f893 	bl	80098ea <strcpy>
				sp_config.unit = unit;
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	4a0e      	ldr	r2, [pc, #56]	; (8001800 <proc_sp_cmd+0xa8>)
 80017c8:	6053      	str	r3, [r2, #4]
				send_UART("Sampling timeunit and units changed with success.");
 80017ca:	480e      	ldr	r0, [pc, #56]	; (8001804 <proc_sp_cmd+0xac>)
 80017cc:	f001 fe78 	bl	80034c0 <send_UART>
			else
				send_UART("Invalid Sample Period instruction argument values.");
		}
		else
			send_UART("Invalid Sample Period instruction syntax.");
}
 80017d0:	e006      	b.n	80017e0 <proc_sp_cmd+0x88>
				send_UART("Invalid Sample Period instruction argument values.");
 80017d2:	480d      	ldr	r0, [pc, #52]	; (8001808 <proc_sp_cmd+0xb0>)
 80017d4:	f001 fe74 	bl	80034c0 <send_UART>
}
 80017d8:	e002      	b.n	80017e0 <proc_sp_cmd+0x88>
			send_UART("Invalid Sample Period instruction syntax.");
 80017da:	480c      	ldr	r0, [pc, #48]	; (800180c <proc_sp_cmd+0xb4>)
 80017dc:	f001 fe70 	bl	80034c0 <send_UART>
}
 80017e0:	bf00      	nop
 80017e2:	3710      	adds	r7, #16
 80017e4:	46bd      	mov	sp, r7
 80017e6:	bd80      	pop	{r7, pc}
 80017e8:	0800e14c 	.word	0x0800e14c
 80017ec:	0800e158 	.word	0x0800e158
 80017f0:	0800e15c 	.word	0x0800e15c
 80017f4:	0800e160 	.word	0x0800e160
 80017f8:	20014580 	.word	0x20014580
 80017fc:	2000009c 	.word	0x2000009c
 8001800:	20000090 	.word	0x20000090
 8001804:	0800e164 	.word	0x0800e164
 8001808:	0800e198 	.word	0x0800e198
 800180c:	0800e1cc 	.word	0x0800e1cc

08001810 <proc_ac_cmd>:

void proc_ac_cmd(char* message)
{
 8001810:	b580      	push	{r7, lr}
 8001812:	b084      	sub	sp, #16
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
	unsigned int addr3;

	if(sscanf((char*)message, "AC %x", &addr3) == 1)
 8001818:	f107 030c 	add.w	r3, r7, #12
 800181c:	461a      	mov	r2, r3
 800181e:	4912      	ldr	r1, [pc, #72]	; (8001868 <proc_ac_cmd+0x58>)
 8001820:	6878      	ldr	r0, [r7, #4]
 8001822:	f007 fff1 	bl	8009808 <siscanf>
 8001826:	4603      	mov	r3, r0
 8001828:	2b01      	cmp	r3, #1
 800182a:	d116      	bne.n	800185a <proc_ac_cmd+0x4a>
	{
		if(addr3 > 0 && addr3 <= 0x0F)
 800182c:	68fb      	ldr	r3, [r7, #12]
 800182e:	2b00      	cmp	r3, #0
 8001830:	d00f      	beq.n	8001852 <proc_ac_cmd+0x42>
 8001832:	68fb      	ldr	r3, [r7, #12]
 8001834:	2b0f      	cmp	r3, #15
 8001836:	d80c      	bhi.n	8001852 <proc_ac_cmd+0x42>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001838:	f44f 7280 	mov.w	r2, #256	; 0x100
 800183c:	6879      	ldr	r1, [r7, #4]
 800183e:	480b      	ldr	r0, [pc, #44]	; (800186c <proc_ac_cmd+0x5c>)
 8001840:	f008 f86d 	bl	800991e <strncpy>

			sp_config.addr3 = addr3;
 8001844:	68fb      	ldr	r3, [r7, #12]
 8001846:	4a0a      	ldr	r2, [pc, #40]	; (8001870 <proc_ac_cmd+0x60>)
 8001848:	6013      	str	r3, [r2, #0]
			send_UART("Analog Channel for Sampling changed with success.");
 800184a:	480a      	ldr	r0, [pc, #40]	; (8001874 <proc_ac_cmd+0x64>)
 800184c:	f001 fe38 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Analog Channel instruction argument values.");
	}
	else
		send_UART("Invalid Analog Channel instruction syntax.");
}
 8001850:	e006      	b.n	8001860 <proc_ac_cmd+0x50>
			send_UART("Invalid Analog Channel instruction argument values.");
 8001852:	4809      	ldr	r0, [pc, #36]	; (8001878 <proc_ac_cmd+0x68>)
 8001854:	f001 fe34 	bl	80034c0 <send_UART>
}
 8001858:	e002      	b.n	8001860 <proc_ac_cmd+0x50>
		send_UART("Invalid Analog Channel instruction syntax.");
 800185a:	4808      	ldr	r0, [pc, #32]	; (800187c <proc_ac_cmd+0x6c>)
 800185c:	f001 fe30 	bl	80034c0 <send_UART>
}
 8001860:	bf00      	nop
 8001862:	3710      	adds	r7, #16
 8001864:	46bd      	mov	sp, r7
 8001866:	bd80      	pop	{r7, pc}
 8001868:	0800e1f8 	.word	0x0800e1f8
 800186c:	20014580 	.word	0x20014580
 8001870:	20000090 	.word	0x20000090
 8001874:	0800e200 	.word	0x0800e200
 8001878:	0800e234 	.word	0x0800e234
 800187c:	0800e268 	.word	0x0800e268

08001880 <proc_fni_cmd>:

void proc_fni_cmd(char* message)
{
 8001880:	b580      	push	{r7, lr}
 8001882:	b082      	sub	sp, #8
 8001884:	af00      	add	r7, sp, #0
 8001886:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	3303      	adds	r3, #3
 800188c:	781b      	ldrb	r3, [r3, #0]
 800188e:	2b0d      	cmp	r3, #13
 8001890:	d10c      	bne.n	80018ac <proc_fni_cmd+0x2c>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001892:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001896:	6879      	ldr	r1, [r7, #4]
 8001898:	4808      	ldr	r0, [pc, #32]	; (80018bc <proc_fni_cmd+0x3c>)
 800189a:	f008 f840 	bl	800991e <strncpy>
		sp_config.filter_type = Inf;
 800189e:	4b08      	ldr	r3, [pc, #32]	; (80018c0 <proc_fni_cmd+0x40>)
 80018a0:	2201      	movs	r2, #1
 80018a2:	739a      	strb	r2, [r3, #14]
		send_UART("Filter ON.");
 80018a4:	4807      	ldr	r0, [pc, #28]	; (80018c4 <proc_fni_cmd+0x44>)
 80018a6:	f001 fe0b 	bl	80034c0 <send_UART>
	}
	else
		send_UART("Invalid IRR Filter On instruction syntax.");
}
 80018aa:	e002      	b.n	80018b2 <proc_fni_cmd+0x32>
		send_UART("Invalid IRR Filter On instruction syntax.");
 80018ac:	4806      	ldr	r0, [pc, #24]	; (80018c8 <proc_fni_cmd+0x48>)
 80018ae:	f001 fe07 	bl	80034c0 <send_UART>
}
 80018b2:	bf00      	nop
 80018b4:	3708      	adds	r7, #8
 80018b6:	46bd      	mov	sp, r7
 80018b8:	bd80      	pop	{r7, pc}
 80018ba:	bf00      	nop
 80018bc:	20014580 	.word	0x20014580
 80018c0:	20000090 	.word	0x20000090
 80018c4:	0800e294 	.word	0x0800e294
 80018c8:	0800e2a0 	.word	0x0800e2a0

080018cc <proc_ffi_cmd>:

void proc_ffi_cmd(char* message)
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b082      	sub	sp, #8
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	3303      	adds	r3, #3
 80018d8:	781b      	ldrb	r3, [r3, #0]
 80018da:	2b0d      	cmp	r3, #13
 80018dc:	d114      	bne.n	8001908 <proc_ffi_cmd+0x3c>
	{
		if(sp_config.filter_type == Inf)
 80018de:	4b0e      	ldr	r3, [pc, #56]	; (8001918 <proc_ffi_cmd+0x4c>)
 80018e0:	7b9b      	ldrb	r3, [r3, #14]
 80018e2:	2b01      	cmp	r3, #1
 80018e4:	d10c      	bne.n	8001900 <proc_ffi_cmd+0x34>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80018e6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80018ea:	6879      	ldr	r1, [r7, #4]
 80018ec:	480b      	ldr	r0, [pc, #44]	; (800191c <proc_ffi_cmd+0x50>)
 80018ee:	f008 f816 	bl	800991e <strncpy>
			sp_config.filter_type = Nf;
 80018f2:	4b09      	ldr	r3, [pc, #36]	; (8001918 <proc_ffi_cmd+0x4c>)
 80018f4:	2200      	movs	r2, #0
 80018f6:	739a      	strb	r2, [r3, #14]
			send_UART("Filter OFF");
 80018f8:	4809      	ldr	r0, [pc, #36]	; (8001920 <proc_ffi_cmd+0x54>)
 80018fa:	f001 fde1 	bl	80034c0 <send_UART>
		else
			send_UART("IRR Filter is already off.");
	}
	else
		send_UART("Invalid IRR Filter Off instruction syntax.");
}
 80018fe:	e006      	b.n	800190e <proc_ffi_cmd+0x42>
			send_UART("IRR Filter is already off.");
 8001900:	4808      	ldr	r0, [pc, #32]	; (8001924 <proc_ffi_cmd+0x58>)
 8001902:	f001 fddd 	bl	80034c0 <send_UART>
}
 8001906:	e002      	b.n	800190e <proc_ffi_cmd+0x42>
		send_UART("Invalid IRR Filter Off instruction syntax.");
 8001908:	4807      	ldr	r0, [pc, #28]	; (8001928 <proc_ffi_cmd+0x5c>)
 800190a:	f001 fdd9 	bl	80034c0 <send_UART>
}
 800190e:	bf00      	nop
 8001910:	3708      	adds	r7, #8
 8001912:	46bd      	mov	sp, r7
 8001914:	bd80      	pop	{r7, pc}
 8001916:	bf00      	nop
 8001918:	20000090 	.word	0x20000090
 800191c:	20014580 	.word	0x20014580
 8001920:	0800e2cc 	.word	0x0800e2cc
 8001924:	0800e2d8 	.word	0x0800e2d8
 8001928:	0800e2f4 	.word	0x0800e2f4

0800192c <proc_fnf_cmd>:

void proc_fnf_cmd(char* message)
{
 800192c:	b580      	push	{r7, lr}
 800192e:	b082      	sub	sp, #8
 8001930:	af00      	add	r7, sp, #0
 8001932:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	3303      	adds	r3, #3
 8001938:	781b      	ldrb	r3, [r3, #0]
 800193a:	2b0d      	cmp	r3, #13
 800193c:	d10c      	bne.n	8001958 <proc_fnf_cmd+0x2c>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800193e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001942:	6879      	ldr	r1, [r7, #4]
 8001944:	4808      	ldr	r0, [pc, #32]	; (8001968 <proc_fnf_cmd+0x3c>)
 8001946:	f007 ffea 	bl	800991e <strncpy>
		sp_config.filter_type = Fin;
 800194a:	4b08      	ldr	r3, [pc, #32]	; (800196c <proc_fnf_cmd+0x40>)
 800194c:	2202      	movs	r2, #2
 800194e:	739a      	strb	r2, [r3, #14]
		send_UART("Filter ON.");
 8001950:	4807      	ldr	r0, [pc, #28]	; (8001970 <proc_fnf_cmd+0x44>)
 8001952:	f001 fdb5 	bl	80034c0 <send_UART>
	}
	else
		send_UART("Invalid FIR Filter On instruction syntax.");
}
 8001956:	e002      	b.n	800195e <proc_fnf_cmd+0x32>
		send_UART("Invalid FIR Filter On instruction syntax.");
 8001958:	4806      	ldr	r0, [pc, #24]	; (8001974 <proc_fnf_cmd+0x48>)
 800195a:	f001 fdb1 	bl	80034c0 <send_UART>
}
 800195e:	bf00      	nop
 8001960:	3708      	adds	r7, #8
 8001962:	46bd      	mov	sp, r7
 8001964:	bd80      	pop	{r7, pc}
 8001966:	bf00      	nop
 8001968:	20014580 	.word	0x20014580
 800196c:	20000090 	.word	0x20000090
 8001970:	0800e294 	.word	0x0800e294
 8001974:	0800e320 	.word	0x0800e320

08001978 <proc_fff_cmd>:

void proc_fff_cmd(char* message)
{
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
	if(message[3] == '\r')
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	3303      	adds	r3, #3
 8001984:	781b      	ldrb	r3, [r3, #0]
 8001986:	2b0d      	cmp	r3, #13
 8001988:	d114      	bne.n	80019b4 <proc_fff_cmd+0x3c>
	{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 800198a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800198e:	6879      	ldr	r1, [r7, #4]
 8001990:	480c      	ldr	r0, [pc, #48]	; (80019c4 <proc_fff_cmd+0x4c>)
 8001992:	f007 ffc4 	bl	800991e <strncpy>
		if(sp_config.filter_type == Fin){
 8001996:	4b0c      	ldr	r3, [pc, #48]	; (80019c8 <proc_fff_cmd+0x50>)
 8001998:	7b9b      	ldrb	r3, [r3, #14]
 800199a:	2b02      	cmp	r3, #2
 800199c:	d106      	bne.n	80019ac <proc_fff_cmd+0x34>
			sp_config.filter_type = Nf;
 800199e:	4b0a      	ldr	r3, [pc, #40]	; (80019c8 <proc_fff_cmd+0x50>)
 80019a0:	2200      	movs	r2, #0
 80019a2:	739a      	strb	r2, [r3, #14]
			send_UART("Filter OFF");
 80019a4:	4809      	ldr	r0, [pc, #36]	; (80019cc <proc_fff_cmd+0x54>)
 80019a6:	f001 fd8b 	bl	80034c0 <send_UART>
		else
			send_UART("FIR Filter is already off.");
	}
	else
		send_UART("Invalid FIR Filter Off instruction syntax.");
}
 80019aa:	e006      	b.n	80019ba <proc_fff_cmd+0x42>
			send_UART("FIR Filter is already off.");
 80019ac:	4808      	ldr	r0, [pc, #32]	; (80019d0 <proc_fff_cmd+0x58>)
 80019ae:	f001 fd87 	bl	80034c0 <send_UART>
}
 80019b2:	e002      	b.n	80019ba <proc_fff_cmd+0x42>
		send_UART("Invalid FIR Filter Off instruction syntax.");
 80019b4:	4807      	ldr	r0, [pc, #28]	; (80019d4 <proc_fff_cmd+0x5c>)
 80019b6:	f001 fd83 	bl	80034c0 <send_UART>
}
 80019ba:	bf00      	nop
 80019bc:	3708      	adds	r7, #8
 80019be:	46bd      	mov	sp, r7
 80019c0:	bd80      	pop	{r7, pc}
 80019c2:	bf00      	nop
 80019c4:	20014580 	.word	0x20014580
 80019c8:	20000090 	.word	0x20000090
 80019cc:	0800e2cc 	.word	0x0800e2cc
 80019d0:	0800e34c 	.word	0x0800e34c
 80019d4:	0800e368 	.word	0x0800e368

080019d8 <proc_s_cmd>:

void proc_s_cmd(char* message)
{
 80019d8:	b580      	push	{r7, lr}
 80019da:	b084      	sub	sp, #16
 80019dc:	af00      	add	r7, sp, #0
 80019de:	6078      	str	r0, [r7, #4]
	unsigned int k_values;

	if(message[1] == '\r')
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	3301      	adds	r3, #1
 80019e4:	781b      	ldrb	r3, [r3, #0]
 80019e6:	2b0d      	cmp	r3, #13
 80019e8:	d120      	bne.n	8001a2c <proc_s_cmd+0x54>
	{
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 80019ea:	f44f 7280 	mov.w	r2, #256	; 0x100
 80019ee:	6879      	ldr	r1, [r7, #4]
 80019f0:	4827      	ldr	r0, [pc, #156]	; (8001a90 <proc_s_cmd+0xb8>)
 80019f2:	f007 ff94 	bl	800991e <strncpy>

		reset_adc_buf();
 80019f6:	f7ff f96b 	bl	8000cd0 <reset_adc_buf>
		counter = 0;
 80019fa:	4b26      	ldr	r3, [pc, #152]	; (8001a94 <proc_s_cmd+0xbc>)
 80019fc:	2200      	movs	r2, #0
 80019fe:	601a      	str	r2, [r3, #0]
		sp_config.sp_limit = 0;
 8001a00:	4b25      	ldr	r3, [pc, #148]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a02:	2200      	movs	r2, #0
 8001a04:	609a      	str	r2, [r3, #8]
		MX_ADC3_Init1(false);
 8001a06:	2000      	movs	r0, #0
 8001a08:	f7fe fff2 	bl	80009f0 <MX_ADC3_Init1>
		config_ADC(sp_config.addr3);
 8001a0c:	4b22      	ldr	r3, [pc, #136]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4618      	mov	r0, r3
 8001a12:	f7ff f91f 	bl	8000c54 <config_ADC>
		MX_TIM1_Init1(sp_config);
 8001a16:	4b20      	ldr	r3, [pc, #128]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a18:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001a1a:	f001 fa91 	bl	8002f40 <MX_TIM1_Init1>
		HAL_ADC_Start_IT(&hadc3);
 8001a1e:	481f      	ldr	r0, [pc, #124]	; (8001a9c <proc_s_cmd+0xc4>)
 8001a20:	f001 ff1a 	bl	8003858 <HAL_ADC_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
 8001a24:	481e      	ldr	r0, [pc, #120]	; (8001aa0 <proc_s_cmd+0xc8>)
 8001a26:	f004 f9bd 	bl	8005da4 <HAL_TIM_Base_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
	}
	else
		send_UART("Invalid Sample instruction syntax.");

}
 8001a2a:	e02d      	b.n	8001a88 <proc_s_cmd+0xb0>
	else if(sscanf((char*)message, "S %d", &k_values) == 1)
 8001a2c:	f107 030c 	add.w	r3, r7, #12
 8001a30:	461a      	mov	r2, r3
 8001a32:	491c      	ldr	r1, [pc, #112]	; (8001aa4 <proc_s_cmd+0xcc>)
 8001a34:	6878      	ldr	r0, [r7, #4]
 8001a36:	f007 fee7 	bl	8009808 <siscanf>
 8001a3a:	4603      	mov	r3, r0
 8001a3c:	2b01      	cmp	r3, #1
 8001a3e:	d120      	bne.n	8001a82 <proc_s_cmd+0xaa>
		strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001a40:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001a44:	6879      	ldr	r1, [r7, #4]
 8001a46:	4812      	ldr	r0, [pc, #72]	; (8001a90 <proc_s_cmd+0xb8>)
 8001a48:	f007 ff69 	bl	800991e <strncpy>
		reset_adc_buf();
 8001a4c:	f7ff f940 	bl	8000cd0 <reset_adc_buf>
		counter = 0;
 8001a50:	4b10      	ldr	r3, [pc, #64]	; (8001a94 <proc_s_cmd+0xbc>)
 8001a52:	2200      	movs	r2, #0
 8001a54:	601a      	str	r2, [r3, #0]
		sp_config.sp_limit = k_values;
 8001a56:	68fb      	ldr	r3, [r7, #12]
 8001a58:	4a0f      	ldr	r2, [pc, #60]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a5a:	6093      	str	r3, [r2, #8]
		MX_ADC3_Init1(false);
 8001a5c:	2000      	movs	r0, #0
 8001a5e:	f7fe ffc7 	bl	80009f0 <MX_ADC3_Init1>
		config_ADC(sp_config.addr3);
 8001a62:	4b0d      	ldr	r3, [pc, #52]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	4618      	mov	r0, r3
 8001a68:	f7ff f8f4 	bl	8000c54 <config_ADC>
		MX_TIM1_Init1(sp_config);
 8001a6c:	4b0a      	ldr	r3, [pc, #40]	; (8001a98 <proc_s_cmd+0xc0>)
 8001a6e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001a70:	f001 fa66 	bl	8002f40 <MX_TIM1_Init1>
		HAL_ADC_Start_IT(&hadc3);
 8001a74:	4809      	ldr	r0, [pc, #36]	; (8001a9c <proc_s_cmd+0xc4>)
 8001a76:	f001 feef 	bl	8003858 <HAL_ADC_Start_IT>
		HAL_TIM_Base_Start_IT(&htim1);
 8001a7a:	4809      	ldr	r0, [pc, #36]	; (8001aa0 <proc_s_cmd+0xc8>)
 8001a7c:	f004 f992 	bl	8005da4 <HAL_TIM_Base_Start_IT>
}
 8001a80:	e002      	b.n	8001a88 <proc_s_cmd+0xb0>
		send_UART("Invalid Sample instruction syntax.");
 8001a82:	4809      	ldr	r0, [pc, #36]	; (8001aa8 <proc_s_cmd+0xd0>)
 8001a84:	f001 fd1c 	bl	80034c0 <send_UART>
}
 8001a88:	bf00      	nop
 8001a8a:	3710      	adds	r7, #16
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	bd80      	pop	{r7, pc}
 8001a90:	20014580 	.word	0x20014580
 8001a94:	20000308 	.word	0x20000308
 8001a98:	20000090 	.word	0x20000090
 8001a9c:	20010430 	.word	0x20010430
 8001aa0:	2001869c 	.word	0x2001869c
 8001aa4:	0800e394 	.word	0x0800e394
 8001aa8:	0800e39c 	.word	0x0800e39c

08001aac <proc_st_cmd>:

void proc_st_cmd(char* message)
{
 8001aac:	b580      	push	{r7, lr}
 8001aae:	b082      	sub	sp, #8
 8001ab0:	af00      	add	r7, sp, #0
 8001ab2:	6078      	str	r0, [r7, #4]
	if(counter > 0)
 8001ab4:	4b15      	ldr	r3, [pc, #84]	; (8001b0c <proc_st_cmd+0x60>)
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	2b00      	cmp	r3, #0
 8001aba:	d01f      	beq.n	8001afc <proc_st_cmd+0x50>
	{
		if(message[2] == '\r')
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	3302      	adds	r3, #2
 8001ac0:	781b      	ldrb	r3, [r3, #0]
 8001ac2:	2b0d      	cmp	r3, #13
 8001ac4:	d116      	bne.n	8001af4 <proc_st_cmd+0x48>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001ac6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001aca:	6879      	ldr	r1, [r7, #4]
 8001acc:	4810      	ldr	r0, [pc, #64]	; (8001b10 <proc_st_cmd+0x64>)
 8001ace:	f007 ff26 	bl	800991e <strncpy>
			counter = 0;
 8001ad2:	4b0e      	ldr	r3, [pc, #56]	; (8001b0c <proc_st_cmd+0x60>)
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	601a      	str	r2, [r3, #0]
			analog_write(0,0);
 8001ad8:	2100      	movs	r1, #0
 8001ada:	2000      	movs	r0, #0
 8001adc:	f000 fd9c 	bl	8002618 <analog_write>
			HAL_ADC_Stop_IT(&hadc3);
 8001ae0:	480c      	ldr	r0, [pc, #48]	; (8001b14 <proc_st_cmd+0x68>)
 8001ae2:	f001 ff91 	bl	8003a08 <HAL_ADC_Stop_IT>
			HAL_TIM_Base_Stop_IT(&htim1);
 8001ae6:	480c      	ldr	r0, [pc, #48]	; (8001b18 <proc_st_cmd+0x6c>)
 8001ae8:	f004 f9d4 	bl	8005e94 <HAL_TIM_Base_Stop_IT>
			send_UART("Sampling Stopped.");
 8001aec:	480b      	ldr	r0, [pc, #44]	; (8001b1c <proc_st_cmd+0x70>)
 8001aee:	f001 fce7 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Stop Sampling instruction syntax.");
	}
	else
		send_UART("Sampling is not running.");
}
 8001af2:	e006      	b.n	8001b02 <proc_st_cmd+0x56>
			send_UART("Invalid Stop Sampling instruction syntax.");
 8001af4:	480a      	ldr	r0, [pc, #40]	; (8001b20 <proc_st_cmd+0x74>)
 8001af6:	f001 fce3 	bl	80034c0 <send_UART>
}
 8001afa:	e002      	b.n	8001b02 <proc_st_cmd+0x56>
		send_UART("Sampling is not running.");
 8001afc:	4809      	ldr	r0, [pc, #36]	; (8001b24 <proc_st_cmd+0x78>)
 8001afe:	f001 fcdf 	bl	80034c0 <send_UART>
}
 8001b02:	bf00      	nop
 8001b04:	3708      	adds	r7, #8
 8001b06:	46bd      	mov	sp, r7
 8001b08:	bd80      	pop	{r7, pc}
 8001b0a:	bf00      	nop
 8001b0c:	20000308 	.word	0x20000308
 8001b10:	20014580 	.word	0x20014580
 8001b14:	20010430 	.word	0x20010430
 8001b18:	2001869c 	.word	0x2001869c
 8001b1c:	0800e3c0 	.word	0x0800e3c0
 8001b20:	0800e3d4 	.word	0x0800e3d4
 8001b24:	0800e400 	.word	0x0800e400

08001b28 <proc_cs_cmd>:


void proc_cs_cmd(char* message)
{
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	b084      	sub	sp, #16
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	6078      	str	r0, [r7, #4]
	// DISABLE ALL
	enable = false;
 8001b30:	4b1c      	ldr	r3, [pc, #112]	; (8001ba4 <proc_cs_cmd+0x7c>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	701a      	strb	r2, [r3, #0]
	HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_4);
 8001b36:	210c      	movs	r1, #12
 8001b38:	481b      	ldr	r0, [pc, #108]	; (8001ba8 <proc_cs_cmd+0x80>)
 8001b3a:	f004 fb35 	bl	80061a8 <HAL_TIM_PWM_Stop>

	int val;

	if(sscanf((char*) message, "CS %d", &val) == 1)
 8001b3e:	f107 030c 	add.w	r3, r7, #12
 8001b42:	461a      	mov	r2, r3
 8001b44:	4919      	ldr	r1, [pc, #100]	; (8001bac <proc_cs_cmd+0x84>)
 8001b46:	6878      	ldr	r0, [r7, #4]
 8001b48:	f007 fe5e 	bl	8009808 <siscanf>
 8001b4c:	4603      	mov	r3, r0
 8001b4e:	2b01      	cmp	r3, #1
 8001b50:	d120      	bne.n	8001b94 <proc_cs_cmd+0x6c>
	{
		if(val == 0 || val == 1)
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d002      	beq.n	8001b5e <proc_cs_cmd+0x36>
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	2b01      	cmp	r3, #1
 8001b5c:	d116      	bne.n	8001b8c <proc_cs_cmd+0x64>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001b5e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001b62:	6879      	ldr	r1, [r7, #4]
 8001b64:	4812      	ldr	r0, [pc, #72]	; (8001bb0 <proc_cs_cmd+0x88>)
 8001b66:	f007 feda 	bl	800991e <strncpy>

			if(val)
 8001b6a:	68fb      	ldr	r3, [r7, #12]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d006      	beq.n	8001b7e <proc_cs_cmd+0x56>
			{
				mode_speed = true;
 8001b70:	4b10      	ldr	r3, [pc, #64]	; (8001bb4 <proc_cs_cmd+0x8c>)
 8001b72:	2201      	movs	r2, #1
 8001b74:	701a      	strb	r2, [r3, #0]
				send_UART("Speed control mode selected.");
 8001b76:	4810      	ldr	r0, [pc, #64]	; (8001bb8 <proc_cs_cmd+0x90>)
 8001b78:	f001 fca2 	bl	80034c0 <send_UART>
			if(val)
 8001b7c:	e00e      	b.n	8001b9c <proc_cs_cmd+0x74>
			}
			else
			{
				mode_speed = false;
 8001b7e:	4b0d      	ldr	r3, [pc, #52]	; (8001bb4 <proc_cs_cmd+0x8c>)
 8001b80:	2200      	movs	r2, #0
 8001b82:	701a      	strb	r2, [r3, #0]
				send_UART("PWM control mode selected.");
 8001b84:	480d      	ldr	r0, [pc, #52]	; (8001bbc <proc_cs_cmd+0x94>)
 8001b86:	f001 fc9b 	bl	80034c0 <send_UART>
			if(val)
 8001b8a:	e007      	b.n	8001b9c <proc_cs_cmd+0x74>
			}
		}
		else
			send_UART("Invalid Control System instruction argument values.");
 8001b8c:	480c      	ldr	r0, [pc, #48]	; (8001bc0 <proc_cs_cmd+0x98>)
 8001b8e:	f001 fc97 	bl	80034c0 <send_UART>
	}
	else
		send_UART("Invalid Control System instruction syntax.");
}
 8001b92:	e003      	b.n	8001b9c <proc_cs_cmd+0x74>
		send_UART("Invalid Control System instruction syntax.");
 8001b94:	480b      	ldr	r0, [pc, #44]	; (8001bc4 <proc_cs_cmd+0x9c>)
 8001b96:	f001 fc93 	bl	80034c0 <send_UART>
}
 8001b9a:	e7ff      	b.n	8001b9c <proc_cs_cmd+0x74>
 8001b9c:	bf00      	nop
 8001b9e:	3710      	adds	r7, #16
 8001ba0:	46bd      	mov	sp, r7
 8001ba2:	bd80      	pop	{r7, pc}
 8001ba4:	2000030d 	.word	0x2000030d
 8001ba8:	200186e8 	.word	0x200186e8
 8001bac:	0800e41c 	.word	0x0800e41c
 8001bb0:	20014580 	.word	0x20014580
 8001bb4:	2000030c 	.word	0x2000030c
 8001bb8:	0800e424 	.word	0x0800e424
 8001bbc:	0800e444 	.word	0x0800e444
 8001bc0:	0800e460 	.word	0x0800e460
 8001bc4:	0800e494 	.word	0x0800e494

08001bc8 <proc_en_cmd>:


void proc_en_cmd(char* message)
{
 8001bc8:	b580      	push	{r7, lr}
 8001bca:	b084      	sub	sp, #16
 8001bcc:	af00      	add	r7, sp, #0
 8001bce:	6078      	str	r0, [r7, #4]
	int val;

	if(sscanf((char*) message, "EN %d", &val) == 1)
 8001bd0:	f107 030c 	add.w	r3, r7, #12
 8001bd4:	461a      	mov	r2, r3
 8001bd6:	491e      	ldr	r1, [pc, #120]	; (8001c50 <proc_en_cmd+0x88>)
 8001bd8:	6878      	ldr	r0, [r7, #4]
 8001bda:	f007 fe15 	bl	8009808 <siscanf>
 8001bde:	4603      	mov	r3, r0
 8001be0:	2b01      	cmp	r3, #1
 8001be2:	d12c      	bne.n	8001c3e <proc_en_cmd+0x76>
	{
		if(val == 0 || val == 1)
 8001be4:	68fb      	ldr	r3, [r7, #12]
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d002      	beq.n	8001bf0 <proc_en_cmd+0x28>
 8001bea:	68fb      	ldr	r3, [r7, #12]
 8001bec:	2b01      	cmp	r3, #1
 8001bee:	d122      	bne.n	8001c36 <proc_en_cmd+0x6e>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001bf0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001bf4:	6879      	ldr	r1, [r7, #4]
 8001bf6:	4817      	ldr	r0, [pc, #92]	; (8001c54 <proc_en_cmd+0x8c>)
 8001bf8:	f007 fe91 	bl	800991e <strncpy>

			if(val)
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d00e      	beq.n	8001c20 <proc_en_cmd+0x58>
			{
				send_UART("System enabled with success.");
 8001c02:	4815      	ldr	r0, [pc, #84]	; (8001c58 <proc_en_cmd+0x90>)
 8001c04:	f001 fc5c 	bl	80034c0 <send_UART>
				enable = true;
 8001c08:	4b14      	ldr	r3, [pc, #80]	; (8001c5c <proc_en_cmd+0x94>)
 8001c0a:	2201      	movs	r2, #1
 8001c0c:	701a      	strb	r2, [r3, #0]

				if(mode_speed)
 8001c0e:	4b14      	ldr	r3, [pc, #80]	; (8001c60 <proc_en_cmd+0x98>)
 8001c10:	781b      	ldrb	r3, [r3, #0]
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d117      	bne.n	8001c46 <proc_en_cmd+0x7e>
				{
					// start speed mode
				}
				else
				{
					HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 8001c16:	210c      	movs	r1, #12
 8001c18:	4812      	ldr	r0, [pc, #72]	; (8001c64 <proc_en_cmd+0x9c>)
 8001c1a:	f004 f9cb 	bl	8005fb4 <HAL_TIM_PWM_Start>
			if(val)
 8001c1e:	e012      	b.n	8001c46 <proc_en_cmd+0x7e>
				}
			}
			else
			{
				// DISABLE ALL
				HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_4);
 8001c20:	210c      	movs	r1, #12
 8001c22:	4810      	ldr	r0, [pc, #64]	; (8001c64 <proc_en_cmd+0x9c>)
 8001c24:	f004 fac0 	bl	80061a8 <HAL_TIM_PWM_Stop>
				send_UART("System disabled with success.");
 8001c28:	480f      	ldr	r0, [pc, #60]	; (8001c68 <proc_en_cmd+0xa0>)
 8001c2a:	f001 fc49 	bl	80034c0 <send_UART>
				enable = false;
 8001c2e:	4b0b      	ldr	r3, [pc, #44]	; (8001c5c <proc_en_cmd+0x94>)
 8001c30:	2200      	movs	r2, #0
 8001c32:	701a      	strb	r2, [r3, #0]
			if(val)
 8001c34:	e007      	b.n	8001c46 <proc_en_cmd+0x7e>
			}
		}
		else
			send_UART("Invalid Enable instruction argument values.");
 8001c36:	480d      	ldr	r0, [pc, #52]	; (8001c6c <proc_en_cmd+0xa4>)
 8001c38:	f001 fc42 	bl	80034c0 <send_UART>
	}
	else
		send_UART("Invalid Enable instruction syntax.");
}
 8001c3c:	e004      	b.n	8001c48 <proc_en_cmd+0x80>
		send_UART("Invalid Enable instruction syntax.");
 8001c3e:	480c      	ldr	r0, [pc, #48]	; (8001c70 <proc_en_cmd+0xa8>)
 8001c40:	f001 fc3e 	bl	80034c0 <send_UART>
}
 8001c44:	e000      	b.n	8001c48 <proc_en_cmd+0x80>
			if(val)
 8001c46:	bf00      	nop
}
 8001c48:	bf00      	nop
 8001c4a:	3710      	adds	r7, #16
 8001c4c:	46bd      	mov	sp, r7
 8001c4e:	bd80      	pop	{r7, pc}
 8001c50:	0800e4c0 	.word	0x0800e4c0
 8001c54:	20014580 	.word	0x20014580
 8001c58:	0800e4c8 	.word	0x0800e4c8
 8001c5c:	2000030d 	.word	0x2000030d
 8001c60:	2000030c 	.word	0x2000030c
 8001c64:	200186e8 	.word	0x200186e8
 8001c68:	0800e4e8 	.word	0x0800e4e8
 8001c6c:	0800e508 	.word	0x0800e508
 8001c70:	0800e534 	.word	0x0800e534

08001c74 <proc_un_cmd>:


void proc_un_cmd(char* message)
{
 8001c74:	b580      	push	{r7, lr}
 8001c76:	b08c      	sub	sp, #48	; 0x30
 8001c78:	af00      	add	r7, sp, #0
 8001c7a:	6078      	str	r0, [r7, #4]
	char sign;
	int val;
	int args_read;

	if((args_read = sscanf((char*) message, "UN %c%d", &sign, &val)) == 2)
 8001c7c:	f107 0308 	add.w	r3, r7, #8
 8001c80:	f107 020f 	add.w	r2, r7, #15
 8001c84:	4990      	ldr	r1, [pc, #576]	; (8001ec8 <proc_un_cmd+0x254>)
 8001c86:	6878      	ldr	r0, [r7, #4]
 8001c88:	f007 fdbe 	bl	8009808 <siscanf>
 8001c8c:	6138      	str	r0, [r7, #16]
 8001c8e:	693b      	ldr	r3, [r7, #16]
 8001c90:	2b02      	cmp	r3, #2
 8001c92:	f040 80e2 	bne.w	8001e5a <proc_un_cmd+0x1e6>
	{
		if(val >= 0 && val <= 100 && (sign == '+' || sign == '-'))
 8001c96:	68bb      	ldr	r3, [r7, #8]
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	f2c0 80da 	blt.w	8001e52 <proc_un_cmd+0x1de>
 8001c9e:	68bb      	ldr	r3, [r7, #8]
 8001ca0:	2b64      	cmp	r3, #100	; 0x64
 8001ca2:	f300 80d6 	bgt.w	8001e52 <proc_un_cmd+0x1de>
 8001ca6:	7bfb      	ldrb	r3, [r7, #15]
 8001ca8:	2b2b      	cmp	r3, #43	; 0x2b
 8001caa:	d003      	beq.n	8001cb4 <proc_un_cmd+0x40>
 8001cac:	7bfb      	ldrb	r3, [r7, #15]
 8001cae:	2b2d      	cmp	r3, #45	; 0x2d
 8001cb0:	f040 80cf 	bne.w	8001e52 <proc_un_cmd+0x1de>
		{
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001cb4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001cb8:	6879      	ldr	r1, [r7, #4]
 8001cba:	4884      	ldr	r0, [pc, #528]	; (8001ecc <proc_un_cmd+0x258>)
 8001cbc:	f007 fe2f 	bl	800991e <strncpy>

			if(sign == '+')
 8001cc0:	7bfb      	ldrb	r3, [r7, #15]
 8001cc2:	2b2b      	cmp	r3, #43	; 0x2b
 8001cc4:	d162      	bne.n	8001d8c <proc_un_cmd+0x118>
			{
				if(!direction)
 8001cc6:	4b82      	ldr	r3, [pc, #520]	; (8001ed0 <proc_un_cmd+0x25c>)
 8001cc8:	781b      	ldrb	r3, [r3, #0]
 8001cca:	f083 0301 	eor.w	r3, r3, #1
 8001cce:	b2db      	uxtb	r3, r3
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d020      	beq.n	8001d16 <proc_un_cmd+0xa2>
				{
					for(int i = duty_cycle; i > 0; --i)
 8001cd4:	4b7f      	ldr	r3, [pc, #508]	; (8001ed4 <proc_un_cmd+0x260>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001cda:	e00d      	b.n	8001cf8 <proc_un_cmd+0x84>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001cdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001cde:	4a7d      	ldr	r2, [pc, #500]	; (8001ed4 <proc_un_cmd+0x260>)
 8001ce0:	6013      	str	r3, [r2, #0]
 8001ce2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001ce6:	4b7b      	ldr	r3, [pc, #492]	; (8001ed4 <proc_un_cmd+0x260>)
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001cec:	2005      	movs	r0, #5
 8001cee:	f001 fd4b 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i > 0; --i)
 8001cf2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001cf4:	3b01      	subs	r3, #1
 8001cf6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001cf8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001cfa:	2b00      	cmp	r3, #0
 8001cfc:	dcee      	bgt.n	8001cdc <proc_un_cmd+0x68>
					}

					HAL_GPIO_WritePin(GPIOE, GPIO_PIN_15, 0);
 8001cfe:	2200      	movs	r2, #0
 8001d00:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001d04:	4874      	ldr	r0, [pc, #464]	; (8001ed8 <proc_un_cmd+0x264>)
 8001d06:	f002 fe99 	bl	8004a3c <HAL_GPIO_WritePin>
					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 1);
 8001d0a:	2201      	movs	r2, #1
 8001d0c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001d10:	4872      	ldr	r0, [pc, #456]	; (8001edc <proc_un_cmd+0x268>)
 8001d12:	f002 fe93 	bl	8004a3c <HAL_GPIO_WritePin>
				}

				if(duty_cycle > val)
 8001d16:	4b6f      	ldr	r3, [pc, #444]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	68ba      	ldr	r2, [r7, #8]
 8001d1c:	4293      	cmp	r3, r2
 8001d1e:	d916      	bls.n	8001d4e <proc_un_cmd+0xda>
				{
					for(int i = duty_cycle; i > val; --i)
 8001d20:	4b6c      	ldr	r3, [pc, #432]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	62bb      	str	r3, [r7, #40]	; 0x28
 8001d26:	e00d      	b.n	8001d44 <proc_un_cmd+0xd0>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001d28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001d2a:	4a6a      	ldr	r2, [pc, #424]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d2c:	6013      	str	r3, [r2, #0]
 8001d2e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d32:	4b68      	ldr	r3, [pc, #416]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001d38:	2005      	movs	r0, #5
 8001d3a:	f001 fd25 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i > val; --i)
 8001d3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001d40:	3b01      	subs	r3, #1
 8001d42:	62bb      	str	r3, [r7, #40]	; 0x28
 8001d44:	68bb      	ldr	r3, [r7, #8]
 8001d46:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001d48:	429a      	cmp	r2, r3
 8001d4a:	dced      	bgt.n	8001d28 <proc_un_cmd+0xb4>
 8001d4c:	e01a      	b.n	8001d84 <proc_un_cmd+0x110>
					}
				}
				else if(duty_cycle < val)
 8001d4e:	4b61      	ldr	r3, [pc, #388]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	68ba      	ldr	r2, [r7, #8]
 8001d54:	4293      	cmp	r3, r2
 8001d56:	d215      	bcs.n	8001d84 <proc_un_cmd+0x110>
				{
					for(int i = duty_cycle; i < val; ++i)
 8001d58:	4b5e      	ldr	r3, [pc, #376]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	627b      	str	r3, [r7, #36]	; 0x24
 8001d5e:	e00d      	b.n	8001d7c <proc_un_cmd+0x108>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001d60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d62:	4a5c      	ldr	r2, [pc, #368]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d64:	6013      	str	r3, [r2, #0]
 8001d66:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d6a:	4b5a      	ldr	r3, [pc, #360]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001d70:	2005      	movs	r0, #5
 8001d72:	f001 fd09 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i < val; ++i)
 8001d76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d78:	3301      	adds	r3, #1
 8001d7a:	627b      	str	r3, [r7, #36]	; 0x24
 8001d7c:	68bb      	ldr	r3, [r7, #8]
 8001d7e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001d80:	429a      	cmp	r2, r3
 8001d82:	dbed      	blt.n	8001d60 <proc_un_cmd+0xec>
					}
				}

				direction = true;
 8001d84:	4b52      	ldr	r3, [pc, #328]	; (8001ed0 <proc_un_cmd+0x25c>)
 8001d86:	2201      	movs	r2, #1
 8001d88:	701a      	strb	r2, [r3, #0]
 8001d8a:	e05e      	b.n	8001e4a <proc_un_cmd+0x1d6>
			}
			else
			{
				if(direction)
 8001d8c:	4b50      	ldr	r3, [pc, #320]	; (8001ed0 <proc_un_cmd+0x25c>)
 8001d8e:	781b      	ldrb	r3, [r3, #0]
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	d020      	beq.n	8001dd6 <proc_un_cmd+0x162>
				{
					for(int i = duty_cycle; i > 0; --i)
 8001d94:	4b4f      	ldr	r3, [pc, #316]	; (8001ed4 <proc_un_cmd+0x260>)
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	623b      	str	r3, [r7, #32]
 8001d9a:	e00d      	b.n	8001db8 <proc_un_cmd+0x144>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001d9c:	6a3b      	ldr	r3, [r7, #32]
 8001d9e:	4a4d      	ldr	r2, [pc, #308]	; (8001ed4 <proc_un_cmd+0x260>)
 8001da0:	6013      	str	r3, [r2, #0]
 8001da2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001da6:	4b4b      	ldr	r3, [pc, #300]	; (8001ed4 <proc_un_cmd+0x260>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001dac:	2005      	movs	r0, #5
 8001dae:	f001 fceb 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i > 0; --i)
 8001db2:	6a3b      	ldr	r3, [r7, #32]
 8001db4:	3b01      	subs	r3, #1
 8001db6:	623b      	str	r3, [r7, #32]
 8001db8:	6a3b      	ldr	r3, [r7, #32]
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	dcee      	bgt.n	8001d9c <proc_un_cmd+0x128>
					}

					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 0);
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001dc4:	4845      	ldr	r0, [pc, #276]	; (8001edc <proc_un_cmd+0x268>)
 8001dc6:	f002 fe39 	bl	8004a3c <HAL_GPIO_WritePin>
					HAL_GPIO_WritePin(GPIOE, GPIO_PIN_15, 1);
 8001dca:	2201      	movs	r2, #1
 8001dcc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001dd0:	4841      	ldr	r0, [pc, #260]	; (8001ed8 <proc_un_cmd+0x264>)
 8001dd2:	f002 fe33 	bl	8004a3c <HAL_GPIO_WritePin>
				}

				if(duty_cycle > val)
 8001dd6:	4b3f      	ldr	r3, [pc, #252]	; (8001ed4 <proc_un_cmd+0x260>)
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	68ba      	ldr	r2, [r7, #8]
 8001ddc:	4293      	cmp	r3, r2
 8001dde:	d916      	bls.n	8001e0e <proc_un_cmd+0x19a>
				{
					for(int i = duty_cycle; i > val; --i)
 8001de0:	4b3c      	ldr	r3, [pc, #240]	; (8001ed4 <proc_un_cmd+0x260>)
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	61fb      	str	r3, [r7, #28]
 8001de6:	e00d      	b.n	8001e04 <proc_un_cmd+0x190>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001de8:	69fb      	ldr	r3, [r7, #28]
 8001dea:	4a3a      	ldr	r2, [pc, #232]	; (8001ed4 <proc_un_cmd+0x260>)
 8001dec:	6013      	str	r3, [r2, #0]
 8001dee:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001df2:	4b38      	ldr	r3, [pc, #224]	; (8001ed4 <proc_un_cmd+0x260>)
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001df8:	2005      	movs	r0, #5
 8001dfa:	f001 fcc5 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i > val; --i)
 8001dfe:	69fb      	ldr	r3, [r7, #28]
 8001e00:	3b01      	subs	r3, #1
 8001e02:	61fb      	str	r3, [r7, #28]
 8001e04:	68bb      	ldr	r3, [r7, #8]
 8001e06:	69fa      	ldr	r2, [r7, #28]
 8001e08:	429a      	cmp	r2, r3
 8001e0a:	dced      	bgt.n	8001de8 <proc_un_cmd+0x174>
 8001e0c:	e01a      	b.n	8001e44 <proc_un_cmd+0x1d0>
					}
				}
				else if(duty_cycle < val)
 8001e0e:	4b31      	ldr	r3, [pc, #196]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	68ba      	ldr	r2, [r7, #8]
 8001e14:	4293      	cmp	r3, r2
 8001e16:	d215      	bcs.n	8001e44 <proc_un_cmd+0x1d0>
				{
					for(int i = duty_cycle; i < val; ++i)
 8001e18:	4b2e      	ldr	r3, [pc, #184]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	61bb      	str	r3, [r7, #24]
 8001e1e:	e00d      	b.n	8001e3c <proc_un_cmd+0x1c8>
					{
						TIM2->CCR4 = duty_cycle = i;
 8001e20:	69bb      	ldr	r3, [r7, #24]
 8001e22:	4a2c      	ldr	r2, [pc, #176]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e24:	6013      	str	r3, [r2, #0]
 8001e26:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001e2a:	4b2a      	ldr	r3, [pc, #168]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	6413      	str	r3, [r2, #64]	; 0x40
						HAL_Delay(5);
 8001e30:	2005      	movs	r0, #5
 8001e32:	f001 fca9 	bl	8003788 <HAL_Delay>
					for(int i = duty_cycle; i < val; ++i)
 8001e36:	69bb      	ldr	r3, [r7, #24]
 8001e38:	3301      	adds	r3, #1
 8001e3a:	61bb      	str	r3, [r7, #24]
 8001e3c:	68bb      	ldr	r3, [r7, #8]
 8001e3e:	69ba      	ldr	r2, [r7, #24]
 8001e40:	429a      	cmp	r2, r3
 8001e42:	dbed      	blt.n	8001e20 <proc_un_cmd+0x1ac>
					}
				}

				direction = false;
 8001e44:	4b22      	ldr	r3, [pc, #136]	; (8001ed0 <proc_un_cmd+0x25c>)
 8001e46:	2200      	movs	r2, #0
 8001e48:	701a      	strb	r2, [r3, #0]
			}

			send_UART("PWM average voltage changed with success.");
 8001e4a:	4825      	ldr	r0, [pc, #148]	; (8001ee0 <proc_un_cmd+0x26c>)
 8001e4c:	f001 fb38 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Normalized Voltage instruction argument values.");
	}
	else
		send_UART("Invalid Normalized Voltage instruction syntax.");
}
 8001e50:	e036      	b.n	8001ec0 <proc_un_cmd+0x24c>
			send_UART("Invalid Normalized Voltage instruction argument values.");
 8001e52:	4824      	ldr	r0, [pc, #144]	; (8001ee4 <proc_un_cmd+0x270>)
 8001e54:	f001 fb34 	bl	80034c0 <send_UART>
}
 8001e58:	e032      	b.n	8001ec0 <proc_un_cmd+0x24c>
	else if(sscanf((char*) message, "UN %d", &val) == 1)
 8001e5a:	f107 0308 	add.w	r3, r7, #8
 8001e5e:	461a      	mov	r2, r3
 8001e60:	4921      	ldr	r1, [pc, #132]	; (8001ee8 <proc_un_cmd+0x274>)
 8001e62:	6878      	ldr	r0, [r7, #4]
 8001e64:	f007 fcd0 	bl	8009808 <siscanf>
 8001e68:	4603      	mov	r3, r0
 8001e6a:	2b01      	cmp	r3, #1
 8001e6c:	d125      	bne.n	8001eba <proc_un_cmd+0x246>
		if(!val)
 8001e6e:	68bb      	ldr	r3, [r7, #8]
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d11e      	bne.n	8001eb2 <proc_un_cmd+0x23e>
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001e74:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e78:	6879      	ldr	r1, [r7, #4]
 8001e7a:	4814      	ldr	r0, [pc, #80]	; (8001ecc <proc_un_cmd+0x258>)
 8001e7c:	f007 fd4f 	bl	800991e <strncpy>
			for(int i = duty_cycle; i > 0; --i)
 8001e80:	4b14      	ldr	r3, [pc, #80]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	617b      	str	r3, [r7, #20]
 8001e86:	e00d      	b.n	8001ea4 <proc_un_cmd+0x230>
				TIM2->CCR4 = duty_cycle = i;
 8001e88:	697b      	ldr	r3, [r7, #20]
 8001e8a:	4a12      	ldr	r2, [pc, #72]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e8c:	6013      	str	r3, [r2, #0]
 8001e8e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001e92:	4b10      	ldr	r3, [pc, #64]	; (8001ed4 <proc_un_cmd+0x260>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	6413      	str	r3, [r2, #64]	; 0x40
				HAL_Delay(5);
 8001e98:	2005      	movs	r0, #5
 8001e9a:	f001 fc75 	bl	8003788 <HAL_Delay>
			for(int i = duty_cycle; i > 0; --i)
 8001e9e:	697b      	ldr	r3, [r7, #20]
 8001ea0:	3b01      	subs	r3, #1
 8001ea2:	617b      	str	r3, [r7, #20]
 8001ea4:	697b      	ldr	r3, [r7, #20]
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	dcee      	bgt.n	8001e88 <proc_un_cmd+0x214>
			send_UART("PWM average voltage changed with success.");
 8001eaa:	480d      	ldr	r0, [pc, #52]	; (8001ee0 <proc_un_cmd+0x26c>)
 8001eac:	f001 fb08 	bl	80034c0 <send_UART>
}
 8001eb0:	e006      	b.n	8001ec0 <proc_un_cmd+0x24c>
			send_UART("Invalid Normalized Voltage instruction argument values.");
 8001eb2:	480c      	ldr	r0, [pc, #48]	; (8001ee4 <proc_un_cmd+0x270>)
 8001eb4:	f001 fb04 	bl	80034c0 <send_UART>
}
 8001eb8:	e002      	b.n	8001ec0 <proc_un_cmd+0x24c>
		send_UART("Invalid Normalized Voltage instruction syntax.");
 8001eba:	480c      	ldr	r0, [pc, #48]	; (8001eec <proc_un_cmd+0x278>)
 8001ebc:	f001 fb00 	bl	80034c0 <send_UART>
}
 8001ec0:	bf00      	nop
 8001ec2:	3730      	adds	r7, #48	; 0x30
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	bd80      	pop	{r7, pc}
 8001ec8:	0800e558 	.word	0x0800e558
 8001ecc:	20014580 	.word	0x20014580
 8001ed0:	2000030e 	.word	0x2000030e
 8001ed4:	20000310 	.word	0x20000310
 8001ed8:	40021000 	.word	0x40021000
 8001edc:	40020400 	.word	0x40020400
 8001ee0:	0800e560 	.word	0x0800e560
 8001ee4:	0800e58c 	.word	0x0800e58c
 8001ee8:	0800e5c4 	.word	0x0800e5c4
 8001eec:	0800e5cc 	.word	0x0800e5cc

08001ef0 <proc_vr_cmd>:


void proc_vr_cmd(char* message)
{
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b084      	sub	sp, #16
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
	char sign;
	int val;

	if(sscanf((char*) message, "VR %c%d", &sign, &val) == 2)
 8001ef8:	f107 0308 	add.w	r3, r7, #8
 8001efc:	f107 020f 	add.w	r2, r7, #15
 8001f00:	491a      	ldr	r1, [pc, #104]	; (8001f6c <proc_vr_cmd+0x7c>)
 8001f02:	6878      	ldr	r0, [r7, #4]
 8001f04:	f007 fc80 	bl	8009808 <siscanf>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	2b02      	cmp	r3, #2
 8001f0c:	d127      	bne.n	8001f5e <proc_vr_cmd+0x6e>
	{
		if(val >= 0 && val <= 160)
 8001f0e:	68bb      	ldr	r3, [r7, #8]
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	db20      	blt.n	8001f56 <proc_vr_cmd+0x66>
 8001f14:	68bb      	ldr	r3, [r7, #8]
 8001f16:	2ba0      	cmp	r3, #160	; 0xa0
 8001f18:	dc1d      	bgt.n	8001f56 <proc_vr_cmd+0x66>
		{
			if(sign == '+' || sign == '-')
 8001f1a:	7bfb      	ldrb	r3, [r7, #15]
 8001f1c:	2b2b      	cmp	r3, #43	; 0x2b
 8001f1e:	d002      	beq.n	8001f26 <proc_vr_cmd+0x36>
 8001f20:	7bfb      	ldrb	r3, [r7, #15]
 8001f22:	2b2d      	cmp	r3, #45	; 0x2d
 8001f24:	d105      	bne.n	8001f32 <proc_vr_cmd+0x42>
			strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001f26:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001f2a:	6879      	ldr	r1, [r7, #4]
 8001f2c:	4810      	ldr	r0, [pc, #64]	; (8001f70 <proc_vr_cmd+0x80>)
 8001f2e:	f007 fcf6 	bl	800991e <strncpy>

			speed = val;
 8001f32:	68bb      	ldr	r3, [r7, #8]
 8001f34:	461a      	mov	r2, r3
 8001f36:	4b0f      	ldr	r3, [pc, #60]	; (8001f74 <proc_vr_cmd+0x84>)
 8001f38:	601a      	str	r2, [r3, #0]

			if(sign == '+')
 8001f3a:	7bfb      	ldrb	r3, [r7, #15]
 8001f3c:	2b2b      	cmp	r3, #43	; 0x2b
 8001f3e:	d103      	bne.n	8001f48 <proc_vr_cmd+0x58>
				direction = true;
 8001f40:	4b0d      	ldr	r3, [pc, #52]	; (8001f78 <proc_vr_cmd+0x88>)
 8001f42:	2201      	movs	r2, #1
 8001f44:	701a      	strb	r2, [r3, #0]
 8001f46:	e002      	b.n	8001f4e <proc_vr_cmd+0x5e>
			else
				direction = false;
 8001f48:	4b0b      	ldr	r3, [pc, #44]	; (8001f78 <proc_vr_cmd+0x88>)
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	701a      	strb	r2, [r3, #0]

			send_UART("Speed changed with success.");
 8001f4e:	480b      	ldr	r0, [pc, #44]	; (8001f7c <proc_vr_cmd+0x8c>)
 8001f50:	f001 fab6 	bl	80034c0 <send_UART>
		else
			send_UART("Invalid Reference Speed instruction argument values.");
	}
	else
		send_UART("Invalid Reference Speed instruction syntax.");
}
 8001f54:	e006      	b.n	8001f64 <proc_vr_cmd+0x74>
			send_UART("Invalid Reference Speed instruction argument values.");
 8001f56:	480a      	ldr	r0, [pc, #40]	; (8001f80 <proc_vr_cmd+0x90>)
 8001f58:	f001 fab2 	bl	80034c0 <send_UART>
}
 8001f5c:	e002      	b.n	8001f64 <proc_vr_cmd+0x74>
		send_UART("Invalid Reference Speed instruction syntax.");
 8001f5e:	4809      	ldr	r0, [pc, #36]	; (8001f84 <proc_vr_cmd+0x94>)
 8001f60:	f001 faae 	bl	80034c0 <send_UART>
}
 8001f64:	bf00      	nop
 8001f66:	3710      	adds	r7, #16
 8001f68:	46bd      	mov	sp, r7
 8001f6a:	bd80      	pop	{r7, pc}
 8001f6c:	0800e5fc 	.word	0x0800e5fc
 8001f70:	20014580 	.word	0x20014580
 8001f74:	20000314 	.word	0x20000314
 8001f78:	2000030e 	.word	0x2000030e
 8001f7c:	0800e604 	.word	0x0800e604
 8001f80:	0800e620 	.word	0x0800e620
 8001f84:	0800e658 	.word	0x0800e658

08001f88 <proc_inc_cmd>:

void proc_inc_cmd(char* message)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b084      	sub	sp, #16
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
	strncpy((char*) last_message, (char*) message, BUFFER_SIZE);
 8001f90:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001f94:	6879      	ldr	r1, [r7, #4]
 8001f96:	482b      	ldr	r0, [pc, #172]	; (8002044 <proc_inc_cmd+0xbc>)
 8001f98:	f007 fcc1 	bl	800991e <strncpy>

	if(mode_speed)
 8001f9c:	4b2a      	ldr	r3, [pc, #168]	; (8002048 <proc_inc_cmd+0xc0>)
 8001f9e:	781b      	ldrb	r3, [r3, #0]
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d014      	beq.n	8001fce <proc_inc_cmd+0x46>
	{
		if(speed < 156)
 8001fa4:	4b29      	ldr	r3, [pc, #164]	; (800204c <proc_inc_cmd+0xc4>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	2b9b      	cmp	r3, #155	; 0x9b
 8001faa:	d805      	bhi.n	8001fb8 <proc_inc_cmd+0x30>
			speed += 5;
 8001fac:	4b27      	ldr	r3, [pc, #156]	; (800204c <proc_inc_cmd+0xc4>)
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	3305      	adds	r3, #5
 8001fb2:	4a26      	ldr	r2, [pc, #152]	; (800204c <proc_inc_cmd+0xc4>)
 8001fb4:	6013      	str	r3, [r2, #0]
 8001fb6:	e002      	b.n	8001fbe <proc_inc_cmd+0x36>
		else
			speed = 160;
 8001fb8:	4b24      	ldr	r3, [pc, #144]	; (800204c <proc_inc_cmd+0xc4>)
 8001fba:	22a0      	movs	r2, #160	; 0xa0
 8001fbc:	601a      	str	r2, [r3, #0]

		sprintf(message, "Speed updated to %d rpm.", speed);
 8001fbe:	4b23      	ldr	r3, [pc, #140]	; (800204c <proc_inc_cmd+0xc4>)
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	461a      	mov	r2, r3
 8001fc4:	4922      	ldr	r1, [pc, #136]	; (8002050 <proc_inc_cmd+0xc8>)
 8001fc6:	6878      	ldr	r0, [r7, #4]
 8001fc8:	f007 fbfe 	bl	80097c8 <siprintf>
 8001fcc:	e032      	b.n	8002034 <proc_inc_cmd+0xac>
	}
	else
	{
		if(duty_cycle < 96)
 8001fce:	4b21      	ldr	r3, [pc, #132]	; (8002054 <proc_inc_cmd+0xcc>)
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	2b5f      	cmp	r3, #95	; 0x5f
 8001fd4:	d823      	bhi.n	800201e <proc_inc_cmd+0x96>
		{
			for(int i = 0; i < 5; ++i)
 8001fd6:	2300      	movs	r3, #0
 8001fd8:	60fb      	str	r3, [r7, #12]
 8001fda:	e00f      	b.n	8001ffc <proc_inc_cmd+0x74>
			{
				TIM2->CCR4 = ++duty_cycle;
 8001fdc:	4b1d      	ldr	r3, [pc, #116]	; (8002054 <proc_inc_cmd+0xcc>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	3301      	adds	r3, #1
 8001fe2:	4a1c      	ldr	r2, [pc, #112]	; (8002054 <proc_inc_cmd+0xcc>)
 8001fe4:	6013      	str	r3, [r2, #0]
 8001fe6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fea:	4b1a      	ldr	r3, [pc, #104]	; (8002054 <proc_inc_cmd+0xcc>)
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	6413      	str	r3, [r2, #64]	; 0x40
				HAL_Delay(5);
 8001ff0:	2005      	movs	r0, #5
 8001ff2:	f001 fbc9 	bl	8003788 <HAL_Delay>
			for(int i = 0; i < 5; ++i)
 8001ff6:	68fb      	ldr	r3, [r7, #12]
 8001ff8:	3301      	adds	r3, #1
 8001ffa:	60fb      	str	r3, [r7, #12]
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	2b04      	cmp	r3, #4
 8002000:	ddec      	ble.n	8001fdc <proc_inc_cmd+0x54>
 8002002:	e010      	b.n	8002026 <proc_inc_cmd+0x9e>
		}
		else
		{
			while(duty_cycle != 100)
			{
				TIM2->CCR4 = ++duty_cycle;
 8002004:	4b13      	ldr	r3, [pc, #76]	; (8002054 <proc_inc_cmd+0xcc>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	3301      	adds	r3, #1
 800200a:	4a12      	ldr	r2, [pc, #72]	; (8002054 <proc_inc_cmd+0xcc>)
 800200c:	6013      	str	r3, [r2, #0]
 800200e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002012:	4b10      	ldr	r3, [pc, #64]	; (8002054 <proc_inc_cmd+0xcc>)
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	6413      	str	r3, [r2, #64]	; 0x40
				HAL_Delay(5);
 8002018:	2005      	movs	r0, #5
 800201a:	f001 fbb5 	bl	8003788 <HAL_Delay>
			while(duty_cycle != 100)
 800201e:	4b0d      	ldr	r3, [pc, #52]	; (8002054 <proc_inc_cmd+0xcc>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	2b64      	cmp	r3, #100	; 0x64
 8002024:	d1ee      	bne.n	8002004 <proc_inc_cmd+0x7c>
			}
		}

		sprintf((char*) message, "Duty cycle updated to %d%%.", duty_cycle);
 8002026:	4b0b      	ldr	r3, [pc, #44]	; (8002054 <proc_inc_cmd+0xcc>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	461a      	mov	r2, r3
 800202c:	490a      	ldr	r1, [pc, #40]	; (8002058 <proc_inc_cmd+0xd0>)
 800202e:	6878      	ldr	r0, [r7, #4]
 8002030:	f007 fbca 	bl	80097c8 <siprintf>
	}

	send_UART(message);
 8002034:	6878      	ldr	r0, [r7, #4]
 8002036:	f001 fa43 	bl	80034c0 <send_UART>
}
 800203a:	bf00      	nop
 800203c:	3710      	adds	r7, #16
 800203e:	46bd      	mov	sp, r7
 8002040:	bd80      	pop	{r7, pc}
 8002042:	bf00      	nop
 8002044:	20014580 	.word	0x20014580
 8002048:	2000030c 	.word	0x2000030c
 800204c:	20000314 	.word	0x20000314
 8002050:	0800e684 	.word	0x0800e684
 8002054:	20000310 	.word	0x20000310
 8002058:	0800e6a0 	.word	0x0800e6a0

0800205c <proc_dec_cmd>:

void proc_dec_cmd(char* message)
{
 800205c:	b580      	push	{r7, lr}
 800205e:	b084      	sub	sp, #16
 8002060:	af00      	add	r7, sp, #0
 8002062:	6078      	str	r0, [r7, #4]
	if(mode_speed)
 8002064:	4b29      	ldr	r3, [pc, #164]	; (800210c <proc_dec_cmd+0xb0>)
 8002066:	781b      	ldrb	r3, [r3, #0]
 8002068:	2b00      	cmp	r3, #0
 800206a:	d014      	beq.n	8002096 <proc_dec_cmd+0x3a>
	{
		if(speed > 4)
 800206c:	4b28      	ldr	r3, [pc, #160]	; (8002110 <proc_dec_cmd+0xb4>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2b04      	cmp	r3, #4
 8002072:	d905      	bls.n	8002080 <proc_dec_cmd+0x24>
			speed -= 5;
 8002074:	4b26      	ldr	r3, [pc, #152]	; (8002110 <proc_dec_cmd+0xb4>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	3b05      	subs	r3, #5
 800207a:	4a25      	ldr	r2, [pc, #148]	; (8002110 <proc_dec_cmd+0xb4>)
 800207c:	6013      	str	r3, [r2, #0]
 800207e:	e002      	b.n	8002086 <proc_dec_cmd+0x2a>
		else
			speed = 0;
 8002080:	4b23      	ldr	r3, [pc, #140]	; (8002110 <proc_dec_cmd+0xb4>)
 8002082:	2200      	movs	r2, #0
 8002084:	601a      	str	r2, [r3, #0]

		sprintf((char*) message, "Speed updated to %d rpm.", speed);
 8002086:	4b22      	ldr	r3, [pc, #136]	; (8002110 <proc_dec_cmd+0xb4>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	461a      	mov	r2, r3
 800208c:	4921      	ldr	r1, [pc, #132]	; (8002114 <proc_dec_cmd+0xb8>)
 800208e:	6878      	ldr	r0, [r7, #4]
 8002090:	f007 fb9a 	bl	80097c8 <siprintf>
 8002094:	e032      	b.n	80020fc <proc_dec_cmd+0xa0>
	}
	else
	{
		if(duty_cycle > 4)
 8002096:	4b20      	ldr	r3, [pc, #128]	; (8002118 <proc_dec_cmd+0xbc>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2b04      	cmp	r3, #4
 800209c:	d923      	bls.n	80020e6 <proc_dec_cmd+0x8a>
		{
			for(int i = 5; i > 0; --i)
 800209e:	2305      	movs	r3, #5
 80020a0:	60fb      	str	r3, [r7, #12]
 80020a2:	e00f      	b.n	80020c4 <proc_dec_cmd+0x68>
			{
				TIM2->CCR4 = --duty_cycle;
 80020a4:	4b1c      	ldr	r3, [pc, #112]	; (8002118 <proc_dec_cmd+0xbc>)
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	3b01      	subs	r3, #1
 80020aa:	4a1b      	ldr	r2, [pc, #108]	; (8002118 <proc_dec_cmd+0xbc>)
 80020ac:	6013      	str	r3, [r2, #0]
 80020ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80020b2:	4b19      	ldr	r3, [pc, #100]	; (8002118 <proc_dec_cmd+0xbc>)
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	6413      	str	r3, [r2, #64]	; 0x40
				HAL_Delay(5);
 80020b8:	2005      	movs	r0, #5
 80020ba:	f001 fb65 	bl	8003788 <HAL_Delay>
			for(int i = 5; i > 0; --i)
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	3b01      	subs	r3, #1
 80020c2:	60fb      	str	r3, [r7, #12]
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	dcec      	bgt.n	80020a4 <proc_dec_cmd+0x48>
 80020ca:	e010      	b.n	80020ee <proc_dec_cmd+0x92>
		}
		else
		{
			while(duty_cycle != 0)
			{
				TIM2->CCR4 = --duty_cycle;
 80020cc:	4b12      	ldr	r3, [pc, #72]	; (8002118 <proc_dec_cmd+0xbc>)
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	3b01      	subs	r3, #1
 80020d2:	4a11      	ldr	r2, [pc, #68]	; (8002118 <proc_dec_cmd+0xbc>)
 80020d4:	6013      	str	r3, [r2, #0]
 80020d6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80020da:	4b0f      	ldr	r3, [pc, #60]	; (8002118 <proc_dec_cmd+0xbc>)
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	6413      	str	r3, [r2, #64]	; 0x40
				HAL_Delay(5);
 80020e0:	2005      	movs	r0, #5
 80020e2:	f001 fb51 	bl	8003788 <HAL_Delay>
			while(duty_cycle != 0)
 80020e6:	4b0c      	ldr	r3, [pc, #48]	; (8002118 <proc_dec_cmd+0xbc>)
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d1ee      	bne.n	80020cc <proc_dec_cmd+0x70>
			}
		}

		sprintf((char*) message, "Duty cycle updated to %d%%.", duty_cycle);
 80020ee:	4b0a      	ldr	r3, [pc, #40]	; (8002118 <proc_dec_cmd+0xbc>)
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	461a      	mov	r2, r3
 80020f4:	4909      	ldr	r1, [pc, #36]	; (800211c <proc_dec_cmd+0xc0>)
 80020f6:	6878      	ldr	r0, [r7, #4]
 80020f8:	f007 fb66 	bl	80097c8 <siprintf>
	}

	send_UART(message);
 80020fc:	6878      	ldr	r0, [r7, #4]
 80020fe:	f001 f9df 	bl	80034c0 <send_UART>
}
 8002102:	bf00      	nop
 8002104:	3710      	adds	r7, #16
 8002106:	46bd      	mov	sp, r7
 8002108:	bd80      	pop	{r7, pc}
 800210a:	bf00      	nop
 800210c:	2000030c 	.word	0x2000030c
 8002110:	20000314 	.word	0x20000314
 8002114:	0800e684 	.word	0x0800e684
 8002118:	20000310 	.word	0x20000310
 800211c:	0800e6a0 	.word	0x0800e6a0

08002120 <proc_hw_cmd>:

void proc_hw_cmd(char* message)
{
 8002120:	b480      	push	{r7}
 8002122:	b083      	sub	sp, #12
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
	return;
 8002128:	bf00      	nop
}
 800212a:	370c      	adds	r7, #12
 800212c:	46bd      	mov	sp, r7
 800212e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002132:	4770      	bx	lr

08002134 <proc_fsw_cmd>:

void proc_fsw_cmd(char* message)
{
 8002134:	b480      	push	{r7}
 8002136:	b083      	sub	sp, #12
 8002138:	af00      	add	r7, sp, #0
 800213a:	6078      	str	r0, [r7, #4]
	return;
 800213c:	bf00      	nop
}
 800213e:	370c      	adds	r7, #12
 8002140:	46bd      	mov	sp, r7
 8002142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002146:	4770      	bx	lr

08002148 <proc_sw_cmd>:

void proc_sw_cmd(char* message)
{
 8002148:	b480      	push	{r7}
 800214a:	b083      	sub	sp, #12
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
	return;
 8002150:	bf00      	nop
}
 8002152:	370c      	adds	r7, #12
 8002154:	46bd      	mov	sp, r7
 8002156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215a:	4770      	bx	lr

0800215c <proc_stw_cmd>:

void proc_stw_cmd(char* message)
{
 800215c:	b480      	push	{r7}
 800215e:	b083      	sub	sp, #12
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
	return;
 8002164:	bf00      	nop
}
 8002166:	370c      	adds	r7, #12
 8002168:	46bd      	mov	sp, r7
 800216a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800216e:	4770      	bx	lr

08002170 <memory_read>:

//------------------------------------------------------------------------------------------------------------------


bool memory_read(unsigned int addr_r, unsigned int length, char* data)
{
 8002170:	b480      	push	{r7}
 8002172:	b087      	sub	sp, #28
 8002174:	af00      	add	r7, sp, #0
 8002176:	60f8      	str	r0, [r7, #12]
 8002178:	60b9      	str	r1, [r7, #8]
 800217a:	607a      	str	r2, [r7, #4]
	if(addr_r < 0 || addr_r > 0xFFFF || length < 0 || length > 0xFF)
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002182:	d202      	bcs.n	800218a <memory_read+0x1a>
 8002184:	68bb      	ldr	r3, [r7, #8]
 8002186:	2bff      	cmp	r3, #255	; 0xff
 8002188:	d901      	bls.n	800218e <memory_read+0x1e>
		return false;
 800218a:	2300      	movs	r3, #0
 800218c:	e01b      	b.n	80021c6 <memory_read+0x56>

	if((0x10000 - addr_r) < length)
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
 8002194:	68ba      	ldr	r2, [r7, #8]
 8002196:	429a      	cmp	r2, r3
 8002198:	d901      	bls.n	800219e <memory_read+0x2e>
		return false;
 800219a:	2300      	movs	r3, #0
 800219c:	e013      	b.n	80021c6 <memory_read+0x56>

	for(int i = 0; i < length; i++)
 800219e:	2300      	movs	r3, #0
 80021a0:	617b      	str	r3, [r7, #20]
 80021a2:	e00b      	b.n	80021bc <memory_read+0x4c>
	{
		data[i] = memory[addr_r++];
 80021a4:	68fb      	ldr	r3, [r7, #12]
 80021a6:	1c5a      	adds	r2, r3, #1
 80021a8:	60fa      	str	r2, [r7, #12]
 80021aa:	697a      	ldr	r2, [r7, #20]
 80021ac:	6879      	ldr	r1, [r7, #4]
 80021ae:	440a      	add	r2, r1
 80021b0:	4908      	ldr	r1, [pc, #32]	; (80021d4 <memory_read+0x64>)
 80021b2:	5ccb      	ldrb	r3, [r1, r3]
 80021b4:	7013      	strb	r3, [r2, #0]
	for(int i = 0; i < length; i++)
 80021b6:	697b      	ldr	r3, [r7, #20]
 80021b8:	3301      	adds	r3, #1
 80021ba:	617b      	str	r3, [r7, #20]
 80021bc:	697b      	ldr	r3, [r7, #20]
 80021be:	68ba      	ldr	r2, [r7, #8]
 80021c0:	429a      	cmp	r2, r3
 80021c2:	d8ef      	bhi.n	80021a4 <memory_read+0x34>
	}

	return true;
 80021c4:	2301      	movs	r3, #1
}
 80021c6:	4618      	mov	r0, r3
 80021c8:	371c      	adds	r7, #28
 80021ca:	46bd      	mov	sp, r7
 80021cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021d0:	4770      	bx	lr
 80021d2:	bf00      	nop
 80021d4:	2000042c 	.word	0x2000042c

080021d8 <memory_write>:


bool memory_write(unsigned int addr, unsigned int length, int data)
{
 80021d8:	b480      	push	{r7}
 80021da:	b087      	sub	sp, #28
 80021dc:	af00      	add	r7, sp, #0
 80021de:	60f8      	str	r0, [r7, #12]
 80021e0:	60b9      	str	r1, [r7, #8]
 80021e2:	607a      	str	r2, [r7, #4]
	if(addr < 0 || addr > 0xFFFF || length < 0 || length > 0xFF || data < 0 || data > 0xFF)
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80021ea:	d208      	bcs.n	80021fe <memory_write+0x26>
 80021ec:	68bb      	ldr	r3, [r7, #8]
 80021ee:	2bff      	cmp	r3, #255	; 0xff
 80021f0:	d805      	bhi.n	80021fe <memory_write+0x26>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	db02      	blt.n	80021fe <memory_write+0x26>
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	2bff      	cmp	r3, #255	; 0xff
 80021fc:	dd01      	ble.n	8002202 <memory_write+0x2a>
		return false;
 80021fe:	2300      	movs	r3, #0
 8002200:	e019      	b.n	8002236 <memory_write+0x5e>

	if((0x10000 - addr) < length)
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
 8002208:	68ba      	ldr	r2, [r7, #8]
 800220a:	429a      	cmp	r2, r3
 800220c:	d901      	bls.n	8002212 <memory_write+0x3a>
		return false;
 800220e:	2300      	movs	r3, #0
 8002210:	e011      	b.n	8002236 <memory_write+0x5e>

	for(int i = 0; i < length; i++)
 8002212:	2300      	movs	r3, #0
 8002214:	617b      	str	r3, [r7, #20]
 8002216:	e009      	b.n	800222c <memory_write+0x54>
	{
		memory[addr++] = data;
 8002218:	68fb      	ldr	r3, [r7, #12]
 800221a:	1c5a      	adds	r2, r3, #1
 800221c:	60fa      	str	r2, [r7, #12]
 800221e:	687a      	ldr	r2, [r7, #4]
 8002220:	b2d1      	uxtb	r1, r2
 8002222:	4a08      	ldr	r2, [pc, #32]	; (8002244 <memory_write+0x6c>)
 8002224:	54d1      	strb	r1, [r2, r3]
	for(int i = 0; i < length; i++)
 8002226:	697b      	ldr	r3, [r7, #20]
 8002228:	3301      	adds	r3, #1
 800222a:	617b      	str	r3, [r7, #20]
 800222c:	697b      	ldr	r3, [r7, #20]
 800222e:	68ba      	ldr	r2, [r7, #8]
 8002230:	429a      	cmp	r2, r3
 8002232:	d8f1      	bhi.n	8002218 <memory_write+0x40>
	}

	return true;
 8002234:	2301      	movs	r3, #1
}
 8002236:	4618      	mov	r0, r3
 8002238:	371c      	adds	r7, #28
 800223a:	46bd      	mov	sp, r7
 800223c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop
 8002244:	2000042c 	.word	0x2000042c

08002248 <make_pin_input>:


bool make_pin_input(unsigned int port_addr, unsigned int pin_setting)
{
 8002248:	b580      	push	{r7, lr}
 800224a:	b08e      	sub	sp, #56	; 0x38
 800224c:	af00      	add	r7, sp, #0
 800224e:	6078      	str	r0, [r7, #4]
 8002250:	6039      	str	r1, [r7, #0]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	2b00      	cmp	r3, #0
 8002256:	d009      	beq.n	800226c <make_pin_input+0x24>
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	2b08      	cmp	r3, #8
 800225c:	d806      	bhi.n	800226c <make_pin_input+0x24>
 800225e:	683b      	ldr	r3, [r7, #0]
 8002260:	2b00      	cmp	r3, #0
 8002262:	d003      	beq.n	800226c <make_pin_input+0x24>
 8002264:	683b      	ldr	r3, [r7, #0]
 8002266:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800226a:	d301      	bcc.n	8002270 <make_pin_input+0x28>
		return false;
 800226c:	2300      	movs	r3, #0
 800226e:	e07f      	b.n	8002370 <make_pin_input+0x128>
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	3b05      	subs	r3, #5
 8002274:	2b06      	cmp	r3, #6
 8002276:	d85f      	bhi.n	8002338 <make_pin_input+0xf0>
 8002278:	a201      	add	r2, pc, #4	; (adr r2, 8002280 <make_pin_input+0x38>)
 800227a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800227e:	bf00      	nop
 8002280:	0800229d 	.word	0x0800229d
 8002284:	08002339 	.word	0x08002339
 8002288:	080022b7 	.word	0x080022b7
 800228c:	080022d1 	.word	0x080022d1
 8002290:	080022eb 	.word	0x080022eb
 8002294:	08002305 	.word	0x08002305
 8002298:	0800231f 	.word	0x0800231f

	switch(port_addr)
	{
	case  5: __HAL_RCC_GPIOE_CLK_ENABLE(); break;
 800229c:	4b36      	ldr	r3, [pc, #216]	; (8002378 <make_pin_input+0x130>)
 800229e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022a0:	4a35      	ldr	r2, [pc, #212]	; (8002378 <make_pin_input+0x130>)
 80022a2:	f043 0310 	orr.w	r3, r3, #16
 80022a6:	6313      	str	r3, [r2, #48]	; 0x30
 80022a8:	4b33      	ldr	r3, [pc, #204]	; (8002378 <make_pin_input+0x130>)
 80022aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ac:	f003 0310 	and.w	r3, r3, #16
 80022b0:	623b      	str	r3, [r7, #32]
 80022b2:	6a3b      	ldr	r3, [r7, #32]
 80022b4:	e040      	b.n	8002338 <make_pin_input+0xf0>
	case  7: __HAL_RCC_GPIOG_CLK_ENABLE(); break;
 80022b6:	4b30      	ldr	r3, [pc, #192]	; (8002378 <make_pin_input+0x130>)
 80022b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ba:	4a2f      	ldr	r2, [pc, #188]	; (8002378 <make_pin_input+0x130>)
 80022bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80022c0:	6313      	str	r3, [r2, #48]	; 0x30
 80022c2:	4b2d      	ldr	r3, [pc, #180]	; (8002378 <make_pin_input+0x130>)
 80022c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022c6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80022ca:	61fb      	str	r3, [r7, #28]
 80022cc:	69fb      	ldr	r3, [r7, #28]
 80022ce:	e033      	b.n	8002338 <make_pin_input+0xf0>
	case  8: __HAL_RCC_GPIOH_CLK_ENABLE(); break;
 80022d0:	4b29      	ldr	r3, [pc, #164]	; (8002378 <make_pin_input+0x130>)
 80022d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d4:	4a28      	ldr	r2, [pc, #160]	; (8002378 <make_pin_input+0x130>)
 80022d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80022da:	6313      	str	r3, [r2, #48]	; 0x30
 80022dc:	4b26      	ldr	r3, [pc, #152]	; (8002378 <make_pin_input+0x130>)
 80022de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022e4:	61bb      	str	r3, [r7, #24]
 80022e6:	69bb      	ldr	r3, [r7, #24]
 80022e8:	e026      	b.n	8002338 <make_pin_input+0xf0>
	case  9: __HAL_RCC_GPIOI_CLK_ENABLE(); break;
 80022ea:	4b23      	ldr	r3, [pc, #140]	; (8002378 <make_pin_input+0x130>)
 80022ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ee:	4a22      	ldr	r2, [pc, #136]	; (8002378 <make_pin_input+0x130>)
 80022f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80022f4:	6313      	str	r3, [r2, #48]	; 0x30
 80022f6:	4b20      	ldr	r3, [pc, #128]	; (8002378 <make_pin_input+0x130>)
 80022f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022fa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80022fe:	617b      	str	r3, [r7, #20]
 8002300:	697b      	ldr	r3, [r7, #20]
 8002302:	e019      	b.n	8002338 <make_pin_input+0xf0>
	case 10: __HAL_RCC_GPIOJ_CLK_ENABLE(); break;
 8002304:	4b1c      	ldr	r3, [pc, #112]	; (8002378 <make_pin_input+0x130>)
 8002306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002308:	4a1b      	ldr	r2, [pc, #108]	; (8002378 <make_pin_input+0x130>)
 800230a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800230e:	6313      	str	r3, [r2, #48]	; 0x30
 8002310:	4b19      	ldr	r3, [pc, #100]	; (8002378 <make_pin_input+0x130>)
 8002312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002314:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002318:	613b      	str	r3, [r7, #16]
 800231a:	693b      	ldr	r3, [r7, #16]
 800231c:	e00c      	b.n	8002338 <make_pin_input+0xf0>
	case 11: __HAL_RCC_GPIOK_CLK_ENABLE(); break;
 800231e:	4b16      	ldr	r3, [pc, #88]	; (8002378 <make_pin_input+0x130>)
 8002320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002322:	4a15      	ldr	r2, [pc, #84]	; (8002378 <make_pin_input+0x130>)
 8002324:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002328:	6313      	str	r3, [r2, #48]	; 0x30
 800232a:	4b13      	ldr	r3, [pc, #76]	; (8002378 <make_pin_input+0x130>)
 800232c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800232e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002332:	60fb      	str	r3, [r7, #12]
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	bf00      	nop
	}

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002338:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800233c:	2200      	movs	r2, #0
 800233e:	601a      	str	r2, [r3, #0]
 8002340:	605a      	str	r2, [r3, #4]
 8002342:	609a      	str	r2, [r3, #8]
 8002344:	60da      	str	r2, [r3, #12]
 8002346:	611a      	str	r2, [r3, #16]

	GPIO_InitStruct.Pin |= pin_setting;
 8002348:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800234a:	683b      	ldr	r3, [r7, #0]
 800234c:	4313      	orrs	r3, r2
 800234e:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002350:	2300      	movs	r3, #0
 8002352:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002354:	2300      	movs	r3, #0
 8002356:	62fb      	str	r3, [r7, #44]	; 0x2c

	HAL_GPIO_Init((GPIO_TypeDef *) (AHB1PERIPH_BASE + (0x0400UL * (port_addr-1))), &GPIO_InitStruct);
 8002358:	687a      	ldr	r2, [r7, #4]
 800235a:	4b08      	ldr	r3, [pc, #32]	; (800237c <make_pin_input+0x134>)
 800235c:	4413      	add	r3, r2
 800235e:	029b      	lsls	r3, r3, #10
 8002360:	461a      	mov	r2, r3
 8002362:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002366:	4619      	mov	r1, r3
 8002368:	4610      	mov	r0, r2
 800236a:	f002 f9a3 	bl	80046b4 <HAL_GPIO_Init>

	return true;
 800236e:	2301      	movs	r3, #1
}
 8002370:	4618      	mov	r0, r3
 8002372:	3738      	adds	r7, #56	; 0x38
 8002374:	46bd      	mov	sp, r7
 8002376:	bd80      	pop	{r7, pc}
 8002378:	40023800 	.word	0x40023800
 800237c:	0010007f 	.word	0x0010007f

08002380 <make_pin_output>:


bool make_pin_output(unsigned int port_addr, unsigned int pin_setting)
{
 8002380:	b580      	push	{r7, lr}
 8002382:	b08e      	sub	sp, #56	; 0x38
 8002384:	af00      	add	r7, sp, #0
 8002386:	6078      	str	r0, [r7, #4]
 8002388:	6039      	str	r1, [r7, #0]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	2b00      	cmp	r3, #0
 800238e:	d009      	beq.n	80023a4 <make_pin_output+0x24>
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	2b08      	cmp	r3, #8
 8002394:	d806      	bhi.n	80023a4 <make_pin_output+0x24>
 8002396:	683b      	ldr	r3, [r7, #0]
 8002398:	2b00      	cmp	r3, #0
 800239a:	d003      	beq.n	80023a4 <make_pin_output+0x24>
 800239c:	683b      	ldr	r3, [r7, #0]
 800239e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80023a2:	d301      	bcc.n	80023a8 <make_pin_output+0x28>
		return false;
 80023a4:	2300      	movs	r3, #0
 80023a6:	e081      	b.n	80024ac <make_pin_output+0x12c>
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	3b05      	subs	r3, #5
 80023ac:	2b06      	cmp	r3, #6
 80023ae:	d85f      	bhi.n	8002470 <make_pin_output+0xf0>
 80023b0:	a201      	add	r2, pc, #4	; (adr r2, 80023b8 <make_pin_output+0x38>)
 80023b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023b6:	bf00      	nop
 80023b8:	080023d5 	.word	0x080023d5
 80023bc:	08002471 	.word	0x08002471
 80023c0:	080023ef 	.word	0x080023ef
 80023c4:	08002409 	.word	0x08002409
 80023c8:	08002423 	.word	0x08002423
 80023cc:	0800243d 	.word	0x0800243d
 80023d0:	08002457 	.word	0x08002457

	switch(port_addr)
	{
	case  5: __HAL_RCC_GPIOE_CLK_ENABLE(); break;
 80023d4:	4b37      	ldr	r3, [pc, #220]	; (80024b4 <make_pin_output+0x134>)
 80023d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023d8:	4a36      	ldr	r2, [pc, #216]	; (80024b4 <make_pin_output+0x134>)
 80023da:	f043 0310 	orr.w	r3, r3, #16
 80023de:	6313      	str	r3, [r2, #48]	; 0x30
 80023e0:	4b34      	ldr	r3, [pc, #208]	; (80024b4 <make_pin_output+0x134>)
 80023e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023e4:	f003 0310 	and.w	r3, r3, #16
 80023e8:	623b      	str	r3, [r7, #32]
 80023ea:	6a3b      	ldr	r3, [r7, #32]
 80023ec:	e040      	b.n	8002470 <make_pin_output+0xf0>
	case  7: __HAL_RCC_GPIOG_CLK_ENABLE(); break;
 80023ee:	4b31      	ldr	r3, [pc, #196]	; (80024b4 <make_pin_output+0x134>)
 80023f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023f2:	4a30      	ldr	r2, [pc, #192]	; (80024b4 <make_pin_output+0x134>)
 80023f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80023f8:	6313      	str	r3, [r2, #48]	; 0x30
 80023fa:	4b2e      	ldr	r3, [pc, #184]	; (80024b4 <make_pin_output+0x134>)
 80023fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002402:	61fb      	str	r3, [r7, #28]
 8002404:	69fb      	ldr	r3, [r7, #28]
 8002406:	e033      	b.n	8002470 <make_pin_output+0xf0>
	case  8: __HAL_RCC_GPIOH_CLK_ENABLE(); break;
 8002408:	4b2a      	ldr	r3, [pc, #168]	; (80024b4 <make_pin_output+0x134>)
 800240a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800240c:	4a29      	ldr	r2, [pc, #164]	; (80024b4 <make_pin_output+0x134>)
 800240e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002412:	6313      	str	r3, [r2, #48]	; 0x30
 8002414:	4b27      	ldr	r3, [pc, #156]	; (80024b4 <make_pin_output+0x134>)
 8002416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002418:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800241c:	61bb      	str	r3, [r7, #24]
 800241e:	69bb      	ldr	r3, [r7, #24]
 8002420:	e026      	b.n	8002470 <make_pin_output+0xf0>
	case  9: __HAL_RCC_GPIOI_CLK_ENABLE(); break;
 8002422:	4b24      	ldr	r3, [pc, #144]	; (80024b4 <make_pin_output+0x134>)
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	4a23      	ldr	r2, [pc, #140]	; (80024b4 <make_pin_output+0x134>)
 8002428:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800242c:	6313      	str	r3, [r2, #48]	; 0x30
 800242e:	4b21      	ldr	r3, [pc, #132]	; (80024b4 <make_pin_output+0x134>)
 8002430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002432:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002436:	617b      	str	r3, [r7, #20]
 8002438:	697b      	ldr	r3, [r7, #20]
 800243a:	e019      	b.n	8002470 <make_pin_output+0xf0>
	case 10: __HAL_RCC_GPIOJ_CLK_ENABLE(); break;
 800243c:	4b1d      	ldr	r3, [pc, #116]	; (80024b4 <make_pin_output+0x134>)
 800243e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002440:	4a1c      	ldr	r2, [pc, #112]	; (80024b4 <make_pin_output+0x134>)
 8002442:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002446:	6313      	str	r3, [r2, #48]	; 0x30
 8002448:	4b1a      	ldr	r3, [pc, #104]	; (80024b4 <make_pin_output+0x134>)
 800244a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800244c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002450:	613b      	str	r3, [r7, #16]
 8002452:	693b      	ldr	r3, [r7, #16]
 8002454:	e00c      	b.n	8002470 <make_pin_output+0xf0>
	case 11: __HAL_RCC_GPIOK_CLK_ENABLE(); break;
 8002456:	4b17      	ldr	r3, [pc, #92]	; (80024b4 <make_pin_output+0x134>)
 8002458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800245a:	4a16      	ldr	r2, [pc, #88]	; (80024b4 <make_pin_output+0x134>)
 800245c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002460:	6313      	str	r3, [r2, #48]	; 0x30
 8002462:	4b14      	ldr	r3, [pc, #80]	; (80024b4 <make_pin_output+0x134>)
 8002464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002466:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800246a:	60fb      	str	r3, [r7, #12]
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	bf00      	nop
	}

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002470:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002474:	2200      	movs	r2, #0
 8002476:	601a      	str	r2, [r3, #0]
 8002478:	605a      	str	r2, [r3, #4]
 800247a:	609a      	str	r2, [r3, #8]
 800247c:	60da      	str	r2, [r3, #12]
 800247e:	611a      	str	r2, [r3, #16]

	GPIO_InitStruct.Pin |= pin_setting;
 8002480:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002482:	683b      	ldr	r3, [r7, #0]
 8002484:	4313      	orrs	r3, r2
 8002486:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002488:	2301      	movs	r3, #1
 800248a:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800248c:	2300      	movs	r3, #0
 800248e:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002490:	2300      	movs	r3, #0
 8002492:	633b      	str	r3, [r7, #48]	; 0x30

	// HAL_GPIO_WritePin(port_addr, GPIO_PIN_0, GPIO_PIN_RESET); reset antes de inicializar, pino a pino

	HAL_GPIO_Init((GPIO_TypeDef *) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1))), &GPIO_InitStruct);
 8002494:	687a      	ldr	r2, [r7, #4]
 8002496:	4b08      	ldr	r3, [pc, #32]	; (80024b8 <make_pin_output+0x138>)
 8002498:	4413      	add	r3, r2
 800249a:	029b      	lsls	r3, r3, #10
 800249c:	461a      	mov	r2, r3
 800249e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80024a2:	4619      	mov	r1, r3
 80024a4:	4610      	mov	r0, r2
 80024a6:	f002 f905 	bl	80046b4 <HAL_GPIO_Init>

	return true;
 80024aa:	2301      	movs	r3, #1
}
 80024ac:	4618      	mov	r0, r3
 80024ae:	3738      	adds	r7, #56	; 0x38
 80024b0:	46bd      	mov	sp, r7
 80024b2:	bd80      	pop	{r7, pc}
 80024b4:	40023800 	.word	0x40023800
 80024b8:	0010007f 	.word	0x0010007f

080024bc <read_dig_input>:

bool read_dig_input(unsigned int port_addr, unsigned int pin_setting, GPIO_PinState* pin_values)
{
 80024bc:	b590      	push	{r4, r7, lr}
 80024be:	b089      	sub	sp, #36	; 0x24
 80024c0:	af00      	add	r7, sp, #0
 80024c2:	60f8      	str	r0, [r7, #12]
 80024c4:	60b9      	str	r1, [r7, #8]
 80024c6:	607a      	str	r2, [r7, #4]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF)
 80024c8:	68fb      	ldr	r3, [r7, #12]
 80024ca:	2b00      	cmp	r3, #0
 80024cc:	d009      	beq.n	80024e2 <read_dig_input+0x26>
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	2b08      	cmp	r3, #8
 80024d2:	d806      	bhi.n	80024e2 <read_dig_input+0x26>
 80024d4:	68bb      	ldr	r3, [r7, #8]
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d003      	beq.n	80024e2 <read_dig_input+0x26>
 80024da:	68bb      	ldr	r3, [r7, #8]
 80024dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024e0:	d301      	bcc.n	80024e6 <read_dig_input+0x2a>
		return false;
 80024e2:	2300      	movs	r3, #0
 80024e4:	e02d      	b.n	8002542 <read_dig_input+0x86>

	int mask = 1;
 80024e6:	2301      	movs	r3, #1
 80024e8:	61fb      	str	r3, [r7, #28]

	for(int pin = 0; pin < 16; pin++)
 80024ea:	2300      	movs	r3, #0
 80024ec:	61bb      	str	r3, [r7, #24]
 80024ee:	e024      	b.n	800253a <read_dig_input+0x7e>
	{
		if(pin_setting & mask)
 80024f0:	69fa      	ldr	r2, [r7, #28]
 80024f2:	68bb      	ldr	r3, [r7, #8]
 80024f4:	4013      	ands	r3, r2
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d014      	beq.n	8002524 <read_dig_input+0x68>
		{
			GPIO_TypeDef* GPIOx = (GPIO_TypeDef*) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1)));
 80024fa:	68fa      	ldr	r2, [r7, #12]
 80024fc:	4b13      	ldr	r3, [pc, #76]	; (800254c <read_dig_input+0x90>)
 80024fe:	4413      	add	r3, r2
 8002500:	029b      	lsls	r3, r3, #10
 8002502:	617b      	str	r3, [r7, #20]
			uint16_t GPIO_Pin = (1 << pin);
 8002504:	2201      	movs	r2, #1
 8002506:	69bb      	ldr	r3, [r7, #24]
 8002508:	fa02 f303 	lsl.w	r3, r2, r3
 800250c:	827b      	strh	r3, [r7, #18]

			pin_values[pin] = HAL_GPIO_ReadPin(GPIOx, GPIO_Pin);
 800250e:	69bb      	ldr	r3, [r7, #24]
 8002510:	687a      	ldr	r2, [r7, #4]
 8002512:	18d4      	adds	r4, r2, r3
 8002514:	8a7b      	ldrh	r3, [r7, #18]
 8002516:	4619      	mov	r1, r3
 8002518:	6978      	ldr	r0, [r7, #20]
 800251a:	f002 fa77 	bl	8004a0c <HAL_GPIO_ReadPin>
 800251e:	4603      	mov	r3, r0
 8002520:	7023      	strb	r3, [r4, #0]
 8002522:	e004      	b.n	800252e <read_dig_input+0x72>
		}
		else
			pin_values[pin] = GPIO_PIN_RESET;
 8002524:	69bb      	ldr	r3, [r7, #24]
 8002526:	687a      	ldr	r2, [r7, #4]
 8002528:	4413      	add	r3, r2
 800252a:	2200      	movs	r2, #0
 800252c:	701a      	strb	r2, [r3, #0]

		mask <<= 1;
 800252e:	69fb      	ldr	r3, [r7, #28]
 8002530:	005b      	lsls	r3, r3, #1
 8002532:	61fb      	str	r3, [r7, #28]
	for(int pin = 0; pin < 16; pin++)
 8002534:	69bb      	ldr	r3, [r7, #24]
 8002536:	3301      	adds	r3, #1
 8002538:	61bb      	str	r3, [r7, #24]
 800253a:	69bb      	ldr	r3, [r7, #24]
 800253c:	2b0f      	cmp	r3, #15
 800253e:	ddd7      	ble.n	80024f0 <read_dig_input+0x34>
	}

	return true;
 8002540:	2301      	movs	r3, #1
}
 8002542:	4618      	mov	r0, r3
 8002544:	3724      	adds	r7, #36	; 0x24
 8002546:	46bd      	mov	sp, r7
 8002548:	bd90      	pop	{r4, r7, pc}
 800254a:	bf00      	nop
 800254c:	0010007f 	.word	0x0010007f

08002550 <write_dig_output>:

bool write_dig_output(unsigned int port_addr, unsigned int pin_setting, unsigned int pin_values)
{
 8002550:	b580      	push	{r7, lr}
 8002552:	b088      	sub	sp, #32
 8002554:	af00      	add	r7, sp, #0
 8002556:	60f8      	str	r0, [r7, #12]
 8002558:	60b9      	str	r1, [r7, #8]
 800255a:	607a      	str	r2, [r7, #4]
	if(port_addr < 0x01 || port_addr > 0x08 || pin_setting < 0x01 || pin_setting > 0xFFFF || pin_values < 0 || pin_values > 0xFFFF)
 800255c:	68fb      	ldr	r3, [r7, #12]
 800255e:	2b00      	cmp	r3, #0
 8002560:	d00d      	beq.n	800257e <write_dig_output+0x2e>
 8002562:	68fb      	ldr	r3, [r7, #12]
 8002564:	2b08      	cmp	r3, #8
 8002566:	d80a      	bhi.n	800257e <write_dig_output+0x2e>
 8002568:	68bb      	ldr	r3, [r7, #8]
 800256a:	2b00      	cmp	r3, #0
 800256c:	d007      	beq.n	800257e <write_dig_output+0x2e>
 800256e:	68bb      	ldr	r3, [r7, #8]
 8002570:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002574:	d203      	bcs.n	800257e <write_dig_output+0x2e>
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800257c:	d301      	bcc.n	8002582 <write_dig_output+0x32>
		return false;
 800257e:	2300      	movs	r3, #0
 8002580:	e02a      	b.n	80025d8 <write_dig_output+0x88>

	int mask = 1;
 8002582:	2301      	movs	r3, #1
 8002584:	61fb      	str	r3, [r7, #28]

	for(int pin = 0; pin < 16; pin++)
 8002586:	2300      	movs	r3, #0
 8002588:	61bb      	str	r3, [r7, #24]
 800258a:	e021      	b.n	80025d0 <write_dig_output+0x80>
	{
		if(pin_setting & mask)
 800258c:	69fa      	ldr	r2, [r7, #28]
 800258e:	68bb      	ldr	r3, [r7, #8]
 8002590:	4013      	ands	r3, r2
 8002592:	2b00      	cmp	r3, #0
 8002594:	d016      	beq.n	80025c4 <write_dig_output+0x74>
		{
			GPIO_TypeDef* GPIOx = (GPIO_TypeDef*) (AHB1PERIPH_BASE + (0x0400UL * (port_addr - 1)));
 8002596:	68fa      	ldr	r2, [r7, #12]
 8002598:	4b11      	ldr	r3, [pc, #68]	; (80025e0 <write_dig_output+0x90>)
 800259a:	4413      	add	r3, r2
 800259c:	029b      	lsls	r3, r3, #10
 800259e:	617b      	str	r3, [r7, #20]
			uint16_t GPIO_Pin = (1 << pin);
 80025a0:	2201      	movs	r2, #1
 80025a2:	69bb      	ldr	r3, [r7, #24]
 80025a4:	fa02 f303 	lsl.w	r3, r2, r3
 80025a8:	827b      	strh	r3, [r7, #18]
			GPIO_PinState PinState = (pin_values & mask) >> pin;
 80025aa:	69fa      	ldr	r2, [r7, #28]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	401a      	ands	r2, r3
 80025b0:	69bb      	ldr	r3, [r7, #24]
 80025b2:	fa22 f303 	lsr.w	r3, r2, r3
 80025b6:	747b      	strb	r3, [r7, #17]

			HAL_GPIO_WritePin(GPIOx, GPIO_Pin, PinState);
 80025b8:	7c7a      	ldrb	r2, [r7, #17]
 80025ba:	8a7b      	ldrh	r3, [r7, #18]
 80025bc:	4619      	mov	r1, r3
 80025be:	6978      	ldr	r0, [r7, #20]
 80025c0:	f002 fa3c 	bl	8004a3c <HAL_GPIO_WritePin>
		}
		mask <<= 1;
 80025c4:	69fb      	ldr	r3, [r7, #28]
 80025c6:	005b      	lsls	r3, r3, #1
 80025c8:	61fb      	str	r3, [r7, #28]
	for(int pin = 0; pin < 16; pin++)
 80025ca:	69bb      	ldr	r3, [r7, #24]
 80025cc:	3301      	adds	r3, #1
 80025ce:	61bb      	str	r3, [r7, #24]
 80025d0:	69bb      	ldr	r3, [r7, #24]
 80025d2:	2b0f      	cmp	r3, #15
 80025d4:	ddda      	ble.n	800258c <write_dig_output+0x3c>
	}

	return true;
 80025d6:	2301      	movs	r3, #1
}
 80025d8:	4618      	mov	r0, r3
 80025da:	3720      	adds	r7, #32
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	0010007f 	.word	0x0010007f

080025e4 <analog_read>:

bool analog_read(unsigned int addr3, unsigned int* value)
{
 80025e4:	b580      	push	{r7, lr}
 80025e6:	b082      	sub	sp, #8
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	6078      	str	r0, [r7, #4]
 80025ec:	6039      	str	r1, [r7, #0]
	if(addr3 < 0 || addr3 > 0x0F)
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	2b0f      	cmp	r3, #15
 80025f2:	d901      	bls.n	80025f8 <analog_read+0x14>
		return false;
 80025f4:	2300      	movs	r3, #0
 80025f6:	e00b      	b.n	8002610 <analog_read+0x2c>

	MX_ADC3_Init1(true);
 80025f8:	2001      	movs	r0, #1
 80025fa:	f7fe f9f9 	bl	80009f0 <MX_ADC3_Init1>
	config_ADC(addr3);
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f7fe fb28 	bl	8000c54 <config_ADC>
	*value = read_ADC();
 8002604:	f7fe fb44 	bl	8000c90 <read_ADC>
 8002608:	4602      	mov	r2, r0
 800260a:	683b      	ldr	r3, [r7, #0]
 800260c:	601a      	str	r2, [r3, #0]

	return true;
 800260e:	2301      	movs	r3, #1
}
 8002610:	4618      	mov	r0, r3
 8002612:	3708      	adds	r7, #8
 8002614:	46bd      	mov	sp, r7
 8002616:	bd80      	pop	{r7, pc}

08002618 <analog_write>:

bool analog_write(unsigned int addr3, uint32_t value)
{
 8002618:	b580      	push	{r7, lr}
 800261a:	b082      	sub	sp, #8
 800261c:	af00      	add	r7, sp, #0
 800261e:	6078      	str	r0, [r7, #4]
 8002620:	6039      	str	r1, [r7, #0]
	if(addr3 < 0 || addr3 > 0x01)
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	2b01      	cmp	r3, #1
 8002626:	d901      	bls.n	800262c <analog_write+0x14>
		return false;
 8002628:	2300      	movs	r3, #0
 800262a:	e01a      	b.n	8002662 <analog_write+0x4a>

	if(HAL_DAC_Start(&hdac, (addr3 ? DAC_CHANNEL_2 : DAC_CHANNEL_1)) == HAL_OK){
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d001      	beq.n	8002636 <analog_write+0x1e>
 8002632:	2310      	movs	r3, #16
 8002634:	e000      	b.n	8002638 <analog_write+0x20>
 8002636:	2300      	movs	r3, #0
 8002638:	4619      	mov	r1, r3
 800263a:	480c      	ldr	r0, [pc, #48]	; (800266c <analog_write+0x54>)
 800263c:	f001 fee1 	bl	8004402 <HAL_DAC_Start>
 8002640:	4603      	mov	r3, r0
 8002642:	2b00      	cmp	r3, #0
 8002644:	d10c      	bne.n	8002660 <analog_write+0x48>
	    HAL_DAC_SetValue(&hdac, (addr3 ? DAC_CHANNEL_2 : DAC_CHANNEL_1), DAC_ALIGN_12B_R, value);
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2b00      	cmp	r3, #0
 800264a:	d001      	beq.n	8002650 <analog_write+0x38>
 800264c:	2110      	movs	r1, #16
 800264e:	e000      	b.n	8002652 <analog_write+0x3a>
 8002650:	2100      	movs	r1, #0
 8002652:	683b      	ldr	r3, [r7, #0]
 8002654:	2200      	movs	r2, #0
 8002656:	4805      	ldr	r0, [pc, #20]	; (800266c <analog_write+0x54>)
 8002658:	f001 ff25 	bl	80044a6 <HAL_DAC_SetValue>
	    return true;
 800265c:	2301      	movs	r3, #1
 800265e:	e000      	b.n	8002662 <analog_write+0x4a>
	}else
		return false;
 8002660:	2300      	movs	r3, #0
}
 8002662:	4618      	mov	r0, r3
 8002664:	3708      	adds	r7, #8
 8002666:	46bd      	mov	sp, r7
 8002668:	bd80      	pop	{r7, pc}
 800266a:	bf00      	nop
 800266c:	20018688 	.word	0x20018688

08002670 <process_buf_nf>:
	process_buf_ff

};

void process_buf_nf(uint32_t* x_buf, int n)
{
 8002670:	b580      	push	{r7, lr}
 8002672:	b082      	sub	sp, #8
 8002674:	af00      	add	r7, sp, #0
 8002676:	6078      	str	r0, [r7, #4]
 8002678:	6039      	str	r1, [r7, #0]
	y_buf[n] = x_buf[n];
 800267a:	683b      	ldr	r3, [r7, #0]
 800267c:	009b      	lsls	r3, r3, #2
 800267e:	687a      	ldr	r2, [r7, #4]
 8002680:	4413      	add	r3, r2
 8002682:	681a      	ldr	r2, [r3, #0]
 8002684:	4907      	ldr	r1, [pc, #28]	; (80026a4 <process_buf_nf+0x34>)
 8002686:	683b      	ldr	r3, [r7, #0]
 8002688:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	analog_write(0,y_buf[n]);
 800268c:	4a05      	ldr	r2, [pc, #20]	; (80026a4 <process_buf_nf+0x34>)
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002694:	4619      	mov	r1, r3
 8002696:	2000      	movs	r0, #0
 8002698:	f7ff ffbe 	bl	8002618 <analog_write>
}
 800269c:	bf00      	nop
 800269e:	3708      	adds	r7, #8
 80026a0:	46bd      	mov	sp, r7
 80026a2:	bd80      	pop	{r7, pc}
 80026a4:	20014688 	.word	0x20014688

080026a8 <process_buf_if>:

void process_buf_if(uint32_t* x_buf, int n)
{
 80026a8:	b580      	push	{r7, lr}
 80026aa:	b082      	sub	sp, #8
 80026ac:	af00      	add	r7, sp, #0
 80026ae:	6078      	str	r0, [r7, #4]
 80026b0:	6039      	str	r1, [r7, #0]

	y_buf[n+1] = a * y_buf[n] + (1-a) * x_buf[n];
 80026b2:	4a1d      	ldr	r2, [pc, #116]	; (8002728 <process_buf_if+0x80>)
 80026b4:	683b      	ldr	r3, [r7, #0]
 80026b6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80026ba:	ee07 3a90 	vmov	s15, r3
 80026be:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80026c2:	ed9f 6b15 	vldr	d6, [pc, #84]	; 8002718 <process_buf_if+0x70>
 80026c6:	ee27 6b06 	vmul.f64	d6, d7, d6
 80026ca:	683b      	ldr	r3, [r7, #0]
 80026cc:	009b      	lsls	r3, r3, #2
 80026ce:	687a      	ldr	r2, [r7, #4]
 80026d0:	4413      	add	r3, r2
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	ee07 3a90 	vmov	s15, r3
 80026d8:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80026dc:	ed9f 5b10 	vldr	d5, [pc, #64]	; 8002720 <process_buf_if+0x78>
 80026e0:	ee27 7b05 	vmul.f64	d7, d7, d5
 80026e4:	ee36 7b07 	vadd.f64	d7, d6, d7
 80026e8:	683b      	ldr	r3, [r7, #0]
 80026ea:	3301      	adds	r3, #1
 80026ec:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80026f0:	ee17 1a90 	vmov	r1, s15
 80026f4:	4a0c      	ldr	r2, [pc, #48]	; (8002728 <process_buf_if+0x80>)
 80026f6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		temp += coef_bk[i] * x_buf[(n-i) & (ADC_BUF_SIZE - 1)];
	 }

	y_buf[n] = temp;
	*/
	analog_write(0,y_buf[n]);
 80026fa:	4a0b      	ldr	r2, [pc, #44]	; (8002728 <process_buf_if+0x80>)
 80026fc:	683b      	ldr	r3, [r7, #0]
 80026fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002702:	4619      	mov	r1, r3
 8002704:	2000      	movs	r0, #0
 8002706:	f7ff ff87 	bl	8002618 <analog_write>
}
 800270a:	bf00      	nop
 800270c:	3708      	adds	r7, #8
 800270e:	46bd      	mov	sp, r7
 8002710:	bd80      	pop	{r7, pc}
 8002712:	bf00      	nop
 8002714:	f3af 8000 	nop.w
 8002718:	9999999a 	.word	0x9999999a
 800271c:	3fd99999 	.word	0x3fd99999
 8002720:	33333333 	.word	0x33333333
 8002724:	3fe33333 	.word	0x3fe33333
 8002728:	20014688 	.word	0x20014688

0800272c <process_buf_ff>:

void process_buf_ff(uint32_t* x_buf, int n)
{
 800272c:	b580      	push	{r7, lr}
 800272e:	b084      	sub	sp, #16
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]
 8002734:	6039      	str	r1, [r7, #0]
	unsigned int temp = 0;
 8002736:	2300      	movs	r3, #0
 8002738:	60fb      	str	r3, [r7, #12]

	for(int i = 0 ; i < M; i++)
 800273a:	2300      	movs	r3, #0
 800273c:	60bb      	str	r3, [r7, #8]
 800273e:	e023      	b.n	8002788 <process_buf_ff+0x5c>
	{
		temp += coef[i] * x_buf[(n-i) & (ADC_BUF_SIZE - 1)];
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	ee07 3a90 	vmov	s15, r3
 8002746:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800274a:	4a19      	ldr	r2, [pc, #100]	; (80027b0 <process_buf_ff+0x84>)
 800274c:	68bb      	ldr	r3, [r7, #8]
 800274e:	009b      	lsls	r3, r3, #2
 8002750:	4413      	add	r3, r2
 8002752:	edd3 6a00 	vldr	s13, [r3]
 8002756:	683a      	ldr	r2, [r7, #0]
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	1ad3      	subs	r3, r2, r3
 800275c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002760:	009b      	lsls	r3, r3, #2
 8002762:	687a      	ldr	r2, [r7, #4]
 8002764:	4413      	add	r3, r2
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	ee07 3a90 	vmov	s15, r3
 800276c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002770:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002774:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002778:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800277c:	ee17 3a90 	vmov	r3, s15
 8002780:	60fb      	str	r3, [r7, #12]
	for(int i = 0 ; i < M; i++)
 8002782:	68bb      	ldr	r3, [r7, #8]
 8002784:	3301      	adds	r3, #1
 8002786:	60bb      	str	r3, [r7, #8]
 8002788:	68bb      	ldr	r3, [r7, #8]
 800278a:	2b19      	cmp	r3, #25
 800278c:	ddd8      	ble.n	8002740 <process_buf_ff+0x14>
	}
	y_buf[n] = temp;
 800278e:	4909      	ldr	r1, [pc, #36]	; (80027b4 <process_buf_ff+0x88>)
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	68fa      	ldr	r2, [r7, #12]
 8002794:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	analog_write(0,y_buf[n]);
 8002798:	4a06      	ldr	r2, [pc, #24]	; (80027b4 <process_buf_ff+0x88>)
 800279a:	683b      	ldr	r3, [r7, #0]
 800279c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80027a0:	4619      	mov	r1, r3
 80027a2:	2000      	movs	r0, #0
 80027a4:	f7ff ff38 	bl	8002618 <analog_write>
}
 80027a8:	bf00      	nop
 80027aa:	3710      	adds	r7, #16
 80027ac:	46bd      	mov	sp, r7
 80027ae:	bd80      	pop	{r7, pc}
 80027b0:	200000a0 	.word	0x200000a0
 80027b4:	20014688 	.word	0x20014688

080027b8 <process_buf>:

void process_buf(uint32_t* x_buf, int n)
{
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b08a      	sub	sp, #40	; 0x28
 80027bc:	af02      	add	r7, sp, #8
 80027be:	6078      	str	r0, [r7, #4]
 80027c0:	6039      	str	r1, [r7, #0]
	process_buf_func[sp_config.filter_type](x_buf,n);
 80027c2:	4b2f      	ldr	r3, [pc, #188]	; (8002880 <process_buf+0xc8>)
 80027c4:	7b9b      	ldrb	r3, [r3, #14]
 80027c6:	461a      	mov	r2, r3
 80027c8:	4b2e      	ldr	r3, [pc, #184]	; (8002884 <process_buf+0xcc>)
 80027ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80027ce:	6839      	ldr	r1, [r7, #0]
 80027d0:	6878      	ldr	r0, [r7, #4]
 80027d2:	4798      	blx	r3

	counter ++;
 80027d4:	4b2c      	ldr	r3, [pc, #176]	; (8002888 <process_buf+0xd0>)
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	3301      	adds	r3, #1
 80027da:	4a2b      	ldr	r2, [pc, #172]	; (8002888 <process_buf+0xd0>)
 80027dc:	6013      	str	r3, [r2, #0]

	if(sp_config.sp_limit > 0)
 80027de:	4b28      	ldr	r3, [pc, #160]	; (8002880 <process_buf+0xc8>)
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d047      	beq.n	8002876 <process_buf+0xbe>
	{
		char message[22] = {"\0"};
 80027e6:	2300      	movs	r3, #0
 80027e8:	60bb      	str	r3, [r7, #8]
 80027ea:	f107 030c 	add.w	r3, r7, #12
 80027ee:	2200      	movs	r2, #0
 80027f0:	601a      	str	r2, [r3, #0]
 80027f2:	605a      	str	r2, [r3, #4]
 80027f4:	609a      	str	r2, [r3, #8]
 80027f6:	60da      	str	r2, [r3, #12]
 80027f8:	821a      	strh	r2, [r3, #16]
		sprintf(message, "%d;%lu;%lu;", counter , x_buf[n], y_buf[n]);
 80027fa:	4b23      	ldr	r3, [pc, #140]	; (8002888 <process_buf+0xd0>)
 80027fc:	6819      	ldr	r1, [r3, #0]
 80027fe:	683b      	ldr	r3, [r7, #0]
 8002800:	009b      	lsls	r3, r3, #2
 8002802:	687a      	ldr	r2, [r7, #4]
 8002804:	4413      	add	r3, r2
 8002806:	681a      	ldr	r2, [r3, #0]
 8002808:	4820      	ldr	r0, [pc, #128]	; (800288c <process_buf+0xd4>)
 800280a:	683b      	ldr	r3, [r7, #0]
 800280c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8002810:	f107 0008 	add.w	r0, r7, #8
 8002814:	9300      	str	r3, [sp, #0]
 8002816:	4613      	mov	r3, r2
 8002818:	460a      	mov	r2, r1
 800281a:	491d      	ldr	r1, [pc, #116]	; (8002890 <process_buf+0xd8>)
 800281c:	f006 ffd4 	bl	80097c8 <siprintf>
		send_UART(message);
 8002820:	f107 0308 	add.w	r3, r7, #8
 8002824:	4618      	mov	r0, r3
 8002826:	f000 fe4b 	bl	80034c0 <send_UART>

		if(counter == sp_config.sp_limit)
 800282a:	4b15      	ldr	r3, [pc, #84]	; (8002880 <process_buf+0xc8>)
 800282c:	689a      	ldr	r2, [r3, #8]
 800282e:	4b16      	ldr	r3, [pc, #88]	; (8002888 <process_buf+0xd0>)
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	429a      	cmp	r2, r3
 8002834:	d11f      	bne.n	8002876 <process_buf+0xbe>
		{
			counter = 0;
 8002836:	4b14      	ldr	r3, [pc, #80]	; (8002888 <process_buf+0xd0>)
 8002838:	2200      	movs	r2, #0
 800283a:	601a      	str	r2, [r3, #0]
			analog_write(0,0);
 800283c:	2100      	movs	r1, #0
 800283e:	2000      	movs	r0, #0
 8002840:	f7ff feea 	bl	8002618 <analog_write>
			HAL_ADC_Stop_IT(&hadc3);
 8002844:	4813      	ldr	r0, [pc, #76]	; (8002894 <process_buf+0xdc>)
 8002846:	f001 f8df 	bl	8003a08 <HAL_ADC_Stop_IT>
			HAL_TIM_Base_Stop_IT(&htim1);
 800284a:	4813      	ldr	r0, [pc, #76]	; (8002898 <process_buf+0xe0>)
 800284c:	f003 fb22 	bl	8005e94 <HAL_TIM_Base_Stop_IT>
		    HAL_NVIC_SetPriority(ADC_IRQn, 2, 0);
 8002850:	2200      	movs	r2, #0
 8002852:	2102      	movs	r1, #2
 8002854:	2012      	movs	r0, #18
 8002856:	f001 fd7c 	bl	8004352 <HAL_NVIC_SetPriority>
			while(is_transmitting_to_UART());
 800285a:	bf00      	nop
 800285c:	f000 fe0c 	bl	8003478 <is_transmitting_to_UART>
 8002860:	4603      	mov	r3, r0
 8002862:	2b00      	cmp	r3, #0
 8002864:	d1fa      	bne.n	800285c <process_buf+0xa4>
			HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 8002866:	2200      	movs	r2, #0
 8002868:	2100      	movs	r1, #0
 800286a:	2012      	movs	r0, #18
 800286c:	f001 fd71 	bl	8004352 <HAL_NVIC_SetPriority>
			send_UART("Sampling Stopped.\n>");
 8002870:	480a      	ldr	r0, [pc, #40]	; (800289c <process_buf+0xe4>)
 8002872:	f000 fe25 	bl	80034c0 <send_UART>
		}
	}
}
 8002876:	bf00      	nop
 8002878:	3720      	adds	r7, #32
 800287a:	46bd      	mov	sp, r7
 800287c:	bd80      	pop	{r7, pc}
 800287e:	bf00      	nop
 8002880:	20000090 	.word	0x20000090
 8002884:	20000084 	.word	0x20000084
 8002888:	20000308 	.word	0x20000308
 800288c:	20014688 	.word	0x20014688
 8002890:	0800e6bc 	.word	0x0800e6bc
 8002894:	20010430 	.word	0x20010430
 8002898:	2001869c 	.word	0x2001869c
 800289c:	0800e6c8 	.word	0x0800e6c8

080028a0 <MX_DAC_Init>:
 80028a0:	b580      	push	{r7, lr}
 80028a2:	b082      	sub	sp, #8
 80028a4:	af00      	add	r7, sp, #0
 80028a6:	463b      	mov	r3, r7
 80028a8:	2200      	movs	r2, #0
 80028aa:	601a      	str	r2, [r3, #0]
 80028ac:	605a      	str	r2, [r3, #4]
 80028ae:	4b14      	ldr	r3, [pc, #80]	; (8002900 <MX_DAC_Init+0x60>)
 80028b0:	4a14      	ldr	r2, [pc, #80]	; (8002904 <MX_DAC_Init+0x64>)
 80028b2:	601a      	str	r2, [r3, #0]
 80028b4:	4812      	ldr	r0, [pc, #72]	; (8002900 <MX_DAC_Init+0x60>)
 80028b6:	f001 fd82 	bl	80043be <HAL_DAC_Init>
 80028ba:	4603      	mov	r3, r0
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d001      	beq.n	80028c4 <MX_DAC_Init+0x24>
 80028c0:	f000 f9f4 	bl	8002cac <Error_Handler>
 80028c4:	2300      	movs	r3, #0
 80028c6:	603b      	str	r3, [r7, #0]
 80028c8:	2300      	movs	r3, #0
 80028ca:	607b      	str	r3, [r7, #4]
 80028cc:	463b      	mov	r3, r7
 80028ce:	2200      	movs	r2, #0
 80028d0:	4619      	mov	r1, r3
 80028d2:	480b      	ldr	r0, [pc, #44]	; (8002900 <MX_DAC_Init+0x60>)
 80028d4:	f001 fe0c 	bl	80044f0 <HAL_DAC_ConfigChannel>
 80028d8:	4603      	mov	r3, r0
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d001      	beq.n	80028e2 <MX_DAC_Init+0x42>
 80028de:	f000 f9e5 	bl	8002cac <Error_Handler>
 80028e2:	463b      	mov	r3, r7
 80028e4:	2210      	movs	r2, #16
 80028e6:	4619      	mov	r1, r3
 80028e8:	4805      	ldr	r0, [pc, #20]	; (8002900 <MX_DAC_Init+0x60>)
 80028ea:	f001 fe01 	bl	80044f0 <HAL_DAC_ConfigChannel>
 80028ee:	4603      	mov	r3, r0
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d001      	beq.n	80028f8 <MX_DAC_Init+0x58>
 80028f4:	f000 f9da 	bl	8002cac <Error_Handler>
 80028f8:	bf00      	nop
 80028fa:	3708      	adds	r7, #8
 80028fc:	46bd      	mov	sp, r7
 80028fe:	bd80      	pop	{r7, pc}
 8002900:	20018688 	.word	0x20018688
 8002904:	40007400 	.word	0x40007400

08002908 <HAL_DAC_MspInit>:
 8002908:	b580      	push	{r7, lr}
 800290a:	b08a      	sub	sp, #40	; 0x28
 800290c:	af00      	add	r7, sp, #0
 800290e:	6078      	str	r0, [r7, #4]
 8002910:	f107 0314 	add.w	r3, r7, #20
 8002914:	2200      	movs	r2, #0
 8002916:	601a      	str	r2, [r3, #0]
 8002918:	605a      	str	r2, [r3, #4]
 800291a:	609a      	str	r2, [r3, #8]
 800291c:	60da      	str	r2, [r3, #12]
 800291e:	611a      	str	r2, [r3, #16]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	4a15      	ldr	r2, [pc, #84]	; (800297c <HAL_DAC_MspInit+0x74>)
 8002926:	4293      	cmp	r3, r2
 8002928:	d123      	bne.n	8002972 <HAL_DAC_MspInit+0x6a>
 800292a:	4b15      	ldr	r3, [pc, #84]	; (8002980 <HAL_DAC_MspInit+0x78>)
 800292c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800292e:	4a14      	ldr	r2, [pc, #80]	; (8002980 <HAL_DAC_MspInit+0x78>)
 8002930:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8002934:	6413      	str	r3, [r2, #64]	; 0x40
 8002936:	4b12      	ldr	r3, [pc, #72]	; (8002980 <HAL_DAC_MspInit+0x78>)
 8002938:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800293a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800293e:	613b      	str	r3, [r7, #16]
 8002940:	693b      	ldr	r3, [r7, #16]
 8002942:	4b0f      	ldr	r3, [pc, #60]	; (8002980 <HAL_DAC_MspInit+0x78>)
 8002944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002946:	4a0e      	ldr	r2, [pc, #56]	; (8002980 <HAL_DAC_MspInit+0x78>)
 8002948:	f043 0301 	orr.w	r3, r3, #1
 800294c:	6313      	str	r3, [r2, #48]	; 0x30
 800294e:	4b0c      	ldr	r3, [pc, #48]	; (8002980 <HAL_DAC_MspInit+0x78>)
 8002950:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002952:	f003 0301 	and.w	r3, r3, #1
 8002956:	60fb      	str	r3, [r7, #12]
 8002958:	68fb      	ldr	r3, [r7, #12]
 800295a:	2330      	movs	r3, #48	; 0x30
 800295c:	617b      	str	r3, [r7, #20]
 800295e:	2303      	movs	r3, #3
 8002960:	61bb      	str	r3, [r7, #24]
 8002962:	2300      	movs	r3, #0
 8002964:	61fb      	str	r3, [r7, #28]
 8002966:	f107 0314 	add.w	r3, r7, #20
 800296a:	4619      	mov	r1, r3
 800296c:	4805      	ldr	r0, [pc, #20]	; (8002984 <HAL_DAC_MspInit+0x7c>)
 800296e:	f001 fea1 	bl	80046b4 <HAL_GPIO_Init>
 8002972:	bf00      	nop
 8002974:	3728      	adds	r7, #40	; 0x28
 8002976:	46bd      	mov	sp, r7
 8002978:	bd80      	pop	{r7, pc}
 800297a:	bf00      	nop
 800297c:	40007400 	.word	0x40007400
 8002980:	40023800 	.word	0x40023800
 8002984:	40020000 	.word	0x40020000

08002988 <MX_GPIO_Init>:
 8002988:	b580      	push	{r7, lr}
 800298a:	b08c      	sub	sp, #48	; 0x30
 800298c:	af00      	add	r7, sp, #0
 800298e:	f107 031c 	add.w	r3, r7, #28
 8002992:	2200      	movs	r2, #0
 8002994:	601a      	str	r2, [r3, #0]
 8002996:	605a      	str	r2, [r3, #4]
 8002998:	609a      	str	r2, [r3, #8]
 800299a:	60da      	str	r2, [r3, #12]
 800299c:	611a      	str	r2, [r3, #16]
 800299e:	4b3b      	ldr	r3, [pc, #236]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a2:	4a3a      	ldr	r2, [pc, #232]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029a4:	f043 0320 	orr.w	r3, r3, #32
 80029a8:	6313      	str	r3, [r2, #48]	; 0x30
 80029aa:	4b38      	ldr	r3, [pc, #224]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ae:	f003 0320 	and.w	r3, r3, #32
 80029b2:	61bb      	str	r3, [r7, #24]
 80029b4:	69bb      	ldr	r3, [r7, #24]
 80029b6:	4b35      	ldr	r3, [pc, #212]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ba:	4a34      	ldr	r2, [pc, #208]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029bc:	f043 0304 	orr.w	r3, r3, #4
 80029c0:	6313      	str	r3, [r2, #48]	; 0x30
 80029c2:	4b32      	ldr	r3, [pc, #200]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029c6:	f003 0304 	and.w	r3, r3, #4
 80029ca:	617b      	str	r3, [r7, #20]
 80029cc:	697b      	ldr	r3, [r7, #20]
 80029ce:	4b2f      	ldr	r3, [pc, #188]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d2:	4a2e      	ldr	r2, [pc, #184]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029d4:	f043 0301 	orr.w	r3, r3, #1
 80029d8:	6313      	str	r3, [r2, #48]	; 0x30
 80029da:	4b2c      	ldr	r3, [pc, #176]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029de:	f003 0301 	and.w	r3, r3, #1
 80029e2:	613b      	str	r3, [r7, #16]
 80029e4:	693b      	ldr	r3, [r7, #16]
 80029e6:	4b29      	ldr	r3, [pc, #164]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ea:	4a28      	ldr	r2, [pc, #160]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029ec:	f043 0302 	orr.w	r3, r3, #2
 80029f0:	6313      	str	r3, [r2, #48]	; 0x30
 80029f2:	4b26      	ldr	r3, [pc, #152]	; (8002a8c <MX_GPIO_Init+0x104>)
 80029f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029f6:	f003 0302 	and.w	r3, r3, #2
 80029fa:	60fb      	str	r3, [r7, #12]
 80029fc:	68fb      	ldr	r3, [r7, #12]
 80029fe:	4b23      	ldr	r3, [pc, #140]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a02:	4a22      	ldr	r2, [pc, #136]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a04:	f043 0310 	orr.w	r3, r3, #16
 8002a08:	6313      	str	r3, [r2, #48]	; 0x30
 8002a0a:	4b20      	ldr	r3, [pc, #128]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a0e:	f003 0310 	and.w	r3, r3, #16
 8002a12:	60bb      	str	r3, [r7, #8]
 8002a14:	68bb      	ldr	r3, [r7, #8]
 8002a16:	4b1d      	ldr	r3, [pc, #116]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a1a:	4a1c      	ldr	r2, [pc, #112]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a1c:	f043 0308 	orr.w	r3, r3, #8
 8002a20:	6313      	str	r3, [r2, #48]	; 0x30
 8002a22:	4b1a      	ldr	r3, [pc, #104]	; (8002a8c <MX_GPIO_Init+0x104>)
 8002a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a26:	f003 0308 	and.w	r3, r3, #8
 8002a2a:	607b      	str	r3, [r7, #4]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	2200      	movs	r2, #0
 8002a30:	f240 4101 	movw	r1, #1025	; 0x401
 8002a34:	4816      	ldr	r0, [pc, #88]	; (8002a90 <MX_GPIO_Init+0x108>)
 8002a36:	f002 f801 	bl	8004a3c <HAL_GPIO_WritePin>
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002a40:	4814      	ldr	r0, [pc, #80]	; (8002a94 <MX_GPIO_Init+0x10c>)
 8002a42:	f001 fffb 	bl	8004a3c <HAL_GPIO_WritePin>
 8002a46:	f240 4301 	movw	r3, #1025	; 0x401
 8002a4a:	61fb      	str	r3, [r7, #28]
 8002a4c:	2301      	movs	r3, #1
 8002a4e:	623b      	str	r3, [r7, #32]
 8002a50:	2300      	movs	r3, #0
 8002a52:	627b      	str	r3, [r7, #36]	; 0x24
 8002a54:	2300      	movs	r3, #0
 8002a56:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a58:	f107 031c 	add.w	r3, r7, #28
 8002a5c:	4619      	mov	r1, r3
 8002a5e:	480c      	ldr	r0, [pc, #48]	; (8002a90 <MX_GPIO_Init+0x108>)
 8002a60:	f001 fe28 	bl	80046b4 <HAL_GPIO_Init>
 8002a64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002a68:	61fb      	str	r3, [r7, #28]
 8002a6a:	2301      	movs	r3, #1
 8002a6c:	623b      	str	r3, [r7, #32]
 8002a6e:	2300      	movs	r3, #0
 8002a70:	627b      	str	r3, [r7, #36]	; 0x24
 8002a72:	2300      	movs	r3, #0
 8002a74:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a76:	f107 031c 	add.w	r3, r7, #28
 8002a7a:	4619      	mov	r1, r3
 8002a7c:	4805      	ldr	r0, [pc, #20]	; (8002a94 <MX_GPIO_Init+0x10c>)
 8002a7e:	f001 fe19 	bl	80046b4 <HAL_GPIO_Init>
 8002a82:	bf00      	nop
 8002a84:	3730      	adds	r7, #48	; 0x30
 8002a86:	46bd      	mov	sp, r7
 8002a88:	bd80      	pop	{r7, pc}
 8002a8a:	bf00      	nop
 8002a8c:	40023800 	.word	0x40023800
 8002a90:	40020400 	.word	0x40020400
 8002a94:	40021000 	.word	0x40021000

08002a98 <is_GPIO_pin_free>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b083      	sub	sp, #12
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	6039      	str	r1, [r7, #0]
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	2b01      	cmp	r3, #1
 8002aa6:	d107      	bne.n	8002ab8 <is_GPIO_pin_free+0x20>
 8002aa8:	683a      	ldr	r2, [r7, #0]
 8002aaa:	f246 033f 	movw	r3, #24639	; 0x603f
 8002aae:	4013      	ands	r3, r2
 8002ab0:	2b00      	cmp	r3, #0
 8002ab2:	d001      	beq.n	8002ab8 <is_GPIO_pin_free+0x20>
 8002ab4:	2300      	movs	r3, #0
 8002ab6:	e028      	b.n	8002b0a <is_GPIO_pin_free+0x72>
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	2b03      	cmp	r3, #3
 8002abc:	d106      	bne.n	8002acc <is_GPIO_pin_free+0x34>
 8002abe:	683b      	ldr	r3, [r7, #0]
 8002ac0:	f003 030f 	and.w	r3, r3, #15
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d001      	beq.n	8002acc <is_GPIO_pin_free+0x34>
 8002ac8:	2300      	movs	r3, #0
 8002aca:	e01e      	b.n	8002b0a <is_GPIO_pin_free+0x72>
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2b06      	cmp	r3, #6
 8002ad0:	d106      	bne.n	8002ae0 <is_GPIO_pin_free+0x48>
 8002ad2:	683b      	ldr	r3, [r7, #0]
 8002ad4:	f403 737f 	and.w	r3, r3, #1020	; 0x3fc
 8002ad8:	2b00      	cmp	r3, #0
 8002ada:	d001      	beq.n	8002ae0 <is_GPIO_pin_free+0x48>
 8002adc:	2300      	movs	r3, #0
 8002ade:	e014      	b.n	8002b0a <is_GPIO_pin_free+0x72>
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	2b04      	cmp	r3, #4
 8002ae4:	d106      	bne.n	8002af4 <is_GPIO_pin_free+0x5c>
 8002ae6:	683b      	ldr	r3, [r7, #0]
 8002ae8:	f403 73c0 	and.w	r3, r3, #384	; 0x180
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d001      	beq.n	8002af4 <is_GPIO_pin_free+0x5c>
 8002af0:	2300      	movs	r3, #0
 8002af2:	e00a      	b.n	8002b0a <is_GPIO_pin_free+0x72>
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	2b02      	cmp	r3, #2
 8002af8:	d106      	bne.n	8002b08 <is_GPIO_pin_free+0x70>
 8002afa:	683b      	ldr	r3, [r7, #0]
 8002afc:	f003 0301 	and.w	r3, r3, #1
 8002b00:	2b00      	cmp	r3, #0
 8002b02:	d001      	beq.n	8002b08 <is_GPIO_pin_free+0x70>
 8002b04:	2300      	movs	r3, #0
 8002b06:	e000      	b.n	8002b0a <is_GPIO_pin_free+0x72>
 8002b08:	2301      	movs	r3, #1
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b14:	4770      	bx	lr
	...

08002b18 <blink_LED>:
 8002b18:	b580      	push	{r7, lr}
 8002b1a:	af00      	add	r7, sp, #0
 8002b1c:	2101      	movs	r1, #1
 8002b1e:	4806      	ldr	r0, [pc, #24]	; (8002b38 <blink_LED+0x20>)
 8002b20:	f001 ffa5 	bl	8004a6e <HAL_GPIO_TogglePin>
 8002b24:	20c8      	movs	r0, #200	; 0xc8
 8002b26:	f000 fe2f 	bl	8003788 <HAL_Delay>
 8002b2a:	2101      	movs	r1, #1
 8002b2c:	4802      	ldr	r0, [pc, #8]	; (8002b38 <blink_LED+0x20>)
 8002b2e:	f001 ff9e 	bl	8004a6e <HAL_GPIO_TogglePin>
 8002b32:	bf00      	nop
 8002b34:	bd80      	pop	{r7, pc}
 8002b36:	bf00      	nop
 8002b38:	40020400 	.word	0x40020400

08002b3c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b0c2      	sub	sp, #264	; 0x108
 8002b40:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002b42:	f000 fdc4 	bl	80036ce <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002b46:	f000 f843 	bl	8002bd0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002b4a:	f7ff ff1d 	bl	8002988 <MX_GPIO_Init>
  MX_USART3_UART_Init();
 8002b4e:	f000 fbd5 	bl	80032fc <MX_USART3_UART_Init>
  MX_ADC3_Init();
 8002b52:	f7fd ffb1 	bl	8000ab8 <MX_ADC3_Init>
  MX_TIM1_Init();
 8002b56:	f000 fa99 	bl	800308c <MX_TIM1_Init>
  MX_DAC_Init();
 8002b5a:	f7ff fea1 	bl	80028a0 <MX_DAC_Init>
  MX_TIM2_Init();
 8002b5e:	f000 fae9 	bl	8003134 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

  HAL_UART_Receive_IT(&huart3, UART_RX_buffer, 1);
 8002b62:	2201      	movs	r2, #1
 8002b64:	4916      	ldr	r1, [pc, #88]	; (8002bc0 <main+0x84>)
 8002b66:	4817      	ldr	r0, [pc, #92]	; (8002bc4 <main+0x88>)
 8002b68:	f004 fcca 	bl	8007500 <HAL_UART_Receive_IT>
  send_UART(PROMPT);
 8002b6c:	4816      	ldr	r0, [pc, #88]	; (8002bc8 <main+0x8c>)
 8002b6e:	f000 fca7 	bl	80034c0 <send_UART>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(has_message_from_UART())
 8002b72:	f000 fc75 	bl	8003460 <has_message_from_UART>
 8002b76:	4603      	mov	r3, r0
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d0fa      	beq.n	8002b72 <main+0x36>
	  {
		  blink_LED();
 8002b7c:	f7ff ffcc 	bl	8002b18 <blink_LED>

		  uint8_t message[BUFFER_SIZE];

		  read_UART((char*) message);
 8002b80:	1d3b      	adds	r3, r7, #4
 8002b82:	4618      	mov	r0, r3
 8002b84:	f000 fcc6 	bl	8003514 <read_UART>

		  unsigned char cmd = check_command((char*) message);
 8002b88:	1d3b      	adds	r3, r7, #4
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	f7fe f90c 	bl	8000da8 <check_command>
 8002b90:	4603      	mov	r3, r0
 8002b92:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
		  exec_command[cmd]((char*) message);
 8002b96:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 8002b9a:	4a0c      	ldr	r2, [pc, #48]	; (8002bcc <main+0x90>)
 8002b9c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ba0:	1d3a      	adds	r2, r7, #4
 8002ba2:	4610      	mov	r0, r2
 8002ba4:	4798      	blx	r3

		  while(is_transmitting_to_UART());
 8002ba6:	bf00      	nop
 8002ba8:	f000 fc66 	bl	8003478 <is_transmitting_to_UART>
 8002bac:	4603      	mov	r3, r0
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d1fa      	bne.n	8002ba8 <main+0x6c>

		  reset_UART();
 8002bb2:	f000 fc6d 	bl	8003490 <reset_UART>
		  send_UART(PROMPT);
 8002bb6:	4804      	ldr	r0, [pc, #16]	; (8002bc8 <main+0x8c>)
 8002bb8:	f000 fc82 	bl	80034c0 <send_UART>
	  if(has_message_from_UART())
 8002bbc:	e7d9      	b.n	8002b72 <main+0x36>
 8002bbe:	bf00      	nop
 8002bc0:	20000328 	.word	0x20000328
 8002bc4:	20018734 	.word	0x20018734
 8002bc8:	0800e6dc 	.word	0x0800e6dc
 8002bcc:	20000008 	.word	0x20000008

08002bd0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002bd0:	b580      	push	{r7, lr}
 8002bd2:	b094      	sub	sp, #80	; 0x50
 8002bd4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002bd6:	f107 031c 	add.w	r3, r7, #28
 8002bda:	2234      	movs	r2, #52	; 0x34
 8002bdc:	2100      	movs	r1, #0
 8002bde:	4618      	mov	r0, r3
 8002be0:	f005 ff9c 	bl	8008b1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002be4:	f107 0308 	add.w	r3, r7, #8
 8002be8:	2200      	movs	r2, #0
 8002bea:	601a      	str	r2, [r3, #0]
 8002bec:	605a      	str	r2, [r3, #4]
 8002bee:	609a      	str	r2, [r3, #8]
 8002bf0:	60da      	str	r2, [r3, #12]
 8002bf2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002bf4:	4b2b      	ldr	r3, [pc, #172]	; (8002ca4 <SystemClock_Config+0xd4>)
 8002bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bf8:	4a2a      	ldr	r2, [pc, #168]	; (8002ca4 <SystemClock_Config+0xd4>)
 8002bfa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002bfe:	6413      	str	r3, [r2, #64]	; 0x40
 8002c00:	4b28      	ldr	r3, [pc, #160]	; (8002ca4 <SystemClock_Config+0xd4>)
 8002c02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c04:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002c08:	607b      	str	r3, [r7, #4]
 8002c0a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002c0c:	4b26      	ldr	r3, [pc, #152]	; (8002ca8 <SystemClock_Config+0xd8>)
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a25      	ldr	r2, [pc, #148]	; (8002ca8 <SystemClock_Config+0xd8>)
 8002c12:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002c16:	6013      	str	r3, [r2, #0]
 8002c18:	4b23      	ldr	r3, [pc, #140]	; (8002ca8 <SystemClock_Config+0xd8>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002c20:	603b      	str	r3, [r7, #0]
 8002c22:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002c24:	2302      	movs	r3, #2
 8002c26:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002c28:	2301      	movs	r3, #1
 8002c2a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002c2c:	2310      	movs	r3, #16
 8002c2e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002c30:	2302      	movs	r3, #2
 8002c32:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002c34:	2300      	movs	r3, #0
 8002c36:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8002c38:	2308      	movs	r3, #8
 8002c3a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 192;
 8002c3c:	23c0      	movs	r3, #192	; 0xc0
 8002c3e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002c40:	2302      	movs	r3, #2
 8002c42:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002c44:	2304      	movs	r3, #4
 8002c46:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8002c48:	2302      	movs	r3, #2
 8002c4a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002c4c:	f107 031c 	add.w	r3, r7, #28
 8002c50:	4618      	mov	r0, r3
 8002c52:	f001 ff77 	bl	8004b44 <HAL_RCC_OscConfig>
 8002c56:	4603      	mov	r3, r0
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d001      	beq.n	8002c60 <SystemClock_Config+0x90>
  {
    Error_Handler();
 8002c5c:	f000 f826 	bl	8002cac <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002c60:	f001 ff20 	bl	8004aa4 <HAL_PWREx_EnableOverDrive>
 8002c64:	4603      	mov	r3, r0
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d001      	beq.n	8002c6e <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8002c6a:	f000 f81f 	bl	8002cac <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002c6e:	230f      	movs	r3, #15
 8002c70:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002c72:	2302      	movs	r3, #2
 8002c74:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002c76:	2300      	movs	r3, #0
 8002c78:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002c7a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002c7e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 8002c80:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002c84:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8002c86:	f107 0308 	add.w	r3, r7, #8
 8002c8a:	2106      	movs	r1, #6
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	f002 fa07 	bl	80050a0 <HAL_RCC_ClockConfig>
 8002c92:	4603      	mov	r3, r0
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d001      	beq.n	8002c9c <SystemClock_Config+0xcc>
  {
    Error_Handler();
 8002c98:	f000 f808 	bl	8002cac <Error_Handler>
  }
}
 8002c9c:	bf00      	nop
 8002c9e:	3750      	adds	r7, #80	; 0x50
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	40023800 	.word	0x40023800
 8002ca8:	40007000 	.word	0x40007000

08002cac <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002cac:	b480      	push	{r7}
 8002cae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002cb0:	b672      	cpsid	i
}
 8002cb2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002cb4:	e7fe      	b.n	8002cb4 <Error_Handler+0x8>
	...

08002cb8 <HAL_MspInit>:
 8002cb8:	b580      	push	{r7, lr}
 8002cba:	b082      	sub	sp, #8
 8002cbc:	af00      	add	r7, sp, #0
 8002cbe:	4b0f      	ldr	r3, [pc, #60]	; (8002cfc <HAL_MspInit+0x44>)
 8002cc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cc2:	4a0e      	ldr	r2, [pc, #56]	; (8002cfc <HAL_MspInit+0x44>)
 8002cc4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002cc8:	6413      	str	r3, [r2, #64]	; 0x40
 8002cca:	4b0c      	ldr	r3, [pc, #48]	; (8002cfc <HAL_MspInit+0x44>)
 8002ccc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002cd2:	607b      	str	r3, [r7, #4]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	4b09      	ldr	r3, [pc, #36]	; (8002cfc <HAL_MspInit+0x44>)
 8002cd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002cda:	4a08      	ldr	r2, [pc, #32]	; (8002cfc <HAL_MspInit+0x44>)
 8002cdc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002ce0:	6453      	str	r3, [r2, #68]	; 0x44
 8002ce2:	4b06      	ldr	r3, [pc, #24]	; (8002cfc <HAL_MspInit+0x44>)
 8002ce4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ce6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002cea:	603b      	str	r3, [r7, #0]
 8002cec:	683b      	ldr	r3, [r7, #0]
 8002cee:	2005      	movs	r0, #5
 8002cf0:	f001 fb24 	bl	800433c <HAL_NVIC_SetPriorityGrouping>
 8002cf4:	bf00      	nop
 8002cf6:	3708      	adds	r7, #8
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	bd80      	pop	{r7, pc}
 8002cfc:	40023800 	.word	0x40023800

08002d00 <NMI_Handler>:
 8002d00:	b480      	push	{r7}
 8002d02:	af00      	add	r7, sp, #0
 8002d04:	e7fe      	b.n	8002d04 <NMI_Handler+0x4>

08002d06 <HardFault_Handler>:
 8002d06:	b480      	push	{r7}
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	e7fe      	b.n	8002d0a <HardFault_Handler+0x4>

08002d0c <MemManage_Handler>:
 8002d0c:	b480      	push	{r7}
 8002d0e:	af00      	add	r7, sp, #0
 8002d10:	e7fe      	b.n	8002d10 <MemManage_Handler+0x4>

08002d12 <BusFault_Handler>:
 8002d12:	b480      	push	{r7}
 8002d14:	af00      	add	r7, sp, #0
 8002d16:	e7fe      	b.n	8002d16 <BusFault_Handler+0x4>

08002d18 <UsageFault_Handler>:
 8002d18:	b480      	push	{r7}
 8002d1a:	af00      	add	r7, sp, #0
 8002d1c:	e7fe      	b.n	8002d1c <UsageFault_Handler+0x4>

08002d1e <SVC_Handler>:
 8002d1e:	b480      	push	{r7}
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	bf00      	nop
 8002d24:	46bd      	mov	sp, r7
 8002d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d2a:	4770      	bx	lr

08002d2c <DebugMon_Handler>:
 8002d2c:	b480      	push	{r7}
 8002d2e:	af00      	add	r7, sp, #0
 8002d30:	bf00      	nop
 8002d32:	46bd      	mov	sp, r7
 8002d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d38:	4770      	bx	lr

08002d3a <PendSV_Handler>:
 8002d3a:	b480      	push	{r7}
 8002d3c:	af00      	add	r7, sp, #0
 8002d3e:	bf00      	nop
 8002d40:	46bd      	mov	sp, r7
 8002d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d46:	4770      	bx	lr

08002d48 <SysTick_Handler>:
 8002d48:	b580      	push	{r7, lr}
 8002d4a:	af00      	add	r7, sp, #0
 8002d4c:	f000 fcfc 	bl	8003748 <HAL_IncTick>
 8002d50:	bf00      	nop
 8002d52:	bd80      	pop	{r7, pc}

08002d54 <ADC_IRQHandler>:
 8002d54:	b580      	push	{r7, lr}
 8002d56:	af00      	add	r7, sp, #0
 8002d58:	4802      	ldr	r0, [pc, #8]	; (8002d64 <ADC_IRQHandler+0x10>)
 8002d5a:	f000 fe93 	bl	8003a84 <HAL_ADC_IRQHandler>
 8002d5e:	bf00      	nop
 8002d60:	bd80      	pop	{r7, pc}
 8002d62:	bf00      	nop
 8002d64:	20010430 	.word	0x20010430

08002d68 <TIM1_UP_TIM10_IRQHandler>:
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	af00      	add	r7, sp, #0
 8002d6c:	4802      	ldr	r0, [pc, #8]	; (8002d78 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8002d6e:	f003 fa9b 	bl	80062a8 <HAL_TIM_IRQHandler>
 8002d72:	bf00      	nop
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	bf00      	nop
 8002d78:	2001869c 	.word	0x2001869c

08002d7c <USART3_IRQHandler>:
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	af00      	add	r7, sp, #0
 8002d80:	4802      	ldr	r0, [pc, #8]	; (8002d8c <USART3_IRQHandler+0x10>)
 8002d82:	f004 fc0b 	bl	800759c <HAL_UART_IRQHandler>
 8002d86:	bf00      	nop
 8002d88:	bd80      	pop	{r7, pc}
 8002d8a:	bf00      	nop
 8002d8c:	20018734 	.word	0x20018734

08002d90 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002d90:	b480      	push	{r7}
 8002d92:	af00      	add	r7, sp, #0
	return 1;
 8002d94:	2301      	movs	r3, #1
}
 8002d96:	4618      	mov	r0, r3
 8002d98:	46bd      	mov	sp, r7
 8002d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d9e:	4770      	bx	lr

08002da0 <_kill>:

int _kill(int pid, int sig)
{
 8002da0:	b580      	push	{r7, lr}
 8002da2:	b082      	sub	sp, #8
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	6078      	str	r0, [r7, #4]
 8002da8:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002daa:	f005 fe8d 	bl	8008ac8 <__errno>
 8002dae:	4603      	mov	r3, r0
 8002db0:	2216      	movs	r2, #22
 8002db2:	601a      	str	r2, [r3, #0]
	return -1;
 8002db4:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002db8:	4618      	mov	r0, r3
 8002dba:	3708      	adds	r7, #8
 8002dbc:	46bd      	mov	sp, r7
 8002dbe:	bd80      	pop	{r7, pc}

08002dc0 <_exit>:

void _exit (int status)
{
 8002dc0:	b580      	push	{r7, lr}
 8002dc2:	b082      	sub	sp, #8
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002dc8:	f04f 31ff 	mov.w	r1, #4294967295
 8002dcc:	6878      	ldr	r0, [r7, #4]
 8002dce:	f7ff ffe7 	bl	8002da0 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002dd2:	e7fe      	b.n	8002dd2 <_exit+0x12>

08002dd4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002dd4:	b580      	push	{r7, lr}
 8002dd6:	b086      	sub	sp, #24
 8002dd8:	af00      	add	r7, sp, #0
 8002dda:	60f8      	str	r0, [r7, #12]
 8002ddc:	60b9      	str	r1, [r7, #8]
 8002dde:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002de0:	2300      	movs	r3, #0
 8002de2:	617b      	str	r3, [r7, #20]
 8002de4:	e00a      	b.n	8002dfc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002de6:	f3af 8000 	nop.w
 8002dea:	4601      	mov	r1, r0
 8002dec:	68bb      	ldr	r3, [r7, #8]
 8002dee:	1c5a      	adds	r2, r3, #1
 8002df0:	60ba      	str	r2, [r7, #8]
 8002df2:	b2ca      	uxtb	r2, r1
 8002df4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002df6:	697b      	ldr	r3, [r7, #20]
 8002df8:	3301      	adds	r3, #1
 8002dfa:	617b      	str	r3, [r7, #20]
 8002dfc:	697a      	ldr	r2, [r7, #20]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	429a      	cmp	r2, r3
 8002e02:	dbf0      	blt.n	8002de6 <_read+0x12>
	}

return len;
 8002e04:	687b      	ldr	r3, [r7, #4]
}
 8002e06:	4618      	mov	r0, r3
 8002e08:	3718      	adds	r7, #24
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bd80      	pop	{r7, pc}

08002e0e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002e0e:	b580      	push	{r7, lr}
 8002e10:	b086      	sub	sp, #24
 8002e12:	af00      	add	r7, sp, #0
 8002e14:	60f8      	str	r0, [r7, #12]
 8002e16:	60b9      	str	r1, [r7, #8]
 8002e18:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e1a:	2300      	movs	r3, #0
 8002e1c:	617b      	str	r3, [r7, #20]
 8002e1e:	e009      	b.n	8002e34 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002e20:	68bb      	ldr	r3, [r7, #8]
 8002e22:	1c5a      	adds	r2, r3, #1
 8002e24:	60ba      	str	r2, [r7, #8]
 8002e26:	781b      	ldrb	r3, [r3, #0]
 8002e28:	4618      	mov	r0, r3
 8002e2a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e2e:	697b      	ldr	r3, [r7, #20]
 8002e30:	3301      	adds	r3, #1
 8002e32:	617b      	str	r3, [r7, #20]
 8002e34:	697a      	ldr	r2, [r7, #20]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	429a      	cmp	r2, r3
 8002e3a:	dbf1      	blt.n	8002e20 <_write+0x12>
	}
	return len;
 8002e3c:	687b      	ldr	r3, [r7, #4]
}
 8002e3e:	4618      	mov	r0, r3
 8002e40:	3718      	adds	r7, #24
 8002e42:	46bd      	mov	sp, r7
 8002e44:	bd80      	pop	{r7, pc}

08002e46 <_close>:

int _close(int file)
{
 8002e46:	b480      	push	{r7}
 8002e48:	b083      	sub	sp, #12
 8002e4a:	af00      	add	r7, sp, #0
 8002e4c:	6078      	str	r0, [r7, #4]
	return -1;
 8002e4e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002e52:	4618      	mov	r0, r3
 8002e54:	370c      	adds	r7, #12
 8002e56:	46bd      	mov	sp, r7
 8002e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e5c:	4770      	bx	lr

08002e5e <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002e5e:	b480      	push	{r7}
 8002e60:	b083      	sub	sp, #12
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	6078      	str	r0, [r7, #4]
 8002e66:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002e6e:	605a      	str	r2, [r3, #4]
	return 0;
 8002e70:	2300      	movs	r3, #0
}
 8002e72:	4618      	mov	r0, r3
 8002e74:	370c      	adds	r7, #12
 8002e76:	46bd      	mov	sp, r7
 8002e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e7c:	4770      	bx	lr

08002e7e <_isatty>:

int _isatty(int file)
{
 8002e7e:	b480      	push	{r7}
 8002e80:	b083      	sub	sp, #12
 8002e82:	af00      	add	r7, sp, #0
 8002e84:	6078      	str	r0, [r7, #4]
	return 1;
 8002e86:	2301      	movs	r3, #1
}
 8002e88:	4618      	mov	r0, r3
 8002e8a:	370c      	adds	r7, #12
 8002e8c:	46bd      	mov	sp, r7
 8002e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e92:	4770      	bx	lr

08002e94 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002e94:	b480      	push	{r7}
 8002e96:	b085      	sub	sp, #20
 8002e98:	af00      	add	r7, sp, #0
 8002e9a:	60f8      	str	r0, [r7, #12]
 8002e9c:	60b9      	str	r1, [r7, #8]
 8002e9e:	607a      	str	r2, [r7, #4]
	return 0;
 8002ea0:	2300      	movs	r3, #0
}
 8002ea2:	4618      	mov	r0, r3
 8002ea4:	3714      	adds	r7, #20
 8002ea6:	46bd      	mov	sp, r7
 8002ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eac:	4770      	bx	lr
	...

08002eb0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002eb0:	b580      	push	{r7, lr}
 8002eb2:	b086      	sub	sp, #24
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002eb8:	4a14      	ldr	r2, [pc, #80]	; (8002f0c <_sbrk+0x5c>)
 8002eba:	4b15      	ldr	r3, [pc, #84]	; (8002f10 <_sbrk+0x60>)
 8002ebc:	1ad3      	subs	r3, r2, r3
 8002ebe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002ec0:	697b      	ldr	r3, [r7, #20]
 8002ec2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002ec4:	4b13      	ldr	r3, [pc, #76]	; (8002f14 <_sbrk+0x64>)
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d102      	bne.n	8002ed2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002ecc:	4b11      	ldr	r3, [pc, #68]	; (8002f14 <_sbrk+0x64>)
 8002ece:	4a12      	ldr	r2, [pc, #72]	; (8002f18 <_sbrk+0x68>)
 8002ed0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002ed2:	4b10      	ldr	r3, [pc, #64]	; (8002f14 <_sbrk+0x64>)
 8002ed4:	681a      	ldr	r2, [r3, #0]
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	4413      	add	r3, r2
 8002eda:	693a      	ldr	r2, [r7, #16]
 8002edc:	429a      	cmp	r2, r3
 8002ede:	d207      	bcs.n	8002ef0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002ee0:	f005 fdf2 	bl	8008ac8 <__errno>
 8002ee4:	4603      	mov	r3, r0
 8002ee6:	220c      	movs	r2, #12
 8002ee8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002eea:	f04f 33ff 	mov.w	r3, #4294967295
 8002eee:	e009      	b.n	8002f04 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002ef0:	4b08      	ldr	r3, [pc, #32]	; (8002f14 <_sbrk+0x64>)
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002ef6:	4b07      	ldr	r3, [pc, #28]	; (8002f14 <_sbrk+0x64>)
 8002ef8:	681a      	ldr	r2, [r3, #0]
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	4413      	add	r3, r2
 8002efe:	4a05      	ldr	r2, [pc, #20]	; (8002f14 <_sbrk+0x64>)
 8002f00:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002f02:	68fb      	ldr	r3, [r7, #12]
}
 8002f04:	4618      	mov	r0, r3
 8002f06:	3718      	adds	r7, #24
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	bd80      	pop	{r7, pc}
 8002f0c:	20080000 	.word	0x20080000
 8002f10:	00000400 	.word	0x00000400
 8002f14:	2000031c 	.word	0x2000031c
 8002f18:	200187d0 	.word	0x200187d0

08002f1c <SystemInit>:
 8002f1c:	b480      	push	{r7}
 8002f1e:	af00      	add	r7, sp, #0
 8002f20:	4b06      	ldr	r3, [pc, #24]	; (8002f3c <SystemInit+0x20>)
 8002f22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f26:	4a05      	ldr	r2, [pc, #20]	; (8002f3c <SystemInit+0x20>)
 8002f28:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002f2c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002f30:	bf00      	nop
 8002f32:	46bd      	mov	sp, r7
 8002f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f38:	4770      	bx	lr
 8002f3a:	bf00      	nop
 8002f3c:	e000ed00 	.word	0xe000ed00

08002f40 <MX_TIM1_Init1>:
/* Includes ------------------------------------------------------------------*/
#include "tim.h"

/* USER CODE BEGIN 0 */
void MX_TIM1_Init1(struct sp_config_t sp_config)
{
 8002f40:	b590      	push	{r4, r7, lr}
 8002f42:	b093      	sub	sp, #76	; 0x4c
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	463c      	mov	r4, r7
 8002f48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002f4c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002f50:	2200      	movs	r2, #0
 8002f52:	601a      	str	r2, [r3, #0]
 8002f54:	605a      	str	r2, [r3, #4]
 8002f56:	609a      	str	r2, [r3, #8]
 8002f58:	60da      	str	r2, [r3, #12]
	TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8002f5a:	f107 031c 	add.w	r3, r7, #28
 8002f5e:	2200      	movs	r2, #0
 8002f60:	601a      	str	r2, [r3, #0]
 8002f62:	605a      	str	r2, [r3, #4]
 8002f64:	609a      	str	r2, [r3, #8]
 8002f66:	60da      	str	r2, [r3, #12]
 8002f68:	611a      	str	r2, [r3, #16]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002f6a:	f107 0310 	add.w	r3, r7, #16
 8002f6e:	2200      	movs	r2, #0
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	605a      	str	r2, [r3, #4]
 8002f74:	609a      	str	r2, [r3, #8]

	unsigned int mul1 = 1, mul2 = 1;
 8002f76:	2301      	movs	r3, #1
 8002f78:	647b      	str	r3, [r7, #68]	; 0x44
 8002f7a:	2301      	movs	r3, #1
 8002f7c:	643b      	str	r3, [r7, #64]	; 0x40

	if(!strncmp(sp_config.timeunit,"us",2))
 8002f7e:	463b      	mov	r3, r7
 8002f80:	330c      	adds	r3, #12
 8002f82:	2202      	movs	r2, #2
 8002f84:	493c      	ldr	r1, [pc, #240]	; (8003078 <MX_TIM1_Init1+0x138>)
 8002f86:	4618      	mov	r0, r3
 8002f88:	f006 fcb7 	bl	80098fa <strncmp>
 8002f8c:	4603      	mov	r3, r0
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d018      	beq.n	8002fc4 <MX_TIM1_Init1+0x84>
	{
	}
	else if(!strncmp(sp_config.timeunit,"ms",2))
 8002f92:	463b      	mov	r3, r7
 8002f94:	330c      	adds	r3, #12
 8002f96:	2202      	movs	r2, #2
 8002f98:	4938      	ldr	r1, [pc, #224]	; (800307c <MX_TIM1_Init1+0x13c>)
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	f006 fcad 	bl	80098fa <strncmp>
 8002fa0:	4603      	mov	r3, r0
 8002fa2:	2b00      	cmp	r3, #0
 8002fa4:	d103      	bne.n	8002fae <MX_TIM1_Init1+0x6e>
	{
		mul1 = 1000;
 8002fa6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002faa:	647b      	str	r3, [r7, #68]	; 0x44
 8002fac:	e00a      	b.n	8002fc4 <MX_TIM1_Init1+0x84>
	}
	else if(!strncmp(sp_config.timeunit,"s",1))
 8002fae:	7b3a      	ldrb	r2, [r7, #12]
 8002fb0:	4b33      	ldr	r3, [pc, #204]	; (8003080 <MX_TIM1_Init1+0x140>)
 8002fb2:	781b      	ldrb	r3, [r3, #0]
 8002fb4:	1ad3      	subs	r3, r2, r3
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d104      	bne.n	8002fc4 <MX_TIM1_Init1+0x84>
	{
		mul1 = 10000;
 8002fba:	f242 7310 	movw	r3, #10000	; 0x2710
 8002fbe:	647b      	str	r3, [r7, #68]	; 0x44
		mul2 = 100;
 8002fc0:	2364      	movs	r3, #100	; 0x64
 8002fc2:	643b      	str	r3, [r7, #64]	; 0x40
	}

	htim1.Instance = TIM1;
 8002fc4:	4b2f      	ldr	r3, [pc, #188]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002fc6:	4a30      	ldr	r2, [pc, #192]	; (8003088 <MX_TIM1_Init1+0x148>)
 8002fc8:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 2 * mul1;
 8002fca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002fcc:	005b      	lsls	r3, r3, #1
 8002fce:	4a2d      	ldr	r2, [pc, #180]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002fd0:	6053      	str	r3, [r2, #4]
  	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002fd2:	4b2c      	ldr	r3, [pc, #176]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	609a      	str	r2, [r3, #8]
  	htim1.Init.Period = ((sp_config.unit * 48 * mul2)-1) & 65535;
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002fdc:	fb02 f203 	mul.w	r2, r2, r3
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	005b      	lsls	r3, r3, #1
 8002fe4:	4413      	add	r3, r2
 8002fe6:	011b      	lsls	r3, r3, #4
 8002fe8:	3b01      	subs	r3, #1
 8002fea:	b29b      	uxth	r3, r3
 8002fec:	4a25      	ldr	r2, [pc, #148]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002fee:	60d3      	str	r3, [r2, #12]
  	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002ff0:	4b24      	ldr	r3, [pc, #144]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002ff2:	2200      	movs	r2, #0
 8002ff4:	611a      	str	r2, [r3, #16]
  	htim1.Init.RepetitionCounter = 0;
 8002ff6:	4b23      	ldr	r3, [pc, #140]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002ff8:	2200      	movs	r2, #0
 8002ffa:	615a      	str	r2, [r3, #20]
  	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ffc:	4b21      	ldr	r3, [pc, #132]	; (8003084 <MX_TIM1_Init1+0x144>)
 8002ffe:	2200      	movs	r2, #0
 8003000:	619a      	str	r2, [r3, #24]
  	if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8003002:	4820      	ldr	r0, [pc, #128]	; (8003084 <MX_TIM1_Init1+0x144>)
 8003004:	f002 fe76 	bl	8005cf4 <HAL_TIM_Base_Init>
 8003008:	4603      	mov	r3, r0
 800300a:	2b00      	cmp	r3, #0
 800300c:	d001      	beq.n	8003012 <MX_TIM1_Init1+0xd2>
  	{
  		Error_Handler();
 800300e:	f7ff fe4d 	bl	8002cac <Error_Handler>
  	}
  	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003012:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003016:	633b      	str	r3, [r7, #48]	; 0x30
  	if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003018:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800301c:	4619      	mov	r1, r3
 800301e:	4819      	ldr	r0, [pc, #100]	; (8003084 <MX_TIM1_Init1+0x144>)
 8003020:	f003 fb76 	bl	8006710 <HAL_TIM_ConfigClockSource>
 8003024:	4603      	mov	r3, r0
 8003026:	2b00      	cmp	r3, #0
 8003028:	d001      	beq.n	800302e <MX_TIM1_Init1+0xee>
  	{
  		Error_Handler();
 800302a:	f7ff fe3f 	bl	8002cac <Error_Handler>
  	}
  	sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 800302e:	2300      	movs	r3, #0
 8003030:	61fb      	str	r3, [r7, #28]
  	sSlaveConfig.InputTrigger = TIM_TS_ITR1;
 8003032:	2310      	movs	r3, #16
 8003034:	623b      	str	r3, [r7, #32]
  	if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8003036:	f107 031c 	add.w	r3, r7, #28
 800303a:	4619      	mov	r1, r3
 800303c:	4811      	ldr	r0, [pc, #68]	; (8003084 <MX_TIM1_Init1+0x144>)
 800303e:	f003 fc31 	bl	80068a4 <HAL_TIM_SlaveConfigSynchro>
 8003042:	4603      	mov	r3, r0
 8003044:	2b00      	cmp	r3, #0
 8003046:	d001      	beq.n	800304c <MX_TIM1_Init1+0x10c>
  	{
  		Error_Handler();
 8003048:	f7ff fe30 	bl	8002cac <Error_Handler>
  	}
  	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800304c:	2320      	movs	r3, #32
 800304e:	613b      	str	r3, [r7, #16]
  	sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8003050:	2300      	movs	r3, #0
 8003052:	617b      	str	r3, [r7, #20]
  	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003054:	2300      	movs	r3, #0
 8003056:	61bb      	str	r3, [r7, #24]
  	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8003058:	f107 0310 	add.w	r3, r7, #16
 800305c:	4619      	mov	r1, r3
 800305e:	4809      	ldr	r0, [pc, #36]	; (8003084 <MX_TIM1_Init1+0x144>)
 8003060:	f004 f8e6 	bl	8007230 <HAL_TIMEx_MasterConfigSynchronization>
 8003064:	4603      	mov	r3, r0
 8003066:	2b00      	cmp	r3, #0
 8003068:	d001      	beq.n	800306e <MX_TIM1_Init1+0x12e>
  	{
  		Error_Handler();
 800306a:	f7ff fe1f 	bl	8002cac <Error_Handler>
  	}
}
 800306e:	bf00      	nop
 8003070:	374c      	adds	r7, #76	; 0x4c
 8003072:	46bd      	mov	sp, r7
 8003074:	bd90      	pop	{r4, r7, pc}
 8003076:	bf00      	nop
 8003078:	0800e6e0 	.word	0x0800e6e0
 800307c:	0800e6e4 	.word	0x0800e6e4
 8003080:	0800e6e8 	.word	0x0800e6e8
 8003084:	2001869c 	.word	0x2001869c
 8003088:	40010000 	.word	0x40010000

0800308c <MX_TIM1_Init>:
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim2;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 800308c:	b580      	push	{r7, lr}
 800308e:	b088      	sub	sp, #32
 8003090:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003092:	f107 0310 	add.w	r3, r7, #16
 8003096:	2200      	movs	r2, #0
 8003098:	601a      	str	r2, [r3, #0]
 800309a:	605a      	str	r2, [r3, #4]
 800309c:	609a      	str	r2, [r3, #8]
 800309e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80030a0:	1d3b      	adds	r3, r7, #4
 80030a2:	2200      	movs	r2, #0
 80030a4:	601a      	str	r2, [r3, #0]
 80030a6:	605a      	str	r2, [r3, #4]
 80030a8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80030aa:	4b20      	ldr	r3, [pc, #128]	; (800312c <MX_TIM1_Init+0xa0>)
 80030ac:	4a20      	ldr	r2, [pc, #128]	; (8003130 <MX_TIM1_Init+0xa4>)
 80030ae:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 9600;
 80030b0:	4b1e      	ldr	r3, [pc, #120]	; (800312c <MX_TIM1_Init+0xa0>)
 80030b2:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80030b6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80030b8:	4b1c      	ldr	r3, [pc, #112]	; (800312c <MX_TIM1_Init+0xa0>)
 80030ba:	2200      	movs	r2, #0
 80030bc:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1000-1;
 80030be:	4b1b      	ldr	r3, [pc, #108]	; (800312c <MX_TIM1_Init+0xa0>)
 80030c0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80030c4:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80030c6:	4b19      	ldr	r3, [pc, #100]	; (800312c <MX_TIM1_Init+0xa0>)
 80030c8:	2200      	movs	r2, #0
 80030ca:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80030cc:	4b17      	ldr	r3, [pc, #92]	; (800312c <MX_TIM1_Init+0xa0>)
 80030ce:	2200      	movs	r2, #0
 80030d0:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80030d2:	4b16      	ldr	r3, [pc, #88]	; (800312c <MX_TIM1_Init+0xa0>)
 80030d4:	2200      	movs	r2, #0
 80030d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80030d8:	4814      	ldr	r0, [pc, #80]	; (800312c <MX_TIM1_Init+0xa0>)
 80030da:	f002 fe0b 	bl	8005cf4 <HAL_TIM_Base_Init>
 80030de:	4603      	mov	r3, r0
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d001      	beq.n	80030e8 <MX_TIM1_Init+0x5c>
  {
    Error_Handler();
 80030e4:	f7ff fde2 	bl	8002cac <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80030e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80030ec:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80030ee:	f107 0310 	add.w	r3, r7, #16
 80030f2:	4619      	mov	r1, r3
 80030f4:	480d      	ldr	r0, [pc, #52]	; (800312c <MX_TIM1_Init+0xa0>)
 80030f6:	f003 fb0b 	bl	8006710 <HAL_TIM_ConfigClockSource>
 80030fa:	4603      	mov	r3, r0
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d001      	beq.n	8003104 <MX_TIM1_Init+0x78>
  {
    Error_Handler();
 8003100:	f7ff fdd4 	bl	8002cac <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8003104:	2320      	movs	r3, #32
 8003106:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8003108:	2300      	movs	r3, #0
 800310a:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800310c:	2300      	movs	r3, #0
 800310e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8003110:	1d3b      	adds	r3, r7, #4
 8003112:	4619      	mov	r1, r3
 8003114:	4805      	ldr	r0, [pc, #20]	; (800312c <MX_TIM1_Init+0xa0>)
 8003116:	f004 f88b 	bl	8007230 <HAL_TIMEx_MasterConfigSynchronization>
 800311a:	4603      	mov	r3, r0
 800311c:	2b00      	cmp	r3, #0
 800311e:	d001      	beq.n	8003124 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8003120:	f7ff fdc4 	bl	8002cac <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8003124:	bf00      	nop
 8003126:	3720      	adds	r7, #32
 8003128:	46bd      	mov	sp, r7
 800312a:	bd80      	pop	{r7, pc}
 800312c:	2001869c 	.word	0x2001869c
 8003130:	40010000 	.word	0x40010000

08003134 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8003134:	b580      	push	{r7, lr}
 8003136:	b08e      	sub	sp, #56	; 0x38
 8003138:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800313a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800313e:	2200      	movs	r2, #0
 8003140:	601a      	str	r2, [r3, #0]
 8003142:	605a      	str	r2, [r3, #4]
 8003144:	609a      	str	r2, [r3, #8]
 8003146:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003148:	f107 031c 	add.w	r3, r7, #28
 800314c:	2200      	movs	r2, #0
 800314e:	601a      	str	r2, [r3, #0]
 8003150:	605a      	str	r2, [r3, #4]
 8003152:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003154:	463b      	mov	r3, r7
 8003156:	2200      	movs	r2, #0
 8003158:	601a      	str	r2, [r3, #0]
 800315a:	605a      	str	r2, [r3, #4]
 800315c:	609a      	str	r2, [r3, #8]
 800315e:	60da      	str	r2, [r3, #12]
 8003160:	611a      	str	r2, [r3, #16]
 8003162:	615a      	str	r2, [r3, #20]
 8003164:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8003166:	4b2d      	ldr	r3, [pc, #180]	; (800321c <MX_TIM2_Init+0xe8>)
 8003168:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800316c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 96-1;
 800316e:	4b2b      	ldr	r3, [pc, #172]	; (800321c <MX_TIM2_Init+0xe8>)
 8003170:	225f      	movs	r2, #95	; 0x5f
 8003172:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003174:	4b29      	ldr	r3, [pc, #164]	; (800321c <MX_TIM2_Init+0xe8>)
 8003176:	2200      	movs	r2, #0
 8003178:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 800317a:	4b28      	ldr	r3, [pc, #160]	; (800321c <MX_TIM2_Init+0xe8>)
 800317c:	2263      	movs	r2, #99	; 0x63
 800317e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003180:	4b26      	ldr	r3, [pc, #152]	; (800321c <MX_TIM2_Init+0xe8>)
 8003182:	2200      	movs	r2, #0
 8003184:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003186:	4b25      	ldr	r3, [pc, #148]	; (800321c <MX_TIM2_Init+0xe8>)
 8003188:	2280      	movs	r2, #128	; 0x80
 800318a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800318c:	4823      	ldr	r0, [pc, #140]	; (800321c <MX_TIM2_Init+0xe8>)
 800318e:	f002 fdb1 	bl	8005cf4 <HAL_TIM_Base_Init>
 8003192:	4603      	mov	r3, r0
 8003194:	2b00      	cmp	r3, #0
 8003196:	d001      	beq.n	800319c <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8003198:	f7ff fd88 	bl	8002cac <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800319c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80031a0:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80031a2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80031a6:	4619      	mov	r1, r3
 80031a8:	481c      	ldr	r0, [pc, #112]	; (800321c <MX_TIM2_Init+0xe8>)
 80031aa:	f003 fab1 	bl	8006710 <HAL_TIM_ConfigClockSource>
 80031ae:	4603      	mov	r3, r0
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d001      	beq.n	80031b8 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80031b4:	f7ff fd7a 	bl	8002cac <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80031b8:	4818      	ldr	r0, [pc, #96]	; (800321c <MX_TIM2_Init+0xe8>)
 80031ba:	f002 fe9a 	bl	8005ef2 <HAL_TIM_PWM_Init>
 80031be:	4603      	mov	r3, r0
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	d001      	beq.n	80031c8 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80031c4:	f7ff fd72 	bl	8002cac <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80031c8:	2300      	movs	r3, #0
 80031ca:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80031cc:	2300      	movs	r3, #0
 80031ce:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80031d0:	f107 031c 	add.w	r3, r7, #28
 80031d4:	4619      	mov	r1, r3
 80031d6:	4811      	ldr	r0, [pc, #68]	; (800321c <MX_TIM2_Init+0xe8>)
 80031d8:	f004 f82a 	bl	8007230 <HAL_TIMEx_MasterConfigSynchronization>
 80031dc:	4603      	mov	r3, r0
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d001      	beq.n	80031e6 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80031e2:	f7ff fd63 	bl	8002cac <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80031e6:	2360      	movs	r3, #96	; 0x60
 80031e8:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80031ea:	2300      	movs	r3, #0
 80031ec:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80031ee:	2300      	movs	r3, #0
 80031f0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80031f2:	2300      	movs	r3, #0
 80031f4:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80031f6:	463b      	mov	r3, r7
 80031f8:	220c      	movs	r2, #12
 80031fa:	4619      	mov	r1, r3
 80031fc:	4807      	ldr	r0, [pc, #28]	; (800321c <MX_TIM2_Init+0xe8>)
 80031fe:	f003 f973 	bl	80064e8 <HAL_TIM_PWM_ConfigChannel>
 8003202:	4603      	mov	r3, r0
 8003204:	2b00      	cmp	r3, #0
 8003206:	d001      	beq.n	800320c <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8003208:	f7ff fd50 	bl	8002cac <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800320c:	4803      	ldr	r0, [pc, #12]	; (800321c <MX_TIM2_Init+0xe8>)
 800320e:	f000 f83f 	bl	8003290 <HAL_TIM_MspPostInit>

}
 8003212:	bf00      	nop
 8003214:	3738      	adds	r7, #56	; 0x38
 8003216:	46bd      	mov	sp, r7
 8003218:	bd80      	pop	{r7, pc}
 800321a:	bf00      	nop
 800321c:	200186e8 	.word	0x200186e8

08003220 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003220:	b580      	push	{r7, lr}
 8003222:	b084      	sub	sp, #16
 8003224:	af00      	add	r7, sp, #0
 8003226:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	4a16      	ldr	r2, [pc, #88]	; (8003288 <HAL_TIM_Base_MspInit+0x68>)
 800322e:	4293      	cmp	r3, r2
 8003230:	d114      	bne.n	800325c <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8003232:	4b16      	ldr	r3, [pc, #88]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 8003234:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003236:	4a15      	ldr	r2, [pc, #84]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 8003238:	f043 0301 	orr.w	r3, r3, #1
 800323c:	6453      	str	r3, [r2, #68]	; 0x44
 800323e:	4b13      	ldr	r3, [pc, #76]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 8003240:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003242:	f003 0301 	and.w	r3, r3, #1
 8003246:	60fb      	str	r3, [r7, #12]
 8003248:	68fb      	ldr	r3, [r7, #12]

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 800324a:	2200      	movs	r2, #0
 800324c:	2100      	movs	r1, #0
 800324e:	2019      	movs	r0, #25
 8003250:	f001 f87f 	bl	8004352 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8003254:	2019      	movs	r0, #25
 8003256:	f001 f898 	bl	800438a <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 800325a:	e010      	b.n	800327e <HAL_TIM_Base_MspInit+0x5e>
  else if(tim_baseHandle->Instance==TIM2)
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003264:	d10b      	bne.n	800327e <HAL_TIM_Base_MspInit+0x5e>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003266:	4b09      	ldr	r3, [pc, #36]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 8003268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800326a:	4a08      	ldr	r2, [pc, #32]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 800326c:	f043 0301 	orr.w	r3, r3, #1
 8003270:	6413      	str	r3, [r2, #64]	; 0x40
 8003272:	4b06      	ldr	r3, [pc, #24]	; (800328c <HAL_TIM_Base_MspInit+0x6c>)
 8003274:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003276:	f003 0301 	and.w	r3, r3, #1
 800327a:	60bb      	str	r3, [r7, #8]
 800327c:	68bb      	ldr	r3, [r7, #8]
}
 800327e:	bf00      	nop
 8003280:	3710      	adds	r7, #16
 8003282:	46bd      	mov	sp, r7
 8003284:	bd80      	pop	{r7, pc}
 8003286:	bf00      	nop
 8003288:	40010000 	.word	0x40010000
 800328c:	40023800 	.word	0x40023800

08003290 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8003290:	b580      	push	{r7, lr}
 8003292:	b088      	sub	sp, #32
 8003294:	af00      	add	r7, sp, #0
 8003296:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003298:	f107 030c 	add.w	r3, r7, #12
 800329c:	2200      	movs	r2, #0
 800329e:	601a      	str	r2, [r3, #0]
 80032a0:	605a      	str	r2, [r3, #4]
 80032a2:	609a      	str	r2, [r3, #8]
 80032a4:	60da      	str	r2, [r3, #12]
 80032a6:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM2)
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032b0:	d11c      	bne.n	80032ec <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80032b2:	4b10      	ldr	r3, [pc, #64]	; (80032f4 <HAL_TIM_MspPostInit+0x64>)
 80032b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032b6:	4a0f      	ldr	r2, [pc, #60]	; (80032f4 <HAL_TIM_MspPostInit+0x64>)
 80032b8:	f043 0302 	orr.w	r3, r3, #2
 80032bc:	6313      	str	r3, [r2, #48]	; 0x30
 80032be:	4b0d      	ldr	r3, [pc, #52]	; (80032f4 <HAL_TIM_MspPostInit+0x64>)
 80032c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032c2:	f003 0302 	and.w	r3, r3, #2
 80032c6:	60bb      	str	r3, [r7, #8]
 80032c8:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PB11     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = PWM_Pin;
 80032ca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80032ce:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80032d0:	2302      	movs	r3, #2
 80032d2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80032d4:	2300      	movs	r3, #0
 80032d6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80032d8:	2300      	movs	r3, #0
 80032da:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80032dc:	2301      	movs	r3, #1
 80032de:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(PWM_GPIO_Port, &GPIO_InitStruct);
 80032e0:	f107 030c 	add.w	r3, r7, #12
 80032e4:	4619      	mov	r1, r3
 80032e6:	4804      	ldr	r0, [pc, #16]	; (80032f8 <HAL_TIM_MspPostInit+0x68>)
 80032e8:	f001 f9e4 	bl	80046b4 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 80032ec:	bf00      	nop
 80032ee:	3720      	adds	r7, #32
 80032f0:	46bd      	mov	sp, r7
 80032f2:	bd80      	pop	{r7, pc}
 80032f4:	40023800 	.word	0x40023800
 80032f8:	40020400 	.word	0x40020400

080032fc <MX_USART3_UART_Init>:
 80032fc:	b580      	push	{r7, lr}
 80032fe:	af00      	add	r7, sp, #0
 8003300:	4b1b      	ldr	r3, [pc, #108]	; (8003370 <MX_USART3_UART_Init+0x74>)
 8003302:	2200      	movs	r2, #0
 8003304:	701a      	strb	r2, [r3, #0]
 8003306:	4b1b      	ldr	r3, [pc, #108]	; (8003374 <MX_USART3_UART_Init+0x78>)
 8003308:	2200      	movs	r2, #0
 800330a:	701a      	strb	r2, [r3, #0]
 800330c:	4b1a      	ldr	r3, [pc, #104]	; (8003378 <MX_USART3_UART_Init+0x7c>)
 800330e:	2200      	movs	r2, #0
 8003310:	601a      	str	r2, [r3, #0]
 8003312:	4b1a      	ldr	r3, [pc, #104]	; (800337c <MX_USART3_UART_Init+0x80>)
 8003314:	2200      	movs	r2, #0
 8003316:	601a      	str	r2, [r3, #0]
 8003318:	4b19      	ldr	r3, [pc, #100]	; (8003380 <MX_USART3_UART_Init+0x84>)
 800331a:	220d      	movs	r2, #13
 800331c:	701a      	strb	r2, [r3, #0]
 800331e:	4b19      	ldr	r3, [pc, #100]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003320:	4a19      	ldr	r2, [pc, #100]	; (8003388 <MX_USART3_UART_Init+0x8c>)
 8003322:	601a      	str	r2, [r3, #0]
 8003324:	4b17      	ldr	r3, [pc, #92]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003326:	4a19      	ldr	r2, [pc, #100]	; (800338c <MX_USART3_UART_Init+0x90>)
 8003328:	605a      	str	r2, [r3, #4]
 800332a:	4b16      	ldr	r3, [pc, #88]	; (8003384 <MX_USART3_UART_Init+0x88>)
 800332c:	2200      	movs	r2, #0
 800332e:	609a      	str	r2, [r3, #8]
 8003330:	4b14      	ldr	r3, [pc, #80]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003332:	2200      	movs	r2, #0
 8003334:	60da      	str	r2, [r3, #12]
 8003336:	4b13      	ldr	r3, [pc, #76]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003338:	2200      	movs	r2, #0
 800333a:	611a      	str	r2, [r3, #16]
 800333c:	4b11      	ldr	r3, [pc, #68]	; (8003384 <MX_USART3_UART_Init+0x88>)
 800333e:	220c      	movs	r2, #12
 8003340:	615a      	str	r2, [r3, #20]
 8003342:	4b10      	ldr	r3, [pc, #64]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003344:	2200      	movs	r2, #0
 8003346:	619a      	str	r2, [r3, #24]
 8003348:	4b0e      	ldr	r3, [pc, #56]	; (8003384 <MX_USART3_UART_Init+0x88>)
 800334a:	2200      	movs	r2, #0
 800334c:	61da      	str	r2, [r3, #28]
 800334e:	4b0d      	ldr	r3, [pc, #52]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003350:	2200      	movs	r2, #0
 8003352:	621a      	str	r2, [r3, #32]
 8003354:	4b0b      	ldr	r3, [pc, #44]	; (8003384 <MX_USART3_UART_Init+0x88>)
 8003356:	2200      	movs	r2, #0
 8003358:	625a      	str	r2, [r3, #36]	; 0x24
 800335a:	480a      	ldr	r0, [pc, #40]	; (8003384 <MX_USART3_UART_Init+0x88>)
 800335c:	f004 f814 	bl	8007388 <HAL_UART_Init>
 8003360:	4603      	mov	r3, r0
 8003362:	2b00      	cmp	r3, #0
 8003364:	d001      	beq.n	800336a <MX_USART3_UART_Init+0x6e>
 8003366:	f7ff fca1 	bl	8002cac <Error_Handler>
 800336a:	bf00      	nop
 800336c:	bd80      	pop	{r7, pc}
 800336e:	bf00      	nop
 8003370:	2001047c 	.word	0x2001047c
 8003374:	20014680 	.word	0x20014680
 8003378:	20010478 	.word	0x20010478
 800337c:	20014684 	.word	0x20014684
 8003380:	20010480 	.word	0x20010480
 8003384:	20018734 	.word	0x20018734
 8003388:	40004800 	.word	0x40004800
 800338c:	001ab3f0 	.word	0x001ab3f0

08003390 <HAL_UART_MspInit>:
 8003390:	b580      	push	{r7, lr}
 8003392:	b0ae      	sub	sp, #184	; 0xb8
 8003394:	af00      	add	r7, sp, #0
 8003396:	6078      	str	r0, [r7, #4]
 8003398:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800339c:	2200      	movs	r2, #0
 800339e:	601a      	str	r2, [r3, #0]
 80033a0:	605a      	str	r2, [r3, #4]
 80033a2:	609a      	str	r2, [r3, #8]
 80033a4:	60da      	str	r2, [r3, #12]
 80033a6:	611a      	str	r2, [r3, #16]
 80033a8:	f107 0314 	add.w	r3, r7, #20
 80033ac:	2290      	movs	r2, #144	; 0x90
 80033ae:	2100      	movs	r1, #0
 80033b0:	4618      	mov	r0, r3
 80033b2:	f005 fbb3 	bl	8008b1c <memset>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	4a26      	ldr	r2, [pc, #152]	; (8003454 <HAL_UART_MspInit+0xc4>)
 80033bc:	4293      	cmp	r3, r2
 80033be:	d144      	bne.n	800344a <HAL_UART_MspInit+0xba>
 80033c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80033c4:	617b      	str	r3, [r7, #20]
 80033c6:	2300      	movs	r3, #0
 80033c8:	663b      	str	r3, [r7, #96]	; 0x60
 80033ca:	f107 0314 	add.w	r3, r7, #20
 80033ce:	4618      	mov	r0, r3
 80033d0:	f002 f868 	bl	80054a4 <HAL_RCCEx_PeriphCLKConfig>
 80033d4:	4603      	mov	r3, r0
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d001      	beq.n	80033de <HAL_UART_MspInit+0x4e>
 80033da:	f7ff fc67 	bl	8002cac <Error_Handler>
 80033de:	4b1e      	ldr	r3, [pc, #120]	; (8003458 <HAL_UART_MspInit+0xc8>)
 80033e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033e2:	4a1d      	ldr	r2, [pc, #116]	; (8003458 <HAL_UART_MspInit+0xc8>)
 80033e4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80033e8:	6413      	str	r3, [r2, #64]	; 0x40
 80033ea:	4b1b      	ldr	r3, [pc, #108]	; (8003458 <HAL_UART_MspInit+0xc8>)
 80033ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033ee:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80033f2:	613b      	str	r3, [r7, #16]
 80033f4:	693b      	ldr	r3, [r7, #16]
 80033f6:	4b18      	ldr	r3, [pc, #96]	; (8003458 <HAL_UART_MspInit+0xc8>)
 80033f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033fa:	4a17      	ldr	r2, [pc, #92]	; (8003458 <HAL_UART_MspInit+0xc8>)
 80033fc:	f043 0308 	orr.w	r3, r3, #8
 8003400:	6313      	str	r3, [r2, #48]	; 0x30
 8003402:	4b15      	ldr	r3, [pc, #84]	; (8003458 <HAL_UART_MspInit+0xc8>)
 8003404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003406:	f003 0308 	and.w	r3, r3, #8
 800340a:	60fb      	str	r3, [r7, #12]
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003412:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8003416:	2302      	movs	r3, #2
 8003418:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800341c:	2300      	movs	r3, #0
 800341e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8003422:	2303      	movs	r3, #3
 8003424:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003428:	2307      	movs	r3, #7
 800342a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800342e:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8003432:	4619      	mov	r1, r3
 8003434:	4809      	ldr	r0, [pc, #36]	; (800345c <HAL_UART_MspInit+0xcc>)
 8003436:	f001 f93d 	bl	80046b4 <HAL_GPIO_Init>
 800343a:	2200      	movs	r2, #0
 800343c:	2101      	movs	r1, #1
 800343e:	2027      	movs	r0, #39	; 0x27
 8003440:	f000 ff87 	bl	8004352 <HAL_NVIC_SetPriority>
 8003444:	2027      	movs	r0, #39	; 0x27
 8003446:	f000 ffa0 	bl	800438a <HAL_NVIC_EnableIRQ>
 800344a:	bf00      	nop
 800344c:	37b8      	adds	r7, #184	; 0xb8
 800344e:	46bd      	mov	sp, r7
 8003450:	bd80      	pop	{r7, pc}
 8003452:	bf00      	nop
 8003454:	40004800 	.word	0x40004800
 8003458:	40023800 	.word	0x40023800
 800345c:	40020c00 	.word	0x40020c00

08003460 <has_message_from_UART>:
 8003460:	b480      	push	{r7}
 8003462:	af00      	add	r7, sp, #0
 8003464:	4b03      	ldr	r3, [pc, #12]	; (8003474 <has_message_from_UART+0x14>)
 8003466:	781b      	ldrb	r3, [r3, #0]
 8003468:	4618      	mov	r0, r3
 800346a:	46bd      	mov	sp, r7
 800346c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003470:	4770      	bx	lr
 8003472:	bf00      	nop
 8003474:	2001047c 	.word	0x2001047c

08003478 <is_transmitting_to_UART>:
 8003478:	b480      	push	{r7}
 800347a:	af00      	add	r7, sp, #0
 800347c:	4b03      	ldr	r3, [pc, #12]	; (800348c <is_transmitting_to_UART+0x14>)
 800347e:	781b      	ldrb	r3, [r3, #0]
 8003480:	4618      	mov	r0, r3
 8003482:	46bd      	mov	sp, r7
 8003484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003488:	4770      	bx	lr
 800348a:	bf00      	nop
 800348c:	20014680 	.word	0x20014680

08003490 <reset_UART>:
 8003490:	b580      	push	{r7, lr}
 8003492:	af00      	add	r7, sp, #0
 8003494:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003498:	2100      	movs	r1, #0
 800349a:	4806      	ldr	r0, [pc, #24]	; (80034b4 <reset_UART+0x24>)
 800349c:	f005 fb3e 	bl	8008b1c <memset>
 80034a0:	2201      	movs	r2, #1
 80034a2:	4904      	ldr	r1, [pc, #16]	; (80034b4 <reset_UART+0x24>)
 80034a4:	4804      	ldr	r0, [pc, #16]	; (80034b8 <reset_UART+0x28>)
 80034a6:	f004 f82b 	bl	8007500 <HAL_UART_Receive_IT>
 80034aa:	4b04      	ldr	r3, [pc, #16]	; (80034bc <reset_UART+0x2c>)
 80034ac:	2200      	movs	r2, #0
 80034ae:	701a      	strb	r2, [r3, #0]
 80034b0:	bf00      	nop
 80034b2:	bd80      	pop	{r7, pc}
 80034b4:	20000328 	.word	0x20000328
 80034b8:	20018734 	.word	0x20018734
 80034bc:	2001047c 	.word	0x2001047c

080034c0 <send_UART>:
 80034c0:	b580      	push	{r7, lr}
 80034c2:	b082      	sub	sp, #8
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	6078      	str	r0, [r7, #4]
 80034c8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80034cc:	6879      	ldr	r1, [r7, #4]
 80034ce:	480d      	ldr	r0, [pc, #52]	; (8003504 <send_UART+0x44>)
 80034d0:	f006 fa25 	bl	800991e <strncpy>
 80034d4:	480b      	ldr	r0, [pc, #44]	; (8003504 <send_UART+0x44>)
 80034d6:	f7fc febd 	bl	8000254 <strlen>
 80034da:	4603      	mov	r3, r0
 80034dc:	461a      	mov	r2, r3
 80034de:	4b09      	ldr	r3, [pc, #36]	; (8003504 <send_UART+0x44>)
 80034e0:	4413      	add	r3, r2
 80034e2:	4909      	ldr	r1, [pc, #36]	; (8003508 <send_UART+0x48>)
 80034e4:	461a      	mov	r2, r3
 80034e6:	460b      	mov	r3, r1
 80034e8:	881b      	ldrh	r3, [r3, #0]
 80034ea:	8013      	strh	r3, [r2, #0]
 80034ec:	4b07      	ldr	r3, [pc, #28]	; (800350c <send_UART+0x4c>)
 80034ee:	2201      	movs	r2, #1
 80034f0:	701a      	strb	r2, [r3, #0]
 80034f2:	2201      	movs	r2, #1
 80034f4:	4903      	ldr	r1, [pc, #12]	; (8003504 <send_UART+0x44>)
 80034f6:	4806      	ldr	r0, [pc, #24]	; (8003510 <send_UART+0x50>)
 80034f8:	f003 ff94 	bl	8007424 <HAL_UART_Transmit_IT>
 80034fc:	bf00      	nop
 80034fe:	3708      	adds	r7, #8
 8003500:	46bd      	mov	sp, r7
 8003502:	bd80      	pop	{r7, pc}
 8003504:	20010480 	.word	0x20010480
 8003508:	0800e6ec 	.word	0x0800e6ec
 800350c:	20014680 	.word	0x20014680
 8003510:	20018734 	.word	0x20018734

08003514 <read_UART>:
 8003514:	b580      	push	{r7, lr}
 8003516:	b082      	sub	sp, #8
 8003518:	af00      	add	r7, sp, #0
 800351a:	6078      	str	r0, [r7, #4]
 800351c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003520:	4903      	ldr	r1, [pc, #12]	; (8003530 <read_UART+0x1c>)
 8003522:	6878      	ldr	r0, [r7, #4]
 8003524:	f006 f9fb 	bl	800991e <strncpy>
 8003528:	bf00      	nop
 800352a:	3708      	adds	r7, #8
 800352c:	46bd      	mov	sp, r7
 800352e:	bd80      	pop	{r7, pc}
 8003530:	20000328 	.word	0x20000328

08003534 <HAL_UART_RxCpltCallback>:
 8003534:	b580      	push	{r7, lr}
 8003536:	b082      	sub	sp, #8
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
 800353c:	4b2e      	ldr	r3, [pc, #184]	; (80035f8 <HAL_UART_RxCpltCallback+0xc4>)
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	2b00      	cmp	r3, #0
 8003542:	d154      	bne.n	80035ee <HAL_UART_RxCpltCallback+0xba>
 8003544:	4b2d      	ldr	r3, [pc, #180]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	4a2d      	ldr	r2, [pc, #180]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 800354a:	5cd3      	ldrb	r3, [r2, r3]
 800354c:	2b0d      	cmp	r3, #13
 800354e:	d00b      	beq.n	8003568 <HAL_UART_RxCpltCallback+0x34>
 8003550:	4b2a      	ldr	r3, [pc, #168]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	4a2a      	ldr	r2, [pc, #168]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 8003556:	5cd3      	ldrb	r3, [r2, r3]
 8003558:	2b5c      	cmp	r3, #92	; 0x5c
 800355a:	d005      	beq.n	8003568 <HAL_UART_RxCpltCallback+0x34>
 800355c:	4b27      	ldr	r3, [pc, #156]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	4a27      	ldr	r2, [pc, #156]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 8003562:	5cd3      	ldrb	r3, [r2, r3]
 8003564:	2b2f      	cmp	r3, #47	; 0x2f
 8003566:	d106      	bne.n	8003576 <HAL_UART_RxCpltCallback+0x42>
 8003568:	4b24      	ldr	r3, [pc, #144]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 800356a:	2200      	movs	r2, #0
 800356c:	601a      	str	r2, [r3, #0]
 800356e:	4b22      	ldr	r3, [pc, #136]	; (80035f8 <HAL_UART_RxCpltCallback+0xc4>)
 8003570:	2201      	movs	r2, #1
 8003572:	701a      	strb	r2, [r3, #0]
 8003574:	e03c      	b.n	80035f0 <HAL_UART_RxCpltCallback+0xbc>
 8003576:	4b21      	ldr	r3, [pc, #132]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	4a21      	ldr	r2, [pc, #132]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 800357c:	5cd3      	ldrb	r3, [r2, r3]
 800357e:	2b08      	cmp	r3, #8
 8003580:	d10f      	bne.n	80035a2 <HAL_UART_RxCpltCallback+0x6e>
 8003582:	4b1e      	ldr	r3, [pc, #120]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d105      	bne.n	8003596 <HAL_UART_RxCpltCallback+0x62>
 800358a:	4b1c      	ldr	r3, [pc, #112]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	3b01      	subs	r3, #1
 8003590:	4a1a      	ldr	r2, [pc, #104]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003592:	6013      	str	r3, [r2, #0]
 8003594:	e01c      	b.n	80035d0 <HAL_UART_RxCpltCallback+0x9c>
 8003596:	4b19      	ldr	r3, [pc, #100]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	3b02      	subs	r3, #2
 800359c:	4a17      	ldr	r2, [pc, #92]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 800359e:	6013      	str	r3, [r2, #0]
 80035a0:	e016      	b.n	80035d0 <HAL_UART_RxCpltCallback+0x9c>
 80035a2:	4b16      	ldr	r3, [pc, #88]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	4a16      	ldr	r2, [pc, #88]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 80035a8:	5cd3      	ldrb	r3, [r2, r3]
 80035aa:	2b1b      	cmp	r3, #27
 80035ac:	d104      	bne.n	80035b8 <HAL_UART_RxCpltCallback+0x84>
 80035ae:	4b13      	ldr	r3, [pc, #76]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035b0:	f04f 32ff 	mov.w	r2, #4294967295
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	e00b      	b.n	80035d0 <HAL_UART_RxCpltCallback+0x9c>
 80035b8:	4b10      	ldr	r3, [pc, #64]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	4a10      	ldr	r2, [pc, #64]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 80035be:	5cd3      	ldrb	r3, [r2, r3]
 80035c0:	2b24      	cmp	r3, #36	; 0x24
 80035c2:	d105      	bne.n	80035d0 <HAL_UART_RxCpltCallback+0x9c>
 80035c4:	4b0d      	ldr	r3, [pc, #52]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035c6:	2200      	movs	r2, #0
 80035c8:	601a      	str	r2, [r3, #0]
 80035ca:	4b0d      	ldr	r3, [pc, #52]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 80035cc:	2224      	movs	r2, #36	; 0x24
 80035ce:	701a      	strb	r2, [r3, #0]
 80035d0:	4b0a      	ldr	r3, [pc, #40]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	3301      	adds	r3, #1
 80035d6:	4a09      	ldr	r2, [pc, #36]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035d8:	6013      	str	r3, [r2, #0]
 80035da:	4b08      	ldr	r3, [pc, #32]	; (80035fc <HAL_UART_RxCpltCallback+0xc8>)
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	4a08      	ldr	r2, [pc, #32]	; (8003600 <HAL_UART_RxCpltCallback+0xcc>)
 80035e0:	4413      	add	r3, r2
 80035e2:	2201      	movs	r2, #1
 80035e4:	4619      	mov	r1, r3
 80035e6:	4807      	ldr	r0, [pc, #28]	; (8003604 <HAL_UART_RxCpltCallback+0xd0>)
 80035e8:	f003 ff8a 	bl	8007500 <HAL_UART_Receive_IT>
 80035ec:	e000      	b.n	80035f0 <HAL_UART_RxCpltCallback+0xbc>
 80035ee:	bf00      	nop
 80035f0:	3708      	adds	r7, #8
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
 80035f6:	bf00      	nop
 80035f8:	2001047c 	.word	0x2001047c
 80035fc:	20010478 	.word	0x20010478
 8003600:	20000328 	.word	0x20000328
 8003604:	20018734 	.word	0x20018734

08003608 <HAL_UART_TxCpltCallback>:
 8003608:	b580      	push	{r7, lr}
 800360a:	b082      	sub	sp, #8
 800360c:	af00      	add	r7, sp, #0
 800360e:	6078      	str	r0, [r7, #4]
 8003610:	4b16      	ldr	r3, [pc, #88]	; (800366c <HAL_UART_TxCpltCallback+0x64>)
 8003612:	781b      	ldrb	r3, [r3, #0]
 8003614:	f083 0301 	eor.w	r3, r3, #1
 8003618:	b2db      	uxtb	r3, r3
 800361a:	2b00      	cmp	r3, #0
 800361c:	d122      	bne.n	8003664 <HAL_UART_TxCpltCallback+0x5c>
 800361e:	4b14      	ldr	r3, [pc, #80]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	4a14      	ldr	r2, [pc, #80]	; (8003674 <HAL_UART_TxCpltCallback+0x6c>)
 8003624:	5cd3      	ldrb	r3, [r2, r3]
 8003626:	2b0d      	cmp	r3, #13
 8003628:	d10d      	bne.n	8003646 <HAL_UART_TxCpltCallback+0x3e>
 800362a:	4b11      	ldr	r3, [pc, #68]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	3b01      	subs	r3, #1
 8003630:	4a10      	ldr	r2, [pc, #64]	; (8003674 <HAL_UART_TxCpltCallback+0x6c>)
 8003632:	5cd3      	ldrb	r3, [r2, r3]
 8003634:	2b0a      	cmp	r3, #10
 8003636:	d006      	beq.n	8003646 <HAL_UART_TxCpltCallback+0x3e>
 8003638:	4b0d      	ldr	r3, [pc, #52]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 800363a:	2200      	movs	r2, #0
 800363c:	601a      	str	r2, [r3, #0]
 800363e:	4b0b      	ldr	r3, [pc, #44]	; (800366c <HAL_UART_TxCpltCallback+0x64>)
 8003640:	2200      	movs	r2, #0
 8003642:	701a      	strb	r2, [r3, #0]
 8003644:	e00f      	b.n	8003666 <HAL_UART_TxCpltCallback+0x5e>
 8003646:	4b0a      	ldr	r3, [pc, #40]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	3301      	adds	r3, #1
 800364c:	4a08      	ldr	r2, [pc, #32]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 800364e:	6013      	str	r3, [r2, #0]
 8003650:	4b07      	ldr	r3, [pc, #28]	; (8003670 <HAL_UART_TxCpltCallback+0x68>)
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	4a07      	ldr	r2, [pc, #28]	; (8003674 <HAL_UART_TxCpltCallback+0x6c>)
 8003656:	4413      	add	r3, r2
 8003658:	2201      	movs	r2, #1
 800365a:	4619      	mov	r1, r3
 800365c:	4806      	ldr	r0, [pc, #24]	; (8003678 <HAL_UART_TxCpltCallback+0x70>)
 800365e:	f003 fee1 	bl	8007424 <HAL_UART_Transmit_IT>
 8003662:	e000      	b.n	8003666 <HAL_UART_TxCpltCallback+0x5e>
 8003664:	bf00      	nop
 8003666:	3708      	adds	r7, #8
 8003668:	46bd      	mov	sp, r7
 800366a:	bd80      	pop	{r7, pc}
 800366c:	20014680 	.word	0x20014680
 8003670:	20014684 	.word	0x20014684
 8003674:	20010480 	.word	0x20010480
 8003678:	20018734 	.word	0x20018734

0800367c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800367c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80036b4 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8003680:	480d      	ldr	r0, [pc, #52]	; (80036b8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8003682:	490e      	ldr	r1, [pc, #56]	; (80036bc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8003684:	4a0e      	ldr	r2, [pc, #56]	; (80036c0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8003686:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003688:	e002      	b.n	8003690 <LoopCopyDataInit>

0800368a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800368a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800368c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800368e:	3304      	adds	r3, #4

08003690 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003690:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003692:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003694:	d3f9      	bcc.n	800368a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003696:	4a0b      	ldr	r2, [pc, #44]	; (80036c4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8003698:	4c0b      	ldr	r4, [pc, #44]	; (80036c8 <LoopFillZerobss+0x26>)
  movs r3, #0
 800369a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800369c:	e001      	b.n	80036a2 <LoopFillZerobss>

0800369e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800369e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80036a0:	3204      	adds	r2, #4

080036a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80036a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80036a4:	d3fb      	bcc.n	800369e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80036a6:	f7ff fc39 	bl	8002f1c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80036aa:	f005 fa13 	bl	8008ad4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80036ae:	f7ff fa45 	bl	8002b3c <main>
  bx  lr    
 80036b2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80036b4:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80036b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80036bc:	200002e8 	.word	0x200002e8
  ldr r2, =_sidata
 80036c0:	0800ebec 	.word	0x0800ebec
  ldr r2, =_sbss
 80036c4:	200002e8 	.word	0x200002e8
  ldr r4, =_ebss
 80036c8:	200187cc 	.word	0x200187cc

080036cc <CAN1_RX0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80036cc:	e7fe      	b.n	80036cc <CAN1_RX0_IRQHandler>

080036ce <HAL_Init>:
 80036ce:	b580      	push	{r7, lr}
 80036d0:	af00      	add	r7, sp, #0
 80036d2:	2003      	movs	r0, #3
 80036d4:	f000 fe32 	bl	800433c <HAL_NVIC_SetPriorityGrouping>
 80036d8:	2000      	movs	r0, #0
 80036da:	f000 f805 	bl	80036e8 <HAL_InitTick>
 80036de:	f7ff faeb 	bl	8002cb8 <HAL_MspInit>
 80036e2:	2300      	movs	r3, #0
 80036e4:	4618      	mov	r0, r3
 80036e6:	bd80      	pop	{r7, pc}

080036e8 <HAL_InitTick>:
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b082      	sub	sp, #8
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	6078      	str	r0, [r7, #4]
 80036f0:	4b12      	ldr	r3, [pc, #72]	; (800373c <HAL_InitTick+0x54>)
 80036f2:	681a      	ldr	r2, [r3, #0]
 80036f4:	4b12      	ldr	r3, [pc, #72]	; (8003740 <HAL_InitTick+0x58>)
 80036f6:	781b      	ldrb	r3, [r3, #0]
 80036f8:	4619      	mov	r1, r3
 80036fa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80036fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8003702:	fbb2 f3f3 	udiv	r3, r2, r3
 8003706:	4618      	mov	r0, r3
 8003708:	f000 fe4d 	bl	80043a6 <HAL_SYSTICK_Config>
 800370c:	4603      	mov	r3, r0
 800370e:	2b00      	cmp	r3, #0
 8003710:	d001      	beq.n	8003716 <HAL_InitTick+0x2e>
 8003712:	2301      	movs	r3, #1
 8003714:	e00e      	b.n	8003734 <HAL_InitTick+0x4c>
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	2b0f      	cmp	r3, #15
 800371a:	d80a      	bhi.n	8003732 <HAL_InitTick+0x4a>
 800371c:	2200      	movs	r2, #0
 800371e:	6879      	ldr	r1, [r7, #4]
 8003720:	f04f 30ff 	mov.w	r0, #4294967295
 8003724:	f000 fe15 	bl	8004352 <HAL_NVIC_SetPriority>
 8003728:	4a06      	ldr	r2, [pc, #24]	; (8003744 <HAL_InitTick+0x5c>)
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6013      	str	r3, [r2, #0]
 800372e:	2300      	movs	r3, #0
 8003730:	e000      	b.n	8003734 <HAL_InitTick+0x4c>
 8003732:	2301      	movs	r3, #1
 8003734:	4618      	mov	r0, r3
 8003736:	3708      	adds	r7, #8
 8003738:	46bd      	mov	sp, r7
 800373a:	bd80      	pop	{r7, pc}
 800373c:	20000108 	.word	0x20000108
 8003740:	20000110 	.word	0x20000110
 8003744:	2000010c 	.word	0x2000010c

08003748 <HAL_IncTick>:
 8003748:	b480      	push	{r7}
 800374a:	af00      	add	r7, sp, #0
 800374c:	4b06      	ldr	r3, [pc, #24]	; (8003768 <HAL_IncTick+0x20>)
 800374e:	781b      	ldrb	r3, [r3, #0]
 8003750:	461a      	mov	r2, r3
 8003752:	4b06      	ldr	r3, [pc, #24]	; (800376c <HAL_IncTick+0x24>)
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	4413      	add	r3, r2
 8003758:	4a04      	ldr	r2, [pc, #16]	; (800376c <HAL_IncTick+0x24>)
 800375a:	6013      	str	r3, [r2, #0]
 800375c:	bf00      	nop
 800375e:	46bd      	mov	sp, r7
 8003760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003764:	4770      	bx	lr
 8003766:	bf00      	nop
 8003768:	20000110 	.word	0x20000110
 800376c:	200187b8 	.word	0x200187b8

08003770 <HAL_GetTick>:
 8003770:	b480      	push	{r7}
 8003772:	af00      	add	r7, sp, #0
 8003774:	4b03      	ldr	r3, [pc, #12]	; (8003784 <HAL_GetTick+0x14>)
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	4618      	mov	r0, r3
 800377a:	46bd      	mov	sp, r7
 800377c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003780:	4770      	bx	lr
 8003782:	bf00      	nop
 8003784:	200187b8 	.word	0x200187b8

08003788 <HAL_Delay>:
 8003788:	b580      	push	{r7, lr}
 800378a:	b084      	sub	sp, #16
 800378c:	af00      	add	r7, sp, #0
 800378e:	6078      	str	r0, [r7, #4]
 8003790:	f7ff ffee 	bl	8003770 <HAL_GetTick>
 8003794:	60b8      	str	r0, [r7, #8]
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	60fb      	str	r3, [r7, #12]
 800379a:	68fb      	ldr	r3, [r7, #12]
 800379c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037a0:	d005      	beq.n	80037ae <HAL_Delay+0x26>
 80037a2:	4b0a      	ldr	r3, [pc, #40]	; (80037cc <HAL_Delay+0x44>)
 80037a4:	781b      	ldrb	r3, [r3, #0]
 80037a6:	461a      	mov	r2, r3
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	4413      	add	r3, r2
 80037ac:	60fb      	str	r3, [r7, #12]
 80037ae:	bf00      	nop
 80037b0:	f7ff ffde 	bl	8003770 <HAL_GetTick>
 80037b4:	4602      	mov	r2, r0
 80037b6:	68bb      	ldr	r3, [r7, #8]
 80037b8:	1ad3      	subs	r3, r2, r3
 80037ba:	68fa      	ldr	r2, [r7, #12]
 80037bc:	429a      	cmp	r2, r3
 80037be:	d8f7      	bhi.n	80037b0 <HAL_Delay+0x28>
 80037c0:	bf00      	nop
 80037c2:	bf00      	nop
 80037c4:	3710      	adds	r7, #16
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bd80      	pop	{r7, pc}
 80037ca:	bf00      	nop
 80037cc:	20000110 	.word	0x20000110

080037d0 <HAL_ADC_Init>:
 80037d0:	b580      	push	{r7, lr}
 80037d2:	b084      	sub	sp, #16
 80037d4:	af00      	add	r7, sp, #0
 80037d6:	6078      	str	r0, [r7, #4]
 80037d8:	2300      	movs	r3, #0
 80037da:	73fb      	strb	r3, [r7, #15]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d101      	bne.n	80037e6 <HAL_ADC_Init+0x16>
 80037e2:	2301      	movs	r3, #1
 80037e4:	e031      	b.n	800384a <HAL_ADC_Init+0x7a>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d109      	bne.n	8003802 <HAL_ADC_Init+0x32>
 80037ee:	6878      	ldr	r0, [r7, #4]
 80037f0:	f7fd f9b4 	bl	8000b5c <HAL_ADC_MspInit>
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	2200      	movs	r2, #0
 80037f8:	645a      	str	r2, [r3, #68]	; 0x44
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	2200      	movs	r2, #0
 80037fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003806:	f003 0310 	and.w	r3, r3, #16
 800380a:	2b00      	cmp	r3, #0
 800380c:	d116      	bne.n	800383c <HAL_ADC_Init+0x6c>
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003812:	4b10      	ldr	r3, [pc, #64]	; (8003854 <HAL_ADC_Init+0x84>)
 8003814:	4013      	ands	r3, r2
 8003816:	f043 0202 	orr.w	r2, r3, #2
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	641a      	str	r2, [r3, #64]	; 0x40
 800381e:	6878      	ldr	r0, [r7, #4]
 8003820:	f000 fbb8 	bl	8003f94 <ADC_Init>
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	2200      	movs	r2, #0
 8003828:	645a      	str	r2, [r3, #68]	; 0x44
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800382e:	f023 0303 	bic.w	r3, r3, #3
 8003832:	f043 0201 	orr.w	r2, r3, #1
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	641a      	str	r2, [r3, #64]	; 0x40
 800383a:	e001      	b.n	8003840 <HAL_ADC_Init+0x70>
 800383c:	2301      	movs	r3, #1
 800383e:	73fb      	strb	r3, [r7, #15]
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	2200      	movs	r2, #0
 8003844:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003848:	7bfb      	ldrb	r3, [r7, #15]
 800384a:	4618      	mov	r0, r3
 800384c:	3710      	adds	r7, #16
 800384e:	46bd      	mov	sp, r7
 8003850:	bd80      	pop	{r7, pc}
 8003852:	bf00      	nop
 8003854:	ffffeefd 	.word	0xffffeefd

08003858 <HAL_ADC_Start_IT>:
 8003858:	b480      	push	{r7}
 800385a:	b085      	sub	sp, #20
 800385c:	af00      	add	r7, sp, #0
 800385e:	6078      	str	r0, [r7, #4]
 8003860:	2300      	movs	r3, #0
 8003862:	60fb      	str	r3, [r7, #12]
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800386a:	2b01      	cmp	r3, #1
 800386c:	d101      	bne.n	8003872 <HAL_ADC_Start_IT+0x1a>
 800386e:	2302      	movs	r3, #2
 8003870:	e0b5      	b.n	80039de <HAL_ADC_Start_IT+0x186>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	2201      	movs	r2, #1
 8003876:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	689b      	ldr	r3, [r3, #8]
 8003880:	f003 0301 	and.w	r3, r3, #1
 8003884:	2b01      	cmp	r3, #1
 8003886:	d018      	beq.n	80038ba <HAL_ADC_Start_IT+0x62>
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	689a      	ldr	r2, [r3, #8]
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	f042 0201 	orr.w	r2, r2, #1
 8003896:	609a      	str	r2, [r3, #8]
 8003898:	4b54      	ldr	r3, [pc, #336]	; (80039ec <HAL_ADC_Start_IT+0x194>)
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	4a54      	ldr	r2, [pc, #336]	; (80039f0 <HAL_ADC_Start_IT+0x198>)
 800389e:	fba2 2303 	umull	r2, r3, r2, r3
 80038a2:	0c9a      	lsrs	r2, r3, #18
 80038a4:	4613      	mov	r3, r2
 80038a6:	005b      	lsls	r3, r3, #1
 80038a8:	4413      	add	r3, r2
 80038aa:	60fb      	str	r3, [r7, #12]
 80038ac:	e002      	b.n	80038b4 <HAL_ADC_Start_IT+0x5c>
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	3b01      	subs	r3, #1
 80038b2:	60fb      	str	r3, [r7, #12]
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	d1f9      	bne.n	80038ae <HAL_ADC_Start_IT+0x56>
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	689b      	ldr	r3, [r3, #8]
 80038c0:	f003 0301 	and.w	r3, r3, #1
 80038c4:	2b01      	cmp	r3, #1
 80038c6:	d17d      	bne.n	80039c4 <HAL_ADC_Start_IT+0x16c>
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80038cc:	4b49      	ldr	r3, [pc, #292]	; (80039f4 <HAL_ADC_Start_IT+0x19c>)
 80038ce:	4013      	ands	r3, r2
 80038d0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	641a      	str	r2, [r3, #64]	; 0x40
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	685b      	ldr	r3, [r3, #4]
 80038de:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d007      	beq.n	80038f6 <HAL_ADC_Start_IT+0x9e>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038ea:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80038ee:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	641a      	str	r2, [r3, #64]	; 0x40
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038fa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80038fe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003902:	d106      	bne.n	8003912 <HAL_ADC_Start_IT+0xba>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003908:	f023 0206 	bic.w	r2, r3, #6
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	645a      	str	r2, [r3, #68]	; 0x44
 8003910:	e002      	b.n	8003918 <HAL_ADC_Start_IT+0xc0>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	2200      	movs	r2, #0
 8003916:	645a      	str	r2, [r3, #68]	; 0x44
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	2200      	movs	r2, #0
 800391c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8003928:	601a      	str	r2, [r3, #0]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	6859      	ldr	r1, [r3, #4]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681a      	ldr	r2, [r3, #0]
 8003934:	4b30      	ldr	r3, [pc, #192]	; (80039f8 <HAL_ADC_Start_IT+0x1a0>)
 8003936:	430b      	orrs	r3, r1
 8003938:	6053      	str	r3, [r2, #4]
 800393a:	4b30      	ldr	r3, [pc, #192]	; (80039fc <HAL_ADC_Start_IT+0x1a4>)
 800393c:	685b      	ldr	r3, [r3, #4]
 800393e:	f003 031f 	and.w	r3, r3, #31
 8003942:	2b00      	cmp	r3, #0
 8003944:	d10f      	bne.n	8003966 <HAL_ADC_Start_IT+0x10e>
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	689b      	ldr	r3, [r3, #8]
 800394c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003950:	2b00      	cmp	r3, #0
 8003952:	d143      	bne.n	80039dc <HAL_ADC_Start_IT+0x184>
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	689a      	ldr	r2, [r3, #8]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003962:	609a      	str	r2, [r3, #8]
 8003964:	e03a      	b.n	80039dc <HAL_ADC_Start_IT+0x184>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4a25      	ldr	r2, [pc, #148]	; (8003a00 <HAL_ADC_Start_IT+0x1a8>)
 800396c:	4293      	cmp	r3, r2
 800396e:	d10e      	bne.n	800398e <HAL_ADC_Start_IT+0x136>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	689b      	ldr	r3, [r3, #8]
 8003976:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800397a:	2b00      	cmp	r3, #0
 800397c:	d107      	bne.n	800398e <HAL_ADC_Start_IT+0x136>
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	689a      	ldr	r2, [r3, #8]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800398c:	609a      	str	r2, [r3, #8]
 800398e:	4b1b      	ldr	r3, [pc, #108]	; (80039fc <HAL_ADC_Start_IT+0x1a4>)
 8003990:	685b      	ldr	r3, [r3, #4]
 8003992:	f003 0310 	and.w	r3, r3, #16
 8003996:	2b00      	cmp	r3, #0
 8003998:	d120      	bne.n	80039dc <HAL_ADC_Start_IT+0x184>
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	4a19      	ldr	r2, [pc, #100]	; (8003a04 <HAL_ADC_Start_IT+0x1ac>)
 80039a0:	4293      	cmp	r3, r2
 80039a2:	d11b      	bne.n	80039dc <HAL_ADC_Start_IT+0x184>
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	689b      	ldr	r3, [r3, #8]
 80039aa:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d114      	bne.n	80039dc <HAL_ADC_Start_IT+0x184>
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	689a      	ldr	r2, [r3, #8]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80039c0:	609a      	str	r2, [r3, #8]
 80039c2:	e00b      	b.n	80039dc <HAL_ADC_Start_IT+0x184>
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039c8:	f043 0210 	orr.w	r2, r3, #16
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	641a      	str	r2, [r3, #64]	; 0x40
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039d4:	f043 0201 	orr.w	r2, r3, #1
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	645a      	str	r2, [r3, #68]	; 0x44
 80039dc:	2300      	movs	r3, #0
 80039de:	4618      	mov	r0, r3
 80039e0:	3714      	adds	r7, #20
 80039e2:	46bd      	mov	sp, r7
 80039e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e8:	4770      	bx	lr
 80039ea:	bf00      	nop
 80039ec:	20000108 	.word	0x20000108
 80039f0:	431bde83 	.word	0x431bde83
 80039f4:	fffff8fe 	.word	0xfffff8fe
 80039f8:	04000020 	.word	0x04000020
 80039fc:	40012300 	.word	0x40012300
 8003a00:	40012000 	.word	0x40012000
 8003a04:	40012200 	.word	0x40012200

08003a08 <HAL_ADC_Stop_IT>:
 8003a08:	b480      	push	{r7}
 8003a0a:	b083      	sub	sp, #12
 8003a0c:	af00      	add	r7, sp, #0
 8003a0e:	6078      	str	r0, [r7, #4]
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003a16:	2b01      	cmp	r3, #1
 8003a18:	d101      	bne.n	8003a1e <HAL_ADC_Stop_IT+0x16>
 8003a1a:	2302      	movs	r3, #2
 8003a1c:	e027      	b.n	8003a6e <HAL_ADC_Stop_IT+0x66>
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	2201      	movs	r2, #1
 8003a22:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	689a      	ldr	r2, [r3, #8]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f022 0201 	bic.w	r2, r2, #1
 8003a34:	609a      	str	r2, [r3, #8]
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	689b      	ldr	r3, [r3, #8]
 8003a3c:	f003 0301 	and.w	r3, r3, #1
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d10f      	bne.n	8003a64 <HAL_ADC_Stop_IT+0x5c>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	6859      	ldr	r1, [r3, #4]
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681a      	ldr	r2, [r3, #0]
 8003a4e:	4b0b      	ldr	r3, [pc, #44]	; (8003a7c <HAL_ADC_Stop_IT+0x74>)
 8003a50:	400b      	ands	r3, r1
 8003a52:	6053      	str	r3, [r2, #4]
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a58:	4b09      	ldr	r3, [pc, #36]	; (8003a80 <HAL_ADC_Stop_IT+0x78>)
 8003a5a:	4013      	ands	r3, r2
 8003a5c:	f043 0201 	orr.w	r2, r3, #1
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	641a      	str	r2, [r3, #64]	; 0x40
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2200      	movs	r2, #0
 8003a68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	4618      	mov	r0, r3
 8003a70:	370c      	adds	r7, #12
 8003a72:	46bd      	mov	sp, r7
 8003a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a78:	4770      	bx	lr
 8003a7a:	bf00      	nop
 8003a7c:	fbffffdf 	.word	0xfbffffdf
 8003a80:	ffffeefe 	.word	0xffffeefe

08003a84 <HAL_ADC_IRQHandler>:
 8003a84:	b580      	push	{r7, lr}
 8003a86:	b086      	sub	sp, #24
 8003a88:	af00      	add	r7, sp, #0
 8003a8a:	6078      	str	r0, [r7, #4]
 8003a8c:	2300      	movs	r3, #0
 8003a8e:	617b      	str	r3, [r7, #20]
 8003a90:	2300      	movs	r3, #0
 8003a92:	613b      	str	r3, [r7, #16]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	60fb      	str	r3, [r7, #12]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	685b      	ldr	r3, [r3, #4]
 8003aa2:	60bb      	str	r3, [r7, #8]
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	f003 0302 	and.w	r3, r3, #2
 8003aaa:	617b      	str	r3, [r7, #20]
 8003aac:	68bb      	ldr	r3, [r7, #8]
 8003aae:	f003 0320 	and.w	r3, r3, #32
 8003ab2:	613b      	str	r3, [r7, #16]
 8003ab4:	697b      	ldr	r3, [r7, #20]
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d049      	beq.n	8003b4e <HAL_ADC_IRQHandler+0xca>
 8003aba:	693b      	ldr	r3, [r7, #16]
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	d046      	beq.n	8003b4e <HAL_ADC_IRQHandler+0xca>
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ac4:	f003 0310 	and.w	r3, r3, #16
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d105      	bne.n	8003ad8 <HAL_ADC_IRQHandler+0x54>
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ad0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	641a      	str	r2, [r3, #64]	; 0x40
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	689b      	ldr	r3, [r3, #8]
 8003ade:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d12b      	bne.n	8003b3e <HAL_ADC_IRQHandler+0xba>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	699b      	ldr	r3, [r3, #24]
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d127      	bne.n	8003b3e <HAL_ADC_IRQHandler+0xba>
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003af4:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d006      	beq.n	8003b0a <HAL_ADC_IRQHandler+0x86>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	689b      	ldr	r3, [r3, #8]
 8003b02:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d119      	bne.n	8003b3e <HAL_ADC_IRQHandler+0xba>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	685a      	ldr	r2, [r3, #4]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	f022 0220 	bic.w	r2, r2, #32
 8003b18:	605a      	str	r2, [r3, #4]
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b1e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	641a      	str	r2, [r3, #64]	; 0x40
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b2a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003b2e:	2b00      	cmp	r3, #0
 8003b30:	d105      	bne.n	8003b3e <HAL_ADC_IRQHandler+0xba>
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b36:	f043 0201 	orr.w	r2, r3, #1
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	641a      	str	r2, [r3, #64]	; 0x40
 8003b3e:	6878      	ldr	r0, [r7, #4]
 8003b40:	f7fd f8e6 	bl	8000d10 <HAL_ADC_ConvCpltCallback>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	f06f 0212 	mvn.w	r2, #18
 8003b4c:	601a      	str	r2, [r3, #0]
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	f003 0304 	and.w	r3, r3, #4
 8003b54:	617b      	str	r3, [r7, #20]
 8003b56:	68bb      	ldr	r3, [r7, #8]
 8003b58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b5c:	613b      	str	r3, [r7, #16]
 8003b5e:	697b      	ldr	r3, [r7, #20]
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	d057      	beq.n	8003c14 <HAL_ADC_IRQHandler+0x190>
 8003b64:	693b      	ldr	r3, [r7, #16]
 8003b66:	2b00      	cmp	r3, #0
 8003b68:	d054      	beq.n	8003c14 <HAL_ADC_IRQHandler+0x190>
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b6e:	f003 0310 	and.w	r3, r3, #16
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d105      	bne.n	8003b82 <HAL_ADC_IRQHandler+0xfe>
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b7a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	641a      	str	r2, [r3, #64]	; 0x40
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	689b      	ldr	r3, [r3, #8]
 8003b88:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d139      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b96:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d006      	beq.n	8003bac <HAL_ADC_IRQHandler+0x128>
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	689b      	ldr	r3, [r3, #8]
 8003ba4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d12b      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	685b      	ldr	r3, [r3, #4]
 8003bb2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d124      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	689b      	ldr	r3, [r3, #8]
 8003bc0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d11d      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	699b      	ldr	r3, [r3, #24]
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d119      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	685a      	ldr	r2, [r3, #4]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003bde:	605a      	str	r2, [r3, #4]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003be4:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	641a      	str	r2, [r3, #64]	; 0x40
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d105      	bne.n	8003c04 <HAL_ADC_IRQHandler+0x180>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bfc:	f043 0201 	orr.w	r2, r3, #1
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	641a      	str	r2, [r3, #64]	; 0x40
 8003c04:	6878      	ldr	r0, [r7, #4]
 8003c06:	f000 fabf 	bl	8004188 <HAL_ADCEx_InjectedConvCpltCallback>
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	f06f 020c 	mvn.w	r2, #12
 8003c12:	601a      	str	r2, [r3, #0]
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	f003 0301 	and.w	r3, r3, #1
 8003c1a:	617b      	str	r3, [r7, #20]
 8003c1c:	68bb      	ldr	r3, [r7, #8]
 8003c1e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003c22:	613b      	str	r3, [r7, #16]
 8003c24:	697b      	ldr	r3, [r7, #20]
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	d017      	beq.n	8003c5a <HAL_ADC_IRQHandler+0x1d6>
 8003c2a:	693b      	ldr	r3, [r7, #16]
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d014      	beq.n	8003c5a <HAL_ADC_IRQHandler+0x1d6>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	f003 0301 	and.w	r3, r3, #1
 8003c3a:	2b01      	cmp	r3, #1
 8003c3c:	d10d      	bne.n	8003c5a <HAL_ADC_IRQHandler+0x1d6>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c42:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	641a      	str	r2, [r3, #64]	; 0x40
 8003c4a:	6878      	ldr	r0, [r7, #4]
 8003c4c:	f000 f837 	bl	8003cbe <HAL_ADC_LevelOutOfWindowCallback>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f06f 0201 	mvn.w	r2, #1
 8003c58:	601a      	str	r2, [r3, #0]
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	f003 0320 	and.w	r3, r3, #32
 8003c60:	617b      	str	r3, [r7, #20]
 8003c62:	68bb      	ldr	r3, [r7, #8]
 8003c64:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003c68:	613b      	str	r3, [r7, #16]
 8003c6a:	697b      	ldr	r3, [r7, #20]
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d015      	beq.n	8003c9c <HAL_ADC_IRQHandler+0x218>
 8003c70:	693b      	ldr	r3, [r7, #16]
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d012      	beq.n	8003c9c <HAL_ADC_IRQHandler+0x218>
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c7a:	f043 0202 	orr.w	r2, r3, #2
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	645a      	str	r2, [r3, #68]	; 0x44
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	f06f 0220 	mvn.w	r2, #32
 8003c8a:	601a      	str	r2, [r3, #0]
 8003c8c:	6878      	ldr	r0, [r7, #4]
 8003c8e:	f000 f820 	bl	8003cd2 <HAL_ADC_ErrorCallback>
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	f06f 0220 	mvn.w	r2, #32
 8003c9a:	601a      	str	r2, [r3, #0]
 8003c9c:	bf00      	nop
 8003c9e:	3718      	adds	r7, #24
 8003ca0:	46bd      	mov	sp, r7
 8003ca2:	bd80      	pop	{r7, pc}

08003ca4 <HAL_ADC_GetValue>:
 8003ca4:	b480      	push	{r7}
 8003ca6:	b083      	sub	sp, #12
 8003ca8:	af00      	add	r7, sp, #0
 8003caa:	6078      	str	r0, [r7, #4]
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003cb2:	4618      	mov	r0, r3
 8003cb4:	370c      	adds	r7, #12
 8003cb6:	46bd      	mov	sp, r7
 8003cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cbc:	4770      	bx	lr

08003cbe <HAL_ADC_LevelOutOfWindowCallback>:
 8003cbe:	b480      	push	{r7}
 8003cc0:	b083      	sub	sp, #12
 8003cc2:	af00      	add	r7, sp, #0
 8003cc4:	6078      	str	r0, [r7, #4]
 8003cc6:	bf00      	nop
 8003cc8:	370c      	adds	r7, #12
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cd0:	4770      	bx	lr

08003cd2 <HAL_ADC_ErrorCallback>:
 8003cd2:	b480      	push	{r7}
 8003cd4:	b083      	sub	sp, #12
 8003cd6:	af00      	add	r7, sp, #0
 8003cd8:	6078      	str	r0, [r7, #4]
 8003cda:	bf00      	nop
 8003cdc:	370c      	adds	r7, #12
 8003cde:	46bd      	mov	sp, r7
 8003ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ce4:	4770      	bx	lr
	...

08003ce8 <HAL_ADC_ConfigChannel>:
 8003ce8:	b480      	push	{r7}
 8003cea:	b085      	sub	sp, #20
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	6039      	str	r1, [r7, #0]
 8003cf2:	2300      	movs	r3, #0
 8003cf4:	60fb      	str	r3, [r7, #12]
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003cfc:	2b01      	cmp	r3, #1
 8003cfe:	d101      	bne.n	8003d04 <HAL_ADC_ConfigChannel+0x1c>
 8003d00:	2302      	movs	r3, #2
 8003d02:	e136      	b.n	8003f72 <HAL_ADC_ConfigChannel+0x28a>
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	2201      	movs	r2, #1
 8003d08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003d0c:	683b      	ldr	r3, [r7, #0]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	2b09      	cmp	r3, #9
 8003d12:	d93a      	bls.n	8003d8a <HAL_ADC_ConfigChannel+0xa2>
 8003d14:	683b      	ldr	r3, [r7, #0]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8003d1c:	d035      	beq.n	8003d8a <HAL_ADC_ConfigChannel+0xa2>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	68d9      	ldr	r1, [r3, #12]
 8003d24:	683b      	ldr	r3, [r7, #0]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	b29b      	uxth	r3, r3
 8003d2a:	461a      	mov	r2, r3
 8003d2c:	4613      	mov	r3, r2
 8003d2e:	005b      	lsls	r3, r3, #1
 8003d30:	4413      	add	r3, r2
 8003d32:	3b1e      	subs	r3, #30
 8003d34:	2207      	movs	r2, #7
 8003d36:	fa02 f303 	lsl.w	r3, r2, r3
 8003d3a:	43da      	mvns	r2, r3
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	400a      	ands	r2, r1
 8003d42:	60da      	str	r2, [r3, #12]
 8003d44:	683b      	ldr	r3, [r7, #0]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	4a8d      	ldr	r2, [pc, #564]	; (8003f80 <HAL_ADC_ConfigChannel+0x298>)
 8003d4a:	4293      	cmp	r3, r2
 8003d4c:	d10a      	bne.n	8003d64 <HAL_ADC_ConfigChannel+0x7c>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	68d9      	ldr	r1, [r3, #12]
 8003d54:	683b      	ldr	r3, [r7, #0]
 8003d56:	689b      	ldr	r3, [r3, #8]
 8003d58:	061a      	lsls	r2, r3, #24
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	681b      	ldr	r3, [r3, #0]
 8003d5e:	430a      	orrs	r2, r1
 8003d60:	60da      	str	r2, [r3, #12]
 8003d62:	e035      	b.n	8003dd0 <HAL_ADC_ConfigChannel+0xe8>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	68d9      	ldr	r1, [r3, #12]
 8003d6a:	683b      	ldr	r3, [r7, #0]
 8003d6c:	689a      	ldr	r2, [r3, #8]
 8003d6e:	683b      	ldr	r3, [r7, #0]
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	b29b      	uxth	r3, r3
 8003d74:	4618      	mov	r0, r3
 8003d76:	4603      	mov	r3, r0
 8003d78:	005b      	lsls	r3, r3, #1
 8003d7a:	4403      	add	r3, r0
 8003d7c:	3b1e      	subs	r3, #30
 8003d7e:	409a      	lsls	r2, r3
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	430a      	orrs	r2, r1
 8003d86:	60da      	str	r2, [r3, #12]
 8003d88:	e022      	b.n	8003dd0 <HAL_ADC_ConfigChannel+0xe8>
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	6919      	ldr	r1, [r3, #16]
 8003d90:	683b      	ldr	r3, [r7, #0]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	b29b      	uxth	r3, r3
 8003d96:	461a      	mov	r2, r3
 8003d98:	4613      	mov	r3, r2
 8003d9a:	005b      	lsls	r3, r3, #1
 8003d9c:	4413      	add	r3, r2
 8003d9e:	2207      	movs	r2, #7
 8003da0:	fa02 f303 	lsl.w	r3, r2, r3
 8003da4:	43da      	mvns	r2, r3
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	400a      	ands	r2, r1
 8003dac:	611a      	str	r2, [r3, #16]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	6919      	ldr	r1, [r3, #16]
 8003db4:	683b      	ldr	r3, [r7, #0]
 8003db6:	689a      	ldr	r2, [r3, #8]
 8003db8:	683b      	ldr	r3, [r7, #0]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	b29b      	uxth	r3, r3
 8003dbe:	4618      	mov	r0, r3
 8003dc0:	4603      	mov	r3, r0
 8003dc2:	005b      	lsls	r3, r3, #1
 8003dc4:	4403      	add	r3, r0
 8003dc6:	409a      	lsls	r2, r3
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	430a      	orrs	r2, r1
 8003dce:	611a      	str	r2, [r3, #16]
 8003dd0:	683b      	ldr	r3, [r7, #0]
 8003dd2:	685b      	ldr	r3, [r3, #4]
 8003dd4:	2b06      	cmp	r3, #6
 8003dd6:	d824      	bhi.n	8003e22 <HAL_ADC_ConfigChannel+0x13a>
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003dde:	683b      	ldr	r3, [r7, #0]
 8003de0:	685a      	ldr	r2, [r3, #4]
 8003de2:	4613      	mov	r3, r2
 8003de4:	009b      	lsls	r3, r3, #2
 8003de6:	4413      	add	r3, r2
 8003de8:	3b05      	subs	r3, #5
 8003dea:	221f      	movs	r2, #31
 8003dec:	fa02 f303 	lsl.w	r3, r2, r3
 8003df0:	43da      	mvns	r2, r3
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	400a      	ands	r2, r1
 8003df8:	635a      	str	r2, [r3, #52]	; 0x34
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003e00:	683b      	ldr	r3, [r7, #0]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	b29b      	uxth	r3, r3
 8003e06:	4618      	mov	r0, r3
 8003e08:	683b      	ldr	r3, [r7, #0]
 8003e0a:	685a      	ldr	r2, [r3, #4]
 8003e0c:	4613      	mov	r3, r2
 8003e0e:	009b      	lsls	r3, r3, #2
 8003e10:	4413      	add	r3, r2
 8003e12:	3b05      	subs	r3, #5
 8003e14:	fa00 f203 	lsl.w	r2, r0, r3
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	430a      	orrs	r2, r1
 8003e1e:	635a      	str	r2, [r3, #52]	; 0x34
 8003e20:	e04c      	b.n	8003ebc <HAL_ADC_ConfigChannel+0x1d4>
 8003e22:	683b      	ldr	r3, [r7, #0]
 8003e24:	685b      	ldr	r3, [r3, #4]
 8003e26:	2b0c      	cmp	r3, #12
 8003e28:	d824      	bhi.n	8003e74 <HAL_ADC_ConfigChannel+0x18c>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003e30:	683b      	ldr	r3, [r7, #0]
 8003e32:	685a      	ldr	r2, [r3, #4]
 8003e34:	4613      	mov	r3, r2
 8003e36:	009b      	lsls	r3, r3, #2
 8003e38:	4413      	add	r3, r2
 8003e3a:	3b23      	subs	r3, #35	; 0x23
 8003e3c:	221f      	movs	r2, #31
 8003e3e:	fa02 f303 	lsl.w	r3, r2, r3
 8003e42:	43da      	mvns	r2, r3
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	400a      	ands	r2, r1
 8003e4a:	631a      	str	r2, [r3, #48]	; 0x30
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	b29b      	uxth	r3, r3
 8003e58:	4618      	mov	r0, r3
 8003e5a:	683b      	ldr	r3, [r7, #0]
 8003e5c:	685a      	ldr	r2, [r3, #4]
 8003e5e:	4613      	mov	r3, r2
 8003e60:	009b      	lsls	r3, r3, #2
 8003e62:	4413      	add	r3, r2
 8003e64:	3b23      	subs	r3, #35	; 0x23
 8003e66:	fa00 f203 	lsl.w	r2, r0, r3
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	430a      	orrs	r2, r1
 8003e70:	631a      	str	r2, [r3, #48]	; 0x30
 8003e72:	e023      	b.n	8003ebc <HAL_ADC_ConfigChannel+0x1d4>
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003e7a:	683b      	ldr	r3, [r7, #0]
 8003e7c:	685a      	ldr	r2, [r3, #4]
 8003e7e:	4613      	mov	r3, r2
 8003e80:	009b      	lsls	r3, r3, #2
 8003e82:	4413      	add	r3, r2
 8003e84:	3b41      	subs	r3, #65	; 0x41
 8003e86:	221f      	movs	r2, #31
 8003e88:	fa02 f303 	lsl.w	r3, r2, r3
 8003e8c:	43da      	mvns	r2, r3
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	400a      	ands	r2, r1
 8003e94:	62da      	str	r2, [r3, #44]	; 0x2c
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003e9c:	683b      	ldr	r3, [r7, #0]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	b29b      	uxth	r3, r3
 8003ea2:	4618      	mov	r0, r3
 8003ea4:	683b      	ldr	r3, [r7, #0]
 8003ea6:	685a      	ldr	r2, [r3, #4]
 8003ea8:	4613      	mov	r3, r2
 8003eaa:	009b      	lsls	r3, r3, #2
 8003eac:	4413      	add	r3, r2
 8003eae:	3b41      	subs	r3, #65	; 0x41
 8003eb0:	fa00 f203 	lsl.w	r2, r0, r3
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	430a      	orrs	r2, r1
 8003eba:	62da      	str	r2, [r3, #44]	; 0x2c
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	4a30      	ldr	r2, [pc, #192]	; (8003f84 <HAL_ADC_ConfigChannel+0x29c>)
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	d10a      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x1f4>
 8003ec6:	683b      	ldr	r3, [r7, #0]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8003ece:	d105      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x1f4>
 8003ed0:	4b2d      	ldr	r3, [pc, #180]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003ed2:	685b      	ldr	r3, [r3, #4]
 8003ed4:	4a2c      	ldr	r2, [pc, #176]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003ed6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8003eda:	6053      	str	r3, [r2, #4]
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4a28      	ldr	r2, [pc, #160]	; (8003f84 <HAL_ADC_ConfigChannel+0x29c>)
 8003ee2:	4293      	cmp	r3, r2
 8003ee4:	d10f      	bne.n	8003f06 <HAL_ADC_ConfigChannel+0x21e>
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	2b12      	cmp	r3, #18
 8003eec:	d10b      	bne.n	8003f06 <HAL_ADC_ConfigChannel+0x21e>
 8003eee:	4b26      	ldr	r3, [pc, #152]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003ef0:	685b      	ldr	r3, [r3, #4]
 8003ef2:	4a25      	ldr	r2, [pc, #148]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003ef4:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8003ef8:	6053      	str	r3, [r2, #4]
 8003efa:	4b23      	ldr	r3, [pc, #140]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003efc:	685b      	ldr	r3, [r3, #4]
 8003efe:	4a22      	ldr	r2, [pc, #136]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003f00:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003f04:	6053      	str	r3, [r2, #4]
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	681b      	ldr	r3, [r3, #0]
 8003f0a:	4a1e      	ldr	r2, [pc, #120]	; (8003f84 <HAL_ADC_ConfigChannel+0x29c>)
 8003f0c:	4293      	cmp	r3, r2
 8003f0e:	d12b      	bne.n	8003f68 <HAL_ADC_ConfigChannel+0x280>
 8003f10:	683b      	ldr	r3, [r7, #0]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	4a1a      	ldr	r2, [pc, #104]	; (8003f80 <HAL_ADC_ConfigChannel+0x298>)
 8003f16:	4293      	cmp	r3, r2
 8003f18:	d003      	beq.n	8003f22 <HAL_ADC_ConfigChannel+0x23a>
 8003f1a:	683b      	ldr	r3, [r7, #0]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	2b11      	cmp	r3, #17
 8003f20:	d122      	bne.n	8003f68 <HAL_ADC_ConfigChannel+0x280>
 8003f22:	4b19      	ldr	r3, [pc, #100]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003f24:	685b      	ldr	r3, [r3, #4]
 8003f26:	4a18      	ldr	r2, [pc, #96]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003f28:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8003f2c:	6053      	str	r3, [r2, #4]
 8003f2e:	4b16      	ldr	r3, [pc, #88]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003f30:	685b      	ldr	r3, [r3, #4]
 8003f32:	4a15      	ldr	r2, [pc, #84]	; (8003f88 <HAL_ADC_ConfigChannel+0x2a0>)
 8003f34:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003f38:	6053      	str	r3, [r2, #4]
 8003f3a:	683b      	ldr	r3, [r7, #0]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	4a10      	ldr	r2, [pc, #64]	; (8003f80 <HAL_ADC_ConfigChannel+0x298>)
 8003f40:	4293      	cmp	r3, r2
 8003f42:	d111      	bne.n	8003f68 <HAL_ADC_ConfigChannel+0x280>
 8003f44:	4b11      	ldr	r3, [pc, #68]	; (8003f8c <HAL_ADC_ConfigChannel+0x2a4>)
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	4a11      	ldr	r2, [pc, #68]	; (8003f90 <HAL_ADC_ConfigChannel+0x2a8>)
 8003f4a:	fba2 2303 	umull	r2, r3, r2, r3
 8003f4e:	0c9a      	lsrs	r2, r3, #18
 8003f50:	4613      	mov	r3, r2
 8003f52:	009b      	lsls	r3, r3, #2
 8003f54:	4413      	add	r3, r2
 8003f56:	005b      	lsls	r3, r3, #1
 8003f58:	60fb      	str	r3, [r7, #12]
 8003f5a:	e002      	b.n	8003f62 <HAL_ADC_ConfigChannel+0x27a>
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	3b01      	subs	r3, #1
 8003f60:	60fb      	str	r3, [r7, #12]
 8003f62:	68fb      	ldr	r3, [r7, #12]
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d1f9      	bne.n	8003f5c <HAL_ADC_ConfigChannel+0x274>
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	2200      	movs	r2, #0
 8003f6c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f70:	2300      	movs	r3, #0
 8003f72:	4618      	mov	r0, r3
 8003f74:	3714      	adds	r7, #20
 8003f76:	46bd      	mov	sp, r7
 8003f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f7c:	4770      	bx	lr
 8003f7e:	bf00      	nop
 8003f80:	10000012 	.word	0x10000012
 8003f84:	40012000 	.word	0x40012000
 8003f88:	40012300 	.word	0x40012300
 8003f8c:	20000108 	.word	0x20000108
 8003f90:	431bde83 	.word	0x431bde83

08003f94 <ADC_Init>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	4b78      	ldr	r3, [pc, #480]	; (8004180 <ADC_Init+0x1ec>)
 8003f9e:	685b      	ldr	r3, [r3, #4]
 8003fa0:	4a77      	ldr	r2, [pc, #476]	; (8004180 <ADC_Init+0x1ec>)
 8003fa2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003fa6:	6053      	str	r3, [r2, #4]
 8003fa8:	4b75      	ldr	r3, [pc, #468]	; (8004180 <ADC_Init+0x1ec>)
 8003faa:	685a      	ldr	r2, [r3, #4]
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	685b      	ldr	r3, [r3, #4]
 8003fb0:	4973      	ldr	r1, [pc, #460]	; (8004180 <ADC_Init+0x1ec>)
 8003fb2:	4313      	orrs	r3, r2
 8003fb4:	604b      	str	r3, [r1, #4]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	685a      	ldr	r2, [r3, #4]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003fc4:	605a      	str	r2, [r3, #4]
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	6859      	ldr	r1, [r3, #4]
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	691b      	ldr	r3, [r3, #16]
 8003fd0:	021a      	lsls	r2, r3, #8
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	430a      	orrs	r2, r1
 8003fd8:	605a      	str	r2, [r3, #4]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	685a      	ldr	r2, [r3, #4]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8003fe8:	605a      	str	r2, [r3, #4]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	6859      	ldr	r1, [r3, #4]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	689a      	ldr	r2, [r3, #8]
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	430a      	orrs	r2, r1
 8003ffa:	605a      	str	r2, [r3, #4]
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	689a      	ldr	r2, [r3, #8]
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800400a:	609a      	str	r2, [r3, #8]
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	6899      	ldr	r1, [r3, #8]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	68da      	ldr	r2, [r3, #12]
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	430a      	orrs	r2, r1
 800401c:	609a      	str	r2, [r3, #8]
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004022:	4a58      	ldr	r2, [pc, #352]	; (8004184 <ADC_Init+0x1f0>)
 8004024:	4293      	cmp	r3, r2
 8004026:	d022      	beq.n	800406e <ADC_Init+0xda>
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	689a      	ldr	r2, [r3, #8]
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004036:	609a      	str	r2, [r3, #8]
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	6899      	ldr	r1, [r3, #8]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	430a      	orrs	r2, r1
 8004048:	609a      	str	r2, [r3, #8]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	689a      	ldr	r2, [r3, #8]
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004058:	609a      	str	r2, [r3, #8]
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	6899      	ldr	r1, [r3, #8]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	430a      	orrs	r2, r1
 800406a:	609a      	str	r2, [r3, #8]
 800406c:	e00f      	b.n	800408e <ADC_Init+0xfa>
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	689a      	ldr	r2, [r3, #8]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800407c:	609a      	str	r2, [r3, #8]
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	689a      	ldr	r2, [r3, #8]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800408c:	609a      	str	r2, [r3, #8]
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	689a      	ldr	r2, [r3, #8]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	f022 0202 	bic.w	r2, r2, #2
 800409c:	609a      	str	r2, [r3, #8]
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	6899      	ldr	r1, [r3, #8]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	699b      	ldr	r3, [r3, #24]
 80040a8:	005a      	lsls	r2, r3, #1
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	430a      	orrs	r2, r1
 80040b0:	609a      	str	r2, [r3, #8]
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d01b      	beq.n	80040f4 <ADC_Init+0x160>
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	685a      	ldr	r2, [r3, #4]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80040ca:	605a      	str	r2, [r3, #4]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	685a      	ldr	r2, [r3, #4]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80040da:	605a      	str	r2, [r3, #4]
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	6859      	ldr	r1, [r3, #4]
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040e6:	3b01      	subs	r3, #1
 80040e8:	035a      	lsls	r2, r3, #13
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	430a      	orrs	r2, r1
 80040f0:	605a      	str	r2, [r3, #4]
 80040f2:	e007      	b.n	8004104 <ADC_Init+0x170>
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	685a      	ldr	r2, [r3, #4]
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004102:	605a      	str	r2, [r3, #4]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8004112:	62da      	str	r2, [r3, #44]	; 0x2c
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	69db      	ldr	r3, [r3, #28]
 800411e:	3b01      	subs	r3, #1
 8004120:	051a      	lsls	r2, r3, #20
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	430a      	orrs	r2, r1
 8004128:	62da      	str	r2, [r3, #44]	; 0x2c
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	689a      	ldr	r2, [r3, #8]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004138:	609a      	str	r2, [r3, #8]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	6899      	ldr	r1, [r3, #8]
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8004146:	025a      	lsls	r2, r3, #9
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	430a      	orrs	r2, r1
 800414e:	609a      	str	r2, [r3, #8]
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	689a      	ldr	r2, [r3, #8]
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800415e:	609a      	str	r2, [r3, #8]
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	6899      	ldr	r1, [r3, #8]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	695b      	ldr	r3, [r3, #20]
 800416a:	029a      	lsls	r2, r3, #10
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	430a      	orrs	r2, r1
 8004172:	609a      	str	r2, [r3, #8]
 8004174:	bf00      	nop
 8004176:	370c      	adds	r7, #12
 8004178:	46bd      	mov	sp, r7
 800417a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417e:	4770      	bx	lr
 8004180:	40012300 	.word	0x40012300
 8004184:	0f000001 	.word	0x0f000001

08004188 <HAL_ADCEx_InjectedConvCpltCallback>:
 8004188:	b480      	push	{r7}
 800418a:	b083      	sub	sp, #12
 800418c:	af00      	add	r7, sp, #0
 800418e:	6078      	str	r0, [r7, #4]
 8004190:	bf00      	nop
 8004192:	370c      	adds	r7, #12
 8004194:	46bd      	mov	sp, r7
 8004196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800419a:	4770      	bx	lr

0800419c <__NVIC_SetPriorityGrouping>:
 800419c:	b480      	push	{r7}
 800419e:	b085      	sub	sp, #20
 80041a0:	af00      	add	r7, sp, #0
 80041a2:	6078      	str	r0, [r7, #4]
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	f003 0307 	and.w	r3, r3, #7
 80041aa:	60fb      	str	r3, [r7, #12]
 80041ac:	4b0b      	ldr	r3, [pc, #44]	; (80041dc <__NVIC_SetPriorityGrouping+0x40>)
 80041ae:	68db      	ldr	r3, [r3, #12]
 80041b0:	60bb      	str	r3, [r7, #8]
 80041b2:	68ba      	ldr	r2, [r7, #8]
 80041b4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80041b8:	4013      	ands	r3, r2
 80041ba:	60bb      	str	r3, [r7, #8]
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	021a      	lsls	r2, r3, #8
 80041c0:	68bb      	ldr	r3, [r7, #8]
 80041c2:	431a      	orrs	r2, r3
 80041c4:	4b06      	ldr	r3, [pc, #24]	; (80041e0 <__NVIC_SetPriorityGrouping+0x44>)
 80041c6:	4313      	orrs	r3, r2
 80041c8:	60bb      	str	r3, [r7, #8]
 80041ca:	4a04      	ldr	r2, [pc, #16]	; (80041dc <__NVIC_SetPriorityGrouping+0x40>)
 80041cc:	68bb      	ldr	r3, [r7, #8]
 80041ce:	60d3      	str	r3, [r2, #12]
 80041d0:	bf00      	nop
 80041d2:	3714      	adds	r7, #20
 80041d4:	46bd      	mov	sp, r7
 80041d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041da:	4770      	bx	lr
 80041dc:	e000ed00 	.word	0xe000ed00
 80041e0:	05fa0000 	.word	0x05fa0000

080041e4 <__NVIC_GetPriorityGrouping>:
 80041e4:	b480      	push	{r7}
 80041e6:	af00      	add	r7, sp, #0
 80041e8:	4b04      	ldr	r3, [pc, #16]	; (80041fc <__NVIC_GetPriorityGrouping+0x18>)
 80041ea:	68db      	ldr	r3, [r3, #12]
 80041ec:	0a1b      	lsrs	r3, r3, #8
 80041ee:	f003 0307 	and.w	r3, r3, #7
 80041f2:	4618      	mov	r0, r3
 80041f4:	46bd      	mov	sp, r7
 80041f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041fa:	4770      	bx	lr
 80041fc:	e000ed00 	.word	0xe000ed00

08004200 <__NVIC_EnableIRQ>:
 8004200:	b480      	push	{r7}
 8004202:	b083      	sub	sp, #12
 8004204:	af00      	add	r7, sp, #0
 8004206:	4603      	mov	r3, r0
 8004208:	71fb      	strb	r3, [r7, #7]
 800420a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800420e:	2b00      	cmp	r3, #0
 8004210:	db0b      	blt.n	800422a <__NVIC_EnableIRQ+0x2a>
 8004212:	79fb      	ldrb	r3, [r7, #7]
 8004214:	f003 021f 	and.w	r2, r3, #31
 8004218:	4907      	ldr	r1, [pc, #28]	; (8004238 <__NVIC_EnableIRQ+0x38>)
 800421a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800421e:	095b      	lsrs	r3, r3, #5
 8004220:	2001      	movs	r0, #1
 8004222:	fa00 f202 	lsl.w	r2, r0, r2
 8004226:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800422a:	bf00      	nop
 800422c:	370c      	adds	r7, #12
 800422e:	46bd      	mov	sp, r7
 8004230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004234:	4770      	bx	lr
 8004236:	bf00      	nop
 8004238:	e000e100 	.word	0xe000e100

0800423c <__NVIC_SetPriority>:
 800423c:	b480      	push	{r7}
 800423e:	b083      	sub	sp, #12
 8004240:	af00      	add	r7, sp, #0
 8004242:	4603      	mov	r3, r0
 8004244:	6039      	str	r1, [r7, #0]
 8004246:	71fb      	strb	r3, [r7, #7]
 8004248:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800424c:	2b00      	cmp	r3, #0
 800424e:	db0a      	blt.n	8004266 <__NVIC_SetPriority+0x2a>
 8004250:	683b      	ldr	r3, [r7, #0]
 8004252:	b2da      	uxtb	r2, r3
 8004254:	490c      	ldr	r1, [pc, #48]	; (8004288 <__NVIC_SetPriority+0x4c>)
 8004256:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800425a:	0112      	lsls	r2, r2, #4
 800425c:	b2d2      	uxtb	r2, r2
 800425e:	440b      	add	r3, r1
 8004260:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004264:	e00a      	b.n	800427c <__NVIC_SetPriority+0x40>
 8004266:	683b      	ldr	r3, [r7, #0]
 8004268:	b2da      	uxtb	r2, r3
 800426a:	4908      	ldr	r1, [pc, #32]	; (800428c <__NVIC_SetPriority+0x50>)
 800426c:	79fb      	ldrb	r3, [r7, #7]
 800426e:	f003 030f 	and.w	r3, r3, #15
 8004272:	3b04      	subs	r3, #4
 8004274:	0112      	lsls	r2, r2, #4
 8004276:	b2d2      	uxtb	r2, r2
 8004278:	440b      	add	r3, r1
 800427a:	761a      	strb	r2, [r3, #24]
 800427c:	bf00      	nop
 800427e:	370c      	adds	r7, #12
 8004280:	46bd      	mov	sp, r7
 8004282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004286:	4770      	bx	lr
 8004288:	e000e100 	.word	0xe000e100
 800428c:	e000ed00 	.word	0xe000ed00

08004290 <NVIC_EncodePriority>:
 8004290:	b480      	push	{r7}
 8004292:	b089      	sub	sp, #36	; 0x24
 8004294:	af00      	add	r7, sp, #0
 8004296:	60f8      	str	r0, [r7, #12]
 8004298:	60b9      	str	r1, [r7, #8]
 800429a:	607a      	str	r2, [r7, #4]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	f003 0307 	and.w	r3, r3, #7
 80042a2:	61fb      	str	r3, [r7, #28]
 80042a4:	69fb      	ldr	r3, [r7, #28]
 80042a6:	f1c3 0307 	rsb	r3, r3, #7
 80042aa:	2b04      	cmp	r3, #4
 80042ac:	bf28      	it	cs
 80042ae:	2304      	movcs	r3, #4
 80042b0:	61bb      	str	r3, [r7, #24]
 80042b2:	69fb      	ldr	r3, [r7, #28]
 80042b4:	3304      	adds	r3, #4
 80042b6:	2b06      	cmp	r3, #6
 80042b8:	d902      	bls.n	80042c0 <NVIC_EncodePriority+0x30>
 80042ba:	69fb      	ldr	r3, [r7, #28]
 80042bc:	3b03      	subs	r3, #3
 80042be:	e000      	b.n	80042c2 <NVIC_EncodePriority+0x32>
 80042c0:	2300      	movs	r3, #0
 80042c2:	617b      	str	r3, [r7, #20]
 80042c4:	f04f 32ff 	mov.w	r2, #4294967295
 80042c8:	69bb      	ldr	r3, [r7, #24]
 80042ca:	fa02 f303 	lsl.w	r3, r2, r3
 80042ce:	43da      	mvns	r2, r3
 80042d0:	68bb      	ldr	r3, [r7, #8]
 80042d2:	401a      	ands	r2, r3
 80042d4:	697b      	ldr	r3, [r7, #20]
 80042d6:	409a      	lsls	r2, r3
 80042d8:	f04f 31ff 	mov.w	r1, #4294967295
 80042dc:	697b      	ldr	r3, [r7, #20]
 80042de:	fa01 f303 	lsl.w	r3, r1, r3
 80042e2:	43d9      	mvns	r1, r3
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	400b      	ands	r3, r1
 80042e8:	4313      	orrs	r3, r2
 80042ea:	4618      	mov	r0, r3
 80042ec:	3724      	adds	r7, #36	; 0x24
 80042ee:	46bd      	mov	sp, r7
 80042f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f4:	4770      	bx	lr
	...

080042f8 <SysTick_Config>:
 80042f8:	b580      	push	{r7, lr}
 80042fa:	b082      	sub	sp, #8
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	6078      	str	r0, [r7, #4]
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	3b01      	subs	r3, #1
 8004304:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004308:	d301      	bcc.n	800430e <SysTick_Config+0x16>
 800430a:	2301      	movs	r3, #1
 800430c:	e00f      	b.n	800432e <SysTick_Config+0x36>
 800430e:	4a0a      	ldr	r2, [pc, #40]	; (8004338 <SysTick_Config+0x40>)
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	3b01      	subs	r3, #1
 8004314:	6053      	str	r3, [r2, #4]
 8004316:	210f      	movs	r1, #15
 8004318:	f04f 30ff 	mov.w	r0, #4294967295
 800431c:	f7ff ff8e 	bl	800423c <__NVIC_SetPriority>
 8004320:	4b05      	ldr	r3, [pc, #20]	; (8004338 <SysTick_Config+0x40>)
 8004322:	2200      	movs	r2, #0
 8004324:	609a      	str	r2, [r3, #8]
 8004326:	4b04      	ldr	r3, [pc, #16]	; (8004338 <SysTick_Config+0x40>)
 8004328:	2207      	movs	r2, #7
 800432a:	601a      	str	r2, [r3, #0]
 800432c:	2300      	movs	r3, #0
 800432e:	4618      	mov	r0, r3
 8004330:	3708      	adds	r7, #8
 8004332:	46bd      	mov	sp, r7
 8004334:	bd80      	pop	{r7, pc}
 8004336:	bf00      	nop
 8004338:	e000e010 	.word	0xe000e010

0800433c <HAL_NVIC_SetPriorityGrouping>:
 800433c:	b580      	push	{r7, lr}
 800433e:	b082      	sub	sp, #8
 8004340:	af00      	add	r7, sp, #0
 8004342:	6078      	str	r0, [r7, #4]
 8004344:	6878      	ldr	r0, [r7, #4]
 8004346:	f7ff ff29 	bl	800419c <__NVIC_SetPriorityGrouping>
 800434a:	bf00      	nop
 800434c:	3708      	adds	r7, #8
 800434e:	46bd      	mov	sp, r7
 8004350:	bd80      	pop	{r7, pc}

08004352 <HAL_NVIC_SetPriority>:
 8004352:	b580      	push	{r7, lr}
 8004354:	b086      	sub	sp, #24
 8004356:	af00      	add	r7, sp, #0
 8004358:	4603      	mov	r3, r0
 800435a:	60b9      	str	r1, [r7, #8]
 800435c:	607a      	str	r2, [r7, #4]
 800435e:	73fb      	strb	r3, [r7, #15]
 8004360:	2300      	movs	r3, #0
 8004362:	617b      	str	r3, [r7, #20]
 8004364:	f7ff ff3e 	bl	80041e4 <__NVIC_GetPriorityGrouping>
 8004368:	6178      	str	r0, [r7, #20]
 800436a:	687a      	ldr	r2, [r7, #4]
 800436c:	68b9      	ldr	r1, [r7, #8]
 800436e:	6978      	ldr	r0, [r7, #20]
 8004370:	f7ff ff8e 	bl	8004290 <NVIC_EncodePriority>
 8004374:	4602      	mov	r2, r0
 8004376:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800437a:	4611      	mov	r1, r2
 800437c:	4618      	mov	r0, r3
 800437e:	f7ff ff5d 	bl	800423c <__NVIC_SetPriority>
 8004382:	bf00      	nop
 8004384:	3718      	adds	r7, #24
 8004386:	46bd      	mov	sp, r7
 8004388:	bd80      	pop	{r7, pc}

0800438a <HAL_NVIC_EnableIRQ>:
 800438a:	b580      	push	{r7, lr}
 800438c:	b082      	sub	sp, #8
 800438e:	af00      	add	r7, sp, #0
 8004390:	4603      	mov	r3, r0
 8004392:	71fb      	strb	r3, [r7, #7]
 8004394:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004398:	4618      	mov	r0, r3
 800439a:	f7ff ff31 	bl	8004200 <__NVIC_EnableIRQ>
 800439e:	bf00      	nop
 80043a0:	3708      	adds	r7, #8
 80043a2:	46bd      	mov	sp, r7
 80043a4:	bd80      	pop	{r7, pc}

080043a6 <HAL_SYSTICK_Config>:
 80043a6:	b580      	push	{r7, lr}
 80043a8:	b082      	sub	sp, #8
 80043aa:	af00      	add	r7, sp, #0
 80043ac:	6078      	str	r0, [r7, #4]
 80043ae:	6878      	ldr	r0, [r7, #4]
 80043b0:	f7ff ffa2 	bl	80042f8 <SysTick_Config>
 80043b4:	4603      	mov	r3, r0
 80043b6:	4618      	mov	r0, r3
 80043b8:	3708      	adds	r7, #8
 80043ba:	46bd      	mov	sp, r7
 80043bc:	bd80      	pop	{r7, pc}

080043be <HAL_DAC_Init>:
 80043be:	b580      	push	{r7, lr}
 80043c0:	b082      	sub	sp, #8
 80043c2:	af00      	add	r7, sp, #0
 80043c4:	6078      	str	r0, [r7, #4]
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d101      	bne.n	80043d0 <HAL_DAC_Init+0x12>
 80043cc:	2301      	movs	r3, #1
 80043ce:	e014      	b.n	80043fa <HAL_DAC_Init+0x3c>
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	791b      	ldrb	r3, [r3, #4]
 80043d4:	b2db      	uxtb	r3, r3
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d105      	bne.n	80043e6 <HAL_DAC_Init+0x28>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	2200      	movs	r2, #0
 80043de:	715a      	strb	r2, [r3, #5]
 80043e0:	6878      	ldr	r0, [r7, #4]
 80043e2:	f7fe fa91 	bl	8002908 <HAL_DAC_MspInit>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	2202      	movs	r2, #2
 80043ea:	711a      	strb	r2, [r3, #4]
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	2200      	movs	r2, #0
 80043f0:	611a      	str	r2, [r3, #16]
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	2201      	movs	r2, #1
 80043f6:	711a      	strb	r2, [r3, #4]
 80043f8:	2300      	movs	r3, #0
 80043fa:	4618      	mov	r0, r3
 80043fc:	3708      	adds	r7, #8
 80043fe:	46bd      	mov	sp, r7
 8004400:	bd80      	pop	{r7, pc}

08004402 <HAL_DAC_Start>:
 8004402:	b480      	push	{r7}
 8004404:	b083      	sub	sp, #12
 8004406:	af00      	add	r7, sp, #0
 8004408:	6078      	str	r0, [r7, #4]
 800440a:	6039      	str	r1, [r7, #0]
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	795b      	ldrb	r3, [r3, #5]
 8004410:	2b01      	cmp	r3, #1
 8004412:	d101      	bne.n	8004418 <HAL_DAC_Start+0x16>
 8004414:	2302      	movs	r3, #2
 8004416:	e040      	b.n	800449a <HAL_DAC_Start+0x98>
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	2201      	movs	r2, #1
 800441c:	715a      	strb	r2, [r3, #5]
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	2202      	movs	r2, #2
 8004422:	711a      	strb	r2, [r3, #4]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	6819      	ldr	r1, [r3, #0]
 800442a:	683b      	ldr	r3, [r7, #0]
 800442c:	f003 0310 	and.w	r3, r3, #16
 8004430:	2201      	movs	r2, #1
 8004432:	409a      	lsls	r2, r3
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	430a      	orrs	r2, r1
 800443a:	601a      	str	r2, [r3, #0]
 800443c:	683b      	ldr	r3, [r7, #0]
 800443e:	2b00      	cmp	r3, #0
 8004440:	d10f      	bne.n	8004462 <HAL_DAC_Start+0x60>
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f003 033c 	and.w	r3, r3, #60	; 0x3c
 800444c:	2b3c      	cmp	r3, #60	; 0x3c
 800444e:	d11d      	bne.n	800448c <HAL_DAC_Start+0x8a>
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	685a      	ldr	r2, [r3, #4]
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	f042 0201 	orr.w	r2, r2, #1
 800445e:	605a      	str	r2, [r3, #4]
 8004460:	e014      	b.n	800448c <HAL_DAC_Start+0x8a>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800446c:	683b      	ldr	r3, [r7, #0]
 800446e:	f003 0310 	and.w	r3, r3, #16
 8004472:	213c      	movs	r1, #60	; 0x3c
 8004474:	fa01 f303 	lsl.w	r3, r1, r3
 8004478:	429a      	cmp	r2, r3
 800447a:	d107      	bne.n	800448c <HAL_DAC_Start+0x8a>
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	685a      	ldr	r2, [r3, #4]
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	f042 0202 	orr.w	r2, r2, #2
 800448a:	605a      	str	r2, [r3, #4]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	2201      	movs	r2, #1
 8004490:	711a      	strb	r2, [r3, #4]
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	2200      	movs	r2, #0
 8004496:	715a      	strb	r2, [r3, #5]
 8004498:	2300      	movs	r3, #0
 800449a:	4618      	mov	r0, r3
 800449c:	370c      	adds	r7, #12
 800449e:	46bd      	mov	sp, r7
 80044a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a4:	4770      	bx	lr

080044a6 <HAL_DAC_SetValue>:
 80044a6:	b480      	push	{r7}
 80044a8:	b087      	sub	sp, #28
 80044aa:	af00      	add	r7, sp, #0
 80044ac:	60f8      	str	r0, [r7, #12]
 80044ae:	60b9      	str	r1, [r7, #8]
 80044b0:	607a      	str	r2, [r7, #4]
 80044b2:	603b      	str	r3, [r7, #0]
 80044b4:	2300      	movs	r3, #0
 80044b6:	617b      	str	r3, [r7, #20]
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	617b      	str	r3, [r7, #20]
 80044be:	68bb      	ldr	r3, [r7, #8]
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	d105      	bne.n	80044d0 <HAL_DAC_SetValue+0x2a>
 80044c4:	697a      	ldr	r2, [r7, #20]
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	4413      	add	r3, r2
 80044ca:	3308      	adds	r3, #8
 80044cc:	617b      	str	r3, [r7, #20]
 80044ce:	e004      	b.n	80044da <HAL_DAC_SetValue+0x34>
 80044d0:	697a      	ldr	r2, [r7, #20]
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	4413      	add	r3, r2
 80044d6:	3314      	adds	r3, #20
 80044d8:	617b      	str	r3, [r7, #20]
 80044da:	697b      	ldr	r3, [r7, #20]
 80044dc:	461a      	mov	r2, r3
 80044de:	683b      	ldr	r3, [r7, #0]
 80044e0:	6013      	str	r3, [r2, #0]
 80044e2:	2300      	movs	r3, #0
 80044e4:	4618      	mov	r0, r3
 80044e6:	371c      	adds	r7, #28
 80044e8:	46bd      	mov	sp, r7
 80044ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044ee:	4770      	bx	lr

080044f0 <HAL_DAC_ConfigChannel>:
 80044f0:	b480      	push	{r7}
 80044f2:	b087      	sub	sp, #28
 80044f4:	af00      	add	r7, sp, #0
 80044f6:	60f8      	str	r0, [r7, #12]
 80044f8:	60b9      	str	r1, [r7, #8]
 80044fa:	607a      	str	r2, [r7, #4]
 80044fc:	68fb      	ldr	r3, [r7, #12]
 80044fe:	795b      	ldrb	r3, [r3, #5]
 8004500:	2b01      	cmp	r3, #1
 8004502:	d101      	bne.n	8004508 <HAL_DAC_ConfigChannel+0x18>
 8004504:	2302      	movs	r3, #2
 8004506:	e03c      	b.n	8004582 <HAL_DAC_ConfigChannel+0x92>
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	2201      	movs	r2, #1
 800450c:	715a      	strb	r2, [r3, #5]
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	2202      	movs	r2, #2
 8004512:	711a      	strb	r2, [r3, #4]
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	617b      	str	r3, [r7, #20]
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	f003 0310 	and.w	r3, r3, #16
 8004522:	f640 72fe 	movw	r2, #4094	; 0xffe
 8004526:	fa02 f303 	lsl.w	r3, r2, r3
 800452a:	43db      	mvns	r3, r3
 800452c:	697a      	ldr	r2, [r7, #20]
 800452e:	4013      	ands	r3, r2
 8004530:	617b      	str	r3, [r7, #20]
 8004532:	68bb      	ldr	r3, [r7, #8]
 8004534:	681a      	ldr	r2, [r3, #0]
 8004536:	68bb      	ldr	r3, [r7, #8]
 8004538:	685b      	ldr	r3, [r3, #4]
 800453a:	4313      	orrs	r3, r2
 800453c:	613b      	str	r3, [r7, #16]
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	f003 0310 	and.w	r3, r3, #16
 8004544:	693a      	ldr	r2, [r7, #16]
 8004546:	fa02 f303 	lsl.w	r3, r2, r3
 800454a:	697a      	ldr	r2, [r7, #20]
 800454c:	4313      	orrs	r3, r2
 800454e:	617b      	str	r3, [r7, #20]
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	697a      	ldr	r2, [r7, #20]
 8004556:	601a      	str	r2, [r3, #0]
 8004558:	68fb      	ldr	r3, [r7, #12]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	6819      	ldr	r1, [r3, #0]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	f003 0310 	and.w	r3, r3, #16
 8004564:	22c0      	movs	r2, #192	; 0xc0
 8004566:	fa02 f303 	lsl.w	r3, r2, r3
 800456a:	43da      	mvns	r2, r3
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	400a      	ands	r2, r1
 8004572:	601a      	str	r2, [r3, #0]
 8004574:	68fb      	ldr	r3, [r7, #12]
 8004576:	2201      	movs	r2, #1
 8004578:	711a      	strb	r2, [r3, #4]
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	2200      	movs	r2, #0
 800457e:	715a      	strb	r2, [r3, #5]
 8004580:	2300      	movs	r3, #0
 8004582:	4618      	mov	r0, r3
 8004584:	371c      	adds	r7, #28
 8004586:	46bd      	mov	sp, r7
 8004588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800458c:	4770      	bx	lr

0800458e <HAL_DMA_Abort>:
 800458e:	b580      	push	{r7, lr}
 8004590:	b084      	sub	sp, #16
 8004592:	af00      	add	r7, sp, #0
 8004594:	6078      	str	r0, [r7, #4]
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800459a:	60fb      	str	r3, [r7, #12]
 800459c:	f7ff f8e8 	bl	8003770 <HAL_GetTick>
 80045a0:	60b8      	str	r0, [r7, #8]
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80045a8:	b2db      	uxtb	r3, r3
 80045aa:	2b02      	cmp	r3, #2
 80045ac:	d008      	beq.n	80045c0 <HAL_DMA_Abort+0x32>
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	2280      	movs	r2, #128	; 0x80
 80045b2:	655a      	str	r2, [r3, #84]	; 0x54
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	2200      	movs	r2, #0
 80045b8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80045bc:	2301      	movs	r3, #1
 80045be:	e052      	b.n	8004666 <HAL_DMA_Abort+0xd8>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	681a      	ldr	r2, [r3, #0]
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	f022 0216 	bic.w	r2, r2, #22
 80045ce:	601a      	str	r2, [r3, #0]
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	695a      	ldr	r2, [r3, #20]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80045de:	615a      	str	r2, [r3, #20]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d103      	bne.n	80045f0 <HAL_DMA_Abort+0x62>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d007      	beq.n	8004600 <HAL_DMA_Abort+0x72>
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	681a      	ldr	r2, [r3, #0]
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	f022 0208 	bic.w	r2, r2, #8
 80045fe:	601a      	str	r2, [r3, #0]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	681a      	ldr	r2, [r3, #0]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	f022 0201 	bic.w	r2, r2, #1
 800460e:	601a      	str	r2, [r3, #0]
 8004610:	e013      	b.n	800463a <HAL_DMA_Abort+0xac>
 8004612:	f7ff f8ad 	bl	8003770 <HAL_GetTick>
 8004616:	4602      	mov	r2, r0
 8004618:	68bb      	ldr	r3, [r7, #8]
 800461a:	1ad3      	subs	r3, r2, r3
 800461c:	2b05      	cmp	r3, #5
 800461e:	d90c      	bls.n	800463a <HAL_DMA_Abort+0xac>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	2220      	movs	r2, #32
 8004624:	655a      	str	r2, [r3, #84]	; 0x54
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	2203      	movs	r2, #3
 800462a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	2200      	movs	r2, #0
 8004632:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004636:	2303      	movs	r3, #3
 8004638:	e015      	b.n	8004666 <HAL_DMA_Abort+0xd8>
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	f003 0301 	and.w	r3, r3, #1
 8004644:	2b00      	cmp	r3, #0
 8004646:	d1e4      	bne.n	8004612 <HAL_DMA_Abort+0x84>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800464c:	223f      	movs	r2, #63	; 0x3f
 800464e:	409a      	lsls	r2, r3
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	609a      	str	r2, [r3, #8]
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	2201      	movs	r2, #1
 8004658:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	2200      	movs	r2, #0
 8004660:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004664:	2300      	movs	r3, #0
 8004666:	4618      	mov	r0, r3
 8004668:	3710      	adds	r7, #16
 800466a:	46bd      	mov	sp, r7
 800466c:	bd80      	pop	{r7, pc}

0800466e <HAL_DMA_Abort_IT>:
 800466e:	b480      	push	{r7}
 8004670:	b083      	sub	sp, #12
 8004672:	af00      	add	r7, sp, #0
 8004674:	6078      	str	r0, [r7, #4]
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800467c:	b2db      	uxtb	r3, r3
 800467e:	2b02      	cmp	r3, #2
 8004680:	d004      	beq.n	800468c <HAL_DMA_Abort_IT+0x1e>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	2280      	movs	r2, #128	; 0x80
 8004686:	655a      	str	r2, [r3, #84]	; 0x54
 8004688:	2301      	movs	r3, #1
 800468a:	e00c      	b.n	80046a6 <HAL_DMA_Abort_IT+0x38>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	2205      	movs	r2, #5
 8004690:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f022 0201 	bic.w	r2, r2, #1
 80046a2:	601a      	str	r2, [r3, #0]
 80046a4:	2300      	movs	r3, #0
 80046a6:	4618      	mov	r0, r3
 80046a8:	370c      	adds	r7, #12
 80046aa:	46bd      	mov	sp, r7
 80046ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046b0:	4770      	bx	lr
	...

080046b4 <HAL_GPIO_Init>:
 80046b4:	b480      	push	{r7}
 80046b6:	b089      	sub	sp, #36	; 0x24
 80046b8:	af00      	add	r7, sp, #0
 80046ba:	6078      	str	r0, [r7, #4]
 80046bc:	6039      	str	r1, [r7, #0]
 80046be:	2300      	movs	r3, #0
 80046c0:	61fb      	str	r3, [r7, #28]
 80046c2:	2300      	movs	r3, #0
 80046c4:	617b      	str	r3, [r7, #20]
 80046c6:	2300      	movs	r3, #0
 80046c8:	613b      	str	r3, [r7, #16]
 80046ca:	2300      	movs	r3, #0
 80046cc:	61bb      	str	r3, [r7, #24]
 80046ce:	2300      	movs	r3, #0
 80046d0:	61fb      	str	r3, [r7, #28]
 80046d2:	e175      	b.n	80049c0 <HAL_GPIO_Init+0x30c>
 80046d4:	2201      	movs	r2, #1
 80046d6:	69fb      	ldr	r3, [r7, #28]
 80046d8:	fa02 f303 	lsl.w	r3, r2, r3
 80046dc:	617b      	str	r3, [r7, #20]
 80046de:	683b      	ldr	r3, [r7, #0]
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	697a      	ldr	r2, [r7, #20]
 80046e4:	4013      	ands	r3, r2
 80046e6:	613b      	str	r3, [r7, #16]
 80046e8:	693a      	ldr	r2, [r7, #16]
 80046ea:	697b      	ldr	r3, [r7, #20]
 80046ec:	429a      	cmp	r2, r3
 80046ee:	f040 8164 	bne.w	80049ba <HAL_GPIO_Init+0x306>
 80046f2:	683b      	ldr	r3, [r7, #0]
 80046f4:	685b      	ldr	r3, [r3, #4]
 80046f6:	f003 0303 	and.w	r3, r3, #3
 80046fa:	2b01      	cmp	r3, #1
 80046fc:	d005      	beq.n	800470a <HAL_GPIO_Init+0x56>
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	f003 0303 	and.w	r3, r3, #3
 8004706:	2b02      	cmp	r3, #2
 8004708:	d130      	bne.n	800476c <HAL_GPIO_Init+0xb8>
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	689b      	ldr	r3, [r3, #8]
 800470e:	61bb      	str	r3, [r7, #24]
 8004710:	69fb      	ldr	r3, [r7, #28]
 8004712:	005b      	lsls	r3, r3, #1
 8004714:	2203      	movs	r2, #3
 8004716:	fa02 f303 	lsl.w	r3, r2, r3
 800471a:	43db      	mvns	r3, r3
 800471c:	69ba      	ldr	r2, [r7, #24]
 800471e:	4013      	ands	r3, r2
 8004720:	61bb      	str	r3, [r7, #24]
 8004722:	683b      	ldr	r3, [r7, #0]
 8004724:	68da      	ldr	r2, [r3, #12]
 8004726:	69fb      	ldr	r3, [r7, #28]
 8004728:	005b      	lsls	r3, r3, #1
 800472a:	fa02 f303 	lsl.w	r3, r2, r3
 800472e:	69ba      	ldr	r2, [r7, #24]
 8004730:	4313      	orrs	r3, r2
 8004732:	61bb      	str	r3, [r7, #24]
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	69ba      	ldr	r2, [r7, #24]
 8004738:	609a      	str	r2, [r3, #8]
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	685b      	ldr	r3, [r3, #4]
 800473e:	61bb      	str	r3, [r7, #24]
 8004740:	2201      	movs	r2, #1
 8004742:	69fb      	ldr	r3, [r7, #28]
 8004744:	fa02 f303 	lsl.w	r3, r2, r3
 8004748:	43db      	mvns	r3, r3
 800474a:	69ba      	ldr	r2, [r7, #24]
 800474c:	4013      	ands	r3, r2
 800474e:	61bb      	str	r3, [r7, #24]
 8004750:	683b      	ldr	r3, [r7, #0]
 8004752:	685b      	ldr	r3, [r3, #4]
 8004754:	091b      	lsrs	r3, r3, #4
 8004756:	f003 0201 	and.w	r2, r3, #1
 800475a:	69fb      	ldr	r3, [r7, #28]
 800475c:	fa02 f303 	lsl.w	r3, r2, r3
 8004760:	69ba      	ldr	r2, [r7, #24]
 8004762:	4313      	orrs	r3, r2
 8004764:	61bb      	str	r3, [r7, #24]
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	69ba      	ldr	r2, [r7, #24]
 800476a:	605a      	str	r2, [r3, #4]
 800476c:	683b      	ldr	r3, [r7, #0]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	f003 0303 	and.w	r3, r3, #3
 8004774:	2b03      	cmp	r3, #3
 8004776:	d017      	beq.n	80047a8 <HAL_GPIO_Init+0xf4>
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	68db      	ldr	r3, [r3, #12]
 800477c:	61bb      	str	r3, [r7, #24]
 800477e:	69fb      	ldr	r3, [r7, #28]
 8004780:	005b      	lsls	r3, r3, #1
 8004782:	2203      	movs	r2, #3
 8004784:	fa02 f303 	lsl.w	r3, r2, r3
 8004788:	43db      	mvns	r3, r3
 800478a:	69ba      	ldr	r2, [r7, #24]
 800478c:	4013      	ands	r3, r2
 800478e:	61bb      	str	r3, [r7, #24]
 8004790:	683b      	ldr	r3, [r7, #0]
 8004792:	689a      	ldr	r2, [r3, #8]
 8004794:	69fb      	ldr	r3, [r7, #28]
 8004796:	005b      	lsls	r3, r3, #1
 8004798:	fa02 f303 	lsl.w	r3, r2, r3
 800479c:	69ba      	ldr	r2, [r7, #24]
 800479e:	4313      	orrs	r3, r2
 80047a0:	61bb      	str	r3, [r7, #24]
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	69ba      	ldr	r2, [r7, #24]
 80047a6:	60da      	str	r2, [r3, #12]
 80047a8:	683b      	ldr	r3, [r7, #0]
 80047aa:	685b      	ldr	r3, [r3, #4]
 80047ac:	f003 0303 	and.w	r3, r3, #3
 80047b0:	2b02      	cmp	r3, #2
 80047b2:	d123      	bne.n	80047fc <HAL_GPIO_Init+0x148>
 80047b4:	69fb      	ldr	r3, [r7, #28]
 80047b6:	08da      	lsrs	r2, r3, #3
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	3208      	adds	r2, #8
 80047bc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80047c0:	61bb      	str	r3, [r7, #24]
 80047c2:	69fb      	ldr	r3, [r7, #28]
 80047c4:	f003 0307 	and.w	r3, r3, #7
 80047c8:	009b      	lsls	r3, r3, #2
 80047ca:	220f      	movs	r2, #15
 80047cc:	fa02 f303 	lsl.w	r3, r2, r3
 80047d0:	43db      	mvns	r3, r3
 80047d2:	69ba      	ldr	r2, [r7, #24]
 80047d4:	4013      	ands	r3, r2
 80047d6:	61bb      	str	r3, [r7, #24]
 80047d8:	683b      	ldr	r3, [r7, #0]
 80047da:	691a      	ldr	r2, [r3, #16]
 80047dc:	69fb      	ldr	r3, [r7, #28]
 80047de:	f003 0307 	and.w	r3, r3, #7
 80047e2:	009b      	lsls	r3, r3, #2
 80047e4:	fa02 f303 	lsl.w	r3, r2, r3
 80047e8:	69ba      	ldr	r2, [r7, #24]
 80047ea:	4313      	orrs	r3, r2
 80047ec:	61bb      	str	r3, [r7, #24]
 80047ee:	69fb      	ldr	r3, [r7, #28]
 80047f0:	08da      	lsrs	r2, r3, #3
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	3208      	adds	r2, #8
 80047f6:	69b9      	ldr	r1, [r7, #24]
 80047f8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	61bb      	str	r3, [r7, #24]
 8004802:	69fb      	ldr	r3, [r7, #28]
 8004804:	005b      	lsls	r3, r3, #1
 8004806:	2203      	movs	r2, #3
 8004808:	fa02 f303 	lsl.w	r3, r2, r3
 800480c:	43db      	mvns	r3, r3
 800480e:	69ba      	ldr	r2, [r7, #24]
 8004810:	4013      	ands	r3, r2
 8004812:	61bb      	str	r3, [r7, #24]
 8004814:	683b      	ldr	r3, [r7, #0]
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	f003 0203 	and.w	r2, r3, #3
 800481c:	69fb      	ldr	r3, [r7, #28]
 800481e:	005b      	lsls	r3, r3, #1
 8004820:	fa02 f303 	lsl.w	r3, r2, r3
 8004824:	69ba      	ldr	r2, [r7, #24]
 8004826:	4313      	orrs	r3, r2
 8004828:	61bb      	str	r3, [r7, #24]
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	69ba      	ldr	r2, [r7, #24]
 800482e:	601a      	str	r2, [r3, #0]
 8004830:	683b      	ldr	r3, [r7, #0]
 8004832:	685b      	ldr	r3, [r3, #4]
 8004834:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004838:	2b00      	cmp	r3, #0
 800483a:	f000 80be 	beq.w	80049ba <HAL_GPIO_Init+0x306>
 800483e:	4b66      	ldr	r3, [pc, #408]	; (80049d8 <HAL_GPIO_Init+0x324>)
 8004840:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004842:	4a65      	ldr	r2, [pc, #404]	; (80049d8 <HAL_GPIO_Init+0x324>)
 8004844:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004848:	6453      	str	r3, [r2, #68]	; 0x44
 800484a:	4b63      	ldr	r3, [pc, #396]	; (80049d8 <HAL_GPIO_Init+0x324>)
 800484c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800484e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004852:	60fb      	str	r3, [r7, #12]
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	4a61      	ldr	r2, [pc, #388]	; (80049dc <HAL_GPIO_Init+0x328>)
 8004858:	69fb      	ldr	r3, [r7, #28]
 800485a:	089b      	lsrs	r3, r3, #2
 800485c:	3302      	adds	r3, #2
 800485e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004862:	61bb      	str	r3, [r7, #24]
 8004864:	69fb      	ldr	r3, [r7, #28]
 8004866:	f003 0303 	and.w	r3, r3, #3
 800486a:	009b      	lsls	r3, r3, #2
 800486c:	220f      	movs	r2, #15
 800486e:	fa02 f303 	lsl.w	r3, r2, r3
 8004872:	43db      	mvns	r3, r3
 8004874:	69ba      	ldr	r2, [r7, #24]
 8004876:	4013      	ands	r3, r2
 8004878:	61bb      	str	r3, [r7, #24]
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	4a58      	ldr	r2, [pc, #352]	; (80049e0 <HAL_GPIO_Init+0x32c>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d037      	beq.n	80048f2 <HAL_GPIO_Init+0x23e>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	4a57      	ldr	r2, [pc, #348]	; (80049e4 <HAL_GPIO_Init+0x330>)
 8004886:	4293      	cmp	r3, r2
 8004888:	d031      	beq.n	80048ee <HAL_GPIO_Init+0x23a>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	4a56      	ldr	r2, [pc, #344]	; (80049e8 <HAL_GPIO_Init+0x334>)
 800488e:	4293      	cmp	r3, r2
 8004890:	d02b      	beq.n	80048ea <HAL_GPIO_Init+0x236>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	4a55      	ldr	r2, [pc, #340]	; (80049ec <HAL_GPIO_Init+0x338>)
 8004896:	4293      	cmp	r3, r2
 8004898:	d025      	beq.n	80048e6 <HAL_GPIO_Init+0x232>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	4a54      	ldr	r2, [pc, #336]	; (80049f0 <HAL_GPIO_Init+0x33c>)
 800489e:	4293      	cmp	r3, r2
 80048a0:	d01f      	beq.n	80048e2 <HAL_GPIO_Init+0x22e>
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	4a53      	ldr	r2, [pc, #332]	; (80049f4 <HAL_GPIO_Init+0x340>)
 80048a6:	4293      	cmp	r3, r2
 80048a8:	d019      	beq.n	80048de <HAL_GPIO_Init+0x22a>
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	4a52      	ldr	r2, [pc, #328]	; (80049f8 <HAL_GPIO_Init+0x344>)
 80048ae:	4293      	cmp	r3, r2
 80048b0:	d013      	beq.n	80048da <HAL_GPIO_Init+0x226>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	4a51      	ldr	r2, [pc, #324]	; (80049fc <HAL_GPIO_Init+0x348>)
 80048b6:	4293      	cmp	r3, r2
 80048b8:	d00d      	beq.n	80048d6 <HAL_GPIO_Init+0x222>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	4a50      	ldr	r2, [pc, #320]	; (8004a00 <HAL_GPIO_Init+0x34c>)
 80048be:	4293      	cmp	r3, r2
 80048c0:	d007      	beq.n	80048d2 <HAL_GPIO_Init+0x21e>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	4a4f      	ldr	r2, [pc, #316]	; (8004a04 <HAL_GPIO_Init+0x350>)
 80048c6:	4293      	cmp	r3, r2
 80048c8:	d101      	bne.n	80048ce <HAL_GPIO_Init+0x21a>
 80048ca:	2309      	movs	r3, #9
 80048cc:	e012      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048ce:	230a      	movs	r3, #10
 80048d0:	e010      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048d2:	2308      	movs	r3, #8
 80048d4:	e00e      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048d6:	2307      	movs	r3, #7
 80048d8:	e00c      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048da:	2306      	movs	r3, #6
 80048dc:	e00a      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048de:	2305      	movs	r3, #5
 80048e0:	e008      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048e2:	2304      	movs	r3, #4
 80048e4:	e006      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048e6:	2303      	movs	r3, #3
 80048e8:	e004      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048ea:	2302      	movs	r3, #2
 80048ec:	e002      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048ee:	2301      	movs	r3, #1
 80048f0:	e000      	b.n	80048f4 <HAL_GPIO_Init+0x240>
 80048f2:	2300      	movs	r3, #0
 80048f4:	69fa      	ldr	r2, [r7, #28]
 80048f6:	f002 0203 	and.w	r2, r2, #3
 80048fa:	0092      	lsls	r2, r2, #2
 80048fc:	4093      	lsls	r3, r2
 80048fe:	69ba      	ldr	r2, [r7, #24]
 8004900:	4313      	orrs	r3, r2
 8004902:	61bb      	str	r3, [r7, #24]
 8004904:	4935      	ldr	r1, [pc, #212]	; (80049dc <HAL_GPIO_Init+0x328>)
 8004906:	69fb      	ldr	r3, [r7, #28]
 8004908:	089b      	lsrs	r3, r3, #2
 800490a:	3302      	adds	r3, #2
 800490c:	69ba      	ldr	r2, [r7, #24]
 800490e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004912:	4b3d      	ldr	r3, [pc, #244]	; (8004a08 <HAL_GPIO_Init+0x354>)
 8004914:	689b      	ldr	r3, [r3, #8]
 8004916:	61bb      	str	r3, [r7, #24]
 8004918:	693b      	ldr	r3, [r7, #16]
 800491a:	43db      	mvns	r3, r3
 800491c:	69ba      	ldr	r2, [r7, #24]
 800491e:	4013      	ands	r3, r2
 8004920:	61bb      	str	r3, [r7, #24]
 8004922:	683b      	ldr	r3, [r7, #0]
 8004924:	685b      	ldr	r3, [r3, #4]
 8004926:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800492a:	2b00      	cmp	r3, #0
 800492c:	d003      	beq.n	8004936 <HAL_GPIO_Init+0x282>
 800492e:	69ba      	ldr	r2, [r7, #24]
 8004930:	693b      	ldr	r3, [r7, #16]
 8004932:	4313      	orrs	r3, r2
 8004934:	61bb      	str	r3, [r7, #24]
 8004936:	4a34      	ldr	r2, [pc, #208]	; (8004a08 <HAL_GPIO_Init+0x354>)
 8004938:	69bb      	ldr	r3, [r7, #24]
 800493a:	6093      	str	r3, [r2, #8]
 800493c:	4b32      	ldr	r3, [pc, #200]	; (8004a08 <HAL_GPIO_Init+0x354>)
 800493e:	68db      	ldr	r3, [r3, #12]
 8004940:	61bb      	str	r3, [r7, #24]
 8004942:	693b      	ldr	r3, [r7, #16]
 8004944:	43db      	mvns	r3, r3
 8004946:	69ba      	ldr	r2, [r7, #24]
 8004948:	4013      	ands	r3, r2
 800494a:	61bb      	str	r3, [r7, #24]
 800494c:	683b      	ldr	r3, [r7, #0]
 800494e:	685b      	ldr	r3, [r3, #4]
 8004950:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004954:	2b00      	cmp	r3, #0
 8004956:	d003      	beq.n	8004960 <HAL_GPIO_Init+0x2ac>
 8004958:	69ba      	ldr	r2, [r7, #24]
 800495a:	693b      	ldr	r3, [r7, #16]
 800495c:	4313      	orrs	r3, r2
 800495e:	61bb      	str	r3, [r7, #24]
 8004960:	4a29      	ldr	r2, [pc, #164]	; (8004a08 <HAL_GPIO_Init+0x354>)
 8004962:	69bb      	ldr	r3, [r7, #24]
 8004964:	60d3      	str	r3, [r2, #12]
 8004966:	4b28      	ldr	r3, [pc, #160]	; (8004a08 <HAL_GPIO_Init+0x354>)
 8004968:	685b      	ldr	r3, [r3, #4]
 800496a:	61bb      	str	r3, [r7, #24]
 800496c:	693b      	ldr	r3, [r7, #16]
 800496e:	43db      	mvns	r3, r3
 8004970:	69ba      	ldr	r2, [r7, #24]
 8004972:	4013      	ands	r3, r2
 8004974:	61bb      	str	r3, [r7, #24]
 8004976:	683b      	ldr	r3, [r7, #0]
 8004978:	685b      	ldr	r3, [r3, #4]
 800497a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800497e:	2b00      	cmp	r3, #0
 8004980:	d003      	beq.n	800498a <HAL_GPIO_Init+0x2d6>
 8004982:	69ba      	ldr	r2, [r7, #24]
 8004984:	693b      	ldr	r3, [r7, #16]
 8004986:	4313      	orrs	r3, r2
 8004988:	61bb      	str	r3, [r7, #24]
 800498a:	4a1f      	ldr	r2, [pc, #124]	; (8004a08 <HAL_GPIO_Init+0x354>)
 800498c:	69bb      	ldr	r3, [r7, #24]
 800498e:	6053      	str	r3, [r2, #4]
 8004990:	4b1d      	ldr	r3, [pc, #116]	; (8004a08 <HAL_GPIO_Init+0x354>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	61bb      	str	r3, [r7, #24]
 8004996:	693b      	ldr	r3, [r7, #16]
 8004998:	43db      	mvns	r3, r3
 800499a:	69ba      	ldr	r2, [r7, #24]
 800499c:	4013      	ands	r3, r2
 800499e:	61bb      	str	r3, [r7, #24]
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	685b      	ldr	r3, [r3, #4]
 80049a4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d003      	beq.n	80049b4 <HAL_GPIO_Init+0x300>
 80049ac:	69ba      	ldr	r2, [r7, #24]
 80049ae:	693b      	ldr	r3, [r7, #16]
 80049b0:	4313      	orrs	r3, r2
 80049b2:	61bb      	str	r3, [r7, #24]
 80049b4:	4a14      	ldr	r2, [pc, #80]	; (8004a08 <HAL_GPIO_Init+0x354>)
 80049b6:	69bb      	ldr	r3, [r7, #24]
 80049b8:	6013      	str	r3, [r2, #0]
 80049ba:	69fb      	ldr	r3, [r7, #28]
 80049bc:	3301      	adds	r3, #1
 80049be:	61fb      	str	r3, [r7, #28]
 80049c0:	69fb      	ldr	r3, [r7, #28]
 80049c2:	2b0f      	cmp	r3, #15
 80049c4:	f67f ae86 	bls.w	80046d4 <HAL_GPIO_Init+0x20>
 80049c8:	bf00      	nop
 80049ca:	bf00      	nop
 80049cc:	3724      	adds	r7, #36	; 0x24
 80049ce:	46bd      	mov	sp, r7
 80049d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d4:	4770      	bx	lr
 80049d6:	bf00      	nop
 80049d8:	40023800 	.word	0x40023800
 80049dc:	40013800 	.word	0x40013800
 80049e0:	40020000 	.word	0x40020000
 80049e4:	40020400 	.word	0x40020400
 80049e8:	40020800 	.word	0x40020800
 80049ec:	40020c00 	.word	0x40020c00
 80049f0:	40021000 	.word	0x40021000
 80049f4:	40021400 	.word	0x40021400
 80049f8:	40021800 	.word	0x40021800
 80049fc:	40021c00 	.word	0x40021c00
 8004a00:	40022000 	.word	0x40022000
 8004a04:	40022400 	.word	0x40022400
 8004a08:	40013c00 	.word	0x40013c00

08004a0c <HAL_GPIO_ReadPin>:
 8004a0c:	b480      	push	{r7}
 8004a0e:	b085      	sub	sp, #20
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	6078      	str	r0, [r7, #4]
 8004a14:	460b      	mov	r3, r1
 8004a16:	807b      	strh	r3, [r7, #2]
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	691a      	ldr	r2, [r3, #16]
 8004a1c:	887b      	ldrh	r3, [r7, #2]
 8004a1e:	4013      	ands	r3, r2
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d002      	beq.n	8004a2a <HAL_GPIO_ReadPin+0x1e>
 8004a24:	2301      	movs	r3, #1
 8004a26:	73fb      	strb	r3, [r7, #15]
 8004a28:	e001      	b.n	8004a2e <HAL_GPIO_ReadPin+0x22>
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	73fb      	strb	r3, [r7, #15]
 8004a2e:	7bfb      	ldrb	r3, [r7, #15]
 8004a30:	4618      	mov	r0, r3
 8004a32:	3714      	adds	r7, #20
 8004a34:	46bd      	mov	sp, r7
 8004a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a3a:	4770      	bx	lr

08004a3c <HAL_GPIO_WritePin>:
 8004a3c:	b480      	push	{r7}
 8004a3e:	b083      	sub	sp, #12
 8004a40:	af00      	add	r7, sp, #0
 8004a42:	6078      	str	r0, [r7, #4]
 8004a44:	460b      	mov	r3, r1
 8004a46:	807b      	strh	r3, [r7, #2]
 8004a48:	4613      	mov	r3, r2
 8004a4a:	707b      	strb	r3, [r7, #1]
 8004a4c:	787b      	ldrb	r3, [r7, #1]
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d003      	beq.n	8004a5a <HAL_GPIO_WritePin+0x1e>
 8004a52:	887a      	ldrh	r2, [r7, #2]
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	619a      	str	r2, [r3, #24]
 8004a58:	e003      	b.n	8004a62 <HAL_GPIO_WritePin+0x26>
 8004a5a:	887b      	ldrh	r3, [r7, #2]
 8004a5c:	041a      	lsls	r2, r3, #16
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	619a      	str	r2, [r3, #24]
 8004a62:	bf00      	nop
 8004a64:	370c      	adds	r7, #12
 8004a66:	46bd      	mov	sp, r7
 8004a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a6c:	4770      	bx	lr

08004a6e <HAL_GPIO_TogglePin>:
 8004a6e:	b480      	push	{r7}
 8004a70:	b085      	sub	sp, #20
 8004a72:	af00      	add	r7, sp, #0
 8004a74:	6078      	str	r0, [r7, #4]
 8004a76:	460b      	mov	r3, r1
 8004a78:	807b      	strh	r3, [r7, #2]
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	695b      	ldr	r3, [r3, #20]
 8004a7e:	60fb      	str	r3, [r7, #12]
 8004a80:	887a      	ldrh	r2, [r7, #2]
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	4013      	ands	r3, r2
 8004a86:	041a      	lsls	r2, r3, #16
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	43d9      	mvns	r1, r3
 8004a8c:	887b      	ldrh	r3, [r7, #2]
 8004a8e:	400b      	ands	r3, r1
 8004a90:	431a      	orrs	r2, r3
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	619a      	str	r2, [r3, #24]
 8004a96:	bf00      	nop
 8004a98:	3714      	adds	r7, #20
 8004a9a:	46bd      	mov	sp, r7
 8004a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aa0:	4770      	bx	lr
	...

08004aa4 <HAL_PWREx_EnableOverDrive>:
 8004aa4:	b580      	push	{r7, lr}
 8004aa6:	b082      	sub	sp, #8
 8004aa8:	af00      	add	r7, sp, #0
 8004aaa:	2300      	movs	r3, #0
 8004aac:	607b      	str	r3, [r7, #4]
 8004aae:	4b23      	ldr	r3, [pc, #140]	; (8004b3c <HAL_PWREx_EnableOverDrive+0x98>)
 8004ab0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ab2:	4a22      	ldr	r2, [pc, #136]	; (8004b3c <HAL_PWREx_EnableOverDrive+0x98>)
 8004ab4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004ab8:	6413      	str	r3, [r2, #64]	; 0x40
 8004aba:	4b20      	ldr	r3, [pc, #128]	; (8004b3c <HAL_PWREx_EnableOverDrive+0x98>)
 8004abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004abe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004ac2:	603b      	str	r3, [r7, #0]
 8004ac4:	683b      	ldr	r3, [r7, #0]
 8004ac6:	4b1e      	ldr	r3, [pc, #120]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	4a1d      	ldr	r2, [pc, #116]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004acc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004ad0:	6013      	str	r3, [r2, #0]
 8004ad2:	f7fe fe4d 	bl	8003770 <HAL_GetTick>
 8004ad6:	6078      	str	r0, [r7, #4]
 8004ad8:	e009      	b.n	8004aee <HAL_PWREx_EnableOverDrive+0x4a>
 8004ada:	f7fe fe49 	bl	8003770 <HAL_GetTick>
 8004ade:	4602      	mov	r2, r0
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	1ad3      	subs	r3, r2, r3
 8004ae4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004ae8:	d901      	bls.n	8004aee <HAL_PWREx_EnableOverDrive+0x4a>
 8004aea:	2303      	movs	r3, #3
 8004aec:	e022      	b.n	8004b34 <HAL_PWREx_EnableOverDrive+0x90>
 8004aee:	4b14      	ldr	r3, [pc, #80]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004af0:	685b      	ldr	r3, [r3, #4]
 8004af2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004af6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004afa:	d1ee      	bne.n	8004ada <HAL_PWREx_EnableOverDrive+0x36>
 8004afc:	4b10      	ldr	r3, [pc, #64]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	4a0f      	ldr	r2, [pc, #60]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004b02:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004b06:	6013      	str	r3, [r2, #0]
 8004b08:	f7fe fe32 	bl	8003770 <HAL_GetTick>
 8004b0c:	6078      	str	r0, [r7, #4]
 8004b0e:	e009      	b.n	8004b24 <HAL_PWREx_EnableOverDrive+0x80>
 8004b10:	f7fe fe2e 	bl	8003770 <HAL_GetTick>
 8004b14:	4602      	mov	r2, r0
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	1ad3      	subs	r3, r2, r3
 8004b1a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004b1e:	d901      	bls.n	8004b24 <HAL_PWREx_EnableOverDrive+0x80>
 8004b20:	2303      	movs	r3, #3
 8004b22:	e007      	b.n	8004b34 <HAL_PWREx_EnableOverDrive+0x90>
 8004b24:	4b06      	ldr	r3, [pc, #24]	; (8004b40 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004b26:	685b      	ldr	r3, [r3, #4]
 8004b28:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b2c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004b30:	d1ee      	bne.n	8004b10 <HAL_PWREx_EnableOverDrive+0x6c>
 8004b32:	2300      	movs	r3, #0
 8004b34:	4618      	mov	r0, r3
 8004b36:	3708      	adds	r7, #8
 8004b38:	46bd      	mov	sp, r7
 8004b3a:	bd80      	pop	{r7, pc}
 8004b3c:	40023800 	.word	0x40023800
 8004b40:	40007000 	.word	0x40007000

08004b44 <HAL_RCC_OscConfig>:
 8004b44:	b580      	push	{r7, lr}
 8004b46:	b086      	sub	sp, #24
 8004b48:	af00      	add	r7, sp, #0
 8004b4a:	6078      	str	r0, [r7, #4]
 8004b4c:	2300      	movs	r3, #0
 8004b4e:	75fb      	strb	r3, [r7, #23]
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d101      	bne.n	8004b5a <HAL_RCC_OscConfig+0x16>
 8004b56:	2301      	movs	r3, #1
 8004b58:	e29b      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	f003 0301 	and.w	r3, r3, #1
 8004b62:	2b00      	cmp	r3, #0
 8004b64:	f000 8087 	beq.w	8004c76 <HAL_RCC_OscConfig+0x132>
 8004b68:	4b96      	ldr	r3, [pc, #600]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004b6a:	689b      	ldr	r3, [r3, #8]
 8004b6c:	f003 030c 	and.w	r3, r3, #12
 8004b70:	2b04      	cmp	r3, #4
 8004b72:	d00c      	beq.n	8004b8e <HAL_RCC_OscConfig+0x4a>
 8004b74:	4b93      	ldr	r3, [pc, #588]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004b76:	689b      	ldr	r3, [r3, #8]
 8004b78:	f003 030c 	and.w	r3, r3, #12
 8004b7c:	2b08      	cmp	r3, #8
 8004b7e:	d112      	bne.n	8004ba6 <HAL_RCC_OscConfig+0x62>
 8004b80:	4b90      	ldr	r3, [pc, #576]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004b82:	685b      	ldr	r3, [r3, #4]
 8004b84:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004b88:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004b8c:	d10b      	bne.n	8004ba6 <HAL_RCC_OscConfig+0x62>
 8004b8e:	4b8d      	ldr	r3, [pc, #564]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d06c      	beq.n	8004c74 <HAL_RCC_OscConfig+0x130>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	685b      	ldr	r3, [r3, #4]
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d168      	bne.n	8004c74 <HAL_RCC_OscConfig+0x130>
 8004ba2:	2301      	movs	r3, #1
 8004ba4:	e275      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	685b      	ldr	r3, [r3, #4]
 8004baa:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004bae:	d106      	bne.n	8004bbe <HAL_RCC_OscConfig+0x7a>
 8004bb0:	4b84      	ldr	r3, [pc, #528]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	4a83      	ldr	r2, [pc, #524]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bb6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004bba:	6013      	str	r3, [r2, #0]
 8004bbc:	e02e      	b.n	8004c1c <HAL_RCC_OscConfig+0xd8>
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	685b      	ldr	r3, [r3, #4]
 8004bc2:	2b00      	cmp	r3, #0
 8004bc4:	d10c      	bne.n	8004be0 <HAL_RCC_OscConfig+0x9c>
 8004bc6:	4b7f      	ldr	r3, [pc, #508]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	4a7e      	ldr	r2, [pc, #504]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bcc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004bd0:	6013      	str	r3, [r2, #0]
 8004bd2:	4b7c      	ldr	r3, [pc, #496]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	4a7b      	ldr	r2, [pc, #492]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bd8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004bdc:	6013      	str	r3, [r2, #0]
 8004bde:	e01d      	b.n	8004c1c <HAL_RCC_OscConfig+0xd8>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	685b      	ldr	r3, [r3, #4]
 8004be4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004be8:	d10c      	bne.n	8004c04 <HAL_RCC_OscConfig+0xc0>
 8004bea:	4b76      	ldr	r3, [pc, #472]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	4a75      	ldr	r2, [pc, #468]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bf0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004bf4:	6013      	str	r3, [r2, #0]
 8004bf6:	4b73      	ldr	r3, [pc, #460]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	4a72      	ldr	r2, [pc, #456]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004bfc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004c00:	6013      	str	r3, [r2, #0]
 8004c02:	e00b      	b.n	8004c1c <HAL_RCC_OscConfig+0xd8>
 8004c04:	4b6f      	ldr	r3, [pc, #444]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	4a6e      	ldr	r2, [pc, #440]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c0a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004c0e:	6013      	str	r3, [r2, #0]
 8004c10:	4b6c      	ldr	r3, [pc, #432]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	4a6b      	ldr	r2, [pc, #428]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c16:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004c1a:	6013      	str	r3, [r2, #0]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	685b      	ldr	r3, [r3, #4]
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d013      	beq.n	8004c4c <HAL_RCC_OscConfig+0x108>
 8004c24:	f7fe fda4 	bl	8003770 <HAL_GetTick>
 8004c28:	6138      	str	r0, [r7, #16]
 8004c2a:	e008      	b.n	8004c3e <HAL_RCC_OscConfig+0xfa>
 8004c2c:	f7fe fda0 	bl	8003770 <HAL_GetTick>
 8004c30:	4602      	mov	r2, r0
 8004c32:	693b      	ldr	r3, [r7, #16]
 8004c34:	1ad3      	subs	r3, r2, r3
 8004c36:	2b64      	cmp	r3, #100	; 0x64
 8004c38:	d901      	bls.n	8004c3e <HAL_RCC_OscConfig+0xfa>
 8004c3a:	2303      	movs	r3, #3
 8004c3c:	e229      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004c3e:	4b61      	ldr	r3, [pc, #388]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d0f0      	beq.n	8004c2c <HAL_RCC_OscConfig+0xe8>
 8004c4a:	e014      	b.n	8004c76 <HAL_RCC_OscConfig+0x132>
 8004c4c:	f7fe fd90 	bl	8003770 <HAL_GetTick>
 8004c50:	6138      	str	r0, [r7, #16]
 8004c52:	e008      	b.n	8004c66 <HAL_RCC_OscConfig+0x122>
 8004c54:	f7fe fd8c 	bl	8003770 <HAL_GetTick>
 8004c58:	4602      	mov	r2, r0
 8004c5a:	693b      	ldr	r3, [r7, #16]
 8004c5c:	1ad3      	subs	r3, r2, r3
 8004c5e:	2b64      	cmp	r3, #100	; 0x64
 8004c60:	d901      	bls.n	8004c66 <HAL_RCC_OscConfig+0x122>
 8004c62:	2303      	movs	r3, #3
 8004c64:	e215      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004c66:	4b57      	ldr	r3, [pc, #348]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d1f0      	bne.n	8004c54 <HAL_RCC_OscConfig+0x110>
 8004c72:	e000      	b.n	8004c76 <HAL_RCC_OscConfig+0x132>
 8004c74:	bf00      	nop
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	f003 0302 	and.w	r3, r3, #2
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	d069      	beq.n	8004d56 <HAL_RCC_OscConfig+0x212>
 8004c82:	4b50      	ldr	r3, [pc, #320]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c84:	689b      	ldr	r3, [r3, #8]
 8004c86:	f003 030c 	and.w	r3, r3, #12
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	d00b      	beq.n	8004ca6 <HAL_RCC_OscConfig+0x162>
 8004c8e:	4b4d      	ldr	r3, [pc, #308]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c90:	689b      	ldr	r3, [r3, #8]
 8004c92:	f003 030c 	and.w	r3, r3, #12
 8004c96:	2b08      	cmp	r3, #8
 8004c98:	d11c      	bne.n	8004cd4 <HAL_RCC_OscConfig+0x190>
 8004c9a:	4b4a      	ldr	r3, [pc, #296]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004c9c:	685b      	ldr	r3, [r3, #4]
 8004c9e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004ca2:	2b00      	cmp	r3, #0
 8004ca4:	d116      	bne.n	8004cd4 <HAL_RCC_OscConfig+0x190>
 8004ca6:	4b47      	ldr	r3, [pc, #284]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	f003 0302 	and.w	r3, r3, #2
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	d005      	beq.n	8004cbe <HAL_RCC_OscConfig+0x17a>
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	68db      	ldr	r3, [r3, #12]
 8004cb6:	2b01      	cmp	r3, #1
 8004cb8:	d001      	beq.n	8004cbe <HAL_RCC_OscConfig+0x17a>
 8004cba:	2301      	movs	r3, #1
 8004cbc:	e1e9      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004cbe:	4b41      	ldr	r3, [pc, #260]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	691b      	ldr	r3, [r3, #16]
 8004cca:	00db      	lsls	r3, r3, #3
 8004ccc:	493d      	ldr	r1, [pc, #244]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004cce:	4313      	orrs	r3, r2
 8004cd0:	600b      	str	r3, [r1, #0]
 8004cd2:	e040      	b.n	8004d56 <HAL_RCC_OscConfig+0x212>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	68db      	ldr	r3, [r3, #12]
 8004cd8:	2b00      	cmp	r3, #0
 8004cda:	d023      	beq.n	8004d24 <HAL_RCC_OscConfig+0x1e0>
 8004cdc:	4b39      	ldr	r3, [pc, #228]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	4a38      	ldr	r2, [pc, #224]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004ce2:	f043 0301 	orr.w	r3, r3, #1
 8004ce6:	6013      	str	r3, [r2, #0]
 8004ce8:	f7fe fd42 	bl	8003770 <HAL_GetTick>
 8004cec:	6138      	str	r0, [r7, #16]
 8004cee:	e008      	b.n	8004d02 <HAL_RCC_OscConfig+0x1be>
 8004cf0:	f7fe fd3e 	bl	8003770 <HAL_GetTick>
 8004cf4:	4602      	mov	r2, r0
 8004cf6:	693b      	ldr	r3, [r7, #16]
 8004cf8:	1ad3      	subs	r3, r2, r3
 8004cfa:	2b02      	cmp	r3, #2
 8004cfc:	d901      	bls.n	8004d02 <HAL_RCC_OscConfig+0x1be>
 8004cfe:	2303      	movs	r3, #3
 8004d00:	e1c7      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004d02:	4b30      	ldr	r3, [pc, #192]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	f003 0302 	and.w	r3, r3, #2
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	d0f0      	beq.n	8004cf0 <HAL_RCC_OscConfig+0x1ac>
 8004d0e:	4b2d      	ldr	r3, [pc, #180]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	691b      	ldr	r3, [r3, #16]
 8004d1a:	00db      	lsls	r3, r3, #3
 8004d1c:	4929      	ldr	r1, [pc, #164]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d1e:	4313      	orrs	r3, r2
 8004d20:	600b      	str	r3, [r1, #0]
 8004d22:	e018      	b.n	8004d56 <HAL_RCC_OscConfig+0x212>
 8004d24:	4b27      	ldr	r3, [pc, #156]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	4a26      	ldr	r2, [pc, #152]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d2a:	f023 0301 	bic.w	r3, r3, #1
 8004d2e:	6013      	str	r3, [r2, #0]
 8004d30:	f7fe fd1e 	bl	8003770 <HAL_GetTick>
 8004d34:	6138      	str	r0, [r7, #16]
 8004d36:	e008      	b.n	8004d4a <HAL_RCC_OscConfig+0x206>
 8004d38:	f7fe fd1a 	bl	8003770 <HAL_GetTick>
 8004d3c:	4602      	mov	r2, r0
 8004d3e:	693b      	ldr	r3, [r7, #16]
 8004d40:	1ad3      	subs	r3, r2, r3
 8004d42:	2b02      	cmp	r3, #2
 8004d44:	d901      	bls.n	8004d4a <HAL_RCC_OscConfig+0x206>
 8004d46:	2303      	movs	r3, #3
 8004d48:	e1a3      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004d4a:	4b1e      	ldr	r3, [pc, #120]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	f003 0302 	and.w	r3, r3, #2
 8004d52:	2b00      	cmp	r3, #0
 8004d54:	d1f0      	bne.n	8004d38 <HAL_RCC_OscConfig+0x1f4>
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	f003 0308 	and.w	r3, r3, #8
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	d038      	beq.n	8004dd4 <HAL_RCC_OscConfig+0x290>
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	695b      	ldr	r3, [r3, #20]
 8004d66:	2b00      	cmp	r3, #0
 8004d68:	d019      	beq.n	8004d9e <HAL_RCC_OscConfig+0x25a>
 8004d6a:	4b16      	ldr	r3, [pc, #88]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d6c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d6e:	4a15      	ldr	r2, [pc, #84]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d70:	f043 0301 	orr.w	r3, r3, #1
 8004d74:	6753      	str	r3, [r2, #116]	; 0x74
 8004d76:	f7fe fcfb 	bl	8003770 <HAL_GetTick>
 8004d7a:	6138      	str	r0, [r7, #16]
 8004d7c:	e008      	b.n	8004d90 <HAL_RCC_OscConfig+0x24c>
 8004d7e:	f7fe fcf7 	bl	8003770 <HAL_GetTick>
 8004d82:	4602      	mov	r2, r0
 8004d84:	693b      	ldr	r3, [r7, #16]
 8004d86:	1ad3      	subs	r3, r2, r3
 8004d88:	2b02      	cmp	r3, #2
 8004d8a:	d901      	bls.n	8004d90 <HAL_RCC_OscConfig+0x24c>
 8004d8c:	2303      	movs	r3, #3
 8004d8e:	e180      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004d90:	4b0c      	ldr	r3, [pc, #48]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004d92:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d94:	f003 0302 	and.w	r3, r3, #2
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d0f0      	beq.n	8004d7e <HAL_RCC_OscConfig+0x23a>
 8004d9c:	e01a      	b.n	8004dd4 <HAL_RCC_OscConfig+0x290>
 8004d9e:	4b09      	ldr	r3, [pc, #36]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004da0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004da2:	4a08      	ldr	r2, [pc, #32]	; (8004dc4 <HAL_RCC_OscConfig+0x280>)
 8004da4:	f023 0301 	bic.w	r3, r3, #1
 8004da8:	6753      	str	r3, [r2, #116]	; 0x74
 8004daa:	f7fe fce1 	bl	8003770 <HAL_GetTick>
 8004dae:	6138      	str	r0, [r7, #16]
 8004db0:	e00a      	b.n	8004dc8 <HAL_RCC_OscConfig+0x284>
 8004db2:	f7fe fcdd 	bl	8003770 <HAL_GetTick>
 8004db6:	4602      	mov	r2, r0
 8004db8:	693b      	ldr	r3, [r7, #16]
 8004dba:	1ad3      	subs	r3, r2, r3
 8004dbc:	2b02      	cmp	r3, #2
 8004dbe:	d903      	bls.n	8004dc8 <HAL_RCC_OscConfig+0x284>
 8004dc0:	2303      	movs	r3, #3
 8004dc2:	e166      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004dc4:	40023800 	.word	0x40023800
 8004dc8:	4b92      	ldr	r3, [pc, #584]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004dca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004dcc:	f003 0302 	and.w	r3, r3, #2
 8004dd0:	2b00      	cmp	r3, #0
 8004dd2:	d1ee      	bne.n	8004db2 <HAL_RCC_OscConfig+0x26e>
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	f003 0304 	and.w	r3, r3, #4
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	f000 80a4 	beq.w	8004f2a <HAL_RCC_OscConfig+0x3e6>
 8004de2:	4b8c      	ldr	r3, [pc, #560]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004de4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004de6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d10d      	bne.n	8004e0a <HAL_RCC_OscConfig+0x2c6>
 8004dee:	4b89      	ldr	r3, [pc, #548]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004df0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004df2:	4a88      	ldr	r2, [pc, #544]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004df4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004df8:	6413      	str	r3, [r2, #64]	; 0x40
 8004dfa:	4b86      	ldr	r3, [pc, #536]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004dfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004dfe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e02:	60bb      	str	r3, [r7, #8]
 8004e04:	68bb      	ldr	r3, [r7, #8]
 8004e06:	2301      	movs	r3, #1
 8004e08:	75fb      	strb	r3, [r7, #23]
 8004e0a:	4b83      	ldr	r3, [pc, #524]	; (8005018 <HAL_RCC_OscConfig+0x4d4>)
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e12:	2b00      	cmp	r3, #0
 8004e14:	d118      	bne.n	8004e48 <HAL_RCC_OscConfig+0x304>
 8004e16:	4b80      	ldr	r3, [pc, #512]	; (8005018 <HAL_RCC_OscConfig+0x4d4>)
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	4a7f      	ldr	r2, [pc, #508]	; (8005018 <HAL_RCC_OscConfig+0x4d4>)
 8004e1c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e20:	6013      	str	r3, [r2, #0]
 8004e22:	f7fe fca5 	bl	8003770 <HAL_GetTick>
 8004e26:	6138      	str	r0, [r7, #16]
 8004e28:	e008      	b.n	8004e3c <HAL_RCC_OscConfig+0x2f8>
 8004e2a:	f7fe fca1 	bl	8003770 <HAL_GetTick>
 8004e2e:	4602      	mov	r2, r0
 8004e30:	693b      	ldr	r3, [r7, #16]
 8004e32:	1ad3      	subs	r3, r2, r3
 8004e34:	2b64      	cmp	r3, #100	; 0x64
 8004e36:	d901      	bls.n	8004e3c <HAL_RCC_OscConfig+0x2f8>
 8004e38:	2303      	movs	r3, #3
 8004e3a:	e12a      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004e3c:	4b76      	ldr	r3, [pc, #472]	; (8005018 <HAL_RCC_OscConfig+0x4d4>)
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e44:	2b00      	cmp	r3, #0
 8004e46:	d0f0      	beq.n	8004e2a <HAL_RCC_OscConfig+0x2e6>
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	689b      	ldr	r3, [r3, #8]
 8004e4c:	2b01      	cmp	r3, #1
 8004e4e:	d106      	bne.n	8004e5e <HAL_RCC_OscConfig+0x31a>
 8004e50:	4b70      	ldr	r3, [pc, #448]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e52:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e54:	4a6f      	ldr	r2, [pc, #444]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e56:	f043 0301 	orr.w	r3, r3, #1
 8004e5a:	6713      	str	r3, [r2, #112]	; 0x70
 8004e5c:	e02d      	b.n	8004eba <HAL_RCC_OscConfig+0x376>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	689b      	ldr	r3, [r3, #8]
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d10c      	bne.n	8004e80 <HAL_RCC_OscConfig+0x33c>
 8004e66:	4b6b      	ldr	r3, [pc, #428]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e6a:	4a6a      	ldr	r2, [pc, #424]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e6c:	f023 0301 	bic.w	r3, r3, #1
 8004e70:	6713      	str	r3, [r2, #112]	; 0x70
 8004e72:	4b68      	ldr	r3, [pc, #416]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e74:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e76:	4a67      	ldr	r2, [pc, #412]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e78:	f023 0304 	bic.w	r3, r3, #4
 8004e7c:	6713      	str	r3, [r2, #112]	; 0x70
 8004e7e:	e01c      	b.n	8004eba <HAL_RCC_OscConfig+0x376>
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	689b      	ldr	r3, [r3, #8]
 8004e84:	2b05      	cmp	r3, #5
 8004e86:	d10c      	bne.n	8004ea2 <HAL_RCC_OscConfig+0x35e>
 8004e88:	4b62      	ldr	r3, [pc, #392]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e8a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e8c:	4a61      	ldr	r2, [pc, #388]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e8e:	f043 0304 	orr.w	r3, r3, #4
 8004e92:	6713      	str	r3, [r2, #112]	; 0x70
 8004e94:	4b5f      	ldr	r3, [pc, #380]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e96:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e98:	4a5e      	ldr	r2, [pc, #376]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004e9a:	f043 0301 	orr.w	r3, r3, #1
 8004e9e:	6713      	str	r3, [r2, #112]	; 0x70
 8004ea0:	e00b      	b.n	8004eba <HAL_RCC_OscConfig+0x376>
 8004ea2:	4b5c      	ldr	r3, [pc, #368]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004ea4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ea6:	4a5b      	ldr	r2, [pc, #364]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004ea8:	f023 0301 	bic.w	r3, r3, #1
 8004eac:	6713      	str	r3, [r2, #112]	; 0x70
 8004eae:	4b59      	ldr	r3, [pc, #356]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004eb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004eb2:	4a58      	ldr	r2, [pc, #352]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004eb4:	f023 0304 	bic.w	r3, r3, #4
 8004eb8:	6713      	str	r3, [r2, #112]	; 0x70
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	689b      	ldr	r3, [r3, #8]
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d015      	beq.n	8004eee <HAL_RCC_OscConfig+0x3aa>
 8004ec2:	f7fe fc55 	bl	8003770 <HAL_GetTick>
 8004ec6:	6138      	str	r0, [r7, #16]
 8004ec8:	e00a      	b.n	8004ee0 <HAL_RCC_OscConfig+0x39c>
 8004eca:	f7fe fc51 	bl	8003770 <HAL_GetTick>
 8004ece:	4602      	mov	r2, r0
 8004ed0:	693b      	ldr	r3, [r7, #16]
 8004ed2:	1ad3      	subs	r3, r2, r3
 8004ed4:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ed8:	4293      	cmp	r3, r2
 8004eda:	d901      	bls.n	8004ee0 <HAL_RCC_OscConfig+0x39c>
 8004edc:	2303      	movs	r3, #3
 8004ede:	e0d8      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004ee0:	4b4c      	ldr	r3, [pc, #304]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004ee2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ee4:	f003 0302 	and.w	r3, r3, #2
 8004ee8:	2b00      	cmp	r3, #0
 8004eea:	d0ee      	beq.n	8004eca <HAL_RCC_OscConfig+0x386>
 8004eec:	e014      	b.n	8004f18 <HAL_RCC_OscConfig+0x3d4>
 8004eee:	f7fe fc3f 	bl	8003770 <HAL_GetTick>
 8004ef2:	6138      	str	r0, [r7, #16]
 8004ef4:	e00a      	b.n	8004f0c <HAL_RCC_OscConfig+0x3c8>
 8004ef6:	f7fe fc3b 	bl	8003770 <HAL_GetTick>
 8004efa:	4602      	mov	r2, r0
 8004efc:	693b      	ldr	r3, [r7, #16]
 8004efe:	1ad3      	subs	r3, r2, r3
 8004f00:	f241 3288 	movw	r2, #5000	; 0x1388
 8004f04:	4293      	cmp	r3, r2
 8004f06:	d901      	bls.n	8004f0c <HAL_RCC_OscConfig+0x3c8>
 8004f08:	2303      	movs	r3, #3
 8004f0a:	e0c2      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004f0c:	4b41      	ldr	r3, [pc, #260]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f0e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004f10:	f003 0302 	and.w	r3, r3, #2
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d1ee      	bne.n	8004ef6 <HAL_RCC_OscConfig+0x3b2>
 8004f18:	7dfb      	ldrb	r3, [r7, #23]
 8004f1a:	2b01      	cmp	r3, #1
 8004f1c:	d105      	bne.n	8004f2a <HAL_RCC_OscConfig+0x3e6>
 8004f1e:	4b3d      	ldr	r3, [pc, #244]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f22:	4a3c      	ldr	r2, [pc, #240]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f24:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004f28:	6413      	str	r3, [r2, #64]	; 0x40
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	699b      	ldr	r3, [r3, #24]
 8004f2e:	2b00      	cmp	r3, #0
 8004f30:	f000 80ae 	beq.w	8005090 <HAL_RCC_OscConfig+0x54c>
 8004f34:	4b37      	ldr	r3, [pc, #220]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f36:	689b      	ldr	r3, [r3, #8]
 8004f38:	f003 030c 	and.w	r3, r3, #12
 8004f3c:	2b08      	cmp	r3, #8
 8004f3e:	d06d      	beq.n	800501c <HAL_RCC_OscConfig+0x4d8>
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	699b      	ldr	r3, [r3, #24]
 8004f44:	2b02      	cmp	r3, #2
 8004f46:	d14b      	bne.n	8004fe0 <HAL_RCC_OscConfig+0x49c>
 8004f48:	4b32      	ldr	r3, [pc, #200]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a31      	ldr	r2, [pc, #196]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f4e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004f52:	6013      	str	r3, [r2, #0]
 8004f54:	f7fe fc0c 	bl	8003770 <HAL_GetTick>
 8004f58:	6138      	str	r0, [r7, #16]
 8004f5a:	e008      	b.n	8004f6e <HAL_RCC_OscConfig+0x42a>
 8004f5c:	f7fe fc08 	bl	8003770 <HAL_GetTick>
 8004f60:	4602      	mov	r2, r0
 8004f62:	693b      	ldr	r3, [r7, #16]
 8004f64:	1ad3      	subs	r3, r2, r3
 8004f66:	2b02      	cmp	r3, #2
 8004f68:	d901      	bls.n	8004f6e <HAL_RCC_OscConfig+0x42a>
 8004f6a:	2303      	movs	r3, #3
 8004f6c:	e091      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004f6e:	4b29      	ldr	r3, [pc, #164]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d1f0      	bne.n	8004f5c <HAL_RCC_OscConfig+0x418>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	69da      	ldr	r2, [r3, #28]
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	6a1b      	ldr	r3, [r3, #32]
 8004f82:	431a      	orrs	r2, r3
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f88:	019b      	lsls	r3, r3, #6
 8004f8a:	431a      	orrs	r2, r3
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f90:	085b      	lsrs	r3, r3, #1
 8004f92:	3b01      	subs	r3, #1
 8004f94:	041b      	lsls	r3, r3, #16
 8004f96:	431a      	orrs	r2, r3
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f9c:	061b      	lsls	r3, r3, #24
 8004f9e:	431a      	orrs	r2, r3
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fa4:	071b      	lsls	r3, r3, #28
 8004fa6:	491b      	ldr	r1, [pc, #108]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fa8:	4313      	orrs	r3, r2
 8004faa:	604b      	str	r3, [r1, #4]
 8004fac:	4b19      	ldr	r3, [pc, #100]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	4a18      	ldr	r2, [pc, #96]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fb2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004fb6:	6013      	str	r3, [r2, #0]
 8004fb8:	f7fe fbda 	bl	8003770 <HAL_GetTick>
 8004fbc:	6138      	str	r0, [r7, #16]
 8004fbe:	e008      	b.n	8004fd2 <HAL_RCC_OscConfig+0x48e>
 8004fc0:	f7fe fbd6 	bl	8003770 <HAL_GetTick>
 8004fc4:	4602      	mov	r2, r0
 8004fc6:	693b      	ldr	r3, [r7, #16]
 8004fc8:	1ad3      	subs	r3, r2, r3
 8004fca:	2b02      	cmp	r3, #2
 8004fcc:	d901      	bls.n	8004fd2 <HAL_RCC_OscConfig+0x48e>
 8004fce:	2303      	movs	r3, #3
 8004fd0:	e05f      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8004fd2:	4b10      	ldr	r3, [pc, #64]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d0f0      	beq.n	8004fc0 <HAL_RCC_OscConfig+0x47c>
 8004fde:	e057      	b.n	8005090 <HAL_RCC_OscConfig+0x54c>
 8004fe0:	4b0c      	ldr	r3, [pc, #48]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	4a0b      	ldr	r2, [pc, #44]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8004fe6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004fea:	6013      	str	r3, [r2, #0]
 8004fec:	f7fe fbc0 	bl	8003770 <HAL_GetTick>
 8004ff0:	6138      	str	r0, [r7, #16]
 8004ff2:	e008      	b.n	8005006 <HAL_RCC_OscConfig+0x4c2>
 8004ff4:	f7fe fbbc 	bl	8003770 <HAL_GetTick>
 8004ff8:	4602      	mov	r2, r0
 8004ffa:	693b      	ldr	r3, [r7, #16]
 8004ffc:	1ad3      	subs	r3, r2, r3
 8004ffe:	2b02      	cmp	r3, #2
 8005000:	d901      	bls.n	8005006 <HAL_RCC_OscConfig+0x4c2>
 8005002:	2303      	movs	r3, #3
 8005004:	e045      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8005006:	4b03      	ldr	r3, [pc, #12]	; (8005014 <HAL_RCC_OscConfig+0x4d0>)
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800500e:	2b00      	cmp	r3, #0
 8005010:	d1f0      	bne.n	8004ff4 <HAL_RCC_OscConfig+0x4b0>
 8005012:	e03d      	b.n	8005090 <HAL_RCC_OscConfig+0x54c>
 8005014:	40023800 	.word	0x40023800
 8005018:	40007000 	.word	0x40007000
 800501c:	4b1f      	ldr	r3, [pc, #124]	; (800509c <HAL_RCC_OscConfig+0x558>)
 800501e:	685b      	ldr	r3, [r3, #4]
 8005020:	60fb      	str	r3, [r7, #12]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	699b      	ldr	r3, [r3, #24]
 8005026:	2b01      	cmp	r3, #1
 8005028:	d030      	beq.n	800508c <HAL_RCC_OscConfig+0x548>
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	69db      	ldr	r3, [r3, #28]
 8005034:	429a      	cmp	r2, r3
 8005036:	d129      	bne.n	800508c <HAL_RCC_OscConfig+0x548>
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	6a1b      	ldr	r3, [r3, #32]
 8005042:	429a      	cmp	r2, r3
 8005044:	d122      	bne.n	800508c <HAL_RCC_OscConfig+0x548>
 8005046:	68fa      	ldr	r2, [r7, #12]
 8005048:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800504c:	4013      	ands	r3, r2
 800504e:	687a      	ldr	r2, [r7, #4]
 8005050:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005052:	0192      	lsls	r2, r2, #6
 8005054:	4293      	cmp	r3, r2
 8005056:	d119      	bne.n	800508c <HAL_RCC_OscConfig+0x548>
 8005058:	68fb      	ldr	r3, [r7, #12]
 800505a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005062:	085b      	lsrs	r3, r3, #1
 8005064:	3b01      	subs	r3, #1
 8005066:	041b      	lsls	r3, r3, #16
 8005068:	429a      	cmp	r2, r3
 800506a:	d10f      	bne.n	800508c <HAL_RCC_OscConfig+0x548>
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005076:	061b      	lsls	r3, r3, #24
 8005078:	429a      	cmp	r2, r3
 800507a:	d107      	bne.n	800508c <HAL_RCC_OscConfig+0x548>
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005086:	071b      	lsls	r3, r3, #28
 8005088:	429a      	cmp	r2, r3
 800508a:	d001      	beq.n	8005090 <HAL_RCC_OscConfig+0x54c>
 800508c:	2301      	movs	r3, #1
 800508e:	e000      	b.n	8005092 <HAL_RCC_OscConfig+0x54e>
 8005090:	2300      	movs	r3, #0
 8005092:	4618      	mov	r0, r3
 8005094:	3718      	adds	r7, #24
 8005096:	46bd      	mov	sp, r7
 8005098:	bd80      	pop	{r7, pc}
 800509a:	bf00      	nop
 800509c:	40023800 	.word	0x40023800

080050a0 <HAL_RCC_ClockConfig>:
 80050a0:	b580      	push	{r7, lr}
 80050a2:	b084      	sub	sp, #16
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	6078      	str	r0, [r7, #4]
 80050a8:	6039      	str	r1, [r7, #0]
 80050aa:	2300      	movs	r3, #0
 80050ac:	60fb      	str	r3, [r7, #12]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	2b00      	cmp	r3, #0
 80050b2:	d101      	bne.n	80050b8 <HAL_RCC_ClockConfig+0x18>
 80050b4:	2301      	movs	r3, #1
 80050b6:	e0d0      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 80050b8:	4b6a      	ldr	r3, [pc, #424]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	f003 030f 	and.w	r3, r3, #15
 80050c0:	683a      	ldr	r2, [r7, #0]
 80050c2:	429a      	cmp	r2, r3
 80050c4:	d910      	bls.n	80050e8 <HAL_RCC_ClockConfig+0x48>
 80050c6:	4b67      	ldr	r3, [pc, #412]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80050c8:	681b      	ldr	r3, [r3, #0]
 80050ca:	f023 020f 	bic.w	r2, r3, #15
 80050ce:	4965      	ldr	r1, [pc, #404]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80050d0:	683b      	ldr	r3, [r7, #0]
 80050d2:	4313      	orrs	r3, r2
 80050d4:	600b      	str	r3, [r1, #0]
 80050d6:	4b63      	ldr	r3, [pc, #396]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	f003 030f 	and.w	r3, r3, #15
 80050de:	683a      	ldr	r2, [r7, #0]
 80050e0:	429a      	cmp	r2, r3
 80050e2:	d001      	beq.n	80050e8 <HAL_RCC_ClockConfig+0x48>
 80050e4:	2301      	movs	r3, #1
 80050e6:	e0b8      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	f003 0302 	and.w	r3, r3, #2
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	d020      	beq.n	8005136 <HAL_RCC_ClockConfig+0x96>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	f003 0304 	and.w	r3, r3, #4
 80050fc:	2b00      	cmp	r3, #0
 80050fe:	d005      	beq.n	800510c <HAL_RCC_ClockConfig+0x6c>
 8005100:	4b59      	ldr	r3, [pc, #356]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005102:	689b      	ldr	r3, [r3, #8]
 8005104:	4a58      	ldr	r2, [pc, #352]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005106:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800510a:	6093      	str	r3, [r2, #8]
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	f003 0308 	and.w	r3, r3, #8
 8005114:	2b00      	cmp	r3, #0
 8005116:	d005      	beq.n	8005124 <HAL_RCC_ClockConfig+0x84>
 8005118:	4b53      	ldr	r3, [pc, #332]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800511a:	689b      	ldr	r3, [r3, #8]
 800511c:	4a52      	ldr	r2, [pc, #328]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800511e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005122:	6093      	str	r3, [r2, #8]
 8005124:	4b50      	ldr	r3, [pc, #320]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005126:	689b      	ldr	r3, [r3, #8]
 8005128:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	689b      	ldr	r3, [r3, #8]
 8005130:	494d      	ldr	r1, [pc, #308]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005132:	4313      	orrs	r3, r2
 8005134:	608b      	str	r3, [r1, #8]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	f003 0301 	and.w	r3, r3, #1
 800513e:	2b00      	cmp	r3, #0
 8005140:	d040      	beq.n	80051c4 <HAL_RCC_ClockConfig+0x124>
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	685b      	ldr	r3, [r3, #4]
 8005146:	2b01      	cmp	r3, #1
 8005148:	d107      	bne.n	800515a <HAL_RCC_ClockConfig+0xba>
 800514a:	4b47      	ldr	r3, [pc, #284]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005152:	2b00      	cmp	r3, #0
 8005154:	d115      	bne.n	8005182 <HAL_RCC_ClockConfig+0xe2>
 8005156:	2301      	movs	r3, #1
 8005158:	e07f      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	685b      	ldr	r3, [r3, #4]
 800515e:	2b02      	cmp	r3, #2
 8005160:	d107      	bne.n	8005172 <HAL_RCC_ClockConfig+0xd2>
 8005162:	4b41      	ldr	r3, [pc, #260]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800516a:	2b00      	cmp	r3, #0
 800516c:	d109      	bne.n	8005182 <HAL_RCC_ClockConfig+0xe2>
 800516e:	2301      	movs	r3, #1
 8005170:	e073      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 8005172:	4b3d      	ldr	r3, [pc, #244]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	f003 0302 	and.w	r3, r3, #2
 800517a:	2b00      	cmp	r3, #0
 800517c:	d101      	bne.n	8005182 <HAL_RCC_ClockConfig+0xe2>
 800517e:	2301      	movs	r3, #1
 8005180:	e06b      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 8005182:	4b39      	ldr	r3, [pc, #228]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005184:	689b      	ldr	r3, [r3, #8]
 8005186:	f023 0203 	bic.w	r2, r3, #3
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	685b      	ldr	r3, [r3, #4]
 800518e:	4936      	ldr	r1, [pc, #216]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005190:	4313      	orrs	r3, r2
 8005192:	608b      	str	r3, [r1, #8]
 8005194:	f7fe faec 	bl	8003770 <HAL_GetTick>
 8005198:	60f8      	str	r0, [r7, #12]
 800519a:	e00a      	b.n	80051b2 <HAL_RCC_ClockConfig+0x112>
 800519c:	f7fe fae8 	bl	8003770 <HAL_GetTick>
 80051a0:	4602      	mov	r2, r0
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	1ad3      	subs	r3, r2, r3
 80051a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80051aa:	4293      	cmp	r3, r2
 80051ac:	d901      	bls.n	80051b2 <HAL_RCC_ClockConfig+0x112>
 80051ae:	2303      	movs	r3, #3
 80051b0:	e053      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 80051b2:	4b2d      	ldr	r3, [pc, #180]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 80051b4:	689b      	ldr	r3, [r3, #8]
 80051b6:	f003 020c 	and.w	r2, r3, #12
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	685b      	ldr	r3, [r3, #4]
 80051be:	009b      	lsls	r3, r3, #2
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d1eb      	bne.n	800519c <HAL_RCC_ClockConfig+0xfc>
 80051c4:	4b27      	ldr	r3, [pc, #156]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	f003 030f 	and.w	r3, r3, #15
 80051cc:	683a      	ldr	r2, [r7, #0]
 80051ce:	429a      	cmp	r2, r3
 80051d0:	d210      	bcs.n	80051f4 <HAL_RCC_ClockConfig+0x154>
 80051d2:	4b24      	ldr	r3, [pc, #144]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	f023 020f 	bic.w	r2, r3, #15
 80051da:	4922      	ldr	r1, [pc, #136]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80051dc:	683b      	ldr	r3, [r7, #0]
 80051de:	4313      	orrs	r3, r2
 80051e0:	600b      	str	r3, [r1, #0]
 80051e2:	4b20      	ldr	r3, [pc, #128]	; (8005264 <HAL_RCC_ClockConfig+0x1c4>)
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	f003 030f 	and.w	r3, r3, #15
 80051ea:	683a      	ldr	r2, [r7, #0]
 80051ec:	429a      	cmp	r2, r3
 80051ee:	d001      	beq.n	80051f4 <HAL_RCC_ClockConfig+0x154>
 80051f0:	2301      	movs	r3, #1
 80051f2:	e032      	b.n	800525a <HAL_RCC_ClockConfig+0x1ba>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	f003 0304 	and.w	r3, r3, #4
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d008      	beq.n	8005212 <HAL_RCC_ClockConfig+0x172>
 8005200:	4b19      	ldr	r3, [pc, #100]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005202:	689b      	ldr	r3, [r3, #8]
 8005204:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	68db      	ldr	r3, [r3, #12]
 800520c:	4916      	ldr	r1, [pc, #88]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800520e:	4313      	orrs	r3, r2
 8005210:	608b      	str	r3, [r1, #8]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	f003 0308 	and.w	r3, r3, #8
 800521a:	2b00      	cmp	r3, #0
 800521c:	d009      	beq.n	8005232 <HAL_RCC_ClockConfig+0x192>
 800521e:	4b12      	ldr	r3, [pc, #72]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 8005220:	689b      	ldr	r3, [r3, #8]
 8005222:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	691b      	ldr	r3, [r3, #16]
 800522a:	00db      	lsls	r3, r3, #3
 800522c:	490e      	ldr	r1, [pc, #56]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800522e:	4313      	orrs	r3, r2
 8005230:	608b      	str	r3, [r1, #8]
 8005232:	f000 f821 	bl	8005278 <HAL_RCC_GetSysClockFreq>
 8005236:	4602      	mov	r2, r0
 8005238:	4b0b      	ldr	r3, [pc, #44]	; (8005268 <HAL_RCC_ClockConfig+0x1c8>)
 800523a:	689b      	ldr	r3, [r3, #8]
 800523c:	091b      	lsrs	r3, r3, #4
 800523e:	f003 030f 	and.w	r3, r3, #15
 8005242:	490a      	ldr	r1, [pc, #40]	; (800526c <HAL_RCC_ClockConfig+0x1cc>)
 8005244:	5ccb      	ldrb	r3, [r1, r3]
 8005246:	fa22 f303 	lsr.w	r3, r2, r3
 800524a:	4a09      	ldr	r2, [pc, #36]	; (8005270 <HAL_RCC_ClockConfig+0x1d0>)
 800524c:	6013      	str	r3, [r2, #0]
 800524e:	4b09      	ldr	r3, [pc, #36]	; (8005274 <HAL_RCC_ClockConfig+0x1d4>)
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	4618      	mov	r0, r3
 8005254:	f7fe fa48 	bl	80036e8 <HAL_InitTick>
 8005258:	2300      	movs	r3, #0
 800525a:	4618      	mov	r0, r3
 800525c:	3710      	adds	r7, #16
 800525e:	46bd      	mov	sp, r7
 8005260:	bd80      	pop	{r7, pc}
 8005262:	bf00      	nop
 8005264:	40023c00 	.word	0x40023c00
 8005268:	40023800 	.word	0x40023800
 800526c:	0800e6fc 	.word	0x0800e6fc
 8005270:	20000108 	.word	0x20000108
 8005274:	2000010c 	.word	0x2000010c

08005278 <HAL_RCC_GetSysClockFreq>:
 8005278:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800527c:	b084      	sub	sp, #16
 800527e:	af00      	add	r7, sp, #0
 8005280:	2300      	movs	r3, #0
 8005282:	607b      	str	r3, [r7, #4]
 8005284:	2300      	movs	r3, #0
 8005286:	60fb      	str	r3, [r7, #12]
 8005288:	2300      	movs	r3, #0
 800528a:	603b      	str	r3, [r7, #0]
 800528c:	2300      	movs	r3, #0
 800528e:	60bb      	str	r3, [r7, #8]
 8005290:	4b67      	ldr	r3, [pc, #412]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8005292:	689b      	ldr	r3, [r3, #8]
 8005294:	f003 030c 	and.w	r3, r3, #12
 8005298:	2b08      	cmp	r3, #8
 800529a:	d00d      	beq.n	80052b8 <HAL_RCC_GetSysClockFreq+0x40>
 800529c:	2b08      	cmp	r3, #8
 800529e:	f200 80bd 	bhi.w	800541c <HAL_RCC_GetSysClockFreq+0x1a4>
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d002      	beq.n	80052ac <HAL_RCC_GetSysClockFreq+0x34>
 80052a6:	2b04      	cmp	r3, #4
 80052a8:	d003      	beq.n	80052b2 <HAL_RCC_GetSysClockFreq+0x3a>
 80052aa:	e0b7      	b.n	800541c <HAL_RCC_GetSysClockFreq+0x1a4>
 80052ac:	4b61      	ldr	r3, [pc, #388]	; (8005434 <HAL_RCC_GetSysClockFreq+0x1bc>)
 80052ae:	60bb      	str	r3, [r7, #8]
 80052b0:	e0b7      	b.n	8005422 <HAL_RCC_GetSysClockFreq+0x1aa>
 80052b2:	4b61      	ldr	r3, [pc, #388]	; (8005438 <HAL_RCC_GetSysClockFreq+0x1c0>)
 80052b4:	60bb      	str	r3, [r7, #8]
 80052b6:	e0b4      	b.n	8005422 <HAL_RCC_GetSysClockFreq+0x1aa>
 80052b8:	4b5d      	ldr	r3, [pc, #372]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80052ba:	685b      	ldr	r3, [r3, #4]
 80052bc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80052c0:	607b      	str	r3, [r7, #4]
 80052c2:	4b5b      	ldr	r3, [pc, #364]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80052c4:	685b      	ldr	r3, [r3, #4]
 80052c6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d04d      	beq.n	800536a <HAL_RCC_GetSysClockFreq+0xf2>
 80052ce:	4b58      	ldr	r3, [pc, #352]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80052d0:	685b      	ldr	r3, [r3, #4]
 80052d2:	099b      	lsrs	r3, r3, #6
 80052d4:	461a      	mov	r2, r3
 80052d6:	f04f 0300 	mov.w	r3, #0
 80052da:	f240 10ff 	movw	r0, #511	; 0x1ff
 80052de:	f04f 0100 	mov.w	r1, #0
 80052e2:	ea02 0800 	and.w	r8, r2, r0
 80052e6:	ea03 0901 	and.w	r9, r3, r1
 80052ea:	4640      	mov	r0, r8
 80052ec:	4649      	mov	r1, r9
 80052ee:	f04f 0200 	mov.w	r2, #0
 80052f2:	f04f 0300 	mov.w	r3, #0
 80052f6:	014b      	lsls	r3, r1, #5
 80052f8:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80052fc:	0142      	lsls	r2, r0, #5
 80052fe:	4610      	mov	r0, r2
 8005300:	4619      	mov	r1, r3
 8005302:	ebb0 0008 	subs.w	r0, r0, r8
 8005306:	eb61 0109 	sbc.w	r1, r1, r9
 800530a:	f04f 0200 	mov.w	r2, #0
 800530e:	f04f 0300 	mov.w	r3, #0
 8005312:	018b      	lsls	r3, r1, #6
 8005314:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8005318:	0182      	lsls	r2, r0, #6
 800531a:	1a12      	subs	r2, r2, r0
 800531c:	eb63 0301 	sbc.w	r3, r3, r1
 8005320:	f04f 0000 	mov.w	r0, #0
 8005324:	f04f 0100 	mov.w	r1, #0
 8005328:	00d9      	lsls	r1, r3, #3
 800532a:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800532e:	00d0      	lsls	r0, r2, #3
 8005330:	4602      	mov	r2, r0
 8005332:	460b      	mov	r3, r1
 8005334:	eb12 0208 	adds.w	r2, r2, r8
 8005338:	eb43 0309 	adc.w	r3, r3, r9
 800533c:	f04f 0000 	mov.w	r0, #0
 8005340:	f04f 0100 	mov.w	r1, #0
 8005344:	0259      	lsls	r1, r3, #9
 8005346:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 800534a:	0250      	lsls	r0, r2, #9
 800534c:	4602      	mov	r2, r0
 800534e:	460b      	mov	r3, r1
 8005350:	4610      	mov	r0, r2
 8005352:	4619      	mov	r1, r3
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	461a      	mov	r2, r3
 8005358:	f04f 0300 	mov.w	r3, #0
 800535c:	f7fb f994 	bl	8000688 <__aeabi_uldivmod>
 8005360:	4602      	mov	r2, r0
 8005362:	460b      	mov	r3, r1
 8005364:	4613      	mov	r3, r2
 8005366:	60fb      	str	r3, [r7, #12]
 8005368:	e04a      	b.n	8005400 <HAL_RCC_GetSysClockFreq+0x188>
 800536a:	4b31      	ldr	r3, [pc, #196]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 800536c:	685b      	ldr	r3, [r3, #4]
 800536e:	099b      	lsrs	r3, r3, #6
 8005370:	461a      	mov	r2, r3
 8005372:	f04f 0300 	mov.w	r3, #0
 8005376:	f240 10ff 	movw	r0, #511	; 0x1ff
 800537a:	f04f 0100 	mov.w	r1, #0
 800537e:	ea02 0400 	and.w	r4, r2, r0
 8005382:	ea03 0501 	and.w	r5, r3, r1
 8005386:	4620      	mov	r0, r4
 8005388:	4629      	mov	r1, r5
 800538a:	f04f 0200 	mov.w	r2, #0
 800538e:	f04f 0300 	mov.w	r3, #0
 8005392:	014b      	lsls	r3, r1, #5
 8005394:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8005398:	0142      	lsls	r2, r0, #5
 800539a:	4610      	mov	r0, r2
 800539c:	4619      	mov	r1, r3
 800539e:	1b00      	subs	r0, r0, r4
 80053a0:	eb61 0105 	sbc.w	r1, r1, r5
 80053a4:	f04f 0200 	mov.w	r2, #0
 80053a8:	f04f 0300 	mov.w	r3, #0
 80053ac:	018b      	lsls	r3, r1, #6
 80053ae:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80053b2:	0182      	lsls	r2, r0, #6
 80053b4:	1a12      	subs	r2, r2, r0
 80053b6:	eb63 0301 	sbc.w	r3, r3, r1
 80053ba:	f04f 0000 	mov.w	r0, #0
 80053be:	f04f 0100 	mov.w	r1, #0
 80053c2:	00d9      	lsls	r1, r3, #3
 80053c4:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80053c8:	00d0      	lsls	r0, r2, #3
 80053ca:	4602      	mov	r2, r0
 80053cc:	460b      	mov	r3, r1
 80053ce:	1912      	adds	r2, r2, r4
 80053d0:	eb45 0303 	adc.w	r3, r5, r3
 80053d4:	f04f 0000 	mov.w	r0, #0
 80053d8:	f04f 0100 	mov.w	r1, #0
 80053dc:	0299      	lsls	r1, r3, #10
 80053de:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 80053e2:	0290      	lsls	r0, r2, #10
 80053e4:	4602      	mov	r2, r0
 80053e6:	460b      	mov	r3, r1
 80053e8:	4610      	mov	r0, r2
 80053ea:	4619      	mov	r1, r3
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	461a      	mov	r2, r3
 80053f0:	f04f 0300 	mov.w	r3, #0
 80053f4:	f7fb f948 	bl	8000688 <__aeabi_uldivmod>
 80053f8:	4602      	mov	r2, r0
 80053fa:	460b      	mov	r3, r1
 80053fc:	4613      	mov	r3, r2
 80053fe:	60fb      	str	r3, [r7, #12]
 8005400:	4b0b      	ldr	r3, [pc, #44]	; (8005430 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	0c1b      	lsrs	r3, r3, #16
 8005406:	f003 0303 	and.w	r3, r3, #3
 800540a:	3301      	adds	r3, #1
 800540c:	005b      	lsls	r3, r3, #1
 800540e:	603b      	str	r3, [r7, #0]
 8005410:	68fa      	ldr	r2, [r7, #12]
 8005412:	683b      	ldr	r3, [r7, #0]
 8005414:	fbb2 f3f3 	udiv	r3, r2, r3
 8005418:	60bb      	str	r3, [r7, #8]
 800541a:	e002      	b.n	8005422 <HAL_RCC_GetSysClockFreq+0x1aa>
 800541c:	4b05      	ldr	r3, [pc, #20]	; (8005434 <HAL_RCC_GetSysClockFreq+0x1bc>)
 800541e:	60bb      	str	r3, [r7, #8]
 8005420:	bf00      	nop
 8005422:	68bb      	ldr	r3, [r7, #8]
 8005424:	4618      	mov	r0, r3
 8005426:	3710      	adds	r7, #16
 8005428:	46bd      	mov	sp, r7
 800542a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800542e:	bf00      	nop
 8005430:	40023800 	.word	0x40023800
 8005434:	00f42400 	.word	0x00f42400
 8005438:	007a1200 	.word	0x007a1200

0800543c <HAL_RCC_GetHCLKFreq>:
 800543c:	b480      	push	{r7}
 800543e:	af00      	add	r7, sp, #0
 8005440:	4b03      	ldr	r3, [pc, #12]	; (8005450 <HAL_RCC_GetHCLKFreq+0x14>)
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	4618      	mov	r0, r3
 8005446:	46bd      	mov	sp, r7
 8005448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800544c:	4770      	bx	lr
 800544e:	bf00      	nop
 8005450:	20000108 	.word	0x20000108

08005454 <HAL_RCC_GetPCLK1Freq>:
 8005454:	b580      	push	{r7, lr}
 8005456:	af00      	add	r7, sp, #0
 8005458:	f7ff fff0 	bl	800543c <HAL_RCC_GetHCLKFreq>
 800545c:	4602      	mov	r2, r0
 800545e:	4b05      	ldr	r3, [pc, #20]	; (8005474 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005460:	689b      	ldr	r3, [r3, #8]
 8005462:	0a9b      	lsrs	r3, r3, #10
 8005464:	f003 0307 	and.w	r3, r3, #7
 8005468:	4903      	ldr	r1, [pc, #12]	; (8005478 <HAL_RCC_GetPCLK1Freq+0x24>)
 800546a:	5ccb      	ldrb	r3, [r1, r3]
 800546c:	fa22 f303 	lsr.w	r3, r2, r3
 8005470:	4618      	mov	r0, r3
 8005472:	bd80      	pop	{r7, pc}
 8005474:	40023800 	.word	0x40023800
 8005478:	0800e70c 	.word	0x0800e70c

0800547c <HAL_RCC_GetPCLK2Freq>:
 800547c:	b580      	push	{r7, lr}
 800547e:	af00      	add	r7, sp, #0
 8005480:	f7ff ffdc 	bl	800543c <HAL_RCC_GetHCLKFreq>
 8005484:	4602      	mov	r2, r0
 8005486:	4b05      	ldr	r3, [pc, #20]	; (800549c <HAL_RCC_GetPCLK2Freq+0x20>)
 8005488:	689b      	ldr	r3, [r3, #8]
 800548a:	0b5b      	lsrs	r3, r3, #13
 800548c:	f003 0307 	and.w	r3, r3, #7
 8005490:	4903      	ldr	r1, [pc, #12]	; (80054a0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005492:	5ccb      	ldrb	r3, [r1, r3]
 8005494:	fa22 f303 	lsr.w	r3, r2, r3
 8005498:	4618      	mov	r0, r3
 800549a:	bd80      	pop	{r7, pc}
 800549c:	40023800 	.word	0x40023800
 80054a0:	0800e70c 	.word	0x0800e70c

080054a4 <HAL_RCCEx_PeriphCLKConfig>:
 80054a4:	b580      	push	{r7, lr}
 80054a6:	b088      	sub	sp, #32
 80054a8:	af00      	add	r7, sp, #0
 80054aa:	6078      	str	r0, [r7, #4]
 80054ac:	2300      	movs	r3, #0
 80054ae:	617b      	str	r3, [r7, #20]
 80054b0:	2300      	movs	r3, #0
 80054b2:	613b      	str	r3, [r7, #16]
 80054b4:	2300      	movs	r3, #0
 80054b6:	60fb      	str	r3, [r7, #12]
 80054b8:	2300      	movs	r3, #0
 80054ba:	61fb      	str	r3, [r7, #28]
 80054bc:	2300      	movs	r3, #0
 80054be:	61bb      	str	r3, [r7, #24]
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	f003 0301 	and.w	r3, r3, #1
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	d012      	beq.n	80054f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80054cc:	4b69      	ldr	r3, [pc, #420]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80054ce:	689b      	ldr	r3, [r3, #8]
 80054d0:	4a68      	ldr	r2, [pc, #416]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80054d2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80054d6:	6093      	str	r3, [r2, #8]
 80054d8:	4b66      	ldr	r3, [pc, #408]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80054da:	689a      	ldr	r2, [r3, #8]
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054e0:	4964      	ldr	r1, [pc, #400]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80054e2:	4313      	orrs	r3, r2
 80054e4:	608b      	str	r3, [r1, #8]
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d101      	bne.n	80054f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80054ee:	2301      	movs	r3, #1
 80054f0:	61fb      	str	r3, [r7, #28]
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d017      	beq.n	800552e <HAL_RCCEx_PeriphCLKConfig+0x8a>
 80054fe:	4b5d      	ldr	r3, [pc, #372]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005500:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005504:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800550c:	4959      	ldr	r1, [pc, #356]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800550e:	4313      	orrs	r3, r2
 8005510:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005518:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800551c:	d101      	bne.n	8005522 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800551e:	2301      	movs	r3, #1
 8005520:	61fb      	str	r3, [r7, #28]
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005526:	2b00      	cmp	r3, #0
 8005528:	d101      	bne.n	800552e <HAL_RCCEx_PeriphCLKConfig+0x8a>
 800552a:	2301      	movs	r3, #1
 800552c:	61bb      	str	r3, [r7, #24]
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005536:	2b00      	cmp	r3, #0
 8005538:	d017      	beq.n	800556a <HAL_RCCEx_PeriphCLKConfig+0xc6>
 800553a:	4b4e      	ldr	r3, [pc, #312]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800553c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005540:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005548:	494a      	ldr	r1, [pc, #296]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800554a:	4313      	orrs	r3, r2
 800554c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005554:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005558:	d101      	bne.n	800555e <HAL_RCCEx_PeriphCLKConfig+0xba>
 800555a:	2301      	movs	r3, #1
 800555c:	61fb      	str	r3, [r7, #28]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005562:	2b00      	cmp	r3, #0
 8005564:	d101      	bne.n	800556a <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8005566:	2301      	movs	r3, #1
 8005568:	61bb      	str	r3, [r7, #24]
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005572:	2b00      	cmp	r3, #0
 8005574:	d001      	beq.n	800557a <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8005576:	2301      	movs	r3, #1
 8005578:	61fb      	str	r3, [r7, #28]
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	f003 0320 	and.w	r3, r3, #32
 8005582:	2b00      	cmp	r3, #0
 8005584:	f000 808b 	beq.w	800569e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005588:	4b3a      	ldr	r3, [pc, #232]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800558a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800558c:	4a39      	ldr	r2, [pc, #228]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800558e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005592:	6413      	str	r3, [r2, #64]	; 0x40
 8005594:	4b37      	ldr	r3, [pc, #220]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005598:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800559c:	60bb      	str	r3, [r7, #8]
 800559e:	68bb      	ldr	r3, [r7, #8]
 80055a0:	4b35      	ldr	r3, [pc, #212]	; (8005678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	4a34      	ldr	r2, [pc, #208]	; (8005678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80055a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80055aa:	6013      	str	r3, [r2, #0]
 80055ac:	f7fe f8e0 	bl	8003770 <HAL_GetTick>
 80055b0:	6178      	str	r0, [r7, #20]
 80055b2:	e008      	b.n	80055c6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 80055b4:	f7fe f8dc 	bl	8003770 <HAL_GetTick>
 80055b8:	4602      	mov	r2, r0
 80055ba:	697b      	ldr	r3, [r7, #20]
 80055bc:	1ad3      	subs	r3, r2, r3
 80055be:	2b64      	cmp	r3, #100	; 0x64
 80055c0:	d901      	bls.n	80055c6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 80055c2:	2303      	movs	r3, #3
 80055c4:	e38f      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 80055c6:	4b2c      	ldr	r3, [pc, #176]	; (8005678 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d0f0      	beq.n	80055b4 <HAL_RCCEx_PeriphCLKConfig+0x110>
 80055d2:	4b28      	ldr	r3, [pc, #160]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80055d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80055d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80055da:	613b      	str	r3, [r7, #16]
 80055dc:	693b      	ldr	r3, [r7, #16]
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d035      	beq.n	800564e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055e6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80055ea:	693a      	ldr	r2, [r7, #16]
 80055ec:	429a      	cmp	r2, r3
 80055ee:	d02e      	beq.n	800564e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80055f0:	4b20      	ldr	r3, [pc, #128]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80055f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80055f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80055f8:	613b      	str	r3, [r7, #16]
 80055fa:	4b1e      	ldr	r3, [pc, #120]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80055fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80055fe:	4a1d      	ldr	r2, [pc, #116]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005600:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005604:	6713      	str	r3, [r2, #112]	; 0x70
 8005606:	4b1b      	ldr	r3, [pc, #108]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005608:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800560a:	4a1a      	ldr	r2, [pc, #104]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800560c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005610:	6713      	str	r3, [r2, #112]	; 0x70
 8005612:	4a18      	ldr	r2, [pc, #96]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005614:	693b      	ldr	r3, [r7, #16]
 8005616:	6713      	str	r3, [r2, #112]	; 0x70
 8005618:	4b16      	ldr	r3, [pc, #88]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800561a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800561c:	f003 0301 	and.w	r3, r3, #1
 8005620:	2b01      	cmp	r3, #1
 8005622:	d114      	bne.n	800564e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8005624:	f7fe f8a4 	bl	8003770 <HAL_GetTick>
 8005628:	6178      	str	r0, [r7, #20]
 800562a:	e00a      	b.n	8005642 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800562c:	f7fe f8a0 	bl	8003770 <HAL_GetTick>
 8005630:	4602      	mov	r2, r0
 8005632:	697b      	ldr	r3, [r7, #20]
 8005634:	1ad3      	subs	r3, r2, r3
 8005636:	f241 3288 	movw	r2, #5000	; 0x1388
 800563a:	4293      	cmp	r3, r2
 800563c:	d901      	bls.n	8005642 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800563e:	2303      	movs	r3, #3
 8005640:	e351      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005642:	4b0c      	ldr	r3, [pc, #48]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005644:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005646:	f003 0302 	and.w	r3, r3, #2
 800564a:	2b00      	cmp	r3, #0
 800564c:	d0ee      	beq.n	800562c <HAL_RCCEx_PeriphCLKConfig+0x188>
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005652:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005656:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800565a:	d111      	bne.n	8005680 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 800565c:	4b05      	ldr	r3, [pc, #20]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800565e:	689b      	ldr	r3, [r3, #8]
 8005660:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005668:	4b04      	ldr	r3, [pc, #16]	; (800567c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800566a:	400b      	ands	r3, r1
 800566c:	4901      	ldr	r1, [pc, #4]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800566e:	4313      	orrs	r3, r2
 8005670:	608b      	str	r3, [r1, #8]
 8005672:	e00b      	b.n	800568c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8005674:	40023800 	.word	0x40023800
 8005678:	40007000 	.word	0x40007000
 800567c:	0ffffcff 	.word	0x0ffffcff
 8005680:	4bb3      	ldr	r3, [pc, #716]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005682:	689b      	ldr	r3, [r3, #8]
 8005684:	4ab2      	ldr	r2, [pc, #712]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005686:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 800568a:	6093      	str	r3, [r2, #8]
 800568c:	4bb0      	ldr	r3, [pc, #704]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800568e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005694:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005698:	49ad      	ldr	r1, [pc, #692]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800569a:	4313      	orrs	r3, r2
 800569c:	670b      	str	r3, [r1, #112]	; 0x70
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	f003 0310 	and.w	r3, r3, #16
 80056a6:	2b00      	cmp	r3, #0
 80056a8:	d010      	beq.n	80056cc <HAL_RCCEx_PeriphCLKConfig+0x228>
 80056aa:	4ba9      	ldr	r3, [pc, #676]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056ac:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80056b0:	4aa7      	ldr	r2, [pc, #668]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056b2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80056b6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 80056ba:	4ba5      	ldr	r3, [pc, #660]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056bc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056c4:	49a2      	ldr	r1, [pc, #648]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056c6:	4313      	orrs	r3, r2
 80056c8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	d00a      	beq.n	80056ee <HAL_RCCEx_PeriphCLKConfig+0x24a>
 80056d8:	4b9d      	ldr	r3, [pc, #628]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80056de:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80056e6:	499a      	ldr	r1, [pc, #616]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056e8:	4313      	orrs	r3, r2
 80056ea:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	681b      	ldr	r3, [r3, #0]
 80056f2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80056f6:	2b00      	cmp	r3, #0
 80056f8:	d00a      	beq.n	8005710 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 80056fa:	4b95      	ldr	r3, [pc, #596]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80056fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005700:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005708:	4991      	ldr	r1, [pc, #580]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800570a:	4313      	orrs	r3, r2
 800570c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005718:	2b00      	cmp	r3, #0
 800571a:	d00a      	beq.n	8005732 <HAL_RCCEx_PeriphCLKConfig+0x28e>
 800571c:	4b8c      	ldr	r3, [pc, #560]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800571e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005722:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800572a:	4989      	ldr	r1, [pc, #548]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800572c:	4313      	orrs	r3, r2
 800572e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800573a:	2b00      	cmp	r3, #0
 800573c:	d00a      	beq.n	8005754 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 800573e:	4b84      	ldr	r3, [pc, #528]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005740:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005744:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800574c:	4980      	ldr	r1, [pc, #512]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800574e:	4313      	orrs	r3, r2
 8005750:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800575c:	2b00      	cmp	r3, #0
 800575e:	d00a      	beq.n	8005776 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005760:	4b7b      	ldr	r3, [pc, #492]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005762:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005766:	f023 0203 	bic.w	r2, r3, #3
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800576e:	4978      	ldr	r1, [pc, #480]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005770:	4313      	orrs	r3, r2
 8005772:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800577e:	2b00      	cmp	r3, #0
 8005780:	d00a      	beq.n	8005798 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8005782:	4b73      	ldr	r3, [pc, #460]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005784:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005788:	f023 020c 	bic.w	r2, r3, #12
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005790:	496f      	ldr	r1, [pc, #444]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005792:	4313      	orrs	r3, r2
 8005794:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	681b      	ldr	r3, [r3, #0]
 800579c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	d00a      	beq.n	80057ba <HAL_RCCEx_PeriphCLKConfig+0x316>
 80057a4:	4b6a      	ldr	r3, [pc, #424]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80057aa:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80057b2:	4967      	ldr	r1, [pc, #412]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057b4:	4313      	orrs	r3, r2
 80057b6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	681b      	ldr	r3, [r3, #0]
 80057be:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80057c2:	2b00      	cmp	r3, #0
 80057c4:	d00a      	beq.n	80057dc <HAL_RCCEx_PeriphCLKConfig+0x338>
 80057c6:	4b62      	ldr	r3, [pc, #392]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057c8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80057cc:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80057d4:	495e      	ldr	r1, [pc, #376]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057d6:	4313      	orrs	r3, r2
 80057d8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80057e4:	2b00      	cmp	r3, #0
 80057e6:	d00a      	beq.n	80057fe <HAL_RCCEx_PeriphCLKConfig+0x35a>
 80057e8:	4b59      	ldr	r3, [pc, #356]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057ea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80057ee:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80057f6:	4956      	ldr	r1, [pc, #344]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80057f8:	4313      	orrs	r3, r2
 80057fa:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005806:	2b00      	cmp	r3, #0
 8005808:	d00a      	beq.n	8005820 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 800580a:	4b51      	ldr	r3, [pc, #324]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800580c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005810:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005818:	494d      	ldr	r1, [pc, #308]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800581a:	4313      	orrs	r3, r2
 800581c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005828:	2b00      	cmp	r3, #0
 800582a:	d00a      	beq.n	8005842 <HAL_RCCEx_PeriphCLKConfig+0x39e>
 800582c:	4b48      	ldr	r3, [pc, #288]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800582e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005832:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800583a:	4945      	ldr	r1, [pc, #276]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800583c:	4313      	orrs	r3, r2
 800583e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800584a:	2b00      	cmp	r3, #0
 800584c:	d00a      	beq.n	8005864 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 800584e:	4b40      	ldr	r3, [pc, #256]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005850:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005854:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800585c:	493c      	ldr	r1, [pc, #240]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800585e:	4313      	orrs	r3, r2
 8005860:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800586c:	2b00      	cmp	r3, #0
 800586e:	d00a      	beq.n	8005886 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8005870:	4b37      	ldr	r3, [pc, #220]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005872:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005876:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800587e:	4934      	ldr	r1, [pc, #208]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005880:	4313      	orrs	r3, r2
 8005882:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800588e:	2b00      	cmp	r3, #0
 8005890:	d011      	beq.n	80058b6 <HAL_RCCEx_PeriphCLKConfig+0x412>
 8005892:	4b2f      	ldr	r3, [pc, #188]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005894:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005898:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80058a0:	492b      	ldr	r1, [pc, #172]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80058a2:	4313      	orrs	r3, r2
 80058a4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80058ac:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80058b0:	d101      	bne.n	80058b6 <HAL_RCCEx_PeriphCLKConfig+0x412>
 80058b2:	2301      	movs	r3, #1
 80058b4:	61bb      	str	r3, [r7, #24]
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	f003 0308 	and.w	r3, r3, #8
 80058be:	2b00      	cmp	r3, #0
 80058c0:	d001      	beq.n	80058c6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 80058c2:	2301      	movs	r3, #1
 80058c4:	61bb      	str	r3, [r7, #24]
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	d00a      	beq.n	80058e8 <HAL_RCCEx_PeriphCLKConfig+0x444>
 80058d2:	4b1f      	ldr	r3, [pc, #124]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80058d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80058d8:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80058e0:	491b      	ldr	r1, [pc, #108]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80058e2:	4313      	orrs	r3, r2
 80058e4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80058f0:	2b00      	cmp	r3, #0
 80058f2:	d00b      	beq.n	800590c <HAL_RCCEx_PeriphCLKConfig+0x468>
 80058f4:	4b16      	ldr	r3, [pc, #88]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80058f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80058fa:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8005904:	4912      	ldr	r1, [pc, #72]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8005906:	4313      	orrs	r3, r2
 8005908:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005914:	2b00      	cmp	r3, #0
 8005916:	d00b      	beq.n	8005930 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8005918:	4b0d      	ldr	r3, [pc, #52]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800591a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800591e:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005928:	4909      	ldr	r1, [pc, #36]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800592a:	4313      	orrs	r3, r2
 800592c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005938:	2b00      	cmp	r3, #0
 800593a:	d00f      	beq.n	800595c <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 800593c:	4b04      	ldr	r3, [pc, #16]	; (8005950 <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800593e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005942:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800594c:	e002      	b.n	8005954 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 800594e:	bf00      	nop
 8005950:	40023800 	.word	0x40023800
 8005954:	4986      	ldr	r1, [pc, #536]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005956:	4313      	orrs	r3, r2
 8005958:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005964:	2b00      	cmp	r3, #0
 8005966:	d00b      	beq.n	8005980 <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 8005968:	4b81      	ldr	r3, [pc, #516]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800596a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800596e:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005978:	497d      	ldr	r1, [pc, #500]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800597a:	4313      	orrs	r3, r2
 800597c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005980:	69fb      	ldr	r3, [r7, #28]
 8005982:	2b01      	cmp	r3, #1
 8005984:	d006      	beq.n	8005994 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800598e:	2b00      	cmp	r3, #0
 8005990:	f000 80d6 	beq.w	8005b40 <HAL_RCCEx_PeriphCLKConfig+0x69c>
 8005994:	4b76      	ldr	r3, [pc, #472]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005996:	681b      	ldr	r3, [r3, #0]
 8005998:	4a75      	ldr	r2, [pc, #468]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 800599a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800599e:	6013      	str	r3, [r2, #0]
 80059a0:	f7fd fee6 	bl	8003770 <HAL_GetTick>
 80059a4:	6178      	str	r0, [r7, #20]
 80059a6:	e008      	b.n	80059ba <HAL_RCCEx_PeriphCLKConfig+0x516>
 80059a8:	f7fd fee2 	bl	8003770 <HAL_GetTick>
 80059ac:	4602      	mov	r2, r0
 80059ae:	697b      	ldr	r3, [r7, #20]
 80059b0:	1ad3      	subs	r3, r2, r3
 80059b2:	2b64      	cmp	r3, #100	; 0x64
 80059b4:	d901      	bls.n	80059ba <HAL_RCCEx_PeriphCLKConfig+0x516>
 80059b6:	2303      	movs	r3, #3
 80059b8:	e195      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 80059ba:	4b6d      	ldr	r3, [pc, #436]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d1f0      	bne.n	80059a8 <HAL_RCCEx_PeriphCLKConfig+0x504>
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	f003 0301 	and.w	r3, r3, #1
 80059ce:	2b00      	cmp	r3, #0
 80059d0:	d021      	beq.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x572>
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d11d      	bne.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x572>
 80059da:	4b65      	ldr	r3, [pc, #404]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80059dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80059e0:	0c1b      	lsrs	r3, r3, #16
 80059e2:	f003 0303 	and.w	r3, r3, #3
 80059e6:	613b      	str	r3, [r7, #16]
 80059e8:	4b61      	ldr	r3, [pc, #388]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 80059ea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80059ee:	0e1b      	lsrs	r3, r3, #24
 80059f0:	f003 030f 	and.w	r3, r3, #15
 80059f4:	60fb      	str	r3, [r7, #12]
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	685b      	ldr	r3, [r3, #4]
 80059fa:	019a      	lsls	r2, r3, #6
 80059fc:	693b      	ldr	r3, [r7, #16]
 80059fe:	041b      	lsls	r3, r3, #16
 8005a00:	431a      	orrs	r2, r3
 8005a02:	68fb      	ldr	r3, [r7, #12]
 8005a04:	061b      	lsls	r3, r3, #24
 8005a06:	431a      	orrs	r2, r3
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	689b      	ldr	r3, [r3, #8]
 8005a0c:	071b      	lsls	r3, r3, #28
 8005a0e:	4958      	ldr	r1, [pc, #352]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a10:	4313      	orrs	r3, r2
 8005a12:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005a1e:	2b00      	cmp	r3, #0
 8005a20:	d004      	beq.n	8005a2c <HAL_RCCEx_PeriphCLKConfig+0x588>
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005a26:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005a2a:	d00a      	beq.n	8005a42 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005a34:	2b00      	cmp	r3, #0
 8005a36:	d02e      	beq.n	8005a96 <HAL_RCCEx_PeriphCLKConfig+0x5f2>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a3c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005a40:	d129      	bne.n	8005a96 <HAL_RCCEx_PeriphCLKConfig+0x5f2>
 8005a42:	4b4b      	ldr	r3, [pc, #300]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a48:	0c1b      	lsrs	r3, r3, #16
 8005a4a:	f003 0303 	and.w	r3, r3, #3
 8005a4e:	613b      	str	r3, [r7, #16]
 8005a50:	4b47      	ldr	r3, [pc, #284]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a56:	0f1b      	lsrs	r3, r3, #28
 8005a58:	f003 0307 	and.w	r3, r3, #7
 8005a5c:	60fb      	str	r3, [r7, #12]
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	685b      	ldr	r3, [r3, #4]
 8005a62:	019a      	lsls	r2, r3, #6
 8005a64:	693b      	ldr	r3, [r7, #16]
 8005a66:	041b      	lsls	r3, r3, #16
 8005a68:	431a      	orrs	r2, r3
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	68db      	ldr	r3, [r3, #12]
 8005a6e:	061b      	lsls	r3, r3, #24
 8005a70:	431a      	orrs	r2, r3
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	071b      	lsls	r3, r3, #28
 8005a76:	493e      	ldr	r1, [pc, #248]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a78:	4313      	orrs	r3, r2
 8005a7a:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005a7e:	4b3c      	ldr	r3, [pc, #240]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005a84:	f023 021f 	bic.w	r2, r3, #31
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a8c:	3b01      	subs	r3, #1
 8005a8e:	4938      	ldr	r1, [pc, #224]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005a90:	4313      	orrs	r3, r2
 8005a92:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d01d      	beq.n	8005ade <HAL_RCCEx_PeriphCLKConfig+0x63a>
 8005aa2:	4b33      	ldr	r3, [pc, #204]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005aa4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005aa8:	0e1b      	lsrs	r3, r3, #24
 8005aaa:	f003 030f 	and.w	r3, r3, #15
 8005aae:	613b      	str	r3, [r7, #16]
 8005ab0:	4b2f      	ldr	r3, [pc, #188]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005ab2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005ab6:	0f1b      	lsrs	r3, r3, #28
 8005ab8:	f003 0307 	and.w	r3, r3, #7
 8005abc:	60fb      	str	r3, [r7, #12]
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	685b      	ldr	r3, [r3, #4]
 8005ac2:	019a      	lsls	r2, r3, #6
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	691b      	ldr	r3, [r3, #16]
 8005ac8:	041b      	lsls	r3, r3, #16
 8005aca:	431a      	orrs	r2, r3
 8005acc:	693b      	ldr	r3, [r7, #16]
 8005ace:	061b      	lsls	r3, r3, #24
 8005ad0:	431a      	orrs	r2, r3
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	071b      	lsls	r3, r3, #28
 8005ad6:	4926      	ldr	r1, [pc, #152]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005ad8:	4313      	orrs	r3, r2
 8005ada:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	d011      	beq.n	8005b0e <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	685b      	ldr	r3, [r3, #4]
 8005aee:	019a      	lsls	r2, r3, #6
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	691b      	ldr	r3, [r3, #16]
 8005af4:	041b      	lsls	r3, r3, #16
 8005af6:	431a      	orrs	r2, r3
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	68db      	ldr	r3, [r3, #12]
 8005afc:	061b      	lsls	r3, r3, #24
 8005afe:	431a      	orrs	r2, r3
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	689b      	ldr	r3, [r3, #8]
 8005b04:	071b      	lsls	r3, r3, #28
 8005b06:	491a      	ldr	r1, [pc, #104]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b08:	4313      	orrs	r3, r2
 8005b0a:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005b0e:	4b18      	ldr	r3, [pc, #96]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	4a17      	ldr	r2, [pc, #92]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b14:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005b18:	6013      	str	r3, [r2, #0]
 8005b1a:	f7fd fe29 	bl	8003770 <HAL_GetTick>
 8005b1e:	6178      	str	r0, [r7, #20]
 8005b20:	e008      	b.n	8005b34 <HAL_RCCEx_PeriphCLKConfig+0x690>
 8005b22:	f7fd fe25 	bl	8003770 <HAL_GetTick>
 8005b26:	4602      	mov	r2, r0
 8005b28:	697b      	ldr	r3, [r7, #20]
 8005b2a:	1ad3      	subs	r3, r2, r3
 8005b2c:	2b64      	cmp	r3, #100	; 0x64
 8005b2e:	d901      	bls.n	8005b34 <HAL_RCCEx_PeriphCLKConfig+0x690>
 8005b30:	2303      	movs	r3, #3
 8005b32:	e0d8      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005b34:	4b0e      	ldr	r3, [pc, #56]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005b3c:	2b00      	cmp	r3, #0
 8005b3e:	d0f0      	beq.n	8005b22 <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8005b40:	69bb      	ldr	r3, [r7, #24]
 8005b42:	2b01      	cmp	r3, #1
 8005b44:	f040 80ce 	bne.w	8005ce4 <HAL_RCCEx_PeriphCLKConfig+0x840>
 8005b48:	4b09      	ldr	r3, [pc, #36]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	4a08      	ldr	r2, [pc, #32]	; (8005b70 <HAL_RCCEx_PeriphCLKConfig+0x6cc>)
 8005b4e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005b52:	6013      	str	r3, [r2, #0]
 8005b54:	f7fd fe0c 	bl	8003770 <HAL_GetTick>
 8005b58:	6178      	str	r0, [r7, #20]
 8005b5a:	e00b      	b.n	8005b74 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
 8005b5c:	f7fd fe08 	bl	8003770 <HAL_GetTick>
 8005b60:	4602      	mov	r2, r0
 8005b62:	697b      	ldr	r3, [r7, #20]
 8005b64:	1ad3      	subs	r3, r2, r3
 8005b66:	2b64      	cmp	r3, #100	; 0x64
 8005b68:	d904      	bls.n	8005b74 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
 8005b6a:	2303      	movs	r3, #3
 8005b6c:	e0bb      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005b6e:	bf00      	nop
 8005b70:	40023800 	.word	0x40023800
 8005b74:	4b5e      	ldr	r3, [pc, #376]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005b76:	681b      	ldr	r3, [r3, #0]
 8005b78:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005b7c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005b80:	d0ec      	beq.n	8005b5c <HAL_RCCEx_PeriphCLKConfig+0x6b8>
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d003      	beq.n	8005b96 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d009      	beq.n	8005baa <HAL_RCCEx_PeriphCLKConfig+0x706>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005b9e:	2b00      	cmp	r3, #0
 8005ba0:	d02e      	beq.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x75c>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d12a      	bne.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x75c>
 8005baa:	4b51      	ldr	r3, [pc, #324]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005bac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005bb0:	0c1b      	lsrs	r3, r3, #16
 8005bb2:	f003 0303 	and.w	r3, r3, #3
 8005bb6:	613b      	str	r3, [r7, #16]
 8005bb8:	4b4d      	ldr	r3, [pc, #308]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005bba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005bbe:	0f1b      	lsrs	r3, r3, #28
 8005bc0:	f003 0307 	and.w	r3, r3, #7
 8005bc4:	60fb      	str	r3, [r7, #12]
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	695b      	ldr	r3, [r3, #20]
 8005bca:	019a      	lsls	r2, r3, #6
 8005bcc:	693b      	ldr	r3, [r7, #16]
 8005bce:	041b      	lsls	r3, r3, #16
 8005bd0:	431a      	orrs	r2, r3
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	699b      	ldr	r3, [r3, #24]
 8005bd6:	061b      	lsls	r3, r3, #24
 8005bd8:	431a      	orrs	r2, r3
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	071b      	lsls	r3, r3, #28
 8005bde:	4944      	ldr	r1, [pc, #272]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005be0:	4313      	orrs	r3, r2
 8005be2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005be6:	4b42      	ldr	r3, [pc, #264]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005be8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005bec:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bf4:	3b01      	subs	r3, #1
 8005bf6:	021b      	lsls	r3, r3, #8
 8005bf8:	493d      	ldr	r1, [pc, #244]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005bfa:	4313      	orrs	r3, r2
 8005bfc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005c08:	2b00      	cmp	r3, #0
 8005c0a:	d022      	beq.n	8005c52 <HAL_RCCEx_PeriphCLKConfig+0x7ae>
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005c10:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005c14:	d11d      	bne.n	8005c52 <HAL_RCCEx_PeriphCLKConfig+0x7ae>
 8005c16:	4b36      	ldr	r3, [pc, #216]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c18:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c1c:	0e1b      	lsrs	r3, r3, #24
 8005c1e:	f003 030f 	and.w	r3, r3, #15
 8005c22:	613b      	str	r3, [r7, #16]
 8005c24:	4b32      	ldr	r3, [pc, #200]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c26:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c2a:	0f1b      	lsrs	r3, r3, #28
 8005c2c:	f003 0307 	and.w	r3, r3, #7
 8005c30:	60fb      	str	r3, [r7, #12]
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	695b      	ldr	r3, [r3, #20]
 8005c36:	019a      	lsls	r2, r3, #6
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	6a1b      	ldr	r3, [r3, #32]
 8005c3c:	041b      	lsls	r3, r3, #16
 8005c3e:	431a      	orrs	r2, r3
 8005c40:	693b      	ldr	r3, [r7, #16]
 8005c42:	061b      	lsls	r3, r3, #24
 8005c44:	431a      	orrs	r2, r3
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	071b      	lsls	r3, r3, #28
 8005c4a:	4929      	ldr	r1, [pc, #164]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c4c:	4313      	orrs	r3, r2
 8005c4e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	f003 0308 	and.w	r3, r3, #8
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d028      	beq.n	8005cb0 <HAL_RCCEx_PeriphCLKConfig+0x80c>
 8005c5e:	4b24      	ldr	r3, [pc, #144]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c64:	0e1b      	lsrs	r3, r3, #24
 8005c66:	f003 030f 	and.w	r3, r3, #15
 8005c6a:	613b      	str	r3, [r7, #16]
 8005c6c:	4b20      	ldr	r3, [pc, #128]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c72:	0c1b      	lsrs	r3, r3, #16
 8005c74:	f003 0303 	and.w	r3, r3, #3
 8005c78:	60fb      	str	r3, [r7, #12]
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	695b      	ldr	r3, [r3, #20]
 8005c7e:	019a      	lsls	r2, r3, #6
 8005c80:	68fb      	ldr	r3, [r7, #12]
 8005c82:	041b      	lsls	r3, r3, #16
 8005c84:	431a      	orrs	r2, r3
 8005c86:	693b      	ldr	r3, [r7, #16]
 8005c88:	061b      	lsls	r3, r3, #24
 8005c8a:	431a      	orrs	r2, r3
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	69db      	ldr	r3, [r3, #28]
 8005c90:	071b      	lsls	r3, r3, #28
 8005c92:	4917      	ldr	r1, [pc, #92]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c94:	4313      	orrs	r3, r2
 8005c96:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005c9a:	4b15      	ldr	r3, [pc, #84]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005c9c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005ca0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005ca8:	4911      	ldr	r1, [pc, #68]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005caa:	4313      	orrs	r3, r2
 8005cac:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005cb0:	4b0f      	ldr	r3, [pc, #60]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	4a0e      	ldr	r2, [pc, #56]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005cb6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005cba:	6013      	str	r3, [r2, #0]
 8005cbc:	f7fd fd58 	bl	8003770 <HAL_GetTick>
 8005cc0:	6178      	str	r0, [r7, #20]
 8005cc2:	e008      	b.n	8005cd6 <HAL_RCCEx_PeriphCLKConfig+0x832>
 8005cc4:	f7fd fd54 	bl	8003770 <HAL_GetTick>
 8005cc8:	4602      	mov	r2, r0
 8005cca:	697b      	ldr	r3, [r7, #20]
 8005ccc:	1ad3      	subs	r3, r2, r3
 8005cce:	2b64      	cmp	r3, #100	; 0x64
 8005cd0:	d901      	bls.n	8005cd6 <HAL_RCCEx_PeriphCLKConfig+0x832>
 8005cd2:	2303      	movs	r3, #3
 8005cd4:	e007      	b.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8005cd6:	4b06      	ldr	r3, [pc, #24]	; (8005cf0 <HAL_RCCEx_PeriphCLKConfig+0x84c>)
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005cde:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005ce2:	d1ef      	bne.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0x820>
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	4618      	mov	r0, r3
 8005ce8:	3720      	adds	r7, #32
 8005cea:	46bd      	mov	sp, r7
 8005cec:	bd80      	pop	{r7, pc}
 8005cee:	bf00      	nop
 8005cf0:	40023800 	.word	0x40023800

08005cf4 <HAL_TIM_Base_Init>:
 8005cf4:	b580      	push	{r7, lr}
 8005cf6:	b082      	sub	sp, #8
 8005cf8:	af00      	add	r7, sp, #0
 8005cfa:	6078      	str	r0, [r7, #4]
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d101      	bne.n	8005d06 <HAL_TIM_Base_Init+0x12>
 8005d02:	2301      	movs	r3, #1
 8005d04:	e049      	b.n	8005d9a <HAL_TIM_Base_Init+0xa6>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d0c:	b2db      	uxtb	r3, r3
 8005d0e:	2b00      	cmp	r3, #0
 8005d10:	d106      	bne.n	8005d20 <HAL_TIM_Base_Init+0x2c>
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	2200      	movs	r2, #0
 8005d16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d1a:	6878      	ldr	r0, [r7, #4]
 8005d1c:	f7fd fa80 	bl	8003220 <HAL_TIM_Base_MspInit>
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	2202      	movs	r2, #2
 8005d24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d28:	687b      	ldr	r3, [r7, #4]
 8005d2a:	681a      	ldr	r2, [r3, #0]
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	3304      	adds	r3, #4
 8005d30:	4619      	mov	r1, r3
 8005d32:	4610      	mov	r0, r2
 8005d34:	f000 fe2a 	bl	800698c <TIM_Base_SetConfig>
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	2201      	movs	r2, #1
 8005d3c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	2201      	movs	r2, #1
 8005d44:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	2201      	movs	r2, #1
 8005d4c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	2201      	movs	r2, #1
 8005d54:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	2201      	movs	r2, #1
 8005d5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	2201      	movs	r2, #1
 8005d64:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	2201      	movs	r2, #1
 8005d6c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	2201      	movs	r2, #1
 8005d74:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	2201      	movs	r2, #1
 8005d7c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	2201      	movs	r2, #1
 8005d84:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	2201      	movs	r2, #1
 8005d8c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	2201      	movs	r2, #1
 8005d94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d98:	2300      	movs	r3, #0
 8005d9a:	4618      	mov	r0, r3
 8005d9c:	3708      	adds	r7, #8
 8005d9e:	46bd      	mov	sp, r7
 8005da0:	bd80      	pop	{r7, pc}
	...

08005da4 <HAL_TIM_Base_Start_IT>:
 8005da4:	b480      	push	{r7}
 8005da6:	b085      	sub	sp, #20
 8005da8:	af00      	add	r7, sp, #0
 8005daa:	6078      	str	r0, [r7, #4]
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005db2:	b2db      	uxtb	r3, r3
 8005db4:	2b01      	cmp	r3, #1
 8005db6:	d001      	beq.n	8005dbc <HAL_TIM_Base_Start_IT+0x18>
 8005db8:	2301      	movs	r3, #1
 8005dba:	e054      	b.n	8005e66 <HAL_TIM_Base_Start_IT+0xc2>
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	2202      	movs	r2, #2
 8005dc0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	68da      	ldr	r2, [r3, #12]
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	f042 0201 	orr.w	r2, r2, #1
 8005dd2:	60da      	str	r2, [r3, #12]
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	4a26      	ldr	r2, [pc, #152]	; (8005e74 <HAL_TIM_Base_Start_IT+0xd0>)
 8005dda:	4293      	cmp	r3, r2
 8005ddc:	d022      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005de6:	d01d      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	4a22      	ldr	r2, [pc, #136]	; (8005e78 <HAL_TIM_Base_Start_IT+0xd4>)
 8005dee:	4293      	cmp	r3, r2
 8005df0:	d018      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	4a21      	ldr	r2, [pc, #132]	; (8005e7c <HAL_TIM_Base_Start_IT+0xd8>)
 8005df8:	4293      	cmp	r3, r2
 8005dfa:	d013      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	4a1f      	ldr	r2, [pc, #124]	; (8005e80 <HAL_TIM_Base_Start_IT+0xdc>)
 8005e02:	4293      	cmp	r3, r2
 8005e04:	d00e      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	4a1e      	ldr	r2, [pc, #120]	; (8005e84 <HAL_TIM_Base_Start_IT+0xe0>)
 8005e0c:	4293      	cmp	r3, r2
 8005e0e:	d009      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	4a1c      	ldr	r2, [pc, #112]	; (8005e88 <HAL_TIM_Base_Start_IT+0xe4>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d004      	beq.n	8005e24 <HAL_TIM_Base_Start_IT+0x80>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	4a1b      	ldr	r2, [pc, #108]	; (8005e8c <HAL_TIM_Base_Start_IT+0xe8>)
 8005e20:	4293      	cmp	r3, r2
 8005e22:	d115      	bne.n	8005e50 <HAL_TIM_Base_Start_IT+0xac>
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	689a      	ldr	r2, [r3, #8]
 8005e2a:	4b19      	ldr	r3, [pc, #100]	; (8005e90 <HAL_TIM_Base_Start_IT+0xec>)
 8005e2c:	4013      	ands	r3, r2
 8005e2e:	60fb      	str	r3, [r7, #12]
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	2b06      	cmp	r3, #6
 8005e34:	d015      	beq.n	8005e62 <HAL_TIM_Base_Start_IT+0xbe>
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005e3c:	d011      	beq.n	8005e62 <HAL_TIM_Base_Start_IT+0xbe>
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	681a      	ldr	r2, [r3, #0]
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	f042 0201 	orr.w	r2, r2, #1
 8005e4c:	601a      	str	r2, [r3, #0]
 8005e4e:	e008      	b.n	8005e62 <HAL_TIM_Base_Start_IT+0xbe>
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	681a      	ldr	r2, [r3, #0]
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	f042 0201 	orr.w	r2, r2, #1
 8005e5e:	601a      	str	r2, [r3, #0]
 8005e60:	e000      	b.n	8005e64 <HAL_TIM_Base_Start_IT+0xc0>
 8005e62:	bf00      	nop
 8005e64:	2300      	movs	r3, #0
 8005e66:	4618      	mov	r0, r3
 8005e68:	3714      	adds	r7, #20
 8005e6a:	46bd      	mov	sp, r7
 8005e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e70:	4770      	bx	lr
 8005e72:	bf00      	nop
 8005e74:	40010000 	.word	0x40010000
 8005e78:	40000400 	.word	0x40000400
 8005e7c:	40000800 	.word	0x40000800
 8005e80:	40000c00 	.word	0x40000c00
 8005e84:	40010400 	.word	0x40010400
 8005e88:	40014000 	.word	0x40014000
 8005e8c:	40001800 	.word	0x40001800
 8005e90:	00010007 	.word	0x00010007

08005e94 <HAL_TIM_Base_Stop_IT>:
 8005e94:	b480      	push	{r7}
 8005e96:	b083      	sub	sp, #12
 8005e98:	af00      	add	r7, sp, #0
 8005e9a:	6078      	str	r0, [r7, #4]
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	68da      	ldr	r2, [r3, #12]
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	f022 0201 	bic.w	r2, r2, #1
 8005eaa:	60da      	str	r2, [r3, #12]
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	6a1a      	ldr	r2, [r3, #32]
 8005eb2:	f241 1311 	movw	r3, #4369	; 0x1111
 8005eb6:	4013      	ands	r3, r2
 8005eb8:	2b00      	cmp	r3, #0
 8005eba:	d10f      	bne.n	8005edc <HAL_TIM_Base_Stop_IT+0x48>
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	681b      	ldr	r3, [r3, #0]
 8005ec0:	6a1a      	ldr	r2, [r3, #32]
 8005ec2:	f240 4344 	movw	r3, #1092	; 0x444
 8005ec6:	4013      	ands	r3, r2
 8005ec8:	2b00      	cmp	r3, #0
 8005eca:	d107      	bne.n	8005edc <HAL_TIM_Base_Stop_IT+0x48>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	681a      	ldr	r2, [r3, #0]
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	f022 0201 	bic.w	r2, r2, #1
 8005eda:	601a      	str	r2, [r3, #0]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	2201      	movs	r2, #1
 8005ee0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ee4:	2300      	movs	r3, #0
 8005ee6:	4618      	mov	r0, r3
 8005ee8:	370c      	adds	r7, #12
 8005eea:	46bd      	mov	sp, r7
 8005eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ef0:	4770      	bx	lr

08005ef2 <HAL_TIM_PWM_Init>:
 8005ef2:	b580      	push	{r7, lr}
 8005ef4:	b082      	sub	sp, #8
 8005ef6:	af00      	add	r7, sp, #0
 8005ef8:	6078      	str	r0, [r7, #4]
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	2b00      	cmp	r3, #0
 8005efe:	d101      	bne.n	8005f04 <HAL_TIM_PWM_Init+0x12>
 8005f00:	2301      	movs	r3, #1
 8005f02:	e049      	b.n	8005f98 <HAL_TIM_PWM_Init+0xa6>
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005f0a:	b2db      	uxtb	r3, r3
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d106      	bne.n	8005f1e <HAL_TIM_PWM_Init+0x2c>
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	2200      	movs	r2, #0
 8005f14:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005f18:	6878      	ldr	r0, [r7, #4]
 8005f1a:	f000 f841 	bl	8005fa0 <HAL_TIM_PWM_MspInit>
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	2202      	movs	r2, #2
 8005f22:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	681a      	ldr	r2, [r3, #0]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	3304      	adds	r3, #4
 8005f2e:	4619      	mov	r1, r3
 8005f30:	4610      	mov	r0, r2
 8005f32:	f000 fd2b 	bl	800698c <TIM_Base_SetConfig>
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	2201      	movs	r2, #1
 8005f3a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	2201      	movs	r2, #1
 8005f42:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	2201      	movs	r2, #1
 8005f4a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	2201      	movs	r2, #1
 8005f52:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	2201      	movs	r2, #1
 8005f5a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	2201      	movs	r2, #1
 8005f62:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	2201      	movs	r2, #1
 8005f6a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	2201      	movs	r2, #1
 8005f72:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	2201      	movs	r2, #1
 8005f7a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	2201      	movs	r2, #1
 8005f82:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	2201      	movs	r2, #1
 8005f8a:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	2201      	movs	r2, #1
 8005f92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f96:	2300      	movs	r3, #0
 8005f98:	4618      	mov	r0, r3
 8005f9a:	3708      	adds	r7, #8
 8005f9c:	46bd      	mov	sp, r7
 8005f9e:	bd80      	pop	{r7, pc}

08005fa0 <HAL_TIM_PWM_MspInit>:
 8005fa0:	b480      	push	{r7}
 8005fa2:	b083      	sub	sp, #12
 8005fa4:	af00      	add	r7, sp, #0
 8005fa6:	6078      	str	r0, [r7, #4]
 8005fa8:	bf00      	nop
 8005faa:	370c      	adds	r7, #12
 8005fac:	46bd      	mov	sp, r7
 8005fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fb2:	4770      	bx	lr

08005fb4 <HAL_TIM_PWM_Start>:
 8005fb4:	b580      	push	{r7, lr}
 8005fb6:	b084      	sub	sp, #16
 8005fb8:	af00      	add	r7, sp, #0
 8005fba:	6078      	str	r0, [r7, #4]
 8005fbc:	6039      	str	r1, [r7, #0]
 8005fbe:	683b      	ldr	r3, [r7, #0]
 8005fc0:	2b00      	cmp	r3, #0
 8005fc2:	d109      	bne.n	8005fd8 <HAL_TIM_PWM_Start+0x24>
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005fca:	b2db      	uxtb	r3, r3
 8005fcc:	2b01      	cmp	r3, #1
 8005fce:	bf14      	ite	ne
 8005fd0:	2301      	movne	r3, #1
 8005fd2:	2300      	moveq	r3, #0
 8005fd4:	b2db      	uxtb	r3, r3
 8005fd6:	e03c      	b.n	8006052 <HAL_TIM_PWM_Start+0x9e>
 8005fd8:	683b      	ldr	r3, [r7, #0]
 8005fda:	2b04      	cmp	r3, #4
 8005fdc:	d109      	bne.n	8005ff2 <HAL_TIM_PWM_Start+0x3e>
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005fe4:	b2db      	uxtb	r3, r3
 8005fe6:	2b01      	cmp	r3, #1
 8005fe8:	bf14      	ite	ne
 8005fea:	2301      	movne	r3, #1
 8005fec:	2300      	moveq	r3, #0
 8005fee:	b2db      	uxtb	r3, r3
 8005ff0:	e02f      	b.n	8006052 <HAL_TIM_PWM_Start+0x9e>
 8005ff2:	683b      	ldr	r3, [r7, #0]
 8005ff4:	2b08      	cmp	r3, #8
 8005ff6:	d109      	bne.n	800600c <HAL_TIM_PWM_Start+0x58>
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8005ffe:	b2db      	uxtb	r3, r3
 8006000:	2b01      	cmp	r3, #1
 8006002:	bf14      	ite	ne
 8006004:	2301      	movne	r3, #1
 8006006:	2300      	moveq	r3, #0
 8006008:	b2db      	uxtb	r3, r3
 800600a:	e022      	b.n	8006052 <HAL_TIM_PWM_Start+0x9e>
 800600c:	683b      	ldr	r3, [r7, #0]
 800600e:	2b0c      	cmp	r3, #12
 8006010:	d109      	bne.n	8006026 <HAL_TIM_PWM_Start+0x72>
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006018:	b2db      	uxtb	r3, r3
 800601a:	2b01      	cmp	r3, #1
 800601c:	bf14      	ite	ne
 800601e:	2301      	movne	r3, #1
 8006020:	2300      	moveq	r3, #0
 8006022:	b2db      	uxtb	r3, r3
 8006024:	e015      	b.n	8006052 <HAL_TIM_PWM_Start+0x9e>
 8006026:	683b      	ldr	r3, [r7, #0]
 8006028:	2b10      	cmp	r3, #16
 800602a:	d109      	bne.n	8006040 <HAL_TIM_PWM_Start+0x8c>
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8006032:	b2db      	uxtb	r3, r3
 8006034:	2b01      	cmp	r3, #1
 8006036:	bf14      	ite	ne
 8006038:	2301      	movne	r3, #1
 800603a:	2300      	moveq	r3, #0
 800603c:	b2db      	uxtb	r3, r3
 800603e:	e008      	b.n	8006052 <HAL_TIM_PWM_Start+0x9e>
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8006046:	b2db      	uxtb	r3, r3
 8006048:	2b01      	cmp	r3, #1
 800604a:	bf14      	ite	ne
 800604c:	2301      	movne	r3, #1
 800604e:	2300      	moveq	r3, #0
 8006050:	b2db      	uxtb	r3, r3
 8006052:	2b00      	cmp	r3, #0
 8006054:	d001      	beq.n	800605a <HAL_TIM_PWM_Start+0xa6>
 8006056:	2301      	movs	r3, #1
 8006058:	e092      	b.n	8006180 <HAL_TIM_PWM_Start+0x1cc>
 800605a:	683b      	ldr	r3, [r7, #0]
 800605c:	2b00      	cmp	r3, #0
 800605e:	d104      	bne.n	800606a <HAL_TIM_PWM_Start+0xb6>
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	2202      	movs	r2, #2
 8006064:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006068:	e023      	b.n	80060b2 <HAL_TIM_PWM_Start+0xfe>
 800606a:	683b      	ldr	r3, [r7, #0]
 800606c:	2b04      	cmp	r3, #4
 800606e:	d104      	bne.n	800607a <HAL_TIM_PWM_Start+0xc6>
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	2202      	movs	r2, #2
 8006074:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006078:	e01b      	b.n	80060b2 <HAL_TIM_PWM_Start+0xfe>
 800607a:	683b      	ldr	r3, [r7, #0]
 800607c:	2b08      	cmp	r3, #8
 800607e:	d104      	bne.n	800608a <HAL_TIM_PWM_Start+0xd6>
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	2202      	movs	r2, #2
 8006084:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006088:	e013      	b.n	80060b2 <HAL_TIM_PWM_Start+0xfe>
 800608a:	683b      	ldr	r3, [r7, #0]
 800608c:	2b0c      	cmp	r3, #12
 800608e:	d104      	bne.n	800609a <HAL_TIM_PWM_Start+0xe6>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	2202      	movs	r2, #2
 8006094:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006098:	e00b      	b.n	80060b2 <HAL_TIM_PWM_Start+0xfe>
 800609a:	683b      	ldr	r3, [r7, #0]
 800609c:	2b10      	cmp	r3, #16
 800609e:	d104      	bne.n	80060aa <HAL_TIM_PWM_Start+0xf6>
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	2202      	movs	r2, #2
 80060a4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80060a8:	e003      	b.n	80060b2 <HAL_TIM_PWM_Start+0xfe>
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	2202      	movs	r2, #2
 80060ae:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	2201      	movs	r2, #1
 80060b8:	6839      	ldr	r1, [r7, #0]
 80060ba:	4618      	mov	r0, r3
 80060bc:	f001 f892 	bl	80071e4 <TIM_CCxChannelCmd>
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	4a30      	ldr	r2, [pc, #192]	; (8006188 <HAL_TIM_PWM_Start+0x1d4>)
 80060c6:	4293      	cmp	r3, r2
 80060c8:	d004      	beq.n	80060d4 <HAL_TIM_PWM_Start+0x120>
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	4a2f      	ldr	r2, [pc, #188]	; (800618c <HAL_TIM_PWM_Start+0x1d8>)
 80060d0:	4293      	cmp	r3, r2
 80060d2:	d101      	bne.n	80060d8 <HAL_TIM_PWM_Start+0x124>
 80060d4:	2301      	movs	r3, #1
 80060d6:	e000      	b.n	80060da <HAL_TIM_PWM_Start+0x126>
 80060d8:	2300      	movs	r3, #0
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d007      	beq.n	80060ee <HAL_TIM_PWM_Start+0x13a>
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80060ec:	645a      	str	r2, [r3, #68]	; 0x44
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	4a25      	ldr	r2, [pc, #148]	; (8006188 <HAL_TIM_PWM_Start+0x1d4>)
 80060f4:	4293      	cmp	r3, r2
 80060f6:	d022      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 80060f8:	687b      	ldr	r3, [r7, #4]
 80060fa:	681b      	ldr	r3, [r3, #0]
 80060fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006100:	d01d      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	4a22      	ldr	r2, [pc, #136]	; (8006190 <HAL_TIM_PWM_Start+0x1dc>)
 8006108:	4293      	cmp	r3, r2
 800610a:	d018      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	4a20      	ldr	r2, [pc, #128]	; (8006194 <HAL_TIM_PWM_Start+0x1e0>)
 8006112:	4293      	cmp	r3, r2
 8006114:	d013      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	4a1f      	ldr	r2, [pc, #124]	; (8006198 <HAL_TIM_PWM_Start+0x1e4>)
 800611c:	4293      	cmp	r3, r2
 800611e:	d00e      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	4a19      	ldr	r2, [pc, #100]	; (800618c <HAL_TIM_PWM_Start+0x1d8>)
 8006126:	4293      	cmp	r3, r2
 8006128:	d009      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	681b      	ldr	r3, [r3, #0]
 800612e:	4a1b      	ldr	r2, [pc, #108]	; (800619c <HAL_TIM_PWM_Start+0x1e8>)
 8006130:	4293      	cmp	r3, r2
 8006132:	d004      	beq.n	800613e <HAL_TIM_PWM_Start+0x18a>
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	4a19      	ldr	r2, [pc, #100]	; (80061a0 <HAL_TIM_PWM_Start+0x1ec>)
 800613a:	4293      	cmp	r3, r2
 800613c:	d115      	bne.n	800616a <HAL_TIM_PWM_Start+0x1b6>
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	689a      	ldr	r2, [r3, #8]
 8006144:	4b17      	ldr	r3, [pc, #92]	; (80061a4 <HAL_TIM_PWM_Start+0x1f0>)
 8006146:	4013      	ands	r3, r2
 8006148:	60fb      	str	r3, [r7, #12]
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	2b06      	cmp	r3, #6
 800614e:	d015      	beq.n	800617c <HAL_TIM_PWM_Start+0x1c8>
 8006150:	68fb      	ldr	r3, [r7, #12]
 8006152:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006156:	d011      	beq.n	800617c <HAL_TIM_PWM_Start+0x1c8>
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	681a      	ldr	r2, [r3, #0]
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	f042 0201 	orr.w	r2, r2, #1
 8006166:	601a      	str	r2, [r3, #0]
 8006168:	e008      	b.n	800617c <HAL_TIM_PWM_Start+0x1c8>
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	681a      	ldr	r2, [r3, #0]
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	681b      	ldr	r3, [r3, #0]
 8006174:	f042 0201 	orr.w	r2, r2, #1
 8006178:	601a      	str	r2, [r3, #0]
 800617a:	e000      	b.n	800617e <HAL_TIM_PWM_Start+0x1ca>
 800617c:	bf00      	nop
 800617e:	2300      	movs	r3, #0
 8006180:	4618      	mov	r0, r3
 8006182:	3710      	adds	r7, #16
 8006184:	46bd      	mov	sp, r7
 8006186:	bd80      	pop	{r7, pc}
 8006188:	40010000 	.word	0x40010000
 800618c:	40010400 	.word	0x40010400
 8006190:	40000400 	.word	0x40000400
 8006194:	40000800 	.word	0x40000800
 8006198:	40000c00 	.word	0x40000c00
 800619c:	40014000 	.word	0x40014000
 80061a0:	40001800 	.word	0x40001800
 80061a4:	00010007 	.word	0x00010007

080061a8 <HAL_TIM_PWM_Stop>:
 80061a8:	b580      	push	{r7, lr}
 80061aa:	b082      	sub	sp, #8
 80061ac:	af00      	add	r7, sp, #0
 80061ae:	6078      	str	r0, [r7, #4]
 80061b0:	6039      	str	r1, [r7, #0]
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	2200      	movs	r2, #0
 80061b8:	6839      	ldr	r1, [r7, #0]
 80061ba:	4618      	mov	r0, r3
 80061bc:	f001 f812 	bl	80071e4 <TIM_CCxChannelCmd>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	4a36      	ldr	r2, [pc, #216]	; (80062a0 <HAL_TIM_PWM_Stop+0xf8>)
 80061c6:	4293      	cmp	r3, r2
 80061c8:	d004      	beq.n	80061d4 <HAL_TIM_PWM_Stop+0x2c>
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	4a35      	ldr	r2, [pc, #212]	; (80062a4 <HAL_TIM_PWM_Stop+0xfc>)
 80061d0:	4293      	cmp	r3, r2
 80061d2:	d101      	bne.n	80061d8 <HAL_TIM_PWM_Stop+0x30>
 80061d4:	2301      	movs	r3, #1
 80061d6:	e000      	b.n	80061da <HAL_TIM_PWM_Stop+0x32>
 80061d8:	2300      	movs	r3, #0
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d017      	beq.n	800620e <HAL_TIM_PWM_Stop+0x66>
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	6a1a      	ldr	r2, [r3, #32]
 80061e4:	f241 1311 	movw	r3, #4369	; 0x1111
 80061e8:	4013      	ands	r3, r2
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d10f      	bne.n	800620e <HAL_TIM_PWM_Stop+0x66>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	6a1a      	ldr	r2, [r3, #32]
 80061f4:	f240 4344 	movw	r3, #1092	; 0x444
 80061f8:	4013      	ands	r3, r2
 80061fa:	2b00      	cmp	r3, #0
 80061fc:	d107      	bne.n	800620e <HAL_TIM_PWM_Stop+0x66>
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	681b      	ldr	r3, [r3, #0]
 8006202:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800620c:	645a      	str	r2, [r3, #68]	; 0x44
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	6a1a      	ldr	r2, [r3, #32]
 8006214:	f241 1311 	movw	r3, #4369	; 0x1111
 8006218:	4013      	ands	r3, r2
 800621a:	2b00      	cmp	r3, #0
 800621c:	d10f      	bne.n	800623e <HAL_TIM_PWM_Stop+0x96>
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	6a1a      	ldr	r2, [r3, #32]
 8006224:	f240 4344 	movw	r3, #1092	; 0x444
 8006228:	4013      	ands	r3, r2
 800622a:	2b00      	cmp	r3, #0
 800622c:	d107      	bne.n	800623e <HAL_TIM_PWM_Stop+0x96>
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	681a      	ldr	r2, [r3, #0]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f022 0201 	bic.w	r2, r2, #1
 800623c:	601a      	str	r2, [r3, #0]
 800623e:	683b      	ldr	r3, [r7, #0]
 8006240:	2b00      	cmp	r3, #0
 8006242:	d104      	bne.n	800624e <HAL_TIM_PWM_Stop+0xa6>
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	2201      	movs	r2, #1
 8006248:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800624c:	e023      	b.n	8006296 <HAL_TIM_PWM_Stop+0xee>
 800624e:	683b      	ldr	r3, [r7, #0]
 8006250:	2b04      	cmp	r3, #4
 8006252:	d104      	bne.n	800625e <HAL_TIM_PWM_Stop+0xb6>
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2201      	movs	r2, #1
 8006258:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800625c:	e01b      	b.n	8006296 <HAL_TIM_PWM_Stop+0xee>
 800625e:	683b      	ldr	r3, [r7, #0]
 8006260:	2b08      	cmp	r3, #8
 8006262:	d104      	bne.n	800626e <HAL_TIM_PWM_Stop+0xc6>
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	2201      	movs	r2, #1
 8006268:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800626c:	e013      	b.n	8006296 <HAL_TIM_PWM_Stop+0xee>
 800626e:	683b      	ldr	r3, [r7, #0]
 8006270:	2b0c      	cmp	r3, #12
 8006272:	d104      	bne.n	800627e <HAL_TIM_PWM_Stop+0xd6>
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	2201      	movs	r2, #1
 8006278:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800627c:	e00b      	b.n	8006296 <HAL_TIM_PWM_Stop+0xee>
 800627e:	683b      	ldr	r3, [r7, #0]
 8006280:	2b10      	cmp	r3, #16
 8006282:	d104      	bne.n	800628e <HAL_TIM_PWM_Stop+0xe6>
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	2201      	movs	r2, #1
 8006288:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800628c:	e003      	b.n	8006296 <HAL_TIM_PWM_Stop+0xee>
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	2201      	movs	r2, #1
 8006292:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006296:	2300      	movs	r3, #0
 8006298:	4618      	mov	r0, r3
 800629a:	3708      	adds	r7, #8
 800629c:	46bd      	mov	sp, r7
 800629e:	bd80      	pop	{r7, pc}
 80062a0:	40010000 	.word	0x40010000
 80062a4:	40010400 	.word	0x40010400

080062a8 <HAL_TIM_IRQHandler>:
 80062a8:	b580      	push	{r7, lr}
 80062aa:	b082      	sub	sp, #8
 80062ac:	af00      	add	r7, sp, #0
 80062ae:	6078      	str	r0, [r7, #4]
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	691b      	ldr	r3, [r3, #16]
 80062b6:	f003 0302 	and.w	r3, r3, #2
 80062ba:	2b02      	cmp	r3, #2
 80062bc:	d122      	bne.n	8006304 <HAL_TIM_IRQHandler+0x5c>
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	68db      	ldr	r3, [r3, #12]
 80062c4:	f003 0302 	and.w	r3, r3, #2
 80062c8:	2b02      	cmp	r3, #2
 80062ca:	d11b      	bne.n	8006304 <HAL_TIM_IRQHandler+0x5c>
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	f06f 0202 	mvn.w	r2, #2
 80062d4:	611a      	str	r2, [r3, #16]
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	2201      	movs	r2, #1
 80062da:	771a      	strb	r2, [r3, #28]
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	699b      	ldr	r3, [r3, #24]
 80062e2:	f003 0303 	and.w	r3, r3, #3
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d003      	beq.n	80062f2 <HAL_TIM_IRQHandler+0x4a>
 80062ea:	6878      	ldr	r0, [r7, #4]
 80062ec:	f000 fb30 	bl	8006950 <HAL_TIM_IC_CaptureCallback>
 80062f0:	e005      	b.n	80062fe <HAL_TIM_IRQHandler+0x56>
 80062f2:	6878      	ldr	r0, [r7, #4]
 80062f4:	f000 fb22 	bl	800693c <HAL_TIM_OC_DelayElapsedCallback>
 80062f8:	6878      	ldr	r0, [r7, #4]
 80062fa:	f000 fb33 	bl	8006964 <HAL_TIM_PWM_PulseFinishedCallback>
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	2200      	movs	r2, #0
 8006302:	771a      	strb	r2, [r3, #28]
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	681b      	ldr	r3, [r3, #0]
 8006308:	691b      	ldr	r3, [r3, #16]
 800630a:	f003 0304 	and.w	r3, r3, #4
 800630e:	2b04      	cmp	r3, #4
 8006310:	d122      	bne.n	8006358 <HAL_TIM_IRQHandler+0xb0>
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	68db      	ldr	r3, [r3, #12]
 8006318:	f003 0304 	and.w	r3, r3, #4
 800631c:	2b04      	cmp	r3, #4
 800631e:	d11b      	bne.n	8006358 <HAL_TIM_IRQHandler+0xb0>
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	f06f 0204 	mvn.w	r2, #4
 8006328:	611a      	str	r2, [r3, #16]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	2202      	movs	r2, #2
 800632e:	771a      	strb	r2, [r3, #28]
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	699b      	ldr	r3, [r3, #24]
 8006336:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800633a:	2b00      	cmp	r3, #0
 800633c:	d003      	beq.n	8006346 <HAL_TIM_IRQHandler+0x9e>
 800633e:	6878      	ldr	r0, [r7, #4]
 8006340:	f000 fb06 	bl	8006950 <HAL_TIM_IC_CaptureCallback>
 8006344:	e005      	b.n	8006352 <HAL_TIM_IRQHandler+0xaa>
 8006346:	6878      	ldr	r0, [r7, #4]
 8006348:	f000 faf8 	bl	800693c <HAL_TIM_OC_DelayElapsedCallback>
 800634c:	6878      	ldr	r0, [r7, #4]
 800634e:	f000 fb09 	bl	8006964 <HAL_TIM_PWM_PulseFinishedCallback>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	2200      	movs	r2, #0
 8006356:	771a      	strb	r2, [r3, #28]
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	691b      	ldr	r3, [r3, #16]
 800635e:	f003 0308 	and.w	r3, r3, #8
 8006362:	2b08      	cmp	r3, #8
 8006364:	d122      	bne.n	80063ac <HAL_TIM_IRQHandler+0x104>
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	681b      	ldr	r3, [r3, #0]
 800636a:	68db      	ldr	r3, [r3, #12]
 800636c:	f003 0308 	and.w	r3, r3, #8
 8006370:	2b08      	cmp	r3, #8
 8006372:	d11b      	bne.n	80063ac <HAL_TIM_IRQHandler+0x104>
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	681b      	ldr	r3, [r3, #0]
 8006378:	f06f 0208 	mvn.w	r2, #8
 800637c:	611a      	str	r2, [r3, #16]
 800637e:	687b      	ldr	r3, [r7, #4]
 8006380:	2204      	movs	r2, #4
 8006382:	771a      	strb	r2, [r3, #28]
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	681b      	ldr	r3, [r3, #0]
 8006388:	69db      	ldr	r3, [r3, #28]
 800638a:	f003 0303 	and.w	r3, r3, #3
 800638e:	2b00      	cmp	r3, #0
 8006390:	d003      	beq.n	800639a <HAL_TIM_IRQHandler+0xf2>
 8006392:	6878      	ldr	r0, [r7, #4]
 8006394:	f000 fadc 	bl	8006950 <HAL_TIM_IC_CaptureCallback>
 8006398:	e005      	b.n	80063a6 <HAL_TIM_IRQHandler+0xfe>
 800639a:	6878      	ldr	r0, [r7, #4]
 800639c:	f000 face 	bl	800693c <HAL_TIM_OC_DelayElapsedCallback>
 80063a0:	6878      	ldr	r0, [r7, #4]
 80063a2:	f000 fadf 	bl	8006964 <HAL_TIM_PWM_PulseFinishedCallback>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	2200      	movs	r2, #0
 80063aa:	771a      	strb	r2, [r3, #28]
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	691b      	ldr	r3, [r3, #16]
 80063b2:	f003 0310 	and.w	r3, r3, #16
 80063b6:	2b10      	cmp	r3, #16
 80063b8:	d122      	bne.n	8006400 <HAL_TIM_IRQHandler+0x158>
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	681b      	ldr	r3, [r3, #0]
 80063be:	68db      	ldr	r3, [r3, #12]
 80063c0:	f003 0310 	and.w	r3, r3, #16
 80063c4:	2b10      	cmp	r3, #16
 80063c6:	d11b      	bne.n	8006400 <HAL_TIM_IRQHandler+0x158>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	f06f 0210 	mvn.w	r2, #16
 80063d0:	611a      	str	r2, [r3, #16]
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	2208      	movs	r2, #8
 80063d6:	771a      	strb	r2, [r3, #28]
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	69db      	ldr	r3, [r3, #28]
 80063de:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80063e2:	2b00      	cmp	r3, #0
 80063e4:	d003      	beq.n	80063ee <HAL_TIM_IRQHandler+0x146>
 80063e6:	6878      	ldr	r0, [r7, #4]
 80063e8:	f000 fab2 	bl	8006950 <HAL_TIM_IC_CaptureCallback>
 80063ec:	e005      	b.n	80063fa <HAL_TIM_IRQHandler+0x152>
 80063ee:	6878      	ldr	r0, [r7, #4]
 80063f0:	f000 faa4 	bl	800693c <HAL_TIM_OC_DelayElapsedCallback>
 80063f4:	6878      	ldr	r0, [r7, #4]
 80063f6:	f000 fab5 	bl	8006964 <HAL_TIM_PWM_PulseFinishedCallback>
 80063fa:	687b      	ldr	r3, [r7, #4]
 80063fc:	2200      	movs	r2, #0
 80063fe:	771a      	strb	r2, [r3, #28]
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	691b      	ldr	r3, [r3, #16]
 8006406:	f003 0301 	and.w	r3, r3, #1
 800640a:	2b01      	cmp	r3, #1
 800640c:	d10e      	bne.n	800642c <HAL_TIM_IRQHandler+0x184>
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	68db      	ldr	r3, [r3, #12]
 8006414:	f003 0301 	and.w	r3, r3, #1
 8006418:	2b01      	cmp	r3, #1
 800641a:	d107      	bne.n	800642c <HAL_TIM_IRQHandler+0x184>
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	f06f 0201 	mvn.w	r2, #1
 8006424:	611a      	str	r2, [r3, #16]
 8006426:	6878      	ldr	r0, [r7, #4]
 8006428:	f000 fa7e 	bl	8006928 <HAL_TIM_PeriodElapsedCallback>
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	691b      	ldr	r3, [r3, #16]
 8006432:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006436:	2b80      	cmp	r3, #128	; 0x80
 8006438:	d10e      	bne.n	8006458 <HAL_TIM_IRQHandler+0x1b0>
 800643a:	687b      	ldr	r3, [r7, #4]
 800643c:	681b      	ldr	r3, [r3, #0]
 800643e:	68db      	ldr	r3, [r3, #12]
 8006440:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006444:	2b80      	cmp	r3, #128	; 0x80
 8006446:	d107      	bne.n	8006458 <HAL_TIM_IRQHandler+0x1b0>
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006450:	611a      	str	r2, [r3, #16]
 8006452:	6878      	ldr	r0, [r7, #4]
 8006454:	f000 ff84 	bl	8007360 <HAL_TIMEx_BreakCallback>
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	681b      	ldr	r3, [r3, #0]
 800645c:	691b      	ldr	r3, [r3, #16]
 800645e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006462:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006466:	d10e      	bne.n	8006486 <HAL_TIM_IRQHandler+0x1de>
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	68db      	ldr	r3, [r3, #12]
 800646e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006472:	2b80      	cmp	r3, #128	; 0x80
 8006474:	d107      	bne.n	8006486 <HAL_TIM_IRQHandler+0x1de>
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800647e:	611a      	str	r2, [r3, #16]
 8006480:	6878      	ldr	r0, [r7, #4]
 8006482:	f000 ff77 	bl	8007374 <HAL_TIMEx_Break2Callback>
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	691b      	ldr	r3, [r3, #16]
 800648c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006490:	2b40      	cmp	r3, #64	; 0x40
 8006492:	d10e      	bne.n	80064b2 <HAL_TIM_IRQHandler+0x20a>
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	681b      	ldr	r3, [r3, #0]
 8006498:	68db      	ldr	r3, [r3, #12]
 800649a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800649e:	2b40      	cmp	r3, #64	; 0x40
 80064a0:	d107      	bne.n	80064b2 <HAL_TIM_IRQHandler+0x20a>
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80064aa:	611a      	str	r2, [r3, #16]
 80064ac:	6878      	ldr	r0, [r7, #4]
 80064ae:	f000 fa63 	bl	8006978 <HAL_TIM_TriggerCallback>
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	681b      	ldr	r3, [r3, #0]
 80064b6:	691b      	ldr	r3, [r3, #16]
 80064b8:	f003 0320 	and.w	r3, r3, #32
 80064bc:	2b20      	cmp	r3, #32
 80064be:	d10e      	bne.n	80064de <HAL_TIM_IRQHandler+0x236>
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	68db      	ldr	r3, [r3, #12]
 80064c6:	f003 0320 	and.w	r3, r3, #32
 80064ca:	2b20      	cmp	r3, #32
 80064cc:	d107      	bne.n	80064de <HAL_TIM_IRQHandler+0x236>
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	681b      	ldr	r3, [r3, #0]
 80064d2:	f06f 0220 	mvn.w	r2, #32
 80064d6:	611a      	str	r2, [r3, #16]
 80064d8:	6878      	ldr	r0, [r7, #4]
 80064da:	f000 ff37 	bl	800734c <HAL_TIMEx_CommutCallback>
 80064de:	bf00      	nop
 80064e0:	3708      	adds	r7, #8
 80064e2:	46bd      	mov	sp, r7
 80064e4:	bd80      	pop	{r7, pc}
	...

080064e8 <HAL_TIM_PWM_ConfigChannel>:
 80064e8:	b580      	push	{r7, lr}
 80064ea:	b086      	sub	sp, #24
 80064ec:	af00      	add	r7, sp, #0
 80064ee:	60f8      	str	r0, [r7, #12]
 80064f0:	60b9      	str	r1, [r7, #8]
 80064f2:	607a      	str	r2, [r7, #4]
 80064f4:	2300      	movs	r3, #0
 80064f6:	75fb      	strb	r3, [r7, #23]
 80064f8:	68fb      	ldr	r3, [r7, #12]
 80064fa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80064fe:	2b01      	cmp	r3, #1
 8006500:	d101      	bne.n	8006506 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006502:	2302      	movs	r3, #2
 8006504:	e0ff      	b.n	8006706 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	2201      	movs	r2, #1
 800650a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	2b14      	cmp	r3, #20
 8006512:	f200 80f0 	bhi.w	80066f6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8006516:	a201      	add	r2, pc, #4	; (adr r2, 800651c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006518:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800651c:	08006571 	.word	0x08006571
 8006520:	080066f7 	.word	0x080066f7
 8006524:	080066f7 	.word	0x080066f7
 8006528:	080066f7 	.word	0x080066f7
 800652c:	080065b1 	.word	0x080065b1
 8006530:	080066f7 	.word	0x080066f7
 8006534:	080066f7 	.word	0x080066f7
 8006538:	080066f7 	.word	0x080066f7
 800653c:	080065f3 	.word	0x080065f3
 8006540:	080066f7 	.word	0x080066f7
 8006544:	080066f7 	.word	0x080066f7
 8006548:	080066f7 	.word	0x080066f7
 800654c:	08006633 	.word	0x08006633
 8006550:	080066f7 	.word	0x080066f7
 8006554:	080066f7 	.word	0x080066f7
 8006558:	080066f7 	.word	0x080066f7
 800655c:	08006675 	.word	0x08006675
 8006560:	080066f7 	.word	0x080066f7
 8006564:	080066f7 	.word	0x080066f7
 8006568:	080066f7 	.word	0x080066f7
 800656c:	080066b5 	.word	0x080066b5
 8006570:	68fb      	ldr	r3, [r7, #12]
 8006572:	681b      	ldr	r3, [r3, #0]
 8006574:	68b9      	ldr	r1, [r7, #8]
 8006576:	4618      	mov	r0, r3
 8006578:	f000 faa8 	bl	8006acc <TIM_OC1_SetConfig>
 800657c:	68fb      	ldr	r3, [r7, #12]
 800657e:	681b      	ldr	r3, [r3, #0]
 8006580:	699a      	ldr	r2, [r3, #24]
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	f042 0208 	orr.w	r2, r2, #8
 800658a:	619a      	str	r2, [r3, #24]
 800658c:	68fb      	ldr	r3, [r7, #12]
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	699a      	ldr	r2, [r3, #24]
 8006592:	68fb      	ldr	r3, [r7, #12]
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	f022 0204 	bic.w	r2, r2, #4
 800659a:	619a      	str	r2, [r3, #24]
 800659c:	68fb      	ldr	r3, [r7, #12]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	6999      	ldr	r1, [r3, #24]
 80065a2:	68bb      	ldr	r3, [r7, #8]
 80065a4:	691a      	ldr	r2, [r3, #16]
 80065a6:	68fb      	ldr	r3, [r7, #12]
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	430a      	orrs	r2, r1
 80065ac:	619a      	str	r2, [r3, #24]
 80065ae:	e0a5      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80065b0:	68fb      	ldr	r3, [r7, #12]
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	68b9      	ldr	r1, [r7, #8]
 80065b6:	4618      	mov	r0, r3
 80065b8:	f000 fafa 	bl	8006bb0 <TIM_OC2_SetConfig>
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	699a      	ldr	r2, [r3, #24]
 80065c2:	68fb      	ldr	r3, [r7, #12]
 80065c4:	681b      	ldr	r3, [r3, #0]
 80065c6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80065ca:	619a      	str	r2, [r3, #24]
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	699a      	ldr	r2, [r3, #24]
 80065d2:	68fb      	ldr	r3, [r7, #12]
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80065da:	619a      	str	r2, [r3, #24]
 80065dc:	68fb      	ldr	r3, [r7, #12]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	6999      	ldr	r1, [r3, #24]
 80065e2:	68bb      	ldr	r3, [r7, #8]
 80065e4:	691b      	ldr	r3, [r3, #16]
 80065e6:	021a      	lsls	r2, r3, #8
 80065e8:	68fb      	ldr	r3, [r7, #12]
 80065ea:	681b      	ldr	r3, [r3, #0]
 80065ec:	430a      	orrs	r2, r1
 80065ee:	619a      	str	r2, [r3, #24]
 80065f0:	e084      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80065f2:	68fb      	ldr	r3, [r7, #12]
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	68b9      	ldr	r1, [r7, #8]
 80065f8:	4618      	mov	r0, r3
 80065fa:	f000 fb51 	bl	8006ca0 <TIM_OC3_SetConfig>
 80065fe:	68fb      	ldr	r3, [r7, #12]
 8006600:	681b      	ldr	r3, [r3, #0]
 8006602:	69da      	ldr	r2, [r3, #28]
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	681b      	ldr	r3, [r3, #0]
 8006608:	f042 0208 	orr.w	r2, r2, #8
 800660c:	61da      	str	r2, [r3, #28]
 800660e:	68fb      	ldr	r3, [r7, #12]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	69da      	ldr	r2, [r3, #28]
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	f022 0204 	bic.w	r2, r2, #4
 800661c:	61da      	str	r2, [r3, #28]
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	69d9      	ldr	r1, [r3, #28]
 8006624:	68bb      	ldr	r3, [r7, #8]
 8006626:	691a      	ldr	r2, [r3, #16]
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	430a      	orrs	r2, r1
 800662e:	61da      	str	r2, [r3, #28]
 8006630:	e064      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006632:	68fb      	ldr	r3, [r7, #12]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	68b9      	ldr	r1, [r7, #8]
 8006638:	4618      	mov	r0, r3
 800663a:	f000 fba7 	bl	8006d8c <TIM_OC4_SetConfig>
 800663e:	68fb      	ldr	r3, [r7, #12]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	69da      	ldr	r2, [r3, #28]
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800664c:	61da      	str	r2, [r3, #28]
 800664e:	68fb      	ldr	r3, [r7, #12]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	69da      	ldr	r2, [r3, #28]
 8006654:	68fb      	ldr	r3, [r7, #12]
 8006656:	681b      	ldr	r3, [r3, #0]
 8006658:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800665c:	61da      	str	r2, [r3, #28]
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	69d9      	ldr	r1, [r3, #28]
 8006664:	68bb      	ldr	r3, [r7, #8]
 8006666:	691b      	ldr	r3, [r3, #16]
 8006668:	021a      	lsls	r2, r3, #8
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	430a      	orrs	r2, r1
 8006670:	61da      	str	r2, [r3, #28]
 8006672:	e043      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 8006674:	68fb      	ldr	r3, [r7, #12]
 8006676:	681b      	ldr	r3, [r3, #0]
 8006678:	68b9      	ldr	r1, [r7, #8]
 800667a:	4618      	mov	r0, r3
 800667c:	f000 fbde 	bl	8006e3c <TIM_OC5_SetConfig>
 8006680:	68fb      	ldr	r3, [r7, #12]
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8006686:	68fb      	ldr	r3, [r7, #12]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	f042 0208 	orr.w	r2, r2, #8
 800668e:	655a      	str	r2, [r3, #84]	; 0x54
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8006696:	68fb      	ldr	r3, [r7, #12]
 8006698:	681b      	ldr	r3, [r3, #0]
 800669a:	f022 0204 	bic.w	r2, r2, #4
 800669e:	655a      	str	r2, [r3, #84]	; 0x54
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80066a6:	68bb      	ldr	r3, [r7, #8]
 80066a8:	691a      	ldr	r2, [r3, #16]
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	681b      	ldr	r3, [r3, #0]
 80066ae:	430a      	orrs	r2, r1
 80066b0:	655a      	str	r2, [r3, #84]	; 0x54
 80066b2:	e023      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	68b9      	ldr	r1, [r7, #8]
 80066ba:	4618      	mov	r0, r3
 80066bc:	f000 fc10 	bl	8006ee0 <TIM_OC6_SetConfig>
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80066c6:	68fb      	ldr	r3, [r7, #12]
 80066c8:	681b      	ldr	r3, [r3, #0]
 80066ca:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80066ce:	655a      	str	r2, [r3, #84]	; 0x54
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80066de:	655a      	str	r2, [r3, #84]	; 0x54
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80066e6:	68bb      	ldr	r3, [r7, #8]
 80066e8:	691b      	ldr	r3, [r3, #16]
 80066ea:	021a      	lsls	r2, r3, #8
 80066ec:	68fb      	ldr	r3, [r7, #12]
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	430a      	orrs	r2, r1
 80066f2:	655a      	str	r2, [r3, #84]	; 0x54
 80066f4:	e002      	b.n	80066fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80066f6:	2301      	movs	r3, #1
 80066f8:	75fb      	strb	r3, [r7, #23]
 80066fa:	bf00      	nop
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	2200      	movs	r2, #0
 8006700:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006704:	7dfb      	ldrb	r3, [r7, #23]
 8006706:	4618      	mov	r0, r3
 8006708:	3718      	adds	r7, #24
 800670a:	46bd      	mov	sp, r7
 800670c:	bd80      	pop	{r7, pc}
 800670e:	bf00      	nop

08006710 <HAL_TIM_ConfigClockSource>:
 8006710:	b580      	push	{r7, lr}
 8006712:	b084      	sub	sp, #16
 8006714:	af00      	add	r7, sp, #0
 8006716:	6078      	str	r0, [r7, #4]
 8006718:	6039      	str	r1, [r7, #0]
 800671a:	2300      	movs	r3, #0
 800671c:	73fb      	strb	r3, [r7, #15]
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006724:	2b01      	cmp	r3, #1
 8006726:	d101      	bne.n	800672c <HAL_TIM_ConfigClockSource+0x1c>
 8006728:	2302      	movs	r3, #2
 800672a:	e0b4      	b.n	8006896 <HAL_TIM_ConfigClockSource+0x186>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	2201      	movs	r2, #1
 8006730:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	2202      	movs	r2, #2
 8006738:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	689b      	ldr	r3, [r3, #8]
 8006742:	60bb      	str	r3, [r7, #8]
 8006744:	68ba      	ldr	r2, [r7, #8]
 8006746:	4b56      	ldr	r3, [pc, #344]	; (80068a0 <HAL_TIM_ConfigClockSource+0x190>)
 8006748:	4013      	ands	r3, r2
 800674a:	60bb      	str	r3, [r7, #8]
 800674c:	68bb      	ldr	r3, [r7, #8]
 800674e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006752:	60bb      	str	r3, [r7, #8]
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	68ba      	ldr	r2, [r7, #8]
 800675a:	609a      	str	r2, [r3, #8]
 800675c:	683b      	ldr	r3, [r7, #0]
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006764:	d03e      	beq.n	80067e4 <HAL_TIM_ConfigClockSource+0xd4>
 8006766:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800676a:	f200 8087 	bhi.w	800687c <HAL_TIM_ConfigClockSource+0x16c>
 800676e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006772:	f000 8086 	beq.w	8006882 <HAL_TIM_ConfigClockSource+0x172>
 8006776:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800677a:	d87f      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 800677c:	2b70      	cmp	r3, #112	; 0x70
 800677e:	d01a      	beq.n	80067b6 <HAL_TIM_ConfigClockSource+0xa6>
 8006780:	2b70      	cmp	r3, #112	; 0x70
 8006782:	d87b      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 8006784:	2b60      	cmp	r3, #96	; 0x60
 8006786:	d050      	beq.n	800682a <HAL_TIM_ConfigClockSource+0x11a>
 8006788:	2b60      	cmp	r3, #96	; 0x60
 800678a:	d877      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 800678c:	2b50      	cmp	r3, #80	; 0x50
 800678e:	d03c      	beq.n	800680a <HAL_TIM_ConfigClockSource+0xfa>
 8006790:	2b50      	cmp	r3, #80	; 0x50
 8006792:	d873      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 8006794:	2b40      	cmp	r3, #64	; 0x40
 8006796:	d058      	beq.n	800684a <HAL_TIM_ConfigClockSource+0x13a>
 8006798:	2b40      	cmp	r3, #64	; 0x40
 800679a:	d86f      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 800679c:	2b30      	cmp	r3, #48	; 0x30
 800679e:	d064      	beq.n	800686a <HAL_TIM_ConfigClockSource+0x15a>
 80067a0:	2b30      	cmp	r3, #48	; 0x30
 80067a2:	d86b      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 80067a4:	2b20      	cmp	r3, #32
 80067a6:	d060      	beq.n	800686a <HAL_TIM_ConfigClockSource+0x15a>
 80067a8:	2b20      	cmp	r3, #32
 80067aa:	d867      	bhi.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 80067ac:	2b00      	cmp	r3, #0
 80067ae:	d05c      	beq.n	800686a <HAL_TIM_ConfigClockSource+0x15a>
 80067b0:	2b10      	cmp	r3, #16
 80067b2:	d05a      	beq.n	800686a <HAL_TIM_ConfigClockSource+0x15a>
 80067b4:	e062      	b.n	800687c <HAL_TIM_ConfigClockSource+0x16c>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	6818      	ldr	r0, [r3, #0]
 80067ba:	683b      	ldr	r3, [r7, #0]
 80067bc:	6899      	ldr	r1, [r3, #8]
 80067be:	683b      	ldr	r3, [r7, #0]
 80067c0:	685a      	ldr	r2, [r3, #4]
 80067c2:	683b      	ldr	r3, [r7, #0]
 80067c4:	68db      	ldr	r3, [r3, #12]
 80067c6:	f000 fced 	bl	80071a4 <TIM_ETR_SetConfig>
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	689b      	ldr	r3, [r3, #8]
 80067d0:	60bb      	str	r3, [r7, #8]
 80067d2:	68bb      	ldr	r3, [r7, #8]
 80067d4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80067d8:	60bb      	str	r3, [r7, #8]
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	68ba      	ldr	r2, [r7, #8]
 80067e0:	609a      	str	r2, [r3, #8]
 80067e2:	e04f      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	6818      	ldr	r0, [r3, #0]
 80067e8:	683b      	ldr	r3, [r7, #0]
 80067ea:	6899      	ldr	r1, [r3, #8]
 80067ec:	683b      	ldr	r3, [r7, #0]
 80067ee:	685a      	ldr	r2, [r3, #4]
 80067f0:	683b      	ldr	r3, [r7, #0]
 80067f2:	68db      	ldr	r3, [r3, #12]
 80067f4:	f000 fcd6 	bl	80071a4 <TIM_ETR_SetConfig>
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	689a      	ldr	r2, [r3, #8]
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006806:	609a      	str	r2, [r3, #8]
 8006808:	e03c      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	6818      	ldr	r0, [r3, #0]
 800680e:	683b      	ldr	r3, [r7, #0]
 8006810:	6859      	ldr	r1, [r3, #4]
 8006812:	683b      	ldr	r3, [r7, #0]
 8006814:	68db      	ldr	r3, [r3, #12]
 8006816:	461a      	mov	r2, r3
 8006818:	f000 fc4a 	bl	80070b0 <TIM_TI1_ConfigInputStage>
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	2150      	movs	r1, #80	; 0x50
 8006822:	4618      	mov	r0, r3
 8006824:	f000 fca3 	bl	800716e <TIM_ITRx_SetConfig>
 8006828:	e02c      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	6818      	ldr	r0, [r3, #0]
 800682e:	683b      	ldr	r3, [r7, #0]
 8006830:	6859      	ldr	r1, [r3, #4]
 8006832:	683b      	ldr	r3, [r7, #0]
 8006834:	68db      	ldr	r3, [r3, #12]
 8006836:	461a      	mov	r2, r3
 8006838:	f000 fc69 	bl	800710e <TIM_TI2_ConfigInputStage>
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	2160      	movs	r1, #96	; 0x60
 8006842:	4618      	mov	r0, r3
 8006844:	f000 fc93 	bl	800716e <TIM_ITRx_SetConfig>
 8006848:	e01c      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	6818      	ldr	r0, [r3, #0]
 800684e:	683b      	ldr	r3, [r7, #0]
 8006850:	6859      	ldr	r1, [r3, #4]
 8006852:	683b      	ldr	r3, [r7, #0]
 8006854:	68db      	ldr	r3, [r3, #12]
 8006856:	461a      	mov	r2, r3
 8006858:	f000 fc2a 	bl	80070b0 <TIM_TI1_ConfigInputStage>
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	2140      	movs	r1, #64	; 0x40
 8006862:	4618      	mov	r0, r3
 8006864:	f000 fc83 	bl	800716e <TIM_ITRx_SetConfig>
 8006868:	e00c      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	681a      	ldr	r2, [r3, #0]
 800686e:	683b      	ldr	r3, [r7, #0]
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	4619      	mov	r1, r3
 8006874:	4610      	mov	r0, r2
 8006876:	f000 fc7a 	bl	800716e <TIM_ITRx_SetConfig>
 800687a:	e003      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 800687c:	2301      	movs	r3, #1
 800687e:	73fb      	strb	r3, [r7, #15]
 8006880:	e000      	b.n	8006884 <HAL_TIM_ConfigClockSource+0x174>
 8006882:	bf00      	nop
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	2201      	movs	r2, #1
 8006888:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	2200      	movs	r2, #0
 8006890:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006894:	7bfb      	ldrb	r3, [r7, #15]
 8006896:	4618      	mov	r0, r3
 8006898:	3710      	adds	r7, #16
 800689a:	46bd      	mov	sp, r7
 800689c:	bd80      	pop	{r7, pc}
 800689e:	bf00      	nop
 80068a0:	fffeff88 	.word	0xfffeff88

080068a4 <HAL_TIM_SlaveConfigSynchro>:
 80068a4:	b580      	push	{r7, lr}
 80068a6:	b082      	sub	sp, #8
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	6078      	str	r0, [r7, #4]
 80068ac:	6039      	str	r1, [r7, #0]
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80068b4:	2b01      	cmp	r3, #1
 80068b6:	d101      	bne.n	80068bc <HAL_TIM_SlaveConfigSynchro+0x18>
 80068b8:	2302      	movs	r3, #2
 80068ba:	e031      	b.n	8006920 <HAL_TIM_SlaveConfigSynchro+0x7c>
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	2201      	movs	r2, #1
 80068c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2202      	movs	r2, #2
 80068c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068cc:	6839      	ldr	r1, [r7, #0]
 80068ce:	6878      	ldr	r0, [r7, #4]
 80068d0:	f000 fb5a 	bl	8006f88 <TIM_SlaveTimer_SetConfig>
 80068d4:	4603      	mov	r3, r0
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d009      	beq.n	80068ee <HAL_TIM_SlaveConfigSynchro+0x4a>
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	2201      	movs	r2, #1
 80068de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	2200      	movs	r2, #0
 80068e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80068ea:	2301      	movs	r3, #1
 80068ec:	e018      	b.n	8006920 <HAL_TIM_SlaveConfigSynchro+0x7c>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	68da      	ldr	r2, [r3, #12]
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80068fc:	60da      	str	r2, [r3, #12]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	681b      	ldr	r3, [r3, #0]
 8006902:	68da      	ldr	r2, [r3, #12]
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	681b      	ldr	r3, [r3, #0]
 8006908:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800690c:	60da      	str	r2, [r3, #12]
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	2201      	movs	r2, #1
 8006912:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	2200      	movs	r2, #0
 800691a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800691e:	2300      	movs	r3, #0
 8006920:	4618      	mov	r0, r3
 8006922:	3708      	adds	r7, #8
 8006924:	46bd      	mov	sp, r7
 8006926:	bd80      	pop	{r7, pc}

08006928 <HAL_TIM_PeriodElapsedCallback>:
 8006928:	b480      	push	{r7}
 800692a:	b083      	sub	sp, #12
 800692c:	af00      	add	r7, sp, #0
 800692e:	6078      	str	r0, [r7, #4]
 8006930:	bf00      	nop
 8006932:	370c      	adds	r7, #12
 8006934:	46bd      	mov	sp, r7
 8006936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800693a:	4770      	bx	lr

0800693c <HAL_TIM_OC_DelayElapsedCallback>:
 800693c:	b480      	push	{r7}
 800693e:	b083      	sub	sp, #12
 8006940:	af00      	add	r7, sp, #0
 8006942:	6078      	str	r0, [r7, #4]
 8006944:	bf00      	nop
 8006946:	370c      	adds	r7, #12
 8006948:	46bd      	mov	sp, r7
 800694a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800694e:	4770      	bx	lr

08006950 <HAL_TIM_IC_CaptureCallback>:
 8006950:	b480      	push	{r7}
 8006952:	b083      	sub	sp, #12
 8006954:	af00      	add	r7, sp, #0
 8006956:	6078      	str	r0, [r7, #4]
 8006958:	bf00      	nop
 800695a:	370c      	adds	r7, #12
 800695c:	46bd      	mov	sp, r7
 800695e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006962:	4770      	bx	lr

08006964 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006964:	b480      	push	{r7}
 8006966:	b083      	sub	sp, #12
 8006968:	af00      	add	r7, sp, #0
 800696a:	6078      	str	r0, [r7, #4]
 800696c:	bf00      	nop
 800696e:	370c      	adds	r7, #12
 8006970:	46bd      	mov	sp, r7
 8006972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006976:	4770      	bx	lr

08006978 <HAL_TIM_TriggerCallback>:
 8006978:	b480      	push	{r7}
 800697a:	b083      	sub	sp, #12
 800697c:	af00      	add	r7, sp, #0
 800697e:	6078      	str	r0, [r7, #4]
 8006980:	bf00      	nop
 8006982:	370c      	adds	r7, #12
 8006984:	46bd      	mov	sp, r7
 8006986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800698a:	4770      	bx	lr

0800698c <TIM_Base_SetConfig>:
 800698c:	b480      	push	{r7}
 800698e:	b085      	sub	sp, #20
 8006990:	af00      	add	r7, sp, #0
 8006992:	6078      	str	r0, [r7, #4]
 8006994:	6039      	str	r1, [r7, #0]
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	60fb      	str	r3, [r7, #12]
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	4a40      	ldr	r2, [pc, #256]	; (8006aa0 <TIM_Base_SetConfig+0x114>)
 80069a0:	4293      	cmp	r3, r2
 80069a2:	d013      	beq.n	80069cc <TIM_Base_SetConfig+0x40>
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80069aa:	d00f      	beq.n	80069cc <TIM_Base_SetConfig+0x40>
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	4a3d      	ldr	r2, [pc, #244]	; (8006aa4 <TIM_Base_SetConfig+0x118>)
 80069b0:	4293      	cmp	r3, r2
 80069b2:	d00b      	beq.n	80069cc <TIM_Base_SetConfig+0x40>
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	4a3c      	ldr	r2, [pc, #240]	; (8006aa8 <TIM_Base_SetConfig+0x11c>)
 80069b8:	4293      	cmp	r3, r2
 80069ba:	d007      	beq.n	80069cc <TIM_Base_SetConfig+0x40>
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	4a3b      	ldr	r2, [pc, #236]	; (8006aac <TIM_Base_SetConfig+0x120>)
 80069c0:	4293      	cmp	r3, r2
 80069c2:	d003      	beq.n	80069cc <TIM_Base_SetConfig+0x40>
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	4a3a      	ldr	r2, [pc, #232]	; (8006ab0 <TIM_Base_SetConfig+0x124>)
 80069c8:	4293      	cmp	r3, r2
 80069ca:	d108      	bne.n	80069de <TIM_Base_SetConfig+0x52>
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80069d2:	60fb      	str	r3, [r7, #12]
 80069d4:	683b      	ldr	r3, [r7, #0]
 80069d6:	685b      	ldr	r3, [r3, #4]
 80069d8:	68fa      	ldr	r2, [r7, #12]
 80069da:	4313      	orrs	r3, r2
 80069dc:	60fb      	str	r3, [r7, #12]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	4a2f      	ldr	r2, [pc, #188]	; (8006aa0 <TIM_Base_SetConfig+0x114>)
 80069e2:	4293      	cmp	r3, r2
 80069e4:	d02b      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80069ec:	d027      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	4a2c      	ldr	r2, [pc, #176]	; (8006aa4 <TIM_Base_SetConfig+0x118>)
 80069f2:	4293      	cmp	r3, r2
 80069f4:	d023      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	4a2b      	ldr	r2, [pc, #172]	; (8006aa8 <TIM_Base_SetConfig+0x11c>)
 80069fa:	4293      	cmp	r3, r2
 80069fc:	d01f      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	4a2a      	ldr	r2, [pc, #168]	; (8006aac <TIM_Base_SetConfig+0x120>)
 8006a02:	4293      	cmp	r3, r2
 8006a04:	d01b      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	4a29      	ldr	r2, [pc, #164]	; (8006ab0 <TIM_Base_SetConfig+0x124>)
 8006a0a:	4293      	cmp	r3, r2
 8006a0c:	d017      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	4a28      	ldr	r2, [pc, #160]	; (8006ab4 <TIM_Base_SetConfig+0x128>)
 8006a12:	4293      	cmp	r3, r2
 8006a14:	d013      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	4a27      	ldr	r2, [pc, #156]	; (8006ab8 <TIM_Base_SetConfig+0x12c>)
 8006a1a:	4293      	cmp	r3, r2
 8006a1c:	d00f      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	4a26      	ldr	r2, [pc, #152]	; (8006abc <TIM_Base_SetConfig+0x130>)
 8006a22:	4293      	cmp	r3, r2
 8006a24:	d00b      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	4a25      	ldr	r2, [pc, #148]	; (8006ac0 <TIM_Base_SetConfig+0x134>)
 8006a2a:	4293      	cmp	r3, r2
 8006a2c:	d007      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a2e:	687b      	ldr	r3, [r7, #4]
 8006a30:	4a24      	ldr	r2, [pc, #144]	; (8006ac4 <TIM_Base_SetConfig+0x138>)
 8006a32:	4293      	cmp	r3, r2
 8006a34:	d003      	beq.n	8006a3e <TIM_Base_SetConfig+0xb2>
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	4a23      	ldr	r2, [pc, #140]	; (8006ac8 <TIM_Base_SetConfig+0x13c>)
 8006a3a:	4293      	cmp	r3, r2
 8006a3c:	d108      	bne.n	8006a50 <TIM_Base_SetConfig+0xc4>
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006a44:	60fb      	str	r3, [r7, #12]
 8006a46:	683b      	ldr	r3, [r7, #0]
 8006a48:	68db      	ldr	r3, [r3, #12]
 8006a4a:	68fa      	ldr	r2, [r7, #12]
 8006a4c:	4313      	orrs	r3, r2
 8006a4e:	60fb      	str	r3, [r7, #12]
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006a56:	683b      	ldr	r3, [r7, #0]
 8006a58:	695b      	ldr	r3, [r3, #20]
 8006a5a:	4313      	orrs	r3, r2
 8006a5c:	60fb      	str	r3, [r7, #12]
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	68fa      	ldr	r2, [r7, #12]
 8006a62:	601a      	str	r2, [r3, #0]
 8006a64:	683b      	ldr	r3, [r7, #0]
 8006a66:	689a      	ldr	r2, [r3, #8]
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	62da      	str	r2, [r3, #44]	; 0x2c
 8006a6c:	683b      	ldr	r3, [r7, #0]
 8006a6e:	681a      	ldr	r2, [r3, #0]
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	629a      	str	r2, [r3, #40]	; 0x28
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	4a0a      	ldr	r2, [pc, #40]	; (8006aa0 <TIM_Base_SetConfig+0x114>)
 8006a78:	4293      	cmp	r3, r2
 8006a7a:	d003      	beq.n	8006a84 <TIM_Base_SetConfig+0xf8>
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	4a0c      	ldr	r2, [pc, #48]	; (8006ab0 <TIM_Base_SetConfig+0x124>)
 8006a80:	4293      	cmp	r3, r2
 8006a82:	d103      	bne.n	8006a8c <TIM_Base_SetConfig+0x100>
 8006a84:	683b      	ldr	r3, [r7, #0]
 8006a86:	691a      	ldr	r2, [r3, #16]
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	631a      	str	r2, [r3, #48]	; 0x30
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	2201      	movs	r2, #1
 8006a90:	615a      	str	r2, [r3, #20]
 8006a92:	bf00      	nop
 8006a94:	3714      	adds	r7, #20
 8006a96:	46bd      	mov	sp, r7
 8006a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a9c:	4770      	bx	lr
 8006a9e:	bf00      	nop
 8006aa0:	40010000 	.word	0x40010000
 8006aa4:	40000400 	.word	0x40000400
 8006aa8:	40000800 	.word	0x40000800
 8006aac:	40000c00 	.word	0x40000c00
 8006ab0:	40010400 	.word	0x40010400
 8006ab4:	40014000 	.word	0x40014000
 8006ab8:	40014400 	.word	0x40014400
 8006abc:	40014800 	.word	0x40014800
 8006ac0:	40001800 	.word	0x40001800
 8006ac4:	40001c00 	.word	0x40001c00
 8006ac8:	40002000 	.word	0x40002000

08006acc <TIM_OC1_SetConfig>:
 8006acc:	b480      	push	{r7}
 8006ace:	b087      	sub	sp, #28
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
 8006ad4:	6039      	str	r1, [r7, #0]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	6a1b      	ldr	r3, [r3, #32]
 8006ada:	f023 0201 	bic.w	r2, r3, #1
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	621a      	str	r2, [r3, #32]
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	6a1b      	ldr	r3, [r3, #32]
 8006ae6:	617b      	str	r3, [r7, #20]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	685b      	ldr	r3, [r3, #4]
 8006aec:	613b      	str	r3, [r7, #16]
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	699b      	ldr	r3, [r3, #24]
 8006af2:	60fb      	str	r3, [r7, #12]
 8006af4:	68fa      	ldr	r2, [r7, #12]
 8006af6:	4b2b      	ldr	r3, [pc, #172]	; (8006ba4 <TIM_OC1_SetConfig+0xd8>)
 8006af8:	4013      	ands	r3, r2
 8006afa:	60fb      	str	r3, [r7, #12]
 8006afc:	68fb      	ldr	r3, [r7, #12]
 8006afe:	f023 0303 	bic.w	r3, r3, #3
 8006b02:	60fb      	str	r3, [r7, #12]
 8006b04:	683b      	ldr	r3, [r7, #0]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	68fa      	ldr	r2, [r7, #12]
 8006b0a:	4313      	orrs	r3, r2
 8006b0c:	60fb      	str	r3, [r7, #12]
 8006b0e:	697b      	ldr	r3, [r7, #20]
 8006b10:	f023 0302 	bic.w	r3, r3, #2
 8006b14:	617b      	str	r3, [r7, #20]
 8006b16:	683b      	ldr	r3, [r7, #0]
 8006b18:	689b      	ldr	r3, [r3, #8]
 8006b1a:	697a      	ldr	r2, [r7, #20]
 8006b1c:	4313      	orrs	r3, r2
 8006b1e:	617b      	str	r3, [r7, #20]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	4a21      	ldr	r2, [pc, #132]	; (8006ba8 <TIM_OC1_SetConfig+0xdc>)
 8006b24:	4293      	cmp	r3, r2
 8006b26:	d003      	beq.n	8006b30 <TIM_OC1_SetConfig+0x64>
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	4a20      	ldr	r2, [pc, #128]	; (8006bac <TIM_OC1_SetConfig+0xe0>)
 8006b2c:	4293      	cmp	r3, r2
 8006b2e:	d10c      	bne.n	8006b4a <TIM_OC1_SetConfig+0x7e>
 8006b30:	697b      	ldr	r3, [r7, #20]
 8006b32:	f023 0308 	bic.w	r3, r3, #8
 8006b36:	617b      	str	r3, [r7, #20]
 8006b38:	683b      	ldr	r3, [r7, #0]
 8006b3a:	68db      	ldr	r3, [r3, #12]
 8006b3c:	697a      	ldr	r2, [r7, #20]
 8006b3e:	4313      	orrs	r3, r2
 8006b40:	617b      	str	r3, [r7, #20]
 8006b42:	697b      	ldr	r3, [r7, #20]
 8006b44:	f023 0304 	bic.w	r3, r3, #4
 8006b48:	617b      	str	r3, [r7, #20]
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	4a16      	ldr	r2, [pc, #88]	; (8006ba8 <TIM_OC1_SetConfig+0xdc>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d003      	beq.n	8006b5a <TIM_OC1_SetConfig+0x8e>
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	4a15      	ldr	r2, [pc, #84]	; (8006bac <TIM_OC1_SetConfig+0xe0>)
 8006b56:	4293      	cmp	r3, r2
 8006b58:	d111      	bne.n	8006b7e <TIM_OC1_SetConfig+0xb2>
 8006b5a:	693b      	ldr	r3, [r7, #16]
 8006b5c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006b60:	613b      	str	r3, [r7, #16]
 8006b62:	693b      	ldr	r3, [r7, #16]
 8006b64:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006b68:	613b      	str	r3, [r7, #16]
 8006b6a:	683b      	ldr	r3, [r7, #0]
 8006b6c:	695b      	ldr	r3, [r3, #20]
 8006b6e:	693a      	ldr	r2, [r7, #16]
 8006b70:	4313      	orrs	r3, r2
 8006b72:	613b      	str	r3, [r7, #16]
 8006b74:	683b      	ldr	r3, [r7, #0]
 8006b76:	699b      	ldr	r3, [r3, #24]
 8006b78:	693a      	ldr	r2, [r7, #16]
 8006b7a:	4313      	orrs	r3, r2
 8006b7c:	613b      	str	r3, [r7, #16]
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	693a      	ldr	r2, [r7, #16]
 8006b82:	605a      	str	r2, [r3, #4]
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	68fa      	ldr	r2, [r7, #12]
 8006b88:	619a      	str	r2, [r3, #24]
 8006b8a:	683b      	ldr	r3, [r7, #0]
 8006b8c:	685a      	ldr	r2, [r3, #4]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	635a      	str	r2, [r3, #52]	; 0x34
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	697a      	ldr	r2, [r7, #20]
 8006b96:	621a      	str	r2, [r3, #32]
 8006b98:	bf00      	nop
 8006b9a:	371c      	adds	r7, #28
 8006b9c:	46bd      	mov	sp, r7
 8006b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba2:	4770      	bx	lr
 8006ba4:	fffeff8f 	.word	0xfffeff8f
 8006ba8:	40010000 	.word	0x40010000
 8006bac:	40010400 	.word	0x40010400

08006bb0 <TIM_OC2_SetConfig>:
 8006bb0:	b480      	push	{r7}
 8006bb2:	b087      	sub	sp, #28
 8006bb4:	af00      	add	r7, sp, #0
 8006bb6:	6078      	str	r0, [r7, #4]
 8006bb8:	6039      	str	r1, [r7, #0]
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	6a1b      	ldr	r3, [r3, #32]
 8006bbe:	f023 0210 	bic.w	r2, r3, #16
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	621a      	str	r2, [r3, #32]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	6a1b      	ldr	r3, [r3, #32]
 8006bca:	617b      	str	r3, [r7, #20]
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	685b      	ldr	r3, [r3, #4]
 8006bd0:	613b      	str	r3, [r7, #16]
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	699b      	ldr	r3, [r3, #24]
 8006bd6:	60fb      	str	r3, [r7, #12]
 8006bd8:	68fa      	ldr	r2, [r7, #12]
 8006bda:	4b2e      	ldr	r3, [pc, #184]	; (8006c94 <TIM_OC2_SetConfig+0xe4>)
 8006bdc:	4013      	ands	r3, r2
 8006bde:	60fb      	str	r3, [r7, #12]
 8006be0:	68fb      	ldr	r3, [r7, #12]
 8006be2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006be6:	60fb      	str	r3, [r7, #12]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	021b      	lsls	r3, r3, #8
 8006bee:	68fa      	ldr	r2, [r7, #12]
 8006bf0:	4313      	orrs	r3, r2
 8006bf2:	60fb      	str	r3, [r7, #12]
 8006bf4:	697b      	ldr	r3, [r7, #20]
 8006bf6:	f023 0320 	bic.w	r3, r3, #32
 8006bfa:	617b      	str	r3, [r7, #20]
 8006bfc:	683b      	ldr	r3, [r7, #0]
 8006bfe:	689b      	ldr	r3, [r3, #8]
 8006c00:	011b      	lsls	r3, r3, #4
 8006c02:	697a      	ldr	r2, [r7, #20]
 8006c04:	4313      	orrs	r3, r2
 8006c06:	617b      	str	r3, [r7, #20]
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	4a23      	ldr	r2, [pc, #140]	; (8006c98 <TIM_OC2_SetConfig+0xe8>)
 8006c0c:	4293      	cmp	r3, r2
 8006c0e:	d003      	beq.n	8006c18 <TIM_OC2_SetConfig+0x68>
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	4a22      	ldr	r2, [pc, #136]	; (8006c9c <TIM_OC2_SetConfig+0xec>)
 8006c14:	4293      	cmp	r3, r2
 8006c16:	d10d      	bne.n	8006c34 <TIM_OC2_SetConfig+0x84>
 8006c18:	697b      	ldr	r3, [r7, #20]
 8006c1a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006c1e:	617b      	str	r3, [r7, #20]
 8006c20:	683b      	ldr	r3, [r7, #0]
 8006c22:	68db      	ldr	r3, [r3, #12]
 8006c24:	011b      	lsls	r3, r3, #4
 8006c26:	697a      	ldr	r2, [r7, #20]
 8006c28:	4313      	orrs	r3, r2
 8006c2a:	617b      	str	r3, [r7, #20]
 8006c2c:	697b      	ldr	r3, [r7, #20]
 8006c2e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006c32:	617b      	str	r3, [r7, #20]
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	4a18      	ldr	r2, [pc, #96]	; (8006c98 <TIM_OC2_SetConfig+0xe8>)
 8006c38:	4293      	cmp	r3, r2
 8006c3a:	d003      	beq.n	8006c44 <TIM_OC2_SetConfig+0x94>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	4a17      	ldr	r2, [pc, #92]	; (8006c9c <TIM_OC2_SetConfig+0xec>)
 8006c40:	4293      	cmp	r3, r2
 8006c42:	d113      	bne.n	8006c6c <TIM_OC2_SetConfig+0xbc>
 8006c44:	693b      	ldr	r3, [r7, #16]
 8006c46:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006c4a:	613b      	str	r3, [r7, #16]
 8006c4c:	693b      	ldr	r3, [r7, #16]
 8006c4e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c52:	613b      	str	r3, [r7, #16]
 8006c54:	683b      	ldr	r3, [r7, #0]
 8006c56:	695b      	ldr	r3, [r3, #20]
 8006c58:	009b      	lsls	r3, r3, #2
 8006c5a:	693a      	ldr	r2, [r7, #16]
 8006c5c:	4313      	orrs	r3, r2
 8006c5e:	613b      	str	r3, [r7, #16]
 8006c60:	683b      	ldr	r3, [r7, #0]
 8006c62:	699b      	ldr	r3, [r3, #24]
 8006c64:	009b      	lsls	r3, r3, #2
 8006c66:	693a      	ldr	r2, [r7, #16]
 8006c68:	4313      	orrs	r3, r2
 8006c6a:	613b      	str	r3, [r7, #16]
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	693a      	ldr	r2, [r7, #16]
 8006c70:	605a      	str	r2, [r3, #4]
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	68fa      	ldr	r2, [r7, #12]
 8006c76:	619a      	str	r2, [r3, #24]
 8006c78:	683b      	ldr	r3, [r7, #0]
 8006c7a:	685a      	ldr	r2, [r3, #4]
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	639a      	str	r2, [r3, #56]	; 0x38
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	697a      	ldr	r2, [r7, #20]
 8006c84:	621a      	str	r2, [r3, #32]
 8006c86:	bf00      	nop
 8006c88:	371c      	adds	r7, #28
 8006c8a:	46bd      	mov	sp, r7
 8006c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c90:	4770      	bx	lr
 8006c92:	bf00      	nop
 8006c94:	feff8fff 	.word	0xfeff8fff
 8006c98:	40010000 	.word	0x40010000
 8006c9c:	40010400 	.word	0x40010400

08006ca0 <TIM_OC3_SetConfig>:
 8006ca0:	b480      	push	{r7}
 8006ca2:	b087      	sub	sp, #28
 8006ca4:	af00      	add	r7, sp, #0
 8006ca6:	6078      	str	r0, [r7, #4]
 8006ca8:	6039      	str	r1, [r7, #0]
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	6a1b      	ldr	r3, [r3, #32]
 8006cae:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	621a      	str	r2, [r3, #32]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	6a1b      	ldr	r3, [r3, #32]
 8006cba:	617b      	str	r3, [r7, #20]
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	685b      	ldr	r3, [r3, #4]
 8006cc0:	613b      	str	r3, [r7, #16]
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	69db      	ldr	r3, [r3, #28]
 8006cc6:	60fb      	str	r3, [r7, #12]
 8006cc8:	68fa      	ldr	r2, [r7, #12]
 8006cca:	4b2d      	ldr	r3, [pc, #180]	; (8006d80 <TIM_OC3_SetConfig+0xe0>)
 8006ccc:	4013      	ands	r3, r2
 8006cce:	60fb      	str	r3, [r7, #12]
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	f023 0303 	bic.w	r3, r3, #3
 8006cd6:	60fb      	str	r3, [r7, #12]
 8006cd8:	683b      	ldr	r3, [r7, #0]
 8006cda:	681b      	ldr	r3, [r3, #0]
 8006cdc:	68fa      	ldr	r2, [r7, #12]
 8006cde:	4313      	orrs	r3, r2
 8006ce0:	60fb      	str	r3, [r7, #12]
 8006ce2:	697b      	ldr	r3, [r7, #20]
 8006ce4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006ce8:	617b      	str	r3, [r7, #20]
 8006cea:	683b      	ldr	r3, [r7, #0]
 8006cec:	689b      	ldr	r3, [r3, #8]
 8006cee:	021b      	lsls	r3, r3, #8
 8006cf0:	697a      	ldr	r2, [r7, #20]
 8006cf2:	4313      	orrs	r3, r2
 8006cf4:	617b      	str	r3, [r7, #20]
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	4a22      	ldr	r2, [pc, #136]	; (8006d84 <TIM_OC3_SetConfig+0xe4>)
 8006cfa:	4293      	cmp	r3, r2
 8006cfc:	d003      	beq.n	8006d06 <TIM_OC3_SetConfig+0x66>
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	4a21      	ldr	r2, [pc, #132]	; (8006d88 <TIM_OC3_SetConfig+0xe8>)
 8006d02:	4293      	cmp	r3, r2
 8006d04:	d10d      	bne.n	8006d22 <TIM_OC3_SetConfig+0x82>
 8006d06:	697b      	ldr	r3, [r7, #20]
 8006d08:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006d0c:	617b      	str	r3, [r7, #20]
 8006d0e:	683b      	ldr	r3, [r7, #0]
 8006d10:	68db      	ldr	r3, [r3, #12]
 8006d12:	021b      	lsls	r3, r3, #8
 8006d14:	697a      	ldr	r2, [r7, #20]
 8006d16:	4313      	orrs	r3, r2
 8006d18:	617b      	str	r3, [r7, #20]
 8006d1a:	697b      	ldr	r3, [r7, #20]
 8006d1c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006d20:	617b      	str	r3, [r7, #20]
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	4a17      	ldr	r2, [pc, #92]	; (8006d84 <TIM_OC3_SetConfig+0xe4>)
 8006d26:	4293      	cmp	r3, r2
 8006d28:	d003      	beq.n	8006d32 <TIM_OC3_SetConfig+0x92>
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	4a16      	ldr	r2, [pc, #88]	; (8006d88 <TIM_OC3_SetConfig+0xe8>)
 8006d2e:	4293      	cmp	r3, r2
 8006d30:	d113      	bne.n	8006d5a <TIM_OC3_SetConfig+0xba>
 8006d32:	693b      	ldr	r3, [r7, #16]
 8006d34:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d38:	613b      	str	r3, [r7, #16]
 8006d3a:	693b      	ldr	r3, [r7, #16]
 8006d3c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006d40:	613b      	str	r3, [r7, #16]
 8006d42:	683b      	ldr	r3, [r7, #0]
 8006d44:	695b      	ldr	r3, [r3, #20]
 8006d46:	011b      	lsls	r3, r3, #4
 8006d48:	693a      	ldr	r2, [r7, #16]
 8006d4a:	4313      	orrs	r3, r2
 8006d4c:	613b      	str	r3, [r7, #16]
 8006d4e:	683b      	ldr	r3, [r7, #0]
 8006d50:	699b      	ldr	r3, [r3, #24]
 8006d52:	011b      	lsls	r3, r3, #4
 8006d54:	693a      	ldr	r2, [r7, #16]
 8006d56:	4313      	orrs	r3, r2
 8006d58:	613b      	str	r3, [r7, #16]
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	693a      	ldr	r2, [r7, #16]
 8006d5e:	605a      	str	r2, [r3, #4]
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	68fa      	ldr	r2, [r7, #12]
 8006d64:	61da      	str	r2, [r3, #28]
 8006d66:	683b      	ldr	r3, [r7, #0]
 8006d68:	685a      	ldr	r2, [r3, #4]
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	63da      	str	r2, [r3, #60]	; 0x3c
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	697a      	ldr	r2, [r7, #20]
 8006d72:	621a      	str	r2, [r3, #32]
 8006d74:	bf00      	nop
 8006d76:	371c      	adds	r7, #28
 8006d78:	46bd      	mov	sp, r7
 8006d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d7e:	4770      	bx	lr
 8006d80:	fffeff8f 	.word	0xfffeff8f
 8006d84:	40010000 	.word	0x40010000
 8006d88:	40010400 	.word	0x40010400

08006d8c <TIM_OC4_SetConfig>:
 8006d8c:	b480      	push	{r7}
 8006d8e:	b087      	sub	sp, #28
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	6078      	str	r0, [r7, #4]
 8006d94:	6039      	str	r1, [r7, #0]
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	6a1b      	ldr	r3, [r3, #32]
 8006d9a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	621a      	str	r2, [r3, #32]
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	6a1b      	ldr	r3, [r3, #32]
 8006da6:	613b      	str	r3, [r7, #16]
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	685b      	ldr	r3, [r3, #4]
 8006dac:	617b      	str	r3, [r7, #20]
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	69db      	ldr	r3, [r3, #28]
 8006db2:	60fb      	str	r3, [r7, #12]
 8006db4:	68fa      	ldr	r2, [r7, #12]
 8006db6:	4b1e      	ldr	r3, [pc, #120]	; (8006e30 <TIM_OC4_SetConfig+0xa4>)
 8006db8:	4013      	ands	r3, r2
 8006dba:	60fb      	str	r3, [r7, #12]
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006dc2:	60fb      	str	r3, [r7, #12]
 8006dc4:	683b      	ldr	r3, [r7, #0]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	021b      	lsls	r3, r3, #8
 8006dca:	68fa      	ldr	r2, [r7, #12]
 8006dcc:	4313      	orrs	r3, r2
 8006dce:	60fb      	str	r3, [r7, #12]
 8006dd0:	693b      	ldr	r3, [r7, #16]
 8006dd2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006dd6:	613b      	str	r3, [r7, #16]
 8006dd8:	683b      	ldr	r3, [r7, #0]
 8006dda:	689b      	ldr	r3, [r3, #8]
 8006ddc:	031b      	lsls	r3, r3, #12
 8006dde:	693a      	ldr	r2, [r7, #16]
 8006de0:	4313      	orrs	r3, r2
 8006de2:	613b      	str	r3, [r7, #16]
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	4a13      	ldr	r2, [pc, #76]	; (8006e34 <TIM_OC4_SetConfig+0xa8>)
 8006de8:	4293      	cmp	r3, r2
 8006dea:	d003      	beq.n	8006df4 <TIM_OC4_SetConfig+0x68>
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	4a12      	ldr	r2, [pc, #72]	; (8006e38 <TIM_OC4_SetConfig+0xac>)
 8006df0:	4293      	cmp	r3, r2
 8006df2:	d109      	bne.n	8006e08 <TIM_OC4_SetConfig+0x7c>
 8006df4:	697b      	ldr	r3, [r7, #20]
 8006df6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006dfa:	617b      	str	r3, [r7, #20]
 8006dfc:	683b      	ldr	r3, [r7, #0]
 8006dfe:	695b      	ldr	r3, [r3, #20]
 8006e00:	019b      	lsls	r3, r3, #6
 8006e02:	697a      	ldr	r2, [r7, #20]
 8006e04:	4313      	orrs	r3, r2
 8006e06:	617b      	str	r3, [r7, #20]
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	697a      	ldr	r2, [r7, #20]
 8006e0c:	605a      	str	r2, [r3, #4]
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	68fa      	ldr	r2, [r7, #12]
 8006e12:	61da      	str	r2, [r3, #28]
 8006e14:	683b      	ldr	r3, [r7, #0]
 8006e16:	685a      	ldr	r2, [r3, #4]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	641a      	str	r2, [r3, #64]	; 0x40
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	693a      	ldr	r2, [r7, #16]
 8006e20:	621a      	str	r2, [r3, #32]
 8006e22:	bf00      	nop
 8006e24:	371c      	adds	r7, #28
 8006e26:	46bd      	mov	sp, r7
 8006e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2c:	4770      	bx	lr
 8006e2e:	bf00      	nop
 8006e30:	feff8fff 	.word	0xfeff8fff
 8006e34:	40010000 	.word	0x40010000
 8006e38:	40010400 	.word	0x40010400

08006e3c <TIM_OC5_SetConfig>:
 8006e3c:	b480      	push	{r7}
 8006e3e:	b087      	sub	sp, #28
 8006e40:	af00      	add	r7, sp, #0
 8006e42:	6078      	str	r0, [r7, #4]
 8006e44:	6039      	str	r1, [r7, #0]
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	6a1b      	ldr	r3, [r3, #32]
 8006e4a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	621a      	str	r2, [r3, #32]
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	6a1b      	ldr	r3, [r3, #32]
 8006e56:	613b      	str	r3, [r7, #16]
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	685b      	ldr	r3, [r3, #4]
 8006e5c:	617b      	str	r3, [r7, #20]
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006e62:	60fb      	str	r3, [r7, #12]
 8006e64:	68fa      	ldr	r2, [r7, #12]
 8006e66:	4b1b      	ldr	r3, [pc, #108]	; (8006ed4 <TIM_OC5_SetConfig+0x98>)
 8006e68:	4013      	ands	r3, r2
 8006e6a:	60fb      	str	r3, [r7, #12]
 8006e6c:	683b      	ldr	r3, [r7, #0]
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	68fa      	ldr	r2, [r7, #12]
 8006e72:	4313      	orrs	r3, r2
 8006e74:	60fb      	str	r3, [r7, #12]
 8006e76:	693b      	ldr	r3, [r7, #16]
 8006e78:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8006e7c:	613b      	str	r3, [r7, #16]
 8006e7e:	683b      	ldr	r3, [r7, #0]
 8006e80:	689b      	ldr	r3, [r3, #8]
 8006e82:	041b      	lsls	r3, r3, #16
 8006e84:	693a      	ldr	r2, [r7, #16]
 8006e86:	4313      	orrs	r3, r2
 8006e88:	613b      	str	r3, [r7, #16]
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	4a12      	ldr	r2, [pc, #72]	; (8006ed8 <TIM_OC5_SetConfig+0x9c>)
 8006e8e:	4293      	cmp	r3, r2
 8006e90:	d003      	beq.n	8006e9a <TIM_OC5_SetConfig+0x5e>
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	4a11      	ldr	r2, [pc, #68]	; (8006edc <TIM_OC5_SetConfig+0xa0>)
 8006e96:	4293      	cmp	r3, r2
 8006e98:	d109      	bne.n	8006eae <TIM_OC5_SetConfig+0x72>
 8006e9a:	697b      	ldr	r3, [r7, #20]
 8006e9c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006ea0:	617b      	str	r3, [r7, #20]
 8006ea2:	683b      	ldr	r3, [r7, #0]
 8006ea4:	695b      	ldr	r3, [r3, #20]
 8006ea6:	021b      	lsls	r3, r3, #8
 8006ea8:	697a      	ldr	r2, [r7, #20]
 8006eaa:	4313      	orrs	r3, r2
 8006eac:	617b      	str	r3, [r7, #20]
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	697a      	ldr	r2, [r7, #20]
 8006eb2:	605a      	str	r2, [r3, #4]
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	68fa      	ldr	r2, [r7, #12]
 8006eb8:	655a      	str	r2, [r3, #84]	; 0x54
 8006eba:	683b      	ldr	r3, [r7, #0]
 8006ebc:	685a      	ldr	r2, [r3, #4]
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	659a      	str	r2, [r3, #88]	; 0x58
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	693a      	ldr	r2, [r7, #16]
 8006ec6:	621a      	str	r2, [r3, #32]
 8006ec8:	bf00      	nop
 8006eca:	371c      	adds	r7, #28
 8006ecc:	46bd      	mov	sp, r7
 8006ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ed2:	4770      	bx	lr
 8006ed4:	fffeff8f 	.word	0xfffeff8f
 8006ed8:	40010000 	.word	0x40010000
 8006edc:	40010400 	.word	0x40010400

08006ee0 <TIM_OC6_SetConfig>:
 8006ee0:	b480      	push	{r7}
 8006ee2:	b087      	sub	sp, #28
 8006ee4:	af00      	add	r7, sp, #0
 8006ee6:	6078      	str	r0, [r7, #4]
 8006ee8:	6039      	str	r1, [r7, #0]
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	6a1b      	ldr	r3, [r3, #32]
 8006eee:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	621a      	str	r2, [r3, #32]
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	6a1b      	ldr	r3, [r3, #32]
 8006efa:	613b      	str	r3, [r7, #16]
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	685b      	ldr	r3, [r3, #4]
 8006f00:	617b      	str	r3, [r7, #20]
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006f06:	60fb      	str	r3, [r7, #12]
 8006f08:	68fa      	ldr	r2, [r7, #12]
 8006f0a:	4b1c      	ldr	r3, [pc, #112]	; (8006f7c <TIM_OC6_SetConfig+0x9c>)
 8006f0c:	4013      	ands	r3, r2
 8006f0e:	60fb      	str	r3, [r7, #12]
 8006f10:	683b      	ldr	r3, [r7, #0]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	021b      	lsls	r3, r3, #8
 8006f16:	68fa      	ldr	r2, [r7, #12]
 8006f18:	4313      	orrs	r3, r2
 8006f1a:	60fb      	str	r3, [r7, #12]
 8006f1c:	693b      	ldr	r3, [r7, #16]
 8006f1e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8006f22:	613b      	str	r3, [r7, #16]
 8006f24:	683b      	ldr	r3, [r7, #0]
 8006f26:	689b      	ldr	r3, [r3, #8]
 8006f28:	051b      	lsls	r3, r3, #20
 8006f2a:	693a      	ldr	r2, [r7, #16]
 8006f2c:	4313      	orrs	r3, r2
 8006f2e:	613b      	str	r3, [r7, #16]
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	4a13      	ldr	r2, [pc, #76]	; (8006f80 <TIM_OC6_SetConfig+0xa0>)
 8006f34:	4293      	cmp	r3, r2
 8006f36:	d003      	beq.n	8006f40 <TIM_OC6_SetConfig+0x60>
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	4a12      	ldr	r2, [pc, #72]	; (8006f84 <TIM_OC6_SetConfig+0xa4>)
 8006f3c:	4293      	cmp	r3, r2
 8006f3e:	d109      	bne.n	8006f54 <TIM_OC6_SetConfig+0x74>
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006f46:	617b      	str	r3, [r7, #20]
 8006f48:	683b      	ldr	r3, [r7, #0]
 8006f4a:	695b      	ldr	r3, [r3, #20]
 8006f4c:	029b      	lsls	r3, r3, #10
 8006f4e:	697a      	ldr	r2, [r7, #20]
 8006f50:	4313      	orrs	r3, r2
 8006f52:	617b      	str	r3, [r7, #20]
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	697a      	ldr	r2, [r7, #20]
 8006f58:	605a      	str	r2, [r3, #4]
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	68fa      	ldr	r2, [r7, #12]
 8006f5e:	655a      	str	r2, [r3, #84]	; 0x54
 8006f60:	683b      	ldr	r3, [r7, #0]
 8006f62:	685a      	ldr	r2, [r3, #4]
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	65da      	str	r2, [r3, #92]	; 0x5c
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	693a      	ldr	r2, [r7, #16]
 8006f6c:	621a      	str	r2, [r3, #32]
 8006f6e:	bf00      	nop
 8006f70:	371c      	adds	r7, #28
 8006f72:	46bd      	mov	sp, r7
 8006f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f78:	4770      	bx	lr
 8006f7a:	bf00      	nop
 8006f7c:	feff8fff 	.word	0xfeff8fff
 8006f80:	40010000 	.word	0x40010000
 8006f84:	40010400 	.word	0x40010400

08006f88 <TIM_SlaveTimer_SetConfig>:
 8006f88:	b580      	push	{r7, lr}
 8006f8a:	b086      	sub	sp, #24
 8006f8c:	af00      	add	r7, sp, #0
 8006f8e:	6078      	str	r0, [r7, #4]
 8006f90:	6039      	str	r1, [r7, #0]
 8006f92:	2300      	movs	r3, #0
 8006f94:	75fb      	strb	r3, [r7, #23]
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	681b      	ldr	r3, [r3, #0]
 8006f9a:	689b      	ldr	r3, [r3, #8]
 8006f9c:	613b      	str	r3, [r7, #16]
 8006f9e:	693b      	ldr	r3, [r7, #16]
 8006fa0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006fa4:	613b      	str	r3, [r7, #16]
 8006fa6:	683b      	ldr	r3, [r7, #0]
 8006fa8:	685b      	ldr	r3, [r3, #4]
 8006faa:	693a      	ldr	r2, [r7, #16]
 8006fac:	4313      	orrs	r3, r2
 8006fae:	613b      	str	r3, [r7, #16]
 8006fb0:	693a      	ldr	r2, [r7, #16]
 8006fb2:	4b3e      	ldr	r3, [pc, #248]	; (80070ac <TIM_SlaveTimer_SetConfig+0x124>)
 8006fb4:	4013      	ands	r3, r2
 8006fb6:	613b      	str	r3, [r7, #16]
 8006fb8:	683b      	ldr	r3, [r7, #0]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	693a      	ldr	r2, [r7, #16]
 8006fbe:	4313      	orrs	r3, r2
 8006fc0:	613b      	str	r3, [r7, #16]
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	693a      	ldr	r2, [r7, #16]
 8006fc8:	609a      	str	r2, [r3, #8]
 8006fca:	683b      	ldr	r3, [r7, #0]
 8006fcc:	685b      	ldr	r3, [r3, #4]
 8006fce:	2b70      	cmp	r3, #112	; 0x70
 8006fd0:	d01a      	beq.n	8007008 <TIM_SlaveTimer_SetConfig+0x80>
 8006fd2:	2b70      	cmp	r3, #112	; 0x70
 8006fd4:	d860      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006fd6:	2b60      	cmp	r3, #96	; 0x60
 8006fd8:	d054      	beq.n	8007084 <TIM_SlaveTimer_SetConfig+0xfc>
 8006fda:	2b60      	cmp	r3, #96	; 0x60
 8006fdc:	d85c      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006fde:	2b50      	cmp	r3, #80	; 0x50
 8006fe0:	d046      	beq.n	8007070 <TIM_SlaveTimer_SetConfig+0xe8>
 8006fe2:	2b50      	cmp	r3, #80	; 0x50
 8006fe4:	d858      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006fe6:	2b40      	cmp	r3, #64	; 0x40
 8006fe8:	d019      	beq.n	800701e <TIM_SlaveTimer_SetConfig+0x96>
 8006fea:	2b40      	cmp	r3, #64	; 0x40
 8006fec:	d854      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006fee:	2b30      	cmp	r3, #48	; 0x30
 8006ff0:	d055      	beq.n	800709e <TIM_SlaveTimer_SetConfig+0x116>
 8006ff2:	2b30      	cmp	r3, #48	; 0x30
 8006ff4:	d850      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006ff6:	2b20      	cmp	r3, #32
 8006ff8:	d051      	beq.n	800709e <TIM_SlaveTimer_SetConfig+0x116>
 8006ffa:	2b20      	cmp	r3, #32
 8006ffc:	d84c      	bhi.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d04d      	beq.n	800709e <TIM_SlaveTimer_SetConfig+0x116>
 8007002:	2b10      	cmp	r3, #16
 8007004:	d04b      	beq.n	800709e <TIM_SlaveTimer_SetConfig+0x116>
 8007006:	e047      	b.n	8007098 <TIM_SlaveTimer_SetConfig+0x110>
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	6818      	ldr	r0, [r3, #0]
 800700c:	683b      	ldr	r3, [r7, #0]
 800700e:	68d9      	ldr	r1, [r3, #12]
 8007010:	683b      	ldr	r3, [r7, #0]
 8007012:	689a      	ldr	r2, [r3, #8]
 8007014:	683b      	ldr	r3, [r7, #0]
 8007016:	691b      	ldr	r3, [r3, #16]
 8007018:	f000 f8c4 	bl	80071a4 <TIM_ETR_SetConfig>
 800701c:	e040      	b.n	80070a0 <TIM_SlaveTimer_SetConfig+0x118>
 800701e:	683b      	ldr	r3, [r7, #0]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	2b05      	cmp	r3, #5
 8007024:	d101      	bne.n	800702a <TIM_SlaveTimer_SetConfig+0xa2>
 8007026:	2301      	movs	r3, #1
 8007028:	e03b      	b.n	80070a2 <TIM_SlaveTimer_SetConfig+0x11a>
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	681b      	ldr	r3, [r3, #0]
 800702e:	6a1b      	ldr	r3, [r3, #32]
 8007030:	60fb      	str	r3, [r7, #12]
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	681b      	ldr	r3, [r3, #0]
 8007036:	6a1a      	ldr	r2, [r3, #32]
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	681b      	ldr	r3, [r3, #0]
 800703c:	f022 0201 	bic.w	r2, r2, #1
 8007040:	621a      	str	r2, [r3, #32]
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	681b      	ldr	r3, [r3, #0]
 8007046:	699b      	ldr	r3, [r3, #24]
 8007048:	60bb      	str	r3, [r7, #8]
 800704a:	68bb      	ldr	r3, [r7, #8]
 800704c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007050:	60bb      	str	r3, [r7, #8]
 8007052:	683b      	ldr	r3, [r7, #0]
 8007054:	691b      	ldr	r3, [r3, #16]
 8007056:	011b      	lsls	r3, r3, #4
 8007058:	68ba      	ldr	r2, [r7, #8]
 800705a:	4313      	orrs	r3, r2
 800705c:	60bb      	str	r3, [r7, #8]
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	681b      	ldr	r3, [r3, #0]
 8007062:	68ba      	ldr	r2, [r7, #8]
 8007064:	619a      	str	r2, [r3, #24]
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	68fa      	ldr	r2, [r7, #12]
 800706c:	621a      	str	r2, [r3, #32]
 800706e:	e017      	b.n	80070a0 <TIM_SlaveTimer_SetConfig+0x118>
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	6818      	ldr	r0, [r3, #0]
 8007074:	683b      	ldr	r3, [r7, #0]
 8007076:	6899      	ldr	r1, [r3, #8]
 8007078:	683b      	ldr	r3, [r7, #0]
 800707a:	691b      	ldr	r3, [r3, #16]
 800707c:	461a      	mov	r2, r3
 800707e:	f000 f817 	bl	80070b0 <TIM_TI1_ConfigInputStage>
 8007082:	e00d      	b.n	80070a0 <TIM_SlaveTimer_SetConfig+0x118>
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	6818      	ldr	r0, [r3, #0]
 8007088:	683b      	ldr	r3, [r7, #0]
 800708a:	6899      	ldr	r1, [r3, #8]
 800708c:	683b      	ldr	r3, [r7, #0]
 800708e:	691b      	ldr	r3, [r3, #16]
 8007090:	461a      	mov	r2, r3
 8007092:	f000 f83c 	bl	800710e <TIM_TI2_ConfigInputStage>
 8007096:	e003      	b.n	80070a0 <TIM_SlaveTimer_SetConfig+0x118>
 8007098:	2301      	movs	r3, #1
 800709a:	75fb      	strb	r3, [r7, #23]
 800709c:	e000      	b.n	80070a0 <TIM_SlaveTimer_SetConfig+0x118>
 800709e:	bf00      	nop
 80070a0:	7dfb      	ldrb	r3, [r7, #23]
 80070a2:	4618      	mov	r0, r3
 80070a4:	3718      	adds	r7, #24
 80070a6:	46bd      	mov	sp, r7
 80070a8:	bd80      	pop	{r7, pc}
 80070aa:	bf00      	nop
 80070ac:	fffefff8 	.word	0xfffefff8

080070b0 <TIM_TI1_ConfigInputStage>:
 80070b0:	b480      	push	{r7}
 80070b2:	b087      	sub	sp, #28
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	60f8      	str	r0, [r7, #12]
 80070b8:	60b9      	str	r1, [r7, #8]
 80070ba:	607a      	str	r2, [r7, #4]
 80070bc:	68fb      	ldr	r3, [r7, #12]
 80070be:	6a1b      	ldr	r3, [r3, #32]
 80070c0:	617b      	str	r3, [r7, #20]
 80070c2:	68fb      	ldr	r3, [r7, #12]
 80070c4:	6a1b      	ldr	r3, [r3, #32]
 80070c6:	f023 0201 	bic.w	r2, r3, #1
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	621a      	str	r2, [r3, #32]
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	699b      	ldr	r3, [r3, #24]
 80070d2:	613b      	str	r3, [r7, #16]
 80070d4:	693b      	ldr	r3, [r7, #16]
 80070d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80070da:	613b      	str	r3, [r7, #16]
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	011b      	lsls	r3, r3, #4
 80070e0:	693a      	ldr	r2, [r7, #16]
 80070e2:	4313      	orrs	r3, r2
 80070e4:	613b      	str	r3, [r7, #16]
 80070e6:	697b      	ldr	r3, [r7, #20]
 80070e8:	f023 030a 	bic.w	r3, r3, #10
 80070ec:	617b      	str	r3, [r7, #20]
 80070ee:	697a      	ldr	r2, [r7, #20]
 80070f0:	68bb      	ldr	r3, [r7, #8]
 80070f2:	4313      	orrs	r3, r2
 80070f4:	617b      	str	r3, [r7, #20]
 80070f6:	68fb      	ldr	r3, [r7, #12]
 80070f8:	693a      	ldr	r2, [r7, #16]
 80070fa:	619a      	str	r2, [r3, #24]
 80070fc:	68fb      	ldr	r3, [r7, #12]
 80070fe:	697a      	ldr	r2, [r7, #20]
 8007100:	621a      	str	r2, [r3, #32]
 8007102:	bf00      	nop
 8007104:	371c      	adds	r7, #28
 8007106:	46bd      	mov	sp, r7
 8007108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800710c:	4770      	bx	lr

0800710e <TIM_TI2_ConfigInputStage>:
 800710e:	b480      	push	{r7}
 8007110:	b087      	sub	sp, #28
 8007112:	af00      	add	r7, sp, #0
 8007114:	60f8      	str	r0, [r7, #12]
 8007116:	60b9      	str	r1, [r7, #8]
 8007118:	607a      	str	r2, [r7, #4]
 800711a:	68fb      	ldr	r3, [r7, #12]
 800711c:	6a1b      	ldr	r3, [r3, #32]
 800711e:	f023 0210 	bic.w	r2, r3, #16
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	621a      	str	r2, [r3, #32]
 8007126:	68fb      	ldr	r3, [r7, #12]
 8007128:	699b      	ldr	r3, [r3, #24]
 800712a:	617b      	str	r3, [r7, #20]
 800712c:	68fb      	ldr	r3, [r7, #12]
 800712e:	6a1b      	ldr	r3, [r3, #32]
 8007130:	613b      	str	r3, [r7, #16]
 8007132:	697b      	ldr	r3, [r7, #20]
 8007134:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007138:	617b      	str	r3, [r7, #20]
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	031b      	lsls	r3, r3, #12
 800713e:	697a      	ldr	r2, [r7, #20]
 8007140:	4313      	orrs	r3, r2
 8007142:	617b      	str	r3, [r7, #20]
 8007144:	693b      	ldr	r3, [r7, #16]
 8007146:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800714a:	613b      	str	r3, [r7, #16]
 800714c:	68bb      	ldr	r3, [r7, #8]
 800714e:	011b      	lsls	r3, r3, #4
 8007150:	693a      	ldr	r2, [r7, #16]
 8007152:	4313      	orrs	r3, r2
 8007154:	613b      	str	r3, [r7, #16]
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	697a      	ldr	r2, [r7, #20]
 800715a:	619a      	str	r2, [r3, #24]
 800715c:	68fb      	ldr	r3, [r7, #12]
 800715e:	693a      	ldr	r2, [r7, #16]
 8007160:	621a      	str	r2, [r3, #32]
 8007162:	bf00      	nop
 8007164:	371c      	adds	r7, #28
 8007166:	46bd      	mov	sp, r7
 8007168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800716c:	4770      	bx	lr

0800716e <TIM_ITRx_SetConfig>:
 800716e:	b480      	push	{r7}
 8007170:	b085      	sub	sp, #20
 8007172:	af00      	add	r7, sp, #0
 8007174:	6078      	str	r0, [r7, #4]
 8007176:	6039      	str	r1, [r7, #0]
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	689b      	ldr	r3, [r3, #8]
 800717c:	60fb      	str	r3, [r7, #12]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007184:	60fb      	str	r3, [r7, #12]
 8007186:	683a      	ldr	r2, [r7, #0]
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	4313      	orrs	r3, r2
 800718c:	f043 0307 	orr.w	r3, r3, #7
 8007190:	60fb      	str	r3, [r7, #12]
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	68fa      	ldr	r2, [r7, #12]
 8007196:	609a      	str	r2, [r3, #8]
 8007198:	bf00      	nop
 800719a:	3714      	adds	r7, #20
 800719c:	46bd      	mov	sp, r7
 800719e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a2:	4770      	bx	lr

080071a4 <TIM_ETR_SetConfig>:
 80071a4:	b480      	push	{r7}
 80071a6:	b087      	sub	sp, #28
 80071a8:	af00      	add	r7, sp, #0
 80071aa:	60f8      	str	r0, [r7, #12]
 80071ac:	60b9      	str	r1, [r7, #8]
 80071ae:	607a      	str	r2, [r7, #4]
 80071b0:	603b      	str	r3, [r7, #0]
 80071b2:	68fb      	ldr	r3, [r7, #12]
 80071b4:	689b      	ldr	r3, [r3, #8]
 80071b6:	617b      	str	r3, [r7, #20]
 80071b8:	697b      	ldr	r3, [r7, #20]
 80071ba:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80071be:	617b      	str	r3, [r7, #20]
 80071c0:	683b      	ldr	r3, [r7, #0]
 80071c2:	021a      	lsls	r2, r3, #8
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	431a      	orrs	r2, r3
 80071c8:	68bb      	ldr	r3, [r7, #8]
 80071ca:	4313      	orrs	r3, r2
 80071cc:	697a      	ldr	r2, [r7, #20]
 80071ce:	4313      	orrs	r3, r2
 80071d0:	617b      	str	r3, [r7, #20]
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	697a      	ldr	r2, [r7, #20]
 80071d6:	609a      	str	r2, [r3, #8]
 80071d8:	bf00      	nop
 80071da:	371c      	adds	r7, #28
 80071dc:	46bd      	mov	sp, r7
 80071de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e2:	4770      	bx	lr

080071e4 <TIM_CCxChannelCmd>:
 80071e4:	b480      	push	{r7}
 80071e6:	b087      	sub	sp, #28
 80071e8:	af00      	add	r7, sp, #0
 80071ea:	60f8      	str	r0, [r7, #12]
 80071ec:	60b9      	str	r1, [r7, #8]
 80071ee:	607a      	str	r2, [r7, #4]
 80071f0:	68bb      	ldr	r3, [r7, #8]
 80071f2:	f003 031f 	and.w	r3, r3, #31
 80071f6:	2201      	movs	r2, #1
 80071f8:	fa02 f303 	lsl.w	r3, r2, r3
 80071fc:	617b      	str	r3, [r7, #20]
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	6a1a      	ldr	r2, [r3, #32]
 8007202:	697b      	ldr	r3, [r7, #20]
 8007204:	43db      	mvns	r3, r3
 8007206:	401a      	ands	r2, r3
 8007208:	68fb      	ldr	r3, [r7, #12]
 800720a:	621a      	str	r2, [r3, #32]
 800720c:	68fb      	ldr	r3, [r7, #12]
 800720e:	6a1a      	ldr	r2, [r3, #32]
 8007210:	68bb      	ldr	r3, [r7, #8]
 8007212:	f003 031f 	and.w	r3, r3, #31
 8007216:	6879      	ldr	r1, [r7, #4]
 8007218:	fa01 f303 	lsl.w	r3, r1, r3
 800721c:	431a      	orrs	r2, r3
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	621a      	str	r2, [r3, #32]
 8007222:	bf00      	nop
 8007224:	371c      	adds	r7, #28
 8007226:	46bd      	mov	sp, r7
 8007228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722c:	4770      	bx	lr
	...

08007230 <HAL_TIMEx_MasterConfigSynchronization>:
 8007230:	b480      	push	{r7}
 8007232:	b085      	sub	sp, #20
 8007234:	af00      	add	r7, sp, #0
 8007236:	6078      	str	r0, [r7, #4]
 8007238:	6039      	str	r1, [r7, #0]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007240:	2b01      	cmp	r3, #1
 8007242:	d101      	bne.n	8007248 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007244:	2302      	movs	r3, #2
 8007246:	e06d      	b.n	8007324 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	2201      	movs	r2, #1
 800724c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007250:	687b      	ldr	r3, [r7, #4]
 8007252:	2202      	movs	r2, #2
 8007254:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	685b      	ldr	r3, [r3, #4]
 800725e:	60fb      	str	r3, [r7, #12]
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	689b      	ldr	r3, [r3, #8]
 8007266:	60bb      	str	r3, [r7, #8]
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	681b      	ldr	r3, [r3, #0]
 800726c:	4a30      	ldr	r2, [pc, #192]	; (8007330 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800726e:	4293      	cmp	r3, r2
 8007270:	d004      	beq.n	800727c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	681b      	ldr	r3, [r3, #0]
 8007276:	4a2f      	ldr	r2, [pc, #188]	; (8007334 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007278:	4293      	cmp	r3, r2
 800727a:	d108      	bne.n	800728e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800727c:	68fb      	ldr	r3, [r7, #12]
 800727e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007282:	60fb      	str	r3, [r7, #12]
 8007284:	683b      	ldr	r3, [r7, #0]
 8007286:	685b      	ldr	r3, [r3, #4]
 8007288:	68fa      	ldr	r2, [r7, #12]
 800728a:	4313      	orrs	r3, r2
 800728c:	60fb      	str	r3, [r7, #12]
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007294:	60fb      	str	r3, [r7, #12]
 8007296:	683b      	ldr	r3, [r7, #0]
 8007298:	681b      	ldr	r3, [r3, #0]
 800729a:	68fa      	ldr	r2, [r7, #12]
 800729c:	4313      	orrs	r3, r2
 800729e:	60fb      	str	r3, [r7, #12]
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	681b      	ldr	r3, [r3, #0]
 80072a4:	68fa      	ldr	r2, [r7, #12]
 80072a6:	605a      	str	r2, [r3, #4]
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	4a20      	ldr	r2, [pc, #128]	; (8007330 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80072ae:	4293      	cmp	r3, r2
 80072b0:	d022      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80072ba:	d01d      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	4a1d      	ldr	r2, [pc, #116]	; (8007338 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 80072c2:	4293      	cmp	r3, r2
 80072c4:	d018      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	681b      	ldr	r3, [r3, #0]
 80072ca:	4a1c      	ldr	r2, [pc, #112]	; (800733c <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 80072cc:	4293      	cmp	r3, r2
 80072ce:	d013      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	681b      	ldr	r3, [r3, #0]
 80072d4:	4a1a      	ldr	r2, [pc, #104]	; (8007340 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d00e      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	4a15      	ldr	r2, [pc, #84]	; (8007334 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80072e0:	4293      	cmp	r3, r2
 80072e2:	d009      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	4a16      	ldr	r2, [pc, #88]	; (8007344 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80072ea:	4293      	cmp	r3, r2
 80072ec:	d004      	beq.n	80072f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	4a15      	ldr	r2, [pc, #84]	; (8007348 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80072f4:	4293      	cmp	r3, r2
 80072f6:	d10c      	bne.n	8007312 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 80072f8:	68bb      	ldr	r3, [r7, #8]
 80072fa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80072fe:	60bb      	str	r3, [r7, #8]
 8007300:	683b      	ldr	r3, [r7, #0]
 8007302:	689b      	ldr	r3, [r3, #8]
 8007304:	68ba      	ldr	r2, [r7, #8]
 8007306:	4313      	orrs	r3, r2
 8007308:	60bb      	str	r3, [r7, #8]
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	68ba      	ldr	r2, [r7, #8]
 8007310:	609a      	str	r2, [r3, #8]
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	2201      	movs	r2, #1
 8007316:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	2200      	movs	r2, #0
 800731e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007322:	2300      	movs	r3, #0
 8007324:	4618      	mov	r0, r3
 8007326:	3714      	adds	r7, #20
 8007328:	46bd      	mov	sp, r7
 800732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732e:	4770      	bx	lr
 8007330:	40010000 	.word	0x40010000
 8007334:	40010400 	.word	0x40010400
 8007338:	40000400 	.word	0x40000400
 800733c:	40000800 	.word	0x40000800
 8007340:	40000c00 	.word	0x40000c00
 8007344:	40014000 	.word	0x40014000
 8007348:	40001800 	.word	0x40001800

0800734c <HAL_TIMEx_CommutCallback>:
 800734c:	b480      	push	{r7}
 800734e:	b083      	sub	sp, #12
 8007350:	af00      	add	r7, sp, #0
 8007352:	6078      	str	r0, [r7, #4]
 8007354:	bf00      	nop
 8007356:	370c      	adds	r7, #12
 8007358:	46bd      	mov	sp, r7
 800735a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800735e:	4770      	bx	lr

08007360 <HAL_TIMEx_BreakCallback>:
 8007360:	b480      	push	{r7}
 8007362:	b083      	sub	sp, #12
 8007364:	af00      	add	r7, sp, #0
 8007366:	6078      	str	r0, [r7, #4]
 8007368:	bf00      	nop
 800736a:	370c      	adds	r7, #12
 800736c:	46bd      	mov	sp, r7
 800736e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007372:	4770      	bx	lr

08007374 <HAL_TIMEx_Break2Callback>:
 8007374:	b480      	push	{r7}
 8007376:	b083      	sub	sp, #12
 8007378:	af00      	add	r7, sp, #0
 800737a:	6078      	str	r0, [r7, #4]
 800737c:	bf00      	nop
 800737e:	370c      	adds	r7, #12
 8007380:	46bd      	mov	sp, r7
 8007382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007386:	4770      	bx	lr

08007388 <HAL_UART_Init>:
 8007388:	b580      	push	{r7, lr}
 800738a:	b082      	sub	sp, #8
 800738c:	af00      	add	r7, sp, #0
 800738e:	6078      	str	r0, [r7, #4]
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	2b00      	cmp	r3, #0
 8007394:	d101      	bne.n	800739a <HAL_UART_Init+0x12>
 8007396:	2301      	movs	r3, #1
 8007398:	e040      	b.n	800741c <HAL_UART_Init+0x94>
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800739e:	2b00      	cmp	r3, #0
 80073a0:	d106      	bne.n	80073b0 <HAL_UART_Init+0x28>
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	2200      	movs	r2, #0
 80073a6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80073aa:	6878      	ldr	r0, [r7, #4]
 80073ac:	f7fb fff0 	bl	8003390 <HAL_UART_MspInit>
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	2224      	movs	r2, #36	; 0x24
 80073b4:	679a      	str	r2, [r3, #120]	; 0x78
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	681a      	ldr	r2, [r3, #0]
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f022 0201 	bic.w	r2, r2, #1
 80073c4:	601a      	str	r2, [r3, #0]
 80073c6:	6878      	ldr	r0, [r7, #4]
 80073c8:	f000 fbe8 	bl	8007b9c <UART_SetConfig>
 80073cc:	4603      	mov	r3, r0
 80073ce:	2b01      	cmp	r3, #1
 80073d0:	d101      	bne.n	80073d6 <HAL_UART_Init+0x4e>
 80073d2:	2301      	movs	r3, #1
 80073d4:	e022      	b.n	800741c <HAL_UART_Init+0x94>
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073da:	2b00      	cmp	r3, #0
 80073dc:	d002      	beq.n	80073e4 <HAL_UART_Init+0x5c>
 80073de:	6878      	ldr	r0, [r7, #4]
 80073e0:	f000 fe3e 	bl	8008060 <UART_AdvFeatureConfig>
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	685a      	ldr	r2, [r3, #4]
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	681b      	ldr	r3, [r3, #0]
 80073ee:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80073f2:	605a      	str	r2, [r3, #4]
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	681b      	ldr	r3, [r3, #0]
 80073f8:	689a      	ldr	r2, [r3, #8]
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8007402:	609a      	str	r2, [r3, #8]
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	681a      	ldr	r2, [r3, #0]
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	f042 0201 	orr.w	r2, r2, #1
 8007412:	601a      	str	r2, [r3, #0]
 8007414:	6878      	ldr	r0, [r7, #4]
 8007416:	f000 fec5 	bl	80081a4 <UART_CheckIdleState>
 800741a:	4603      	mov	r3, r0
 800741c:	4618      	mov	r0, r3
 800741e:	3708      	adds	r7, #8
 8007420:	46bd      	mov	sp, r7
 8007422:	bd80      	pop	{r7, pc}

08007424 <HAL_UART_Transmit_IT>:
 8007424:	b480      	push	{r7}
 8007426:	b08b      	sub	sp, #44	; 0x2c
 8007428:	af00      	add	r7, sp, #0
 800742a:	60f8      	str	r0, [r7, #12]
 800742c:	60b9      	str	r1, [r7, #8]
 800742e:	4613      	mov	r3, r2
 8007430:	80fb      	strh	r3, [r7, #6]
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007436:	2b20      	cmp	r3, #32
 8007438:	d156      	bne.n	80074e8 <HAL_UART_Transmit_IT+0xc4>
 800743a:	68bb      	ldr	r3, [r7, #8]
 800743c:	2b00      	cmp	r3, #0
 800743e:	d002      	beq.n	8007446 <HAL_UART_Transmit_IT+0x22>
 8007440:	88fb      	ldrh	r3, [r7, #6]
 8007442:	2b00      	cmp	r3, #0
 8007444:	d101      	bne.n	800744a <HAL_UART_Transmit_IT+0x26>
 8007446:	2301      	movs	r3, #1
 8007448:	e04f      	b.n	80074ea <HAL_UART_Transmit_IT+0xc6>
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007450:	2b01      	cmp	r3, #1
 8007452:	d101      	bne.n	8007458 <HAL_UART_Transmit_IT+0x34>
 8007454:	2302      	movs	r3, #2
 8007456:	e048      	b.n	80074ea <HAL_UART_Transmit_IT+0xc6>
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	2201      	movs	r2, #1
 800745c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007460:	68fb      	ldr	r3, [r7, #12]
 8007462:	68ba      	ldr	r2, [r7, #8]
 8007464:	64da      	str	r2, [r3, #76]	; 0x4c
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	88fa      	ldrh	r2, [r7, #6]
 800746a:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	88fa      	ldrh	r2, [r7, #6]
 8007472:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	2200      	movs	r2, #0
 800747a:	669a      	str	r2, [r3, #104]	; 0x68
 800747c:	68fb      	ldr	r3, [r7, #12]
 800747e:	2200      	movs	r2, #0
 8007480:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	2221      	movs	r2, #33	; 0x21
 8007488:	679a      	str	r2, [r3, #120]	; 0x78
 800748a:	68fb      	ldr	r3, [r7, #12]
 800748c:	689b      	ldr	r3, [r3, #8]
 800748e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007492:	d107      	bne.n	80074a4 <HAL_UART_Transmit_IT+0x80>
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	691b      	ldr	r3, [r3, #16]
 8007498:	2b00      	cmp	r3, #0
 800749a:	d103      	bne.n	80074a4 <HAL_UART_Transmit_IT+0x80>
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	4a16      	ldr	r2, [pc, #88]	; (80074f8 <HAL_UART_Transmit_IT+0xd4>)
 80074a0:	669a      	str	r2, [r3, #104]	; 0x68
 80074a2:	e002      	b.n	80074aa <HAL_UART_Transmit_IT+0x86>
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	4a15      	ldr	r2, [pc, #84]	; (80074fc <HAL_UART_Transmit_IT+0xd8>)
 80074a8:	669a      	str	r2, [r3, #104]	; 0x68
 80074aa:	68fb      	ldr	r3, [r7, #12]
 80074ac:	2200      	movs	r2, #0
 80074ae:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	617b      	str	r3, [r7, #20]
 80074b8:	697b      	ldr	r3, [r7, #20]
 80074ba:	e853 3f00 	ldrex	r3, [r3]
 80074be:	613b      	str	r3, [r7, #16]
 80074c0:	693b      	ldr	r3, [r7, #16]
 80074c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80074c6:	627b      	str	r3, [r7, #36]	; 0x24
 80074c8:	68fb      	ldr	r3, [r7, #12]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	461a      	mov	r2, r3
 80074ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074d0:	623b      	str	r3, [r7, #32]
 80074d2:	61fa      	str	r2, [r7, #28]
 80074d4:	69f9      	ldr	r1, [r7, #28]
 80074d6:	6a3a      	ldr	r2, [r7, #32]
 80074d8:	e841 2300 	strex	r3, r2, [r1]
 80074dc:	61bb      	str	r3, [r7, #24]
 80074de:	69bb      	ldr	r3, [r7, #24]
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	d1e6      	bne.n	80074b2 <HAL_UART_Transmit_IT+0x8e>
 80074e4:	2300      	movs	r3, #0
 80074e6:	e000      	b.n	80074ea <HAL_UART_Transmit_IT+0xc6>
 80074e8:	2302      	movs	r3, #2
 80074ea:	4618      	mov	r0, r3
 80074ec:	372c      	adds	r7, #44	; 0x2c
 80074ee:	46bd      	mov	sp, r7
 80074f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f4:	4770      	bx	lr
 80074f6:	bf00      	nop
 80074f8:	080086fd 	.word	0x080086fd
 80074fc:	08008647 	.word	0x08008647

08007500 <HAL_UART_Receive_IT>:
 8007500:	b580      	push	{r7, lr}
 8007502:	b08a      	sub	sp, #40	; 0x28
 8007504:	af00      	add	r7, sp, #0
 8007506:	60f8      	str	r0, [r7, #12]
 8007508:	60b9      	str	r1, [r7, #8]
 800750a:	4613      	mov	r3, r2
 800750c:	80fb      	strh	r3, [r7, #6]
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007512:	2b20      	cmp	r3, #32
 8007514:	d13d      	bne.n	8007592 <HAL_UART_Receive_IT+0x92>
 8007516:	68bb      	ldr	r3, [r7, #8]
 8007518:	2b00      	cmp	r3, #0
 800751a:	d002      	beq.n	8007522 <HAL_UART_Receive_IT+0x22>
 800751c:	88fb      	ldrh	r3, [r7, #6]
 800751e:	2b00      	cmp	r3, #0
 8007520:	d101      	bne.n	8007526 <HAL_UART_Receive_IT+0x26>
 8007522:	2301      	movs	r3, #1
 8007524:	e036      	b.n	8007594 <HAL_UART_Receive_IT+0x94>
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 800752c:	2b01      	cmp	r3, #1
 800752e:	d101      	bne.n	8007534 <HAL_UART_Receive_IT+0x34>
 8007530:	2302      	movs	r3, #2
 8007532:	e02f      	b.n	8007594 <HAL_UART_Receive_IT+0x94>
 8007534:	68fb      	ldr	r3, [r7, #12]
 8007536:	2201      	movs	r2, #1
 8007538:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800753c:	68fb      	ldr	r3, [r7, #12]
 800753e:	2200      	movs	r2, #0
 8007540:	661a      	str	r2, [r3, #96]	; 0x60
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	685b      	ldr	r3, [r3, #4]
 8007548:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800754c:	2b00      	cmp	r3, #0
 800754e:	d018      	beq.n	8007582 <HAL_UART_Receive_IT+0x82>
 8007550:	68fb      	ldr	r3, [r7, #12]
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	617b      	str	r3, [r7, #20]
 8007556:	697b      	ldr	r3, [r7, #20]
 8007558:	e853 3f00 	ldrex	r3, [r3]
 800755c:	613b      	str	r3, [r7, #16]
 800755e:	693b      	ldr	r3, [r7, #16]
 8007560:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8007564:	627b      	str	r3, [r7, #36]	; 0x24
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	681b      	ldr	r3, [r3, #0]
 800756a:	461a      	mov	r2, r3
 800756c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800756e:	623b      	str	r3, [r7, #32]
 8007570:	61fa      	str	r2, [r7, #28]
 8007572:	69f9      	ldr	r1, [r7, #28]
 8007574:	6a3a      	ldr	r2, [r7, #32]
 8007576:	e841 2300 	strex	r3, r2, [r1]
 800757a:	61bb      	str	r3, [r7, #24]
 800757c:	69bb      	ldr	r3, [r7, #24]
 800757e:	2b00      	cmp	r3, #0
 8007580:	d1e6      	bne.n	8007550 <HAL_UART_Receive_IT+0x50>
 8007582:	88fb      	ldrh	r3, [r7, #6]
 8007584:	461a      	mov	r2, r3
 8007586:	68b9      	ldr	r1, [r7, #8]
 8007588:	68f8      	ldr	r0, [r7, #12]
 800758a:	f000 ff19 	bl	80083c0 <UART_Start_Receive_IT>
 800758e:	4603      	mov	r3, r0
 8007590:	e000      	b.n	8007594 <HAL_UART_Receive_IT+0x94>
 8007592:	2302      	movs	r3, #2
 8007594:	4618      	mov	r0, r3
 8007596:	3728      	adds	r7, #40	; 0x28
 8007598:	46bd      	mov	sp, r7
 800759a:	bd80      	pop	{r7, pc}

0800759c <HAL_UART_IRQHandler>:
 800759c:	b580      	push	{r7, lr}
 800759e:	b0ba      	sub	sp, #232	; 0xe8
 80075a0:	af00      	add	r7, sp, #0
 80075a2:	6078      	str	r0, [r7, #4]
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	69db      	ldr	r3, [r3, #28]
 80075aa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	689b      	ldr	r3, [r3, #8]
 80075be:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80075c2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 80075c6:	f640 030f 	movw	r3, #2063	; 0x80f
 80075ca:	4013      	ands	r3, r2
 80075cc:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80075d0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80075d4:	2b00      	cmp	r3, #0
 80075d6:	d115      	bne.n	8007604 <HAL_UART_IRQHandler+0x68>
 80075d8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80075dc:	f003 0320 	and.w	r3, r3, #32
 80075e0:	2b00      	cmp	r3, #0
 80075e2:	d00f      	beq.n	8007604 <HAL_UART_IRQHandler+0x68>
 80075e4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80075e8:	f003 0320 	and.w	r3, r3, #32
 80075ec:	2b00      	cmp	r3, #0
 80075ee:	d009      	beq.n	8007604 <HAL_UART_IRQHandler+0x68>
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80075f4:	2b00      	cmp	r3, #0
 80075f6:	f000 82a4 	beq.w	8007b42 <HAL_UART_IRQHandler+0x5a6>
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80075fe:	6878      	ldr	r0, [r7, #4]
 8007600:	4798      	blx	r3
 8007602:	e29e      	b.n	8007b42 <HAL_UART_IRQHandler+0x5a6>
 8007604:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8007608:	2b00      	cmp	r3, #0
 800760a:	f000 8117 	beq.w	800783c <HAL_UART_IRQHandler+0x2a0>
 800760e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007612:	f003 0301 	and.w	r3, r3, #1
 8007616:	2b00      	cmp	r3, #0
 8007618:	d106      	bne.n	8007628 <HAL_UART_IRQHandler+0x8c>
 800761a:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800761e:	4b85      	ldr	r3, [pc, #532]	; (8007834 <HAL_UART_IRQHandler+0x298>)
 8007620:	4013      	ands	r3, r2
 8007622:	2b00      	cmp	r3, #0
 8007624:	f000 810a 	beq.w	800783c <HAL_UART_IRQHandler+0x2a0>
 8007628:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800762c:	f003 0301 	and.w	r3, r3, #1
 8007630:	2b00      	cmp	r3, #0
 8007632:	d011      	beq.n	8007658 <HAL_UART_IRQHandler+0xbc>
 8007634:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007638:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800763c:	2b00      	cmp	r3, #0
 800763e:	d00b      	beq.n	8007658 <HAL_UART_IRQHandler+0xbc>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	2201      	movs	r2, #1
 8007646:	621a      	str	r2, [r3, #32]
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800764e:	f043 0201 	orr.w	r2, r3, #1
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007658:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800765c:	f003 0302 	and.w	r3, r3, #2
 8007660:	2b00      	cmp	r3, #0
 8007662:	d011      	beq.n	8007688 <HAL_UART_IRQHandler+0xec>
 8007664:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007668:	f003 0301 	and.w	r3, r3, #1
 800766c:	2b00      	cmp	r3, #0
 800766e:	d00b      	beq.n	8007688 <HAL_UART_IRQHandler+0xec>
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	2202      	movs	r2, #2
 8007676:	621a      	str	r2, [r3, #32]
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800767e:	f043 0204 	orr.w	r2, r3, #4
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007688:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800768c:	f003 0304 	and.w	r3, r3, #4
 8007690:	2b00      	cmp	r3, #0
 8007692:	d011      	beq.n	80076b8 <HAL_UART_IRQHandler+0x11c>
 8007694:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007698:	f003 0301 	and.w	r3, r3, #1
 800769c:	2b00      	cmp	r3, #0
 800769e:	d00b      	beq.n	80076b8 <HAL_UART_IRQHandler+0x11c>
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	2204      	movs	r2, #4
 80076a6:	621a      	str	r2, [r3, #32]
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80076ae:	f043 0202 	orr.w	r2, r3, #2
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80076b8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80076bc:	f003 0308 	and.w	r3, r3, #8
 80076c0:	2b00      	cmp	r3, #0
 80076c2:	d017      	beq.n	80076f4 <HAL_UART_IRQHandler+0x158>
 80076c4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80076c8:	f003 0320 	and.w	r3, r3, #32
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	d105      	bne.n	80076dc <HAL_UART_IRQHandler+0x140>
 80076d0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80076d4:	f003 0301 	and.w	r3, r3, #1
 80076d8:	2b00      	cmp	r3, #0
 80076da:	d00b      	beq.n	80076f4 <HAL_UART_IRQHandler+0x158>
 80076dc:	687b      	ldr	r3, [r7, #4]
 80076de:	681b      	ldr	r3, [r3, #0]
 80076e0:	2208      	movs	r2, #8
 80076e2:	621a      	str	r2, [r3, #32]
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80076ea:	f043 0208 	orr.w	r2, r3, #8
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80076f4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80076f8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d012      	beq.n	8007726 <HAL_UART_IRQHandler+0x18a>
 8007700:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007704:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8007708:	2b00      	cmp	r3, #0
 800770a:	d00c      	beq.n	8007726 <HAL_UART_IRQHandler+0x18a>
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8007714:	621a      	str	r2, [r3, #32]
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800771c:	f043 0220 	orr.w	r2, r3, #32
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800772c:	2b00      	cmp	r3, #0
 800772e:	f000 820a 	beq.w	8007b46 <HAL_UART_IRQHandler+0x5aa>
 8007732:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007736:	f003 0320 	and.w	r3, r3, #32
 800773a:	2b00      	cmp	r3, #0
 800773c:	d00d      	beq.n	800775a <HAL_UART_IRQHandler+0x1be>
 800773e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007742:	f003 0320 	and.w	r3, r3, #32
 8007746:	2b00      	cmp	r3, #0
 8007748:	d007      	beq.n	800775a <HAL_UART_IRQHandler+0x1be>
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800774e:	2b00      	cmp	r3, #0
 8007750:	d003      	beq.n	800775a <HAL_UART_IRQHandler+0x1be>
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007756:	6878      	ldr	r0, [r7, #4]
 8007758:	4798      	blx	r3
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007760:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	689b      	ldr	r3, [r3, #8]
 800776a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800776e:	2b40      	cmp	r3, #64	; 0x40
 8007770:	d005      	beq.n	800777e <HAL_UART_IRQHandler+0x1e2>
 8007772:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007776:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800777a:	2b00      	cmp	r3, #0
 800777c:	d04f      	beq.n	800781e <HAL_UART_IRQHandler+0x282>
 800777e:	6878      	ldr	r0, [r7, #4]
 8007780:	f000 fee8 	bl	8008554 <UART_EndRxTransfer>
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	681b      	ldr	r3, [r3, #0]
 8007788:	689b      	ldr	r3, [r3, #8]
 800778a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800778e:	2b40      	cmp	r3, #64	; 0x40
 8007790:	d141      	bne.n	8007816 <HAL_UART_IRQHandler+0x27a>
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	3308      	adds	r3, #8
 8007798:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800779c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80077a0:	e853 3f00 	ldrex	r3, [r3]
 80077a4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80077a8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80077ac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80077b0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	3308      	adds	r3, #8
 80077ba:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80077be:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80077c2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80077c6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80077ca:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80077ce:	e841 2300 	strex	r3, r2, [r1]
 80077d2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80077d6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80077da:	2b00      	cmp	r3, #0
 80077dc:	d1d9      	bne.n	8007792 <HAL_UART_IRQHandler+0x1f6>
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80077e2:	2b00      	cmp	r3, #0
 80077e4:	d013      	beq.n	800780e <HAL_UART_IRQHandler+0x272>
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80077ea:	4a13      	ldr	r2, [pc, #76]	; (8007838 <HAL_UART_IRQHandler+0x29c>)
 80077ec:	651a      	str	r2, [r3, #80]	; 0x50
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80077f2:	4618      	mov	r0, r3
 80077f4:	f7fc ff3b 	bl	800466e <HAL_DMA_Abort_IT>
 80077f8:	4603      	mov	r3, r0
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d017      	beq.n	800782e <HAL_UART_IRQHandler+0x292>
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007802:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007804:	687a      	ldr	r2, [r7, #4]
 8007806:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8007808:	4610      	mov	r0, r2
 800780a:	4798      	blx	r3
 800780c:	e00f      	b.n	800782e <HAL_UART_IRQHandler+0x292>
 800780e:	6878      	ldr	r0, [r7, #4]
 8007810:	f000 f9a4 	bl	8007b5c <HAL_UART_ErrorCallback>
 8007814:	e00b      	b.n	800782e <HAL_UART_IRQHandler+0x292>
 8007816:	6878      	ldr	r0, [r7, #4]
 8007818:	f000 f9a0 	bl	8007b5c <HAL_UART_ErrorCallback>
 800781c:	e007      	b.n	800782e <HAL_UART_IRQHandler+0x292>
 800781e:	6878      	ldr	r0, [r7, #4]
 8007820:	f000 f99c 	bl	8007b5c <HAL_UART_ErrorCallback>
 8007824:	687b      	ldr	r3, [r7, #4]
 8007826:	2200      	movs	r2, #0
 8007828:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800782c:	e18b      	b.n	8007b46 <HAL_UART_IRQHandler+0x5aa>
 800782e:	bf00      	nop
 8007830:	e189      	b.n	8007b46 <HAL_UART_IRQHandler+0x5aa>
 8007832:	bf00      	nop
 8007834:	04000120 	.word	0x04000120
 8007838:	0800861b 	.word	0x0800861b
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007840:	2b01      	cmp	r3, #1
 8007842:	f040 8144 	bne.w	8007ace <HAL_UART_IRQHandler+0x532>
 8007846:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800784a:	f003 0310 	and.w	r3, r3, #16
 800784e:	2b00      	cmp	r3, #0
 8007850:	f000 813d 	beq.w	8007ace <HAL_UART_IRQHandler+0x532>
 8007854:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007858:	f003 0310 	and.w	r3, r3, #16
 800785c:	2b00      	cmp	r3, #0
 800785e:	f000 8136 	beq.w	8007ace <HAL_UART_IRQHandler+0x532>
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	2210      	movs	r2, #16
 8007868:	621a      	str	r2, [r3, #32]
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	689b      	ldr	r3, [r3, #8]
 8007870:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007874:	2b40      	cmp	r3, #64	; 0x40
 8007876:	f040 80b2 	bne.w	80079de <HAL_UART_IRQHandler+0x442>
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	685b      	ldr	r3, [r3, #4]
 8007882:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8007886:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800788a:	2b00      	cmp	r3, #0
 800788c:	f000 815d 	beq.w	8007b4a <HAL_UART_IRQHandler+0x5ae>
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8007896:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800789a:	429a      	cmp	r2, r3
 800789c:	f080 8155 	bcs.w	8007b4a <HAL_UART_IRQHandler+0x5ae>
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80078a6:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80078ae:	69db      	ldr	r3, [r3, #28]
 80078b0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80078b4:	f000 8085 	beq.w	80079c2 <HAL_UART_IRQHandler+0x426>
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	681b      	ldr	r3, [r3, #0]
 80078bc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80078c0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80078c4:	e853 3f00 	ldrex	r3, [r3]
 80078c8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80078cc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80078d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80078d4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	681b      	ldr	r3, [r3, #0]
 80078dc:	461a      	mov	r2, r3
 80078de:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 80078e2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80078e6:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80078ea:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 80078ee:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80078f2:	e841 2300 	strex	r3, r2, [r1]
 80078f6:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80078fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d1da      	bne.n	80078b8 <HAL_UART_IRQHandler+0x31c>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	681b      	ldr	r3, [r3, #0]
 8007906:	3308      	adds	r3, #8
 8007908:	677b      	str	r3, [r7, #116]	; 0x74
 800790a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800790c:	e853 3f00 	ldrex	r3, [r3]
 8007910:	673b      	str	r3, [r7, #112]	; 0x70
 8007912:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007914:	f023 0301 	bic.w	r3, r3, #1
 8007918:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	681b      	ldr	r3, [r3, #0]
 8007920:	3308      	adds	r3, #8
 8007922:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8007926:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800792a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800792c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800792e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8007932:	e841 2300 	strex	r3, r2, [r1]
 8007936:	67bb      	str	r3, [r7, #120]	; 0x78
 8007938:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800793a:	2b00      	cmp	r3, #0
 800793c:	d1e1      	bne.n	8007902 <HAL_UART_IRQHandler+0x366>
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	3308      	adds	r3, #8
 8007944:	663b      	str	r3, [r7, #96]	; 0x60
 8007946:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8007948:	e853 3f00 	ldrex	r3, [r3]
 800794c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800794e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8007950:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007954:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	681b      	ldr	r3, [r3, #0]
 800795c:	3308      	adds	r3, #8
 800795e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8007962:	66fa      	str	r2, [r7, #108]	; 0x6c
 8007964:	66bb      	str	r3, [r7, #104]	; 0x68
 8007966:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8007968:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800796a:	e841 2300 	strex	r3, r2, [r1]
 800796e:	667b      	str	r3, [r7, #100]	; 0x64
 8007970:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8007972:	2b00      	cmp	r3, #0
 8007974:	d1e3      	bne.n	800793e <HAL_UART_IRQHandler+0x3a2>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	2220      	movs	r2, #32
 800797a:	67da      	str	r2, [r3, #124]	; 0x7c
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	2200      	movs	r2, #0
 8007980:	661a      	str	r2, [r3, #96]	; 0x60
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	681b      	ldr	r3, [r3, #0]
 8007986:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007988:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800798a:	e853 3f00 	ldrex	r3, [r3]
 800798e:	64bb      	str	r3, [r7, #72]	; 0x48
 8007990:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007992:	f023 0310 	bic.w	r3, r3, #16
 8007996:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	461a      	mov	r2, r3
 80079a0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80079a4:	65bb      	str	r3, [r7, #88]	; 0x58
 80079a6:	657a      	str	r2, [r7, #84]	; 0x54
 80079a8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80079aa:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80079ac:	e841 2300 	strex	r3, r2, [r1]
 80079b0:	653b      	str	r3, [r7, #80]	; 0x50
 80079b2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d1e4      	bne.n	8007982 <HAL_UART_IRQHandler+0x3e6>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80079bc:	4618      	mov	r0, r3
 80079be:	f7fc fde6 	bl	800458e <HAL_DMA_Abort>
 80079c2:	687b      	ldr	r3, [r7, #4]
 80079c4:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80079ce:	b29b      	uxth	r3, r3
 80079d0:	1ad3      	subs	r3, r2, r3
 80079d2:	b29b      	uxth	r3, r3
 80079d4:	4619      	mov	r1, r3
 80079d6:	6878      	ldr	r0, [r7, #4]
 80079d8:	f000 f8ca 	bl	8007b70 <HAL_UARTEx_RxEventCallback>
 80079dc:	e0b5      	b.n	8007b4a <HAL_UART_IRQHandler+0x5ae>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80079ea:	b29b      	uxth	r3, r3
 80079ec:	1ad3      	subs	r3, r2, r3
 80079ee:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80079f8:	b29b      	uxth	r3, r3
 80079fa:	2b00      	cmp	r3, #0
 80079fc:	f000 80a7 	beq.w	8007b4e <HAL_UART_IRQHandler+0x5b2>
 8007a00:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8007a04:	2b00      	cmp	r3, #0
 8007a06:	f000 80a2 	beq.w	8007b4e <HAL_UART_IRQHandler+0x5b2>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	63bb      	str	r3, [r7, #56]	; 0x38
 8007a10:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007a12:	e853 3f00 	ldrex	r3, [r3]
 8007a16:	637b      	str	r3, [r7, #52]	; 0x34
 8007a18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007a1a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007a1e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8007a22:	687b      	ldr	r3, [r7, #4]
 8007a24:	681b      	ldr	r3, [r3, #0]
 8007a26:	461a      	mov	r2, r3
 8007a28:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8007a2c:	647b      	str	r3, [r7, #68]	; 0x44
 8007a2e:	643a      	str	r2, [r7, #64]	; 0x40
 8007a30:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8007a32:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007a34:	e841 2300 	strex	r3, r2, [r1]
 8007a38:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007a3a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007a3c:	2b00      	cmp	r3, #0
 8007a3e:	d1e4      	bne.n	8007a0a <HAL_UART_IRQHandler+0x46e>
 8007a40:	687b      	ldr	r3, [r7, #4]
 8007a42:	681b      	ldr	r3, [r3, #0]
 8007a44:	3308      	adds	r3, #8
 8007a46:	627b      	str	r3, [r7, #36]	; 0x24
 8007a48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007a4a:	e853 3f00 	ldrex	r3, [r3]
 8007a4e:	623b      	str	r3, [r7, #32]
 8007a50:	6a3b      	ldr	r3, [r7, #32]
 8007a52:	f023 0301 	bic.w	r3, r3, #1
 8007a56:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8007a5a:	687b      	ldr	r3, [r7, #4]
 8007a5c:	681b      	ldr	r3, [r3, #0]
 8007a5e:	3308      	adds	r3, #8
 8007a60:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8007a64:	633a      	str	r2, [r7, #48]	; 0x30
 8007a66:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007a68:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8007a6a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007a6c:	e841 2300 	strex	r3, r2, [r1]
 8007a70:	62bb      	str	r3, [r7, #40]	; 0x28
 8007a72:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	d1e3      	bne.n	8007a40 <HAL_UART_IRQHandler+0x4a4>
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	2220      	movs	r2, #32
 8007a7c:	67da      	str	r2, [r3, #124]	; 0x7c
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	2200      	movs	r2, #0
 8007a82:	661a      	str	r2, [r3, #96]	; 0x60
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	2200      	movs	r2, #0
 8007a88:	665a      	str	r2, [r3, #100]	; 0x64
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	613b      	str	r3, [r7, #16]
 8007a90:	693b      	ldr	r3, [r7, #16]
 8007a92:	e853 3f00 	ldrex	r3, [r3]
 8007a96:	60fb      	str	r3, [r7, #12]
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	f023 0310 	bic.w	r3, r3, #16
 8007a9e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	461a      	mov	r2, r3
 8007aa8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8007aac:	61fb      	str	r3, [r7, #28]
 8007aae:	61ba      	str	r2, [r7, #24]
 8007ab0:	69b9      	ldr	r1, [r7, #24]
 8007ab2:	69fa      	ldr	r2, [r7, #28]
 8007ab4:	e841 2300 	strex	r3, r2, [r1]
 8007ab8:	617b      	str	r3, [r7, #20]
 8007aba:	697b      	ldr	r3, [r7, #20]
 8007abc:	2b00      	cmp	r3, #0
 8007abe:	d1e4      	bne.n	8007a8a <HAL_UART_IRQHandler+0x4ee>
 8007ac0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8007ac4:	4619      	mov	r1, r3
 8007ac6:	6878      	ldr	r0, [r7, #4]
 8007ac8:	f000 f852 	bl	8007b70 <HAL_UARTEx_RxEventCallback>
 8007acc:	e03f      	b.n	8007b4e <HAL_UART_IRQHandler+0x5b2>
 8007ace:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007ad2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d00e      	beq.n	8007af8 <HAL_UART_IRQHandler+0x55c>
 8007ada:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007ade:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d008      	beq.n	8007af8 <HAL_UART_IRQHandler+0x55c>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	681b      	ldr	r3, [r3, #0]
 8007aea:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8007aee:	621a      	str	r2, [r3, #32]
 8007af0:	6878      	ldr	r0, [r7, #4]
 8007af2:	f000 f849 	bl	8007b88 <HAL_UARTEx_WakeupCallback>
 8007af6:	e02d      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007af8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007afc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007b00:	2b00      	cmp	r3, #0
 8007b02:	d00e      	beq.n	8007b22 <HAL_UART_IRQHandler+0x586>
 8007b04:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007b08:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007b0c:	2b00      	cmp	r3, #0
 8007b0e:	d008      	beq.n	8007b22 <HAL_UART_IRQHandler+0x586>
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007b14:	2b00      	cmp	r3, #0
 8007b16:	d01c      	beq.n	8007b52 <HAL_UART_IRQHandler+0x5b6>
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007b1c:	6878      	ldr	r0, [r7, #4]
 8007b1e:	4798      	blx	r3
 8007b20:	e017      	b.n	8007b52 <HAL_UART_IRQHandler+0x5b6>
 8007b22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007b26:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d012      	beq.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b2e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007b32:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007b36:	2b00      	cmp	r3, #0
 8007b38:	d00c      	beq.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b3a:	6878      	ldr	r0, [r7, #4]
 8007b3c:	f000 fe3e 	bl	80087bc <UART_EndTransmit_IT>
 8007b40:	e008      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b42:	bf00      	nop
 8007b44:	e006      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b46:	bf00      	nop
 8007b48:	e004      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b4a:	bf00      	nop
 8007b4c:	e002      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b4e:	bf00      	nop
 8007b50:	e000      	b.n	8007b54 <HAL_UART_IRQHandler+0x5b8>
 8007b52:	bf00      	nop
 8007b54:	37e8      	adds	r7, #232	; 0xe8
 8007b56:	46bd      	mov	sp, r7
 8007b58:	bd80      	pop	{r7, pc}
 8007b5a:	bf00      	nop

08007b5c <HAL_UART_ErrorCallback>:
 8007b5c:	b480      	push	{r7}
 8007b5e:	b083      	sub	sp, #12
 8007b60:	af00      	add	r7, sp, #0
 8007b62:	6078      	str	r0, [r7, #4]
 8007b64:	bf00      	nop
 8007b66:	370c      	adds	r7, #12
 8007b68:	46bd      	mov	sp, r7
 8007b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b6e:	4770      	bx	lr

08007b70 <HAL_UARTEx_RxEventCallback>:
 8007b70:	b480      	push	{r7}
 8007b72:	b083      	sub	sp, #12
 8007b74:	af00      	add	r7, sp, #0
 8007b76:	6078      	str	r0, [r7, #4]
 8007b78:	460b      	mov	r3, r1
 8007b7a:	807b      	strh	r3, [r7, #2]
 8007b7c:	bf00      	nop
 8007b7e:	370c      	adds	r7, #12
 8007b80:	46bd      	mov	sp, r7
 8007b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b86:	4770      	bx	lr

08007b88 <HAL_UARTEx_WakeupCallback>:
 8007b88:	b480      	push	{r7}
 8007b8a:	b083      	sub	sp, #12
 8007b8c:	af00      	add	r7, sp, #0
 8007b8e:	6078      	str	r0, [r7, #4]
 8007b90:	bf00      	nop
 8007b92:	370c      	adds	r7, #12
 8007b94:	46bd      	mov	sp, r7
 8007b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b9a:	4770      	bx	lr

08007b9c <UART_SetConfig>:
 8007b9c:	b580      	push	{r7, lr}
 8007b9e:	b088      	sub	sp, #32
 8007ba0:	af00      	add	r7, sp, #0
 8007ba2:	6078      	str	r0, [r7, #4]
 8007ba4:	2300      	movs	r3, #0
 8007ba6:	77bb      	strb	r3, [r7, #30]
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	689a      	ldr	r2, [r3, #8]
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	691b      	ldr	r3, [r3, #16]
 8007bb0:	431a      	orrs	r2, r3
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	695b      	ldr	r3, [r3, #20]
 8007bb6:	431a      	orrs	r2, r3
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	69db      	ldr	r3, [r3, #28]
 8007bbc:	4313      	orrs	r3, r2
 8007bbe:	617b      	str	r3, [r7, #20]
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	681b      	ldr	r3, [r3, #0]
 8007bc4:	681a      	ldr	r2, [r3, #0]
 8007bc6:	4ba7      	ldr	r3, [pc, #668]	; (8007e64 <UART_SetConfig+0x2c8>)
 8007bc8:	4013      	ands	r3, r2
 8007bca:	687a      	ldr	r2, [r7, #4]
 8007bcc:	6812      	ldr	r2, [r2, #0]
 8007bce:	6979      	ldr	r1, [r7, #20]
 8007bd0:	430b      	orrs	r3, r1
 8007bd2:	6013      	str	r3, [r2, #0]
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	685b      	ldr	r3, [r3, #4]
 8007bda:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	68da      	ldr	r2, [r3, #12]
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	681b      	ldr	r3, [r3, #0]
 8007be6:	430a      	orrs	r2, r1
 8007be8:	605a      	str	r2, [r3, #4]
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	699b      	ldr	r3, [r3, #24]
 8007bee:	617b      	str	r3, [r7, #20]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	6a1b      	ldr	r3, [r3, #32]
 8007bf4:	697a      	ldr	r2, [r7, #20]
 8007bf6:	4313      	orrs	r3, r2
 8007bf8:	617b      	str	r3, [r7, #20]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	689b      	ldr	r3, [r3, #8]
 8007c00:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	697a      	ldr	r2, [r7, #20]
 8007c0a:	430a      	orrs	r2, r1
 8007c0c:	609a      	str	r2, [r3, #8]
 8007c0e:	687b      	ldr	r3, [r7, #4]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	4a95      	ldr	r2, [pc, #596]	; (8007e68 <UART_SetConfig+0x2cc>)
 8007c14:	4293      	cmp	r3, r2
 8007c16:	d120      	bne.n	8007c5a <UART_SetConfig+0xbe>
 8007c18:	4b94      	ldr	r3, [pc, #592]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007c1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c1e:	f003 0303 	and.w	r3, r3, #3
 8007c22:	2b03      	cmp	r3, #3
 8007c24:	d816      	bhi.n	8007c54 <UART_SetConfig+0xb8>
 8007c26:	a201      	add	r2, pc, #4	; (adr r2, 8007c2c <UART_SetConfig+0x90>)
 8007c28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007c2c:	08007c3d 	.word	0x08007c3d
 8007c30:	08007c49 	.word	0x08007c49
 8007c34:	08007c43 	.word	0x08007c43
 8007c38:	08007c4f 	.word	0x08007c4f
 8007c3c:	2301      	movs	r3, #1
 8007c3e:	77fb      	strb	r3, [r7, #31]
 8007c40:	e14f      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007c42:	2302      	movs	r3, #2
 8007c44:	77fb      	strb	r3, [r7, #31]
 8007c46:	e14c      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007c48:	2304      	movs	r3, #4
 8007c4a:	77fb      	strb	r3, [r7, #31]
 8007c4c:	e149      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007c4e:	2308      	movs	r3, #8
 8007c50:	77fb      	strb	r3, [r7, #31]
 8007c52:	e146      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007c54:	2310      	movs	r3, #16
 8007c56:	77fb      	strb	r3, [r7, #31]
 8007c58:	e143      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	681b      	ldr	r3, [r3, #0]
 8007c5e:	4a84      	ldr	r2, [pc, #528]	; (8007e70 <UART_SetConfig+0x2d4>)
 8007c60:	4293      	cmp	r3, r2
 8007c62:	d132      	bne.n	8007cca <UART_SetConfig+0x12e>
 8007c64:	4b81      	ldr	r3, [pc, #516]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007c66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c6a:	f003 030c 	and.w	r3, r3, #12
 8007c6e:	2b0c      	cmp	r3, #12
 8007c70:	d828      	bhi.n	8007cc4 <UART_SetConfig+0x128>
 8007c72:	a201      	add	r2, pc, #4	; (adr r2, 8007c78 <UART_SetConfig+0xdc>)
 8007c74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007c78:	08007cad 	.word	0x08007cad
 8007c7c:	08007cc5 	.word	0x08007cc5
 8007c80:	08007cc5 	.word	0x08007cc5
 8007c84:	08007cc5 	.word	0x08007cc5
 8007c88:	08007cb9 	.word	0x08007cb9
 8007c8c:	08007cc5 	.word	0x08007cc5
 8007c90:	08007cc5 	.word	0x08007cc5
 8007c94:	08007cc5 	.word	0x08007cc5
 8007c98:	08007cb3 	.word	0x08007cb3
 8007c9c:	08007cc5 	.word	0x08007cc5
 8007ca0:	08007cc5 	.word	0x08007cc5
 8007ca4:	08007cc5 	.word	0x08007cc5
 8007ca8:	08007cbf 	.word	0x08007cbf
 8007cac:	2300      	movs	r3, #0
 8007cae:	77fb      	strb	r3, [r7, #31]
 8007cb0:	e117      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cb2:	2302      	movs	r3, #2
 8007cb4:	77fb      	strb	r3, [r7, #31]
 8007cb6:	e114      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cb8:	2304      	movs	r3, #4
 8007cba:	77fb      	strb	r3, [r7, #31]
 8007cbc:	e111      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cbe:	2308      	movs	r3, #8
 8007cc0:	77fb      	strb	r3, [r7, #31]
 8007cc2:	e10e      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cc4:	2310      	movs	r3, #16
 8007cc6:	77fb      	strb	r3, [r7, #31]
 8007cc8:	e10b      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cca:	687b      	ldr	r3, [r7, #4]
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	4a69      	ldr	r2, [pc, #420]	; (8007e74 <UART_SetConfig+0x2d8>)
 8007cd0:	4293      	cmp	r3, r2
 8007cd2:	d120      	bne.n	8007d16 <UART_SetConfig+0x17a>
 8007cd4:	4b65      	ldr	r3, [pc, #404]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007cd6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007cda:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8007cde:	2b30      	cmp	r3, #48	; 0x30
 8007ce0:	d013      	beq.n	8007d0a <UART_SetConfig+0x16e>
 8007ce2:	2b30      	cmp	r3, #48	; 0x30
 8007ce4:	d814      	bhi.n	8007d10 <UART_SetConfig+0x174>
 8007ce6:	2b20      	cmp	r3, #32
 8007ce8:	d009      	beq.n	8007cfe <UART_SetConfig+0x162>
 8007cea:	2b20      	cmp	r3, #32
 8007cec:	d810      	bhi.n	8007d10 <UART_SetConfig+0x174>
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	d002      	beq.n	8007cf8 <UART_SetConfig+0x15c>
 8007cf2:	2b10      	cmp	r3, #16
 8007cf4:	d006      	beq.n	8007d04 <UART_SetConfig+0x168>
 8007cf6:	e00b      	b.n	8007d10 <UART_SetConfig+0x174>
 8007cf8:	2300      	movs	r3, #0
 8007cfa:	77fb      	strb	r3, [r7, #31]
 8007cfc:	e0f1      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007cfe:	2302      	movs	r3, #2
 8007d00:	77fb      	strb	r3, [r7, #31]
 8007d02:	e0ee      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d04:	2304      	movs	r3, #4
 8007d06:	77fb      	strb	r3, [r7, #31]
 8007d08:	e0eb      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d0a:	2308      	movs	r3, #8
 8007d0c:	77fb      	strb	r3, [r7, #31]
 8007d0e:	e0e8      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d10:	2310      	movs	r3, #16
 8007d12:	77fb      	strb	r3, [r7, #31]
 8007d14:	e0e5      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	4a57      	ldr	r2, [pc, #348]	; (8007e78 <UART_SetConfig+0x2dc>)
 8007d1c:	4293      	cmp	r3, r2
 8007d1e:	d120      	bne.n	8007d62 <UART_SetConfig+0x1c6>
 8007d20:	4b52      	ldr	r3, [pc, #328]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007d22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007d26:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8007d2a:	2bc0      	cmp	r3, #192	; 0xc0
 8007d2c:	d013      	beq.n	8007d56 <UART_SetConfig+0x1ba>
 8007d2e:	2bc0      	cmp	r3, #192	; 0xc0
 8007d30:	d814      	bhi.n	8007d5c <UART_SetConfig+0x1c0>
 8007d32:	2b80      	cmp	r3, #128	; 0x80
 8007d34:	d009      	beq.n	8007d4a <UART_SetConfig+0x1ae>
 8007d36:	2b80      	cmp	r3, #128	; 0x80
 8007d38:	d810      	bhi.n	8007d5c <UART_SetConfig+0x1c0>
 8007d3a:	2b00      	cmp	r3, #0
 8007d3c:	d002      	beq.n	8007d44 <UART_SetConfig+0x1a8>
 8007d3e:	2b40      	cmp	r3, #64	; 0x40
 8007d40:	d006      	beq.n	8007d50 <UART_SetConfig+0x1b4>
 8007d42:	e00b      	b.n	8007d5c <UART_SetConfig+0x1c0>
 8007d44:	2300      	movs	r3, #0
 8007d46:	77fb      	strb	r3, [r7, #31]
 8007d48:	e0cb      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d4a:	2302      	movs	r3, #2
 8007d4c:	77fb      	strb	r3, [r7, #31]
 8007d4e:	e0c8      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d50:	2304      	movs	r3, #4
 8007d52:	77fb      	strb	r3, [r7, #31]
 8007d54:	e0c5      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d56:	2308      	movs	r3, #8
 8007d58:	77fb      	strb	r3, [r7, #31]
 8007d5a:	e0c2      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d5c:	2310      	movs	r3, #16
 8007d5e:	77fb      	strb	r3, [r7, #31]
 8007d60:	e0bf      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	681b      	ldr	r3, [r3, #0]
 8007d66:	4a45      	ldr	r2, [pc, #276]	; (8007e7c <UART_SetConfig+0x2e0>)
 8007d68:	4293      	cmp	r3, r2
 8007d6a:	d125      	bne.n	8007db8 <UART_SetConfig+0x21c>
 8007d6c:	4b3f      	ldr	r3, [pc, #252]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007d6e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007d72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007d76:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007d7a:	d017      	beq.n	8007dac <UART_SetConfig+0x210>
 8007d7c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007d80:	d817      	bhi.n	8007db2 <UART_SetConfig+0x216>
 8007d82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007d86:	d00b      	beq.n	8007da0 <UART_SetConfig+0x204>
 8007d88:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007d8c:	d811      	bhi.n	8007db2 <UART_SetConfig+0x216>
 8007d8e:	2b00      	cmp	r3, #0
 8007d90:	d003      	beq.n	8007d9a <UART_SetConfig+0x1fe>
 8007d92:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007d96:	d006      	beq.n	8007da6 <UART_SetConfig+0x20a>
 8007d98:	e00b      	b.n	8007db2 <UART_SetConfig+0x216>
 8007d9a:	2300      	movs	r3, #0
 8007d9c:	77fb      	strb	r3, [r7, #31]
 8007d9e:	e0a0      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007da0:	2302      	movs	r3, #2
 8007da2:	77fb      	strb	r3, [r7, #31]
 8007da4:	e09d      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007da6:	2304      	movs	r3, #4
 8007da8:	77fb      	strb	r3, [r7, #31]
 8007daa:	e09a      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007dac:	2308      	movs	r3, #8
 8007dae:	77fb      	strb	r3, [r7, #31]
 8007db0:	e097      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007db2:	2310      	movs	r3, #16
 8007db4:	77fb      	strb	r3, [r7, #31]
 8007db6:	e094      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007db8:	687b      	ldr	r3, [r7, #4]
 8007dba:	681b      	ldr	r3, [r3, #0]
 8007dbc:	4a30      	ldr	r2, [pc, #192]	; (8007e80 <UART_SetConfig+0x2e4>)
 8007dbe:	4293      	cmp	r3, r2
 8007dc0:	d125      	bne.n	8007e0e <UART_SetConfig+0x272>
 8007dc2:	4b2a      	ldr	r3, [pc, #168]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007dc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007dc8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8007dcc:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007dd0:	d017      	beq.n	8007e02 <UART_SetConfig+0x266>
 8007dd2:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007dd6:	d817      	bhi.n	8007e08 <UART_SetConfig+0x26c>
 8007dd8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007ddc:	d00b      	beq.n	8007df6 <UART_SetConfig+0x25a>
 8007dde:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007de2:	d811      	bhi.n	8007e08 <UART_SetConfig+0x26c>
 8007de4:	2b00      	cmp	r3, #0
 8007de6:	d003      	beq.n	8007df0 <UART_SetConfig+0x254>
 8007de8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007dec:	d006      	beq.n	8007dfc <UART_SetConfig+0x260>
 8007dee:	e00b      	b.n	8007e08 <UART_SetConfig+0x26c>
 8007df0:	2301      	movs	r3, #1
 8007df2:	77fb      	strb	r3, [r7, #31]
 8007df4:	e075      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007df6:	2302      	movs	r3, #2
 8007df8:	77fb      	strb	r3, [r7, #31]
 8007dfa:	e072      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007dfc:	2304      	movs	r3, #4
 8007dfe:	77fb      	strb	r3, [r7, #31]
 8007e00:	e06f      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e02:	2308      	movs	r3, #8
 8007e04:	77fb      	strb	r3, [r7, #31]
 8007e06:	e06c      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e08:	2310      	movs	r3, #16
 8007e0a:	77fb      	strb	r3, [r7, #31]
 8007e0c:	e069      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	681b      	ldr	r3, [r3, #0]
 8007e12:	4a1c      	ldr	r2, [pc, #112]	; (8007e84 <UART_SetConfig+0x2e8>)
 8007e14:	4293      	cmp	r3, r2
 8007e16:	d137      	bne.n	8007e88 <UART_SetConfig+0x2ec>
 8007e18:	4b14      	ldr	r3, [pc, #80]	; (8007e6c <UART_SetConfig+0x2d0>)
 8007e1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007e1e:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8007e22:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007e26:	d017      	beq.n	8007e58 <UART_SetConfig+0x2bc>
 8007e28:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007e2c:	d817      	bhi.n	8007e5e <UART_SetConfig+0x2c2>
 8007e2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007e32:	d00b      	beq.n	8007e4c <UART_SetConfig+0x2b0>
 8007e34:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007e38:	d811      	bhi.n	8007e5e <UART_SetConfig+0x2c2>
 8007e3a:	2b00      	cmp	r3, #0
 8007e3c:	d003      	beq.n	8007e46 <UART_SetConfig+0x2aa>
 8007e3e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007e42:	d006      	beq.n	8007e52 <UART_SetConfig+0x2b6>
 8007e44:	e00b      	b.n	8007e5e <UART_SetConfig+0x2c2>
 8007e46:	2300      	movs	r3, #0
 8007e48:	77fb      	strb	r3, [r7, #31]
 8007e4a:	e04a      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e4c:	2302      	movs	r3, #2
 8007e4e:	77fb      	strb	r3, [r7, #31]
 8007e50:	e047      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e52:	2304      	movs	r3, #4
 8007e54:	77fb      	strb	r3, [r7, #31]
 8007e56:	e044      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e58:	2308      	movs	r3, #8
 8007e5a:	77fb      	strb	r3, [r7, #31]
 8007e5c:	e041      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e5e:	2310      	movs	r3, #16
 8007e60:	77fb      	strb	r3, [r7, #31]
 8007e62:	e03e      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007e64:	efff69f3 	.word	0xefff69f3
 8007e68:	40011000 	.word	0x40011000
 8007e6c:	40023800 	.word	0x40023800
 8007e70:	40004400 	.word	0x40004400
 8007e74:	40004800 	.word	0x40004800
 8007e78:	40004c00 	.word	0x40004c00
 8007e7c:	40005000 	.word	0x40005000
 8007e80:	40011400 	.word	0x40011400
 8007e84:	40007800 	.word	0x40007800
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	681b      	ldr	r3, [r3, #0]
 8007e8c:	4a71      	ldr	r2, [pc, #452]	; (8008054 <UART_SetConfig+0x4b8>)
 8007e8e:	4293      	cmp	r3, r2
 8007e90:	d125      	bne.n	8007ede <UART_SetConfig+0x342>
 8007e92:	4b71      	ldr	r3, [pc, #452]	; (8008058 <UART_SetConfig+0x4bc>)
 8007e94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007e98:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8007e9c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8007ea0:	d017      	beq.n	8007ed2 <UART_SetConfig+0x336>
 8007ea2:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8007ea6:	d817      	bhi.n	8007ed8 <UART_SetConfig+0x33c>
 8007ea8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007eac:	d00b      	beq.n	8007ec6 <UART_SetConfig+0x32a>
 8007eae:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007eb2:	d811      	bhi.n	8007ed8 <UART_SetConfig+0x33c>
 8007eb4:	2b00      	cmp	r3, #0
 8007eb6:	d003      	beq.n	8007ec0 <UART_SetConfig+0x324>
 8007eb8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007ebc:	d006      	beq.n	8007ecc <UART_SetConfig+0x330>
 8007ebe:	e00b      	b.n	8007ed8 <UART_SetConfig+0x33c>
 8007ec0:	2300      	movs	r3, #0
 8007ec2:	77fb      	strb	r3, [r7, #31]
 8007ec4:	e00d      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007ec6:	2302      	movs	r3, #2
 8007ec8:	77fb      	strb	r3, [r7, #31]
 8007eca:	e00a      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007ecc:	2304      	movs	r3, #4
 8007ece:	77fb      	strb	r3, [r7, #31]
 8007ed0:	e007      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007ed2:	2308      	movs	r3, #8
 8007ed4:	77fb      	strb	r3, [r7, #31]
 8007ed6:	e004      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007ed8:	2310      	movs	r3, #16
 8007eda:	77fb      	strb	r3, [r7, #31]
 8007edc:	e001      	b.n	8007ee2 <UART_SetConfig+0x346>
 8007ede:	2310      	movs	r3, #16
 8007ee0:	77fb      	strb	r3, [r7, #31]
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	69db      	ldr	r3, [r3, #28]
 8007ee6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007eea:	d15a      	bne.n	8007fa2 <UART_SetConfig+0x406>
 8007eec:	7ffb      	ldrb	r3, [r7, #31]
 8007eee:	2b08      	cmp	r3, #8
 8007ef0:	d827      	bhi.n	8007f42 <UART_SetConfig+0x3a6>
 8007ef2:	a201      	add	r2, pc, #4	; (adr r2, 8007ef8 <UART_SetConfig+0x35c>)
 8007ef4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007ef8:	08007f1d 	.word	0x08007f1d
 8007efc:	08007f25 	.word	0x08007f25
 8007f00:	08007f2d 	.word	0x08007f2d
 8007f04:	08007f43 	.word	0x08007f43
 8007f08:	08007f33 	.word	0x08007f33
 8007f0c:	08007f43 	.word	0x08007f43
 8007f10:	08007f43 	.word	0x08007f43
 8007f14:	08007f43 	.word	0x08007f43
 8007f18:	08007f3b 	.word	0x08007f3b
 8007f1c:	f7fd fa9a 	bl	8005454 <HAL_RCC_GetPCLK1Freq>
 8007f20:	61b8      	str	r0, [r7, #24]
 8007f22:	e013      	b.n	8007f4c <UART_SetConfig+0x3b0>
 8007f24:	f7fd faaa 	bl	800547c <HAL_RCC_GetPCLK2Freq>
 8007f28:	61b8      	str	r0, [r7, #24]
 8007f2a:	e00f      	b.n	8007f4c <UART_SetConfig+0x3b0>
 8007f2c:	4b4b      	ldr	r3, [pc, #300]	; (800805c <UART_SetConfig+0x4c0>)
 8007f2e:	61bb      	str	r3, [r7, #24]
 8007f30:	e00c      	b.n	8007f4c <UART_SetConfig+0x3b0>
 8007f32:	f7fd f9a1 	bl	8005278 <HAL_RCC_GetSysClockFreq>
 8007f36:	61b8      	str	r0, [r7, #24]
 8007f38:	e008      	b.n	8007f4c <UART_SetConfig+0x3b0>
 8007f3a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007f3e:	61bb      	str	r3, [r7, #24]
 8007f40:	e004      	b.n	8007f4c <UART_SetConfig+0x3b0>
 8007f42:	2300      	movs	r3, #0
 8007f44:	61bb      	str	r3, [r7, #24]
 8007f46:	2301      	movs	r3, #1
 8007f48:	77bb      	strb	r3, [r7, #30]
 8007f4a:	bf00      	nop
 8007f4c:	69bb      	ldr	r3, [r7, #24]
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	d074      	beq.n	800803c <UART_SetConfig+0x4a0>
 8007f52:	69bb      	ldr	r3, [r7, #24]
 8007f54:	005a      	lsls	r2, r3, #1
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	685b      	ldr	r3, [r3, #4]
 8007f5a:	085b      	lsrs	r3, r3, #1
 8007f5c:	441a      	add	r2, r3
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	685b      	ldr	r3, [r3, #4]
 8007f62:	fbb2 f3f3 	udiv	r3, r2, r3
 8007f66:	613b      	str	r3, [r7, #16]
 8007f68:	693b      	ldr	r3, [r7, #16]
 8007f6a:	2b0f      	cmp	r3, #15
 8007f6c:	d916      	bls.n	8007f9c <UART_SetConfig+0x400>
 8007f6e:	693b      	ldr	r3, [r7, #16]
 8007f70:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007f74:	d212      	bcs.n	8007f9c <UART_SetConfig+0x400>
 8007f76:	693b      	ldr	r3, [r7, #16]
 8007f78:	b29b      	uxth	r3, r3
 8007f7a:	f023 030f 	bic.w	r3, r3, #15
 8007f7e:	81fb      	strh	r3, [r7, #14]
 8007f80:	693b      	ldr	r3, [r7, #16]
 8007f82:	085b      	lsrs	r3, r3, #1
 8007f84:	b29b      	uxth	r3, r3
 8007f86:	f003 0307 	and.w	r3, r3, #7
 8007f8a:	b29a      	uxth	r2, r3
 8007f8c:	89fb      	ldrh	r3, [r7, #14]
 8007f8e:	4313      	orrs	r3, r2
 8007f90:	81fb      	strh	r3, [r7, #14]
 8007f92:	687b      	ldr	r3, [r7, #4]
 8007f94:	681b      	ldr	r3, [r3, #0]
 8007f96:	89fa      	ldrh	r2, [r7, #14]
 8007f98:	60da      	str	r2, [r3, #12]
 8007f9a:	e04f      	b.n	800803c <UART_SetConfig+0x4a0>
 8007f9c:	2301      	movs	r3, #1
 8007f9e:	77bb      	strb	r3, [r7, #30]
 8007fa0:	e04c      	b.n	800803c <UART_SetConfig+0x4a0>
 8007fa2:	7ffb      	ldrb	r3, [r7, #31]
 8007fa4:	2b08      	cmp	r3, #8
 8007fa6:	d828      	bhi.n	8007ffa <UART_SetConfig+0x45e>
 8007fa8:	a201      	add	r2, pc, #4	; (adr r2, 8007fb0 <UART_SetConfig+0x414>)
 8007faa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007fae:	bf00      	nop
 8007fb0:	08007fd5 	.word	0x08007fd5
 8007fb4:	08007fdd 	.word	0x08007fdd
 8007fb8:	08007fe5 	.word	0x08007fe5
 8007fbc:	08007ffb 	.word	0x08007ffb
 8007fc0:	08007feb 	.word	0x08007feb
 8007fc4:	08007ffb 	.word	0x08007ffb
 8007fc8:	08007ffb 	.word	0x08007ffb
 8007fcc:	08007ffb 	.word	0x08007ffb
 8007fd0:	08007ff3 	.word	0x08007ff3
 8007fd4:	f7fd fa3e 	bl	8005454 <HAL_RCC_GetPCLK1Freq>
 8007fd8:	61b8      	str	r0, [r7, #24]
 8007fda:	e013      	b.n	8008004 <UART_SetConfig+0x468>
 8007fdc:	f7fd fa4e 	bl	800547c <HAL_RCC_GetPCLK2Freq>
 8007fe0:	61b8      	str	r0, [r7, #24]
 8007fe2:	e00f      	b.n	8008004 <UART_SetConfig+0x468>
 8007fe4:	4b1d      	ldr	r3, [pc, #116]	; (800805c <UART_SetConfig+0x4c0>)
 8007fe6:	61bb      	str	r3, [r7, #24]
 8007fe8:	e00c      	b.n	8008004 <UART_SetConfig+0x468>
 8007fea:	f7fd f945 	bl	8005278 <HAL_RCC_GetSysClockFreq>
 8007fee:	61b8      	str	r0, [r7, #24]
 8007ff0:	e008      	b.n	8008004 <UART_SetConfig+0x468>
 8007ff2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007ff6:	61bb      	str	r3, [r7, #24]
 8007ff8:	e004      	b.n	8008004 <UART_SetConfig+0x468>
 8007ffa:	2300      	movs	r3, #0
 8007ffc:	61bb      	str	r3, [r7, #24]
 8007ffe:	2301      	movs	r3, #1
 8008000:	77bb      	strb	r3, [r7, #30]
 8008002:	bf00      	nop
 8008004:	69bb      	ldr	r3, [r7, #24]
 8008006:	2b00      	cmp	r3, #0
 8008008:	d018      	beq.n	800803c <UART_SetConfig+0x4a0>
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	685b      	ldr	r3, [r3, #4]
 800800e:	085a      	lsrs	r2, r3, #1
 8008010:	69bb      	ldr	r3, [r7, #24]
 8008012:	441a      	add	r2, r3
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	685b      	ldr	r3, [r3, #4]
 8008018:	fbb2 f3f3 	udiv	r3, r2, r3
 800801c:	613b      	str	r3, [r7, #16]
 800801e:	693b      	ldr	r3, [r7, #16]
 8008020:	2b0f      	cmp	r3, #15
 8008022:	d909      	bls.n	8008038 <UART_SetConfig+0x49c>
 8008024:	693b      	ldr	r3, [r7, #16]
 8008026:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800802a:	d205      	bcs.n	8008038 <UART_SetConfig+0x49c>
 800802c:	693b      	ldr	r3, [r7, #16]
 800802e:	b29a      	uxth	r2, r3
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	681b      	ldr	r3, [r3, #0]
 8008034:	60da      	str	r2, [r3, #12]
 8008036:	e001      	b.n	800803c <UART_SetConfig+0x4a0>
 8008038:	2301      	movs	r3, #1
 800803a:	77bb      	strb	r3, [r7, #30]
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	2200      	movs	r2, #0
 8008040:	665a      	str	r2, [r3, #100]	; 0x64
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	2200      	movs	r2, #0
 8008046:	669a      	str	r2, [r3, #104]	; 0x68
 8008048:	7fbb      	ldrb	r3, [r7, #30]
 800804a:	4618      	mov	r0, r3
 800804c:	3720      	adds	r7, #32
 800804e:	46bd      	mov	sp, r7
 8008050:	bd80      	pop	{r7, pc}
 8008052:	bf00      	nop
 8008054:	40007c00 	.word	0x40007c00
 8008058:	40023800 	.word	0x40023800
 800805c:	00f42400 	.word	0x00f42400

08008060 <UART_AdvFeatureConfig>:
 8008060:	b480      	push	{r7}
 8008062:	b083      	sub	sp, #12
 8008064:	af00      	add	r7, sp, #0
 8008066:	6078      	str	r0, [r7, #4]
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800806c:	f003 0301 	and.w	r3, r3, #1
 8008070:	2b00      	cmp	r3, #0
 8008072:	d00a      	beq.n	800808a <UART_AdvFeatureConfig+0x2a>
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	681b      	ldr	r3, [r3, #0]
 8008078:	685b      	ldr	r3, [r3, #4]
 800807a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	681b      	ldr	r3, [r3, #0]
 8008086:	430a      	orrs	r2, r1
 8008088:	605a      	str	r2, [r3, #4]
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800808e:	f003 0302 	and.w	r3, r3, #2
 8008092:	2b00      	cmp	r3, #0
 8008094:	d00a      	beq.n	80080ac <UART_AdvFeatureConfig+0x4c>
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	685b      	ldr	r3, [r3, #4]
 800809c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	430a      	orrs	r2, r1
 80080aa:	605a      	str	r2, [r3, #4]
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080b0:	f003 0304 	and.w	r3, r3, #4
 80080b4:	2b00      	cmp	r3, #0
 80080b6:	d00a      	beq.n	80080ce <UART_AdvFeatureConfig+0x6e>
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	681b      	ldr	r3, [r3, #0]
 80080bc:	685b      	ldr	r3, [r3, #4]
 80080be:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80080c2:	687b      	ldr	r3, [r7, #4]
 80080c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	681b      	ldr	r3, [r3, #0]
 80080ca:	430a      	orrs	r2, r1
 80080cc:	605a      	str	r2, [r3, #4]
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080d2:	f003 0308 	and.w	r3, r3, #8
 80080d6:	2b00      	cmp	r3, #0
 80080d8:	d00a      	beq.n	80080f0 <UART_AdvFeatureConfig+0x90>
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	685b      	ldr	r3, [r3, #4]
 80080e0:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	681b      	ldr	r3, [r3, #0]
 80080ec:	430a      	orrs	r2, r1
 80080ee:	605a      	str	r2, [r3, #4]
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080f4:	f003 0310 	and.w	r3, r3, #16
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d00a      	beq.n	8008112 <UART_AdvFeatureConfig+0xb2>
 80080fc:	687b      	ldr	r3, [r7, #4]
 80080fe:	681b      	ldr	r3, [r3, #0]
 8008100:	689b      	ldr	r3, [r3, #8]
 8008102:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800810a:	687b      	ldr	r3, [r7, #4]
 800810c:	681b      	ldr	r3, [r3, #0]
 800810e:	430a      	orrs	r2, r1
 8008110:	609a      	str	r2, [r3, #8]
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008116:	f003 0320 	and.w	r3, r3, #32
 800811a:	2b00      	cmp	r3, #0
 800811c:	d00a      	beq.n	8008134 <UART_AdvFeatureConfig+0xd4>
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	689b      	ldr	r3, [r3, #8]
 8008124:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	681b      	ldr	r3, [r3, #0]
 8008130:	430a      	orrs	r2, r1
 8008132:	609a      	str	r2, [r3, #8]
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008138:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800813c:	2b00      	cmp	r3, #0
 800813e:	d01a      	beq.n	8008176 <UART_AdvFeatureConfig+0x116>
 8008140:	687b      	ldr	r3, [r7, #4]
 8008142:	681b      	ldr	r3, [r3, #0]
 8008144:	685b      	ldr	r3, [r3, #4]
 8008146:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800814a:	687b      	ldr	r3, [r7, #4]
 800814c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	681b      	ldr	r3, [r3, #0]
 8008152:	430a      	orrs	r2, r1
 8008154:	605a      	str	r2, [r3, #4]
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800815a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800815e:	d10a      	bne.n	8008176 <UART_AdvFeatureConfig+0x116>
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	685b      	ldr	r3, [r3, #4]
 8008166:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800816e:	687b      	ldr	r3, [r7, #4]
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	430a      	orrs	r2, r1
 8008174:	605a      	str	r2, [r3, #4]
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800817a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800817e:	2b00      	cmp	r3, #0
 8008180:	d00a      	beq.n	8008198 <UART_AdvFeatureConfig+0x138>
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	681b      	ldr	r3, [r3, #0]
 8008186:	685b      	ldr	r3, [r3, #4]
 8008188:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	430a      	orrs	r2, r1
 8008196:	605a      	str	r2, [r3, #4]
 8008198:	bf00      	nop
 800819a:	370c      	adds	r7, #12
 800819c:	46bd      	mov	sp, r7
 800819e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081a2:	4770      	bx	lr

080081a4 <UART_CheckIdleState>:
 80081a4:	b580      	push	{r7, lr}
 80081a6:	b086      	sub	sp, #24
 80081a8:	af02      	add	r7, sp, #8
 80081aa:	6078      	str	r0, [r7, #4]
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	2200      	movs	r2, #0
 80081b0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80081b4:	f7fb fadc 	bl	8003770 <HAL_GetTick>
 80081b8:	60f8      	str	r0, [r7, #12]
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	f003 0308 	and.w	r3, r3, #8
 80081c4:	2b08      	cmp	r3, #8
 80081c6:	d10e      	bne.n	80081e6 <UART_CheckIdleState+0x42>
 80081c8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80081cc:	9300      	str	r3, [sp, #0]
 80081ce:	68fb      	ldr	r3, [r7, #12]
 80081d0:	2200      	movs	r2, #0
 80081d2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80081d6:	6878      	ldr	r0, [r7, #4]
 80081d8:	f000 f82d 	bl	8008236 <UART_WaitOnFlagUntilTimeout>
 80081dc:	4603      	mov	r3, r0
 80081de:	2b00      	cmp	r3, #0
 80081e0:	d001      	beq.n	80081e6 <UART_CheckIdleState+0x42>
 80081e2:	2303      	movs	r3, #3
 80081e4:	e023      	b.n	800822e <UART_CheckIdleState+0x8a>
 80081e6:	687b      	ldr	r3, [r7, #4]
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	f003 0304 	and.w	r3, r3, #4
 80081f0:	2b04      	cmp	r3, #4
 80081f2:	d10e      	bne.n	8008212 <UART_CheckIdleState+0x6e>
 80081f4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80081f8:	9300      	str	r3, [sp, #0]
 80081fa:	68fb      	ldr	r3, [r7, #12]
 80081fc:	2200      	movs	r2, #0
 80081fe:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8008202:	6878      	ldr	r0, [r7, #4]
 8008204:	f000 f817 	bl	8008236 <UART_WaitOnFlagUntilTimeout>
 8008208:	4603      	mov	r3, r0
 800820a:	2b00      	cmp	r3, #0
 800820c:	d001      	beq.n	8008212 <UART_CheckIdleState+0x6e>
 800820e:	2303      	movs	r3, #3
 8008210:	e00d      	b.n	800822e <UART_CheckIdleState+0x8a>
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	2220      	movs	r2, #32
 8008216:	679a      	str	r2, [r3, #120]	; 0x78
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	2220      	movs	r2, #32
 800821c:	67da      	str	r2, [r3, #124]	; 0x7c
 800821e:	687b      	ldr	r3, [r7, #4]
 8008220:	2200      	movs	r2, #0
 8008222:	661a      	str	r2, [r3, #96]	; 0x60
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	2200      	movs	r2, #0
 8008228:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800822c:	2300      	movs	r3, #0
 800822e:	4618      	mov	r0, r3
 8008230:	3710      	adds	r7, #16
 8008232:	46bd      	mov	sp, r7
 8008234:	bd80      	pop	{r7, pc}

08008236 <UART_WaitOnFlagUntilTimeout>:
 8008236:	b580      	push	{r7, lr}
 8008238:	b09c      	sub	sp, #112	; 0x70
 800823a:	af00      	add	r7, sp, #0
 800823c:	60f8      	str	r0, [r7, #12]
 800823e:	60b9      	str	r1, [r7, #8]
 8008240:	603b      	str	r3, [r7, #0]
 8008242:	4613      	mov	r3, r2
 8008244:	71fb      	strb	r3, [r7, #7]
 8008246:	e0a5      	b.n	8008394 <UART_WaitOnFlagUntilTimeout+0x15e>
 8008248:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800824a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800824e:	f000 80a1 	beq.w	8008394 <UART_WaitOnFlagUntilTimeout+0x15e>
 8008252:	f7fb fa8d 	bl	8003770 <HAL_GetTick>
 8008256:	4602      	mov	r2, r0
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	1ad3      	subs	r3, r2, r3
 800825c:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800825e:	429a      	cmp	r2, r3
 8008260:	d302      	bcc.n	8008268 <UART_WaitOnFlagUntilTimeout+0x32>
 8008262:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8008264:	2b00      	cmp	r3, #0
 8008266:	d13e      	bne.n	80082e6 <UART_WaitOnFlagUntilTimeout+0xb0>
 8008268:	68fb      	ldr	r3, [r7, #12]
 800826a:	681b      	ldr	r3, [r3, #0]
 800826c:	653b      	str	r3, [r7, #80]	; 0x50
 800826e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008270:	e853 3f00 	ldrex	r3, [r3]
 8008274:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008276:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008278:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800827c:	667b      	str	r3, [r7, #100]	; 0x64
 800827e:	68fb      	ldr	r3, [r7, #12]
 8008280:	681b      	ldr	r3, [r3, #0]
 8008282:	461a      	mov	r2, r3
 8008284:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008286:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008288:	65ba      	str	r2, [r7, #88]	; 0x58
 800828a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800828c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800828e:	e841 2300 	strex	r3, r2, [r1]
 8008292:	657b      	str	r3, [r7, #84]	; 0x54
 8008294:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8008296:	2b00      	cmp	r3, #0
 8008298:	d1e6      	bne.n	8008268 <UART_WaitOnFlagUntilTimeout+0x32>
 800829a:	68fb      	ldr	r3, [r7, #12]
 800829c:	681b      	ldr	r3, [r3, #0]
 800829e:	3308      	adds	r3, #8
 80082a0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80082a2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80082a4:	e853 3f00 	ldrex	r3, [r3]
 80082a8:	63bb      	str	r3, [r7, #56]	; 0x38
 80082aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80082ac:	f023 0301 	bic.w	r3, r3, #1
 80082b0:	663b      	str	r3, [r7, #96]	; 0x60
 80082b2:	68fb      	ldr	r3, [r7, #12]
 80082b4:	681b      	ldr	r3, [r3, #0]
 80082b6:	3308      	adds	r3, #8
 80082b8:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80082ba:	64ba      	str	r2, [r7, #72]	; 0x48
 80082bc:	647b      	str	r3, [r7, #68]	; 0x44
 80082be:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80082c0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80082c2:	e841 2300 	strex	r3, r2, [r1]
 80082c6:	643b      	str	r3, [r7, #64]	; 0x40
 80082c8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80082ca:	2b00      	cmp	r3, #0
 80082cc:	d1e5      	bne.n	800829a <UART_WaitOnFlagUntilTimeout+0x64>
 80082ce:	68fb      	ldr	r3, [r7, #12]
 80082d0:	2220      	movs	r2, #32
 80082d2:	679a      	str	r2, [r3, #120]	; 0x78
 80082d4:	68fb      	ldr	r3, [r7, #12]
 80082d6:	2220      	movs	r2, #32
 80082d8:	67da      	str	r2, [r3, #124]	; 0x7c
 80082da:	68fb      	ldr	r3, [r7, #12]
 80082dc:	2200      	movs	r2, #0
 80082de:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80082e2:	2303      	movs	r3, #3
 80082e4:	e067      	b.n	80083b6 <UART_WaitOnFlagUntilTimeout+0x180>
 80082e6:	68fb      	ldr	r3, [r7, #12]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	f003 0304 	and.w	r3, r3, #4
 80082f0:	2b00      	cmp	r3, #0
 80082f2:	d04f      	beq.n	8008394 <UART_WaitOnFlagUntilTimeout+0x15e>
 80082f4:	68fb      	ldr	r3, [r7, #12]
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	69db      	ldr	r3, [r3, #28]
 80082fa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80082fe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008302:	d147      	bne.n	8008394 <UART_WaitOnFlagUntilTimeout+0x15e>
 8008304:	68fb      	ldr	r3, [r7, #12]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800830c:	621a      	str	r2, [r3, #32]
 800830e:	68fb      	ldr	r3, [r7, #12]
 8008310:	681b      	ldr	r3, [r3, #0]
 8008312:	62bb      	str	r3, [r7, #40]	; 0x28
 8008314:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008316:	e853 3f00 	ldrex	r3, [r3]
 800831a:	627b      	str	r3, [r7, #36]	; 0x24
 800831c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800831e:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8008322:	66fb      	str	r3, [r7, #108]	; 0x6c
 8008324:	68fb      	ldr	r3, [r7, #12]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	461a      	mov	r2, r3
 800832a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800832c:	637b      	str	r3, [r7, #52]	; 0x34
 800832e:	633a      	str	r2, [r7, #48]	; 0x30
 8008330:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8008332:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8008334:	e841 2300 	strex	r3, r2, [r1]
 8008338:	62fb      	str	r3, [r7, #44]	; 0x2c
 800833a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800833c:	2b00      	cmp	r3, #0
 800833e:	d1e6      	bne.n	800830e <UART_WaitOnFlagUntilTimeout+0xd8>
 8008340:	68fb      	ldr	r3, [r7, #12]
 8008342:	681b      	ldr	r3, [r3, #0]
 8008344:	3308      	adds	r3, #8
 8008346:	617b      	str	r3, [r7, #20]
 8008348:	697b      	ldr	r3, [r7, #20]
 800834a:	e853 3f00 	ldrex	r3, [r3]
 800834e:	613b      	str	r3, [r7, #16]
 8008350:	693b      	ldr	r3, [r7, #16]
 8008352:	f023 0301 	bic.w	r3, r3, #1
 8008356:	66bb      	str	r3, [r7, #104]	; 0x68
 8008358:	68fb      	ldr	r3, [r7, #12]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	3308      	adds	r3, #8
 800835e:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8008360:	623a      	str	r2, [r7, #32]
 8008362:	61fb      	str	r3, [r7, #28]
 8008364:	69f9      	ldr	r1, [r7, #28]
 8008366:	6a3a      	ldr	r2, [r7, #32]
 8008368:	e841 2300 	strex	r3, r2, [r1]
 800836c:	61bb      	str	r3, [r7, #24]
 800836e:	69bb      	ldr	r3, [r7, #24]
 8008370:	2b00      	cmp	r3, #0
 8008372:	d1e5      	bne.n	8008340 <UART_WaitOnFlagUntilTimeout+0x10a>
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	2220      	movs	r2, #32
 8008378:	679a      	str	r2, [r3, #120]	; 0x78
 800837a:	68fb      	ldr	r3, [r7, #12]
 800837c:	2220      	movs	r2, #32
 800837e:	67da      	str	r2, [r3, #124]	; 0x7c
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	2220      	movs	r2, #32
 8008384:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8008388:	68fb      	ldr	r3, [r7, #12]
 800838a:	2200      	movs	r2, #0
 800838c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8008390:	2303      	movs	r3, #3
 8008392:	e010      	b.n	80083b6 <UART_WaitOnFlagUntilTimeout+0x180>
 8008394:	68fb      	ldr	r3, [r7, #12]
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	69da      	ldr	r2, [r3, #28]
 800839a:	68bb      	ldr	r3, [r7, #8]
 800839c:	4013      	ands	r3, r2
 800839e:	68ba      	ldr	r2, [r7, #8]
 80083a0:	429a      	cmp	r2, r3
 80083a2:	bf0c      	ite	eq
 80083a4:	2301      	moveq	r3, #1
 80083a6:	2300      	movne	r3, #0
 80083a8:	b2db      	uxtb	r3, r3
 80083aa:	461a      	mov	r2, r3
 80083ac:	79fb      	ldrb	r3, [r7, #7]
 80083ae:	429a      	cmp	r2, r3
 80083b0:	f43f af4a 	beq.w	8008248 <UART_WaitOnFlagUntilTimeout+0x12>
 80083b4:	2300      	movs	r3, #0
 80083b6:	4618      	mov	r0, r3
 80083b8:	3770      	adds	r7, #112	; 0x70
 80083ba:	46bd      	mov	sp, r7
 80083bc:	bd80      	pop	{r7, pc}
	...

080083c0 <UART_Start_Receive_IT>:
 80083c0:	b480      	push	{r7}
 80083c2:	b097      	sub	sp, #92	; 0x5c
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	60f8      	str	r0, [r7, #12]
 80083c8:	60b9      	str	r1, [r7, #8]
 80083ca:	4613      	mov	r3, r2
 80083cc:	80fb      	strh	r3, [r7, #6]
 80083ce:	68fb      	ldr	r3, [r7, #12]
 80083d0:	68ba      	ldr	r2, [r7, #8]
 80083d2:	655a      	str	r2, [r3, #84]	; 0x54
 80083d4:	68fb      	ldr	r3, [r7, #12]
 80083d6:	88fa      	ldrh	r2, [r7, #6]
 80083d8:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 80083dc:	68fb      	ldr	r3, [r7, #12]
 80083de:	88fa      	ldrh	r2, [r7, #6]
 80083e0:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80083e4:	68fb      	ldr	r3, [r7, #12]
 80083e6:	2200      	movs	r2, #0
 80083e8:	665a      	str	r2, [r3, #100]	; 0x64
 80083ea:	68fb      	ldr	r3, [r7, #12]
 80083ec:	689b      	ldr	r3, [r3, #8]
 80083ee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80083f2:	d10e      	bne.n	8008412 <UART_Start_Receive_IT+0x52>
 80083f4:	68fb      	ldr	r3, [r7, #12]
 80083f6:	691b      	ldr	r3, [r3, #16]
 80083f8:	2b00      	cmp	r3, #0
 80083fa:	d105      	bne.n	8008408 <UART_Start_Receive_IT+0x48>
 80083fc:	68fb      	ldr	r3, [r7, #12]
 80083fe:	f240 12ff 	movw	r2, #511	; 0x1ff
 8008402:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8008406:	e02d      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 8008408:	68fb      	ldr	r3, [r7, #12]
 800840a:	22ff      	movs	r2, #255	; 0xff
 800840c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8008410:	e028      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 8008412:	68fb      	ldr	r3, [r7, #12]
 8008414:	689b      	ldr	r3, [r3, #8]
 8008416:	2b00      	cmp	r3, #0
 8008418:	d10d      	bne.n	8008436 <UART_Start_Receive_IT+0x76>
 800841a:	68fb      	ldr	r3, [r7, #12]
 800841c:	691b      	ldr	r3, [r3, #16]
 800841e:	2b00      	cmp	r3, #0
 8008420:	d104      	bne.n	800842c <UART_Start_Receive_IT+0x6c>
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	22ff      	movs	r2, #255	; 0xff
 8008426:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800842a:	e01b      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 800842c:	68fb      	ldr	r3, [r7, #12]
 800842e:	227f      	movs	r2, #127	; 0x7f
 8008430:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8008434:	e016      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 8008436:	68fb      	ldr	r3, [r7, #12]
 8008438:	689b      	ldr	r3, [r3, #8]
 800843a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800843e:	d10d      	bne.n	800845c <UART_Start_Receive_IT+0x9c>
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	691b      	ldr	r3, [r3, #16]
 8008444:	2b00      	cmp	r3, #0
 8008446:	d104      	bne.n	8008452 <UART_Start_Receive_IT+0x92>
 8008448:	68fb      	ldr	r3, [r7, #12]
 800844a:	227f      	movs	r2, #127	; 0x7f
 800844c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8008450:	e008      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 8008452:	68fb      	ldr	r3, [r7, #12]
 8008454:	223f      	movs	r2, #63	; 0x3f
 8008456:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800845a:	e003      	b.n	8008464 <UART_Start_Receive_IT+0xa4>
 800845c:	68fb      	ldr	r3, [r7, #12]
 800845e:	2200      	movs	r2, #0
 8008460:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	2200      	movs	r2, #0
 8008468:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800846c:	68fb      	ldr	r3, [r7, #12]
 800846e:	2222      	movs	r2, #34	; 0x22
 8008470:	67da      	str	r2, [r3, #124]	; 0x7c
 8008472:	68fb      	ldr	r3, [r7, #12]
 8008474:	681b      	ldr	r3, [r3, #0]
 8008476:	3308      	adds	r3, #8
 8008478:	63fb      	str	r3, [r7, #60]	; 0x3c
 800847a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800847c:	e853 3f00 	ldrex	r3, [r3]
 8008480:	63bb      	str	r3, [r7, #56]	; 0x38
 8008482:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008484:	f043 0301 	orr.w	r3, r3, #1
 8008488:	657b      	str	r3, [r7, #84]	; 0x54
 800848a:	68fb      	ldr	r3, [r7, #12]
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	3308      	adds	r3, #8
 8008490:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8008492:	64ba      	str	r2, [r7, #72]	; 0x48
 8008494:	647b      	str	r3, [r7, #68]	; 0x44
 8008496:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8008498:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800849a:	e841 2300 	strex	r3, r2, [r1]
 800849e:	643b      	str	r3, [r7, #64]	; 0x40
 80084a0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80084a2:	2b00      	cmp	r3, #0
 80084a4:	d1e5      	bne.n	8008472 <UART_Start_Receive_IT+0xb2>
 80084a6:	68fb      	ldr	r3, [r7, #12]
 80084a8:	689b      	ldr	r3, [r3, #8]
 80084aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80084ae:	d107      	bne.n	80084c0 <UART_Start_Receive_IT+0x100>
 80084b0:	68fb      	ldr	r3, [r7, #12]
 80084b2:	691b      	ldr	r3, [r3, #16]
 80084b4:	2b00      	cmp	r3, #0
 80084b6:	d103      	bne.n	80084c0 <UART_Start_Receive_IT+0x100>
 80084b8:	68fb      	ldr	r3, [r7, #12]
 80084ba:	4a24      	ldr	r2, [pc, #144]	; (800854c <UART_Start_Receive_IT+0x18c>)
 80084bc:	665a      	str	r2, [r3, #100]	; 0x64
 80084be:	e002      	b.n	80084c6 <UART_Start_Receive_IT+0x106>
 80084c0:	68fb      	ldr	r3, [r7, #12]
 80084c2:	4a23      	ldr	r2, [pc, #140]	; (8008550 <UART_Start_Receive_IT+0x190>)
 80084c4:	665a      	str	r2, [r3, #100]	; 0x64
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	2200      	movs	r2, #0
 80084ca:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80084ce:	68fb      	ldr	r3, [r7, #12]
 80084d0:	691b      	ldr	r3, [r3, #16]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d019      	beq.n	800850a <UART_Start_Receive_IT+0x14a>
 80084d6:	68fb      	ldr	r3, [r7, #12]
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	62bb      	str	r3, [r7, #40]	; 0x28
 80084dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80084de:	e853 3f00 	ldrex	r3, [r3]
 80084e2:	627b      	str	r3, [r7, #36]	; 0x24
 80084e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084e6:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 80084ea:	64fb      	str	r3, [r7, #76]	; 0x4c
 80084ec:	68fb      	ldr	r3, [r7, #12]
 80084ee:	681b      	ldr	r3, [r3, #0]
 80084f0:	461a      	mov	r2, r3
 80084f2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80084f4:	637b      	str	r3, [r7, #52]	; 0x34
 80084f6:	633a      	str	r2, [r7, #48]	; 0x30
 80084f8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80084fa:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80084fc:	e841 2300 	strex	r3, r2, [r1]
 8008500:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008502:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008504:	2b00      	cmp	r3, #0
 8008506:	d1e6      	bne.n	80084d6 <UART_Start_Receive_IT+0x116>
 8008508:	e018      	b.n	800853c <UART_Start_Receive_IT+0x17c>
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	681b      	ldr	r3, [r3, #0]
 800850e:	617b      	str	r3, [r7, #20]
 8008510:	697b      	ldr	r3, [r7, #20]
 8008512:	e853 3f00 	ldrex	r3, [r3]
 8008516:	613b      	str	r3, [r7, #16]
 8008518:	693b      	ldr	r3, [r7, #16]
 800851a:	f043 0320 	orr.w	r3, r3, #32
 800851e:	653b      	str	r3, [r7, #80]	; 0x50
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	681b      	ldr	r3, [r3, #0]
 8008524:	461a      	mov	r2, r3
 8008526:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008528:	623b      	str	r3, [r7, #32]
 800852a:	61fa      	str	r2, [r7, #28]
 800852c:	69f9      	ldr	r1, [r7, #28]
 800852e:	6a3a      	ldr	r2, [r7, #32]
 8008530:	e841 2300 	strex	r3, r2, [r1]
 8008534:	61bb      	str	r3, [r7, #24]
 8008536:	69bb      	ldr	r3, [r7, #24]
 8008538:	2b00      	cmp	r3, #0
 800853a:	d1e6      	bne.n	800850a <UART_Start_Receive_IT+0x14a>
 800853c:	2300      	movs	r3, #0
 800853e:	4618      	mov	r0, r3
 8008540:	375c      	adds	r7, #92	; 0x5c
 8008542:	46bd      	mov	sp, r7
 8008544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008548:	4770      	bx	lr
 800854a:	bf00      	nop
 800854c:	0800896d 	.word	0x0800896d
 8008550:	08008811 	.word	0x08008811

08008554 <UART_EndRxTransfer>:
 8008554:	b480      	push	{r7}
 8008556:	b095      	sub	sp, #84	; 0x54
 8008558:	af00      	add	r7, sp, #0
 800855a:	6078      	str	r0, [r7, #4]
 800855c:	687b      	ldr	r3, [r7, #4]
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	637b      	str	r3, [r7, #52]	; 0x34
 8008562:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008564:	e853 3f00 	ldrex	r3, [r3]
 8008568:	633b      	str	r3, [r7, #48]	; 0x30
 800856a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800856c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8008570:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008572:	687b      	ldr	r3, [r7, #4]
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	461a      	mov	r2, r3
 8008578:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800857a:	643b      	str	r3, [r7, #64]	; 0x40
 800857c:	63fa      	str	r2, [r7, #60]	; 0x3c
 800857e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8008580:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8008582:	e841 2300 	strex	r3, r2, [r1]
 8008586:	63bb      	str	r3, [r7, #56]	; 0x38
 8008588:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800858a:	2b00      	cmp	r3, #0
 800858c:	d1e6      	bne.n	800855c <UART_EndRxTransfer+0x8>
 800858e:	687b      	ldr	r3, [r7, #4]
 8008590:	681b      	ldr	r3, [r3, #0]
 8008592:	3308      	adds	r3, #8
 8008594:	623b      	str	r3, [r7, #32]
 8008596:	6a3b      	ldr	r3, [r7, #32]
 8008598:	e853 3f00 	ldrex	r3, [r3]
 800859c:	61fb      	str	r3, [r7, #28]
 800859e:	69fb      	ldr	r3, [r7, #28]
 80085a0:	f023 0301 	bic.w	r3, r3, #1
 80085a4:	64bb      	str	r3, [r7, #72]	; 0x48
 80085a6:	687b      	ldr	r3, [r7, #4]
 80085a8:	681b      	ldr	r3, [r3, #0]
 80085aa:	3308      	adds	r3, #8
 80085ac:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80085ae:	62fa      	str	r2, [r7, #44]	; 0x2c
 80085b0:	62bb      	str	r3, [r7, #40]	; 0x28
 80085b2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80085b4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80085b6:	e841 2300 	strex	r3, r2, [r1]
 80085ba:	627b      	str	r3, [r7, #36]	; 0x24
 80085bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d1e5      	bne.n	800858e <UART_EndRxTransfer+0x3a>
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80085c6:	2b01      	cmp	r3, #1
 80085c8:	d118      	bne.n	80085fc <UART_EndRxTransfer+0xa8>
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	681b      	ldr	r3, [r3, #0]
 80085ce:	60fb      	str	r3, [r7, #12]
 80085d0:	68fb      	ldr	r3, [r7, #12]
 80085d2:	e853 3f00 	ldrex	r3, [r3]
 80085d6:	60bb      	str	r3, [r7, #8]
 80085d8:	68bb      	ldr	r3, [r7, #8]
 80085da:	f023 0310 	bic.w	r3, r3, #16
 80085de:	647b      	str	r3, [r7, #68]	; 0x44
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	681b      	ldr	r3, [r3, #0]
 80085e4:	461a      	mov	r2, r3
 80085e6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80085e8:	61bb      	str	r3, [r7, #24]
 80085ea:	617a      	str	r2, [r7, #20]
 80085ec:	6979      	ldr	r1, [r7, #20]
 80085ee:	69ba      	ldr	r2, [r7, #24]
 80085f0:	e841 2300 	strex	r3, r2, [r1]
 80085f4:	613b      	str	r3, [r7, #16]
 80085f6:	693b      	ldr	r3, [r7, #16]
 80085f8:	2b00      	cmp	r3, #0
 80085fa:	d1e6      	bne.n	80085ca <UART_EndRxTransfer+0x76>
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	2220      	movs	r2, #32
 8008600:	67da      	str	r2, [r3, #124]	; 0x7c
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	2200      	movs	r2, #0
 8008606:	661a      	str	r2, [r3, #96]	; 0x60
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	2200      	movs	r2, #0
 800860c:	665a      	str	r2, [r3, #100]	; 0x64
 800860e:	bf00      	nop
 8008610:	3754      	adds	r7, #84	; 0x54
 8008612:	46bd      	mov	sp, r7
 8008614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008618:	4770      	bx	lr

0800861a <UART_DMAAbortOnError>:
 800861a:	b580      	push	{r7, lr}
 800861c:	b084      	sub	sp, #16
 800861e:	af00      	add	r7, sp, #0
 8008620:	6078      	str	r0, [r7, #4]
 8008622:	687b      	ldr	r3, [r7, #4]
 8008624:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008626:	60fb      	str	r3, [r7, #12]
 8008628:	68fb      	ldr	r3, [r7, #12]
 800862a:	2200      	movs	r2, #0
 800862c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	2200      	movs	r2, #0
 8008634:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8008638:	68f8      	ldr	r0, [r7, #12]
 800863a:	f7ff fa8f 	bl	8007b5c <HAL_UART_ErrorCallback>
 800863e:	bf00      	nop
 8008640:	3710      	adds	r7, #16
 8008642:	46bd      	mov	sp, r7
 8008644:	bd80      	pop	{r7, pc}

08008646 <UART_TxISR_8BIT>:
 8008646:	b480      	push	{r7}
 8008648:	b08f      	sub	sp, #60	; 0x3c
 800864a:	af00      	add	r7, sp, #0
 800864c:	6078      	str	r0, [r7, #4]
 800864e:	687b      	ldr	r3, [r7, #4]
 8008650:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008652:	2b21      	cmp	r3, #33	; 0x21
 8008654:	d14c      	bne.n	80086f0 <UART_TxISR_8BIT+0xaa>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800865c:	b29b      	uxth	r3, r3
 800865e:	2b00      	cmp	r3, #0
 8008660:	d132      	bne.n	80086c8 <UART_TxISR_8BIT+0x82>
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	681b      	ldr	r3, [r3, #0]
 8008666:	623b      	str	r3, [r7, #32]
 8008668:	6a3b      	ldr	r3, [r7, #32]
 800866a:	e853 3f00 	ldrex	r3, [r3]
 800866e:	61fb      	str	r3, [r7, #28]
 8008670:	69fb      	ldr	r3, [r7, #28]
 8008672:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008676:	637b      	str	r3, [r7, #52]	; 0x34
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	461a      	mov	r2, r3
 800867e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008680:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008682:	62ba      	str	r2, [r7, #40]	; 0x28
 8008684:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008686:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008688:	e841 2300 	strex	r3, r2, [r1]
 800868c:	627b      	str	r3, [r7, #36]	; 0x24
 800868e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008690:	2b00      	cmp	r3, #0
 8008692:	d1e6      	bne.n	8008662 <UART_TxISR_8BIT+0x1c>
 8008694:	687b      	ldr	r3, [r7, #4]
 8008696:	681b      	ldr	r3, [r3, #0]
 8008698:	60fb      	str	r3, [r7, #12]
 800869a:	68fb      	ldr	r3, [r7, #12]
 800869c:	e853 3f00 	ldrex	r3, [r3]
 80086a0:	60bb      	str	r3, [r7, #8]
 80086a2:	68bb      	ldr	r3, [r7, #8]
 80086a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80086a8:	633b      	str	r3, [r7, #48]	; 0x30
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	461a      	mov	r2, r3
 80086b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80086b2:	61bb      	str	r3, [r7, #24]
 80086b4:	617a      	str	r2, [r7, #20]
 80086b6:	6979      	ldr	r1, [r7, #20]
 80086b8:	69ba      	ldr	r2, [r7, #24]
 80086ba:	e841 2300 	strex	r3, r2, [r1]
 80086be:	613b      	str	r3, [r7, #16]
 80086c0:	693b      	ldr	r3, [r7, #16]
 80086c2:	2b00      	cmp	r3, #0
 80086c4:	d1e6      	bne.n	8008694 <UART_TxISR_8BIT+0x4e>
 80086c6:	e013      	b.n	80086f0 <UART_TxISR_8BIT+0xaa>
 80086c8:	687b      	ldr	r3, [r7, #4]
 80086ca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80086cc:	781a      	ldrb	r2, [r3, #0]
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	629a      	str	r2, [r3, #40]	; 0x28
 80086d4:	687b      	ldr	r3, [r7, #4]
 80086d6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80086d8:	1c5a      	adds	r2, r3, #1
 80086da:	687b      	ldr	r3, [r7, #4]
 80086dc:	64da      	str	r2, [r3, #76]	; 0x4c
 80086de:	687b      	ldr	r3, [r7, #4]
 80086e0:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80086e4:	b29b      	uxth	r3, r3
 80086e6:	3b01      	subs	r3, #1
 80086e8:	b29a      	uxth	r2, r3
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80086f0:	bf00      	nop
 80086f2:	373c      	adds	r7, #60	; 0x3c
 80086f4:	46bd      	mov	sp, r7
 80086f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fa:	4770      	bx	lr

080086fc <UART_TxISR_16BIT>:
 80086fc:	b480      	push	{r7}
 80086fe:	b091      	sub	sp, #68	; 0x44
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
 8008704:	687b      	ldr	r3, [r7, #4]
 8008706:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008708:	2b21      	cmp	r3, #33	; 0x21
 800870a:	d151      	bne.n	80087b0 <UART_TxISR_16BIT+0xb4>
 800870c:	687b      	ldr	r3, [r7, #4]
 800870e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8008712:	b29b      	uxth	r3, r3
 8008714:	2b00      	cmp	r3, #0
 8008716:	d132      	bne.n	800877e <UART_TxISR_16BIT+0x82>
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	681b      	ldr	r3, [r3, #0]
 800871c:	627b      	str	r3, [r7, #36]	; 0x24
 800871e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008720:	e853 3f00 	ldrex	r3, [r3]
 8008724:	623b      	str	r3, [r7, #32]
 8008726:	6a3b      	ldr	r3, [r7, #32]
 8008728:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800872c:	63bb      	str	r3, [r7, #56]	; 0x38
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	461a      	mov	r2, r3
 8008734:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008736:	633b      	str	r3, [r7, #48]	; 0x30
 8008738:	62fa      	str	r2, [r7, #44]	; 0x2c
 800873a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800873c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800873e:	e841 2300 	strex	r3, r2, [r1]
 8008742:	62bb      	str	r3, [r7, #40]	; 0x28
 8008744:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008746:	2b00      	cmp	r3, #0
 8008748:	d1e6      	bne.n	8008718 <UART_TxISR_16BIT+0x1c>
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	613b      	str	r3, [r7, #16]
 8008750:	693b      	ldr	r3, [r7, #16]
 8008752:	e853 3f00 	ldrex	r3, [r3]
 8008756:	60fb      	str	r3, [r7, #12]
 8008758:	68fb      	ldr	r3, [r7, #12]
 800875a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800875e:	637b      	str	r3, [r7, #52]	; 0x34
 8008760:	687b      	ldr	r3, [r7, #4]
 8008762:	681b      	ldr	r3, [r3, #0]
 8008764:	461a      	mov	r2, r3
 8008766:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008768:	61fb      	str	r3, [r7, #28]
 800876a:	61ba      	str	r2, [r7, #24]
 800876c:	69b9      	ldr	r1, [r7, #24]
 800876e:	69fa      	ldr	r2, [r7, #28]
 8008770:	e841 2300 	strex	r3, r2, [r1]
 8008774:	617b      	str	r3, [r7, #20]
 8008776:	697b      	ldr	r3, [r7, #20]
 8008778:	2b00      	cmp	r3, #0
 800877a:	d1e6      	bne.n	800874a <UART_TxISR_16BIT+0x4e>
 800877c:	e018      	b.n	80087b0 <UART_TxISR_16BIT+0xb4>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008782:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008784:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008786:	881b      	ldrh	r3, [r3, #0]
 8008788:	461a      	mov	r2, r3
 800878a:	687b      	ldr	r3, [r7, #4]
 800878c:	681b      	ldr	r3, [r3, #0]
 800878e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008792:	629a      	str	r2, [r3, #40]	; 0x28
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008798:	1c9a      	adds	r2, r3, #2
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	64da      	str	r2, [r3, #76]	; 0x4c
 800879e:	687b      	ldr	r3, [r7, #4]
 80087a0:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80087a4:	b29b      	uxth	r3, r3
 80087a6:	3b01      	subs	r3, #1
 80087a8:	b29a      	uxth	r2, r3
 80087aa:	687b      	ldr	r3, [r7, #4]
 80087ac:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80087b0:	bf00      	nop
 80087b2:	3744      	adds	r7, #68	; 0x44
 80087b4:	46bd      	mov	sp, r7
 80087b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087ba:	4770      	bx	lr

080087bc <UART_EndTransmit_IT>:
 80087bc:	b580      	push	{r7, lr}
 80087be:	b088      	sub	sp, #32
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6078      	str	r0, [r7, #4]
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	60fb      	str	r3, [r7, #12]
 80087ca:	68fb      	ldr	r3, [r7, #12]
 80087cc:	e853 3f00 	ldrex	r3, [r3]
 80087d0:	60bb      	str	r3, [r7, #8]
 80087d2:	68bb      	ldr	r3, [r7, #8]
 80087d4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80087d8:	61fb      	str	r3, [r7, #28]
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	681b      	ldr	r3, [r3, #0]
 80087de:	461a      	mov	r2, r3
 80087e0:	69fb      	ldr	r3, [r7, #28]
 80087e2:	61bb      	str	r3, [r7, #24]
 80087e4:	617a      	str	r2, [r7, #20]
 80087e6:	6979      	ldr	r1, [r7, #20]
 80087e8:	69ba      	ldr	r2, [r7, #24]
 80087ea:	e841 2300 	strex	r3, r2, [r1]
 80087ee:	613b      	str	r3, [r7, #16]
 80087f0:	693b      	ldr	r3, [r7, #16]
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	d1e6      	bne.n	80087c4 <UART_EndTransmit_IT+0x8>
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	2220      	movs	r2, #32
 80087fa:	679a      	str	r2, [r3, #120]	; 0x78
 80087fc:	687b      	ldr	r3, [r7, #4]
 80087fe:	2200      	movs	r2, #0
 8008800:	669a      	str	r2, [r3, #104]	; 0x68
 8008802:	6878      	ldr	r0, [r7, #4]
 8008804:	f7fa ff00 	bl	8003608 <HAL_UART_TxCpltCallback>
 8008808:	bf00      	nop
 800880a:	3720      	adds	r7, #32
 800880c:	46bd      	mov	sp, r7
 800880e:	bd80      	pop	{r7, pc}

08008810 <UART_RxISR_8BIT>:
 8008810:	b580      	push	{r7, lr}
 8008812:	b096      	sub	sp, #88	; 0x58
 8008814:	af00      	add	r7, sp, #0
 8008816:	6078      	str	r0, [r7, #4]
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800881e:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8008822:	687b      	ldr	r3, [r7, #4]
 8008824:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008826:	2b22      	cmp	r3, #34	; 0x22
 8008828:	f040 8094 	bne.w	8008954 <UART_RxISR_8BIT+0x144>
 800882c:	687b      	ldr	r3, [r7, #4]
 800882e:	681b      	ldr	r3, [r3, #0]
 8008830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008832:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8008836:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 800883a:	b2d9      	uxtb	r1, r3
 800883c:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8008840:	b2da      	uxtb	r2, r3
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008846:	400a      	ands	r2, r1
 8008848:	b2d2      	uxtb	r2, r2
 800884a:	701a      	strb	r2, [r3, #0]
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008850:	1c5a      	adds	r2, r3, #1
 8008852:	687b      	ldr	r3, [r7, #4]
 8008854:	655a      	str	r2, [r3, #84]	; 0x54
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800885c:	b29b      	uxth	r3, r3
 800885e:	3b01      	subs	r3, #1
 8008860:	b29a      	uxth	r2, r3
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800886e:	b29b      	uxth	r3, r3
 8008870:	2b00      	cmp	r3, #0
 8008872:	d177      	bne.n	8008964 <UART_RxISR_8BIT+0x154>
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	63bb      	str	r3, [r7, #56]	; 0x38
 800887a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800887c:	e853 3f00 	ldrex	r3, [r3]
 8008880:	637b      	str	r3, [r7, #52]	; 0x34
 8008882:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008884:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8008888:	653b      	str	r3, [r7, #80]	; 0x50
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	461a      	mov	r2, r3
 8008890:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008892:	647b      	str	r3, [r7, #68]	; 0x44
 8008894:	643a      	str	r2, [r7, #64]	; 0x40
 8008896:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8008898:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800889a:	e841 2300 	strex	r3, r2, [r1]
 800889e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80088a0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d1e6      	bne.n	8008874 <UART_RxISR_8BIT+0x64>
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	3308      	adds	r3, #8
 80088ac:	627b      	str	r3, [r7, #36]	; 0x24
 80088ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80088b0:	e853 3f00 	ldrex	r3, [r3]
 80088b4:	623b      	str	r3, [r7, #32]
 80088b6:	6a3b      	ldr	r3, [r7, #32]
 80088b8:	f023 0301 	bic.w	r3, r3, #1
 80088bc:	64fb      	str	r3, [r7, #76]	; 0x4c
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	3308      	adds	r3, #8
 80088c4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80088c6:	633a      	str	r2, [r7, #48]	; 0x30
 80088c8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80088ca:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80088cc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80088ce:	e841 2300 	strex	r3, r2, [r1]
 80088d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80088d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80088d6:	2b00      	cmp	r3, #0
 80088d8:	d1e5      	bne.n	80088a6 <UART_RxISR_8BIT+0x96>
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	2220      	movs	r2, #32
 80088de:	67da      	str	r2, [r3, #124]	; 0x7c
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	2200      	movs	r2, #0
 80088e4:	665a      	str	r2, [r3, #100]	; 0x64
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80088ea:	2b01      	cmp	r3, #1
 80088ec:	d12e      	bne.n	800894c <UART_RxISR_8BIT+0x13c>
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	2200      	movs	r2, #0
 80088f2:	661a      	str	r2, [r3, #96]	; 0x60
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	681b      	ldr	r3, [r3, #0]
 80088f8:	613b      	str	r3, [r7, #16]
 80088fa:	693b      	ldr	r3, [r7, #16]
 80088fc:	e853 3f00 	ldrex	r3, [r3]
 8008900:	60fb      	str	r3, [r7, #12]
 8008902:	68fb      	ldr	r3, [r7, #12]
 8008904:	f023 0310 	bic.w	r3, r3, #16
 8008908:	64bb      	str	r3, [r7, #72]	; 0x48
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	461a      	mov	r2, r3
 8008910:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008912:	61fb      	str	r3, [r7, #28]
 8008914:	61ba      	str	r2, [r7, #24]
 8008916:	69b9      	ldr	r1, [r7, #24]
 8008918:	69fa      	ldr	r2, [r7, #28]
 800891a:	e841 2300 	strex	r3, r2, [r1]
 800891e:	617b      	str	r3, [r7, #20]
 8008920:	697b      	ldr	r3, [r7, #20]
 8008922:	2b00      	cmp	r3, #0
 8008924:	d1e6      	bne.n	80088f4 <UART_RxISR_8BIT+0xe4>
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	69db      	ldr	r3, [r3, #28]
 800892c:	f003 0310 	and.w	r3, r3, #16
 8008930:	2b10      	cmp	r3, #16
 8008932:	d103      	bne.n	800893c <UART_RxISR_8BIT+0x12c>
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	2210      	movs	r2, #16
 800893a:	621a      	str	r2, [r3, #32]
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8008942:	4619      	mov	r1, r3
 8008944:	6878      	ldr	r0, [r7, #4]
 8008946:	f7ff f913 	bl	8007b70 <HAL_UARTEx_RxEventCallback>
 800894a:	e00b      	b.n	8008964 <UART_RxISR_8BIT+0x154>
 800894c:	6878      	ldr	r0, [r7, #4]
 800894e:	f7fa fdf1 	bl	8003534 <HAL_UART_RxCpltCallback>
 8008952:	e007      	b.n	8008964 <UART_RxISR_8BIT+0x154>
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	681b      	ldr	r3, [r3, #0]
 8008958:	699a      	ldr	r2, [r3, #24]
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	681b      	ldr	r3, [r3, #0]
 800895e:	f042 0208 	orr.w	r2, r2, #8
 8008962:	619a      	str	r2, [r3, #24]
 8008964:	bf00      	nop
 8008966:	3758      	adds	r7, #88	; 0x58
 8008968:	46bd      	mov	sp, r7
 800896a:	bd80      	pop	{r7, pc}

0800896c <UART_RxISR_16BIT>:
 800896c:	b580      	push	{r7, lr}
 800896e:	b096      	sub	sp, #88	; 0x58
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800897a:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800897e:	687b      	ldr	r3, [r7, #4]
 8008980:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008982:	2b22      	cmp	r3, #34	; 0x22
 8008984:	f040 8094 	bne.w	8008ab0 <UART_RxISR_16BIT+0x144>
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	681b      	ldr	r3, [r3, #0]
 800898c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800898e:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008996:	653b      	str	r3, [r7, #80]	; 0x50
 8008998:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 800899c:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 80089a0:	4013      	ands	r3, r2
 80089a2:	b29a      	uxth	r2, r3
 80089a4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80089a6:	801a      	strh	r2, [r3, #0]
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80089ac:	1c9a      	adds	r2, r3, #2
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	655a      	str	r2, [r3, #84]	; 0x54
 80089b2:	687b      	ldr	r3, [r7, #4]
 80089b4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80089b8:	b29b      	uxth	r3, r3
 80089ba:	3b01      	subs	r3, #1
 80089bc:	b29a      	uxth	r2, r3
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80089ca:	b29b      	uxth	r3, r3
 80089cc:	2b00      	cmp	r3, #0
 80089ce:	d177      	bne.n	8008ac0 <UART_RxISR_16BIT+0x154>
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	637b      	str	r3, [r7, #52]	; 0x34
 80089d6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80089d8:	e853 3f00 	ldrex	r3, [r3]
 80089dc:	633b      	str	r3, [r7, #48]	; 0x30
 80089de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80089e0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80089e4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80089e6:	687b      	ldr	r3, [r7, #4]
 80089e8:	681b      	ldr	r3, [r3, #0]
 80089ea:	461a      	mov	r2, r3
 80089ec:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80089ee:	643b      	str	r3, [r7, #64]	; 0x40
 80089f0:	63fa      	str	r2, [r7, #60]	; 0x3c
 80089f2:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80089f4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80089f6:	e841 2300 	strex	r3, r2, [r1]
 80089fa:	63bb      	str	r3, [r7, #56]	; 0x38
 80089fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80089fe:	2b00      	cmp	r3, #0
 8008a00:	d1e6      	bne.n	80089d0 <UART_RxISR_16BIT+0x64>
 8008a02:	687b      	ldr	r3, [r7, #4]
 8008a04:	681b      	ldr	r3, [r3, #0]
 8008a06:	3308      	adds	r3, #8
 8008a08:	623b      	str	r3, [r7, #32]
 8008a0a:	6a3b      	ldr	r3, [r7, #32]
 8008a0c:	e853 3f00 	ldrex	r3, [r3]
 8008a10:	61fb      	str	r3, [r7, #28]
 8008a12:	69fb      	ldr	r3, [r7, #28]
 8008a14:	f023 0301 	bic.w	r3, r3, #1
 8008a18:	64bb      	str	r3, [r7, #72]	; 0x48
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	681b      	ldr	r3, [r3, #0]
 8008a1e:	3308      	adds	r3, #8
 8008a20:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8008a22:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008a24:	62bb      	str	r3, [r7, #40]	; 0x28
 8008a26:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008a28:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008a2a:	e841 2300 	strex	r3, r2, [r1]
 8008a2e:	627b      	str	r3, [r7, #36]	; 0x24
 8008a30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008a32:	2b00      	cmp	r3, #0
 8008a34:	d1e5      	bne.n	8008a02 <UART_RxISR_16BIT+0x96>
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	2220      	movs	r2, #32
 8008a3a:	67da      	str	r2, [r3, #124]	; 0x7c
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	2200      	movs	r2, #0
 8008a40:	665a      	str	r2, [r3, #100]	; 0x64
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008a46:	2b01      	cmp	r3, #1
 8008a48:	d12e      	bne.n	8008aa8 <UART_RxISR_16BIT+0x13c>
 8008a4a:	687b      	ldr	r3, [r7, #4]
 8008a4c:	2200      	movs	r2, #0
 8008a4e:	661a      	str	r2, [r3, #96]	; 0x60
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	60fb      	str	r3, [r7, #12]
 8008a56:	68fb      	ldr	r3, [r7, #12]
 8008a58:	e853 3f00 	ldrex	r3, [r3]
 8008a5c:	60bb      	str	r3, [r7, #8]
 8008a5e:	68bb      	ldr	r3, [r7, #8]
 8008a60:	f023 0310 	bic.w	r3, r3, #16
 8008a64:	647b      	str	r3, [r7, #68]	; 0x44
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	681b      	ldr	r3, [r3, #0]
 8008a6a:	461a      	mov	r2, r3
 8008a6c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008a6e:	61bb      	str	r3, [r7, #24]
 8008a70:	617a      	str	r2, [r7, #20]
 8008a72:	6979      	ldr	r1, [r7, #20]
 8008a74:	69ba      	ldr	r2, [r7, #24]
 8008a76:	e841 2300 	strex	r3, r2, [r1]
 8008a7a:	613b      	str	r3, [r7, #16]
 8008a7c:	693b      	ldr	r3, [r7, #16]
 8008a7e:	2b00      	cmp	r3, #0
 8008a80:	d1e6      	bne.n	8008a50 <UART_RxISR_16BIT+0xe4>
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	69db      	ldr	r3, [r3, #28]
 8008a88:	f003 0310 	and.w	r3, r3, #16
 8008a8c:	2b10      	cmp	r3, #16
 8008a8e:	d103      	bne.n	8008a98 <UART_RxISR_16BIT+0x12c>
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	681b      	ldr	r3, [r3, #0]
 8008a94:	2210      	movs	r2, #16
 8008a96:	621a      	str	r2, [r3, #32]
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8008a9e:	4619      	mov	r1, r3
 8008aa0:	6878      	ldr	r0, [r7, #4]
 8008aa2:	f7ff f865 	bl	8007b70 <HAL_UARTEx_RxEventCallback>
 8008aa6:	e00b      	b.n	8008ac0 <UART_RxISR_16BIT+0x154>
 8008aa8:	6878      	ldr	r0, [r7, #4]
 8008aaa:	f7fa fd43 	bl	8003534 <HAL_UART_RxCpltCallback>
 8008aae:	e007      	b.n	8008ac0 <UART_RxISR_16BIT+0x154>
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	681b      	ldr	r3, [r3, #0]
 8008ab4:	699a      	ldr	r2, [r3, #24]
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	681b      	ldr	r3, [r3, #0]
 8008aba:	f042 0208 	orr.w	r2, r2, #8
 8008abe:	619a      	str	r2, [r3, #24]
 8008ac0:	bf00      	nop
 8008ac2:	3758      	adds	r7, #88	; 0x58
 8008ac4:	46bd      	mov	sp, r7
 8008ac6:	bd80      	pop	{r7, pc}

08008ac8 <__errno>:
 8008ac8:	4b01      	ldr	r3, [pc, #4]	; (8008ad0 <__errno+0x8>)
 8008aca:	6818      	ldr	r0, [r3, #0]
 8008acc:	4770      	bx	lr
 8008ace:	bf00      	nop
 8008ad0:	20000114 	.word	0x20000114

08008ad4 <__libc_init_array>:
 8008ad4:	b570      	push	{r4, r5, r6, lr}
 8008ad6:	4d0d      	ldr	r5, [pc, #52]	; (8008b0c <__libc_init_array+0x38>)
 8008ad8:	4c0d      	ldr	r4, [pc, #52]	; (8008b10 <__libc_init_array+0x3c>)
 8008ada:	1b64      	subs	r4, r4, r5
 8008adc:	10a4      	asrs	r4, r4, #2
 8008ade:	2600      	movs	r6, #0
 8008ae0:	42a6      	cmp	r6, r4
 8008ae2:	d109      	bne.n	8008af8 <__libc_init_array+0x24>
 8008ae4:	4d0b      	ldr	r5, [pc, #44]	; (8008b14 <__libc_init_array+0x40>)
 8008ae6:	4c0c      	ldr	r4, [pc, #48]	; (8008b18 <__libc_init_array+0x44>)
 8008ae8:	f004 ffcc 	bl	800da84 <_init>
 8008aec:	1b64      	subs	r4, r4, r5
 8008aee:	10a4      	asrs	r4, r4, #2
 8008af0:	2600      	movs	r6, #0
 8008af2:	42a6      	cmp	r6, r4
 8008af4:	d105      	bne.n	8008b02 <__libc_init_array+0x2e>
 8008af6:	bd70      	pop	{r4, r5, r6, pc}
 8008af8:	f855 3b04 	ldr.w	r3, [r5], #4
 8008afc:	4798      	blx	r3
 8008afe:	3601      	adds	r6, #1
 8008b00:	e7ee      	b.n	8008ae0 <__libc_init_array+0xc>
 8008b02:	f855 3b04 	ldr.w	r3, [r5], #4
 8008b06:	4798      	blx	r3
 8008b08:	3601      	adds	r6, #1
 8008b0a:	e7f2      	b.n	8008af2 <__libc_init_array+0x1e>
 8008b0c:	0800ebe4 	.word	0x0800ebe4
 8008b10:	0800ebe4 	.word	0x0800ebe4
 8008b14:	0800ebe4 	.word	0x0800ebe4
 8008b18:	0800ebe8 	.word	0x0800ebe8

08008b1c <memset>:
 8008b1c:	4402      	add	r2, r0
 8008b1e:	4603      	mov	r3, r0
 8008b20:	4293      	cmp	r3, r2
 8008b22:	d100      	bne.n	8008b26 <memset+0xa>
 8008b24:	4770      	bx	lr
 8008b26:	f803 1b01 	strb.w	r1, [r3], #1
 8008b2a:	e7f9      	b.n	8008b20 <memset+0x4>

08008b2c <__cvt>:
 8008b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b2e:	ed2d 8b02 	vpush	{d8}
 8008b32:	eeb0 8b40 	vmov.f64	d8, d0
 8008b36:	b085      	sub	sp, #20
 8008b38:	4617      	mov	r7, r2
 8008b3a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8008b3c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008b3e:	ee18 2a90 	vmov	r2, s17
 8008b42:	f025 0520 	bic.w	r5, r5, #32
 8008b46:	2a00      	cmp	r2, #0
 8008b48:	bfb6      	itet	lt
 8008b4a:	222d      	movlt	r2, #45	; 0x2d
 8008b4c:	2200      	movge	r2, #0
 8008b4e:	eeb1 8b40 	vneglt.f64	d8, d0
 8008b52:	2d46      	cmp	r5, #70	; 0x46
 8008b54:	460c      	mov	r4, r1
 8008b56:	701a      	strb	r2, [r3, #0]
 8008b58:	d004      	beq.n	8008b64 <__cvt+0x38>
 8008b5a:	2d45      	cmp	r5, #69	; 0x45
 8008b5c:	d100      	bne.n	8008b60 <__cvt+0x34>
 8008b5e:	3401      	adds	r4, #1
 8008b60:	2102      	movs	r1, #2
 8008b62:	e000      	b.n	8008b66 <__cvt+0x3a>
 8008b64:	2103      	movs	r1, #3
 8008b66:	ab03      	add	r3, sp, #12
 8008b68:	9301      	str	r3, [sp, #4]
 8008b6a:	ab02      	add	r3, sp, #8
 8008b6c:	9300      	str	r3, [sp, #0]
 8008b6e:	4622      	mov	r2, r4
 8008b70:	4633      	mov	r3, r6
 8008b72:	eeb0 0b48 	vmov.f64	d0, d8
 8008b76:	f001 fe0f 	bl	800a798 <_dtoa_r>
 8008b7a:	2d47      	cmp	r5, #71	; 0x47
 8008b7c:	d109      	bne.n	8008b92 <__cvt+0x66>
 8008b7e:	07fb      	lsls	r3, r7, #31
 8008b80:	d407      	bmi.n	8008b92 <__cvt+0x66>
 8008b82:	9b03      	ldr	r3, [sp, #12]
 8008b84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008b86:	1a1b      	subs	r3, r3, r0
 8008b88:	6013      	str	r3, [r2, #0]
 8008b8a:	b005      	add	sp, #20
 8008b8c:	ecbd 8b02 	vpop	{d8}
 8008b90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b92:	2d46      	cmp	r5, #70	; 0x46
 8008b94:	eb00 0204 	add.w	r2, r0, r4
 8008b98:	d10c      	bne.n	8008bb4 <__cvt+0x88>
 8008b9a:	7803      	ldrb	r3, [r0, #0]
 8008b9c:	2b30      	cmp	r3, #48	; 0x30
 8008b9e:	d107      	bne.n	8008bb0 <__cvt+0x84>
 8008ba0:	eeb5 8b40 	vcmp.f64	d8, #0.0
 8008ba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ba8:	bf1c      	itt	ne
 8008baa:	f1c4 0401 	rsbne	r4, r4, #1
 8008bae:	6034      	strne	r4, [r6, #0]
 8008bb0:	6833      	ldr	r3, [r6, #0]
 8008bb2:	441a      	add	r2, r3
 8008bb4:	eeb5 8b40 	vcmp.f64	d8, #0.0
 8008bb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bbc:	bf08      	it	eq
 8008bbe:	9203      	streq	r2, [sp, #12]
 8008bc0:	2130      	movs	r1, #48	; 0x30
 8008bc2:	9b03      	ldr	r3, [sp, #12]
 8008bc4:	4293      	cmp	r3, r2
 8008bc6:	d2dc      	bcs.n	8008b82 <__cvt+0x56>
 8008bc8:	1c5c      	adds	r4, r3, #1
 8008bca:	9403      	str	r4, [sp, #12]
 8008bcc:	7019      	strb	r1, [r3, #0]
 8008bce:	e7f8      	b.n	8008bc2 <__cvt+0x96>

08008bd0 <__exponent>:
 8008bd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008bd2:	4603      	mov	r3, r0
 8008bd4:	2900      	cmp	r1, #0
 8008bd6:	bfb8      	it	lt
 8008bd8:	4249      	neglt	r1, r1
 8008bda:	f803 2b02 	strb.w	r2, [r3], #2
 8008bde:	bfb4      	ite	lt
 8008be0:	222d      	movlt	r2, #45	; 0x2d
 8008be2:	222b      	movge	r2, #43	; 0x2b
 8008be4:	2909      	cmp	r1, #9
 8008be6:	7042      	strb	r2, [r0, #1]
 8008be8:	dd2a      	ble.n	8008c40 <__exponent+0x70>
 8008bea:	f10d 0407 	add.w	r4, sp, #7
 8008bee:	46a4      	mov	ip, r4
 8008bf0:	270a      	movs	r7, #10
 8008bf2:	46a6      	mov	lr, r4
 8008bf4:	460a      	mov	r2, r1
 8008bf6:	fb91 f6f7 	sdiv	r6, r1, r7
 8008bfa:	fb07 1516 	mls	r5, r7, r6, r1
 8008bfe:	3530      	adds	r5, #48	; 0x30
 8008c00:	2a63      	cmp	r2, #99	; 0x63
 8008c02:	f104 34ff 	add.w	r4, r4, #4294967295
 8008c06:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8008c0a:	4631      	mov	r1, r6
 8008c0c:	dcf1      	bgt.n	8008bf2 <__exponent+0x22>
 8008c0e:	3130      	adds	r1, #48	; 0x30
 8008c10:	f1ae 0502 	sub.w	r5, lr, #2
 8008c14:	f804 1c01 	strb.w	r1, [r4, #-1]
 8008c18:	1c44      	adds	r4, r0, #1
 8008c1a:	4629      	mov	r1, r5
 8008c1c:	4561      	cmp	r1, ip
 8008c1e:	d30a      	bcc.n	8008c36 <__exponent+0x66>
 8008c20:	f10d 0209 	add.w	r2, sp, #9
 8008c24:	eba2 020e 	sub.w	r2, r2, lr
 8008c28:	4565      	cmp	r5, ip
 8008c2a:	bf88      	it	hi
 8008c2c:	2200      	movhi	r2, #0
 8008c2e:	4413      	add	r3, r2
 8008c30:	1a18      	subs	r0, r3, r0
 8008c32:	b003      	add	sp, #12
 8008c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008c36:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008c3a:	f804 2f01 	strb.w	r2, [r4, #1]!
 8008c3e:	e7ed      	b.n	8008c1c <__exponent+0x4c>
 8008c40:	2330      	movs	r3, #48	; 0x30
 8008c42:	3130      	adds	r1, #48	; 0x30
 8008c44:	7083      	strb	r3, [r0, #2]
 8008c46:	70c1      	strb	r1, [r0, #3]
 8008c48:	1d03      	adds	r3, r0, #4
 8008c4a:	e7f1      	b.n	8008c30 <__exponent+0x60>
 8008c4c:	0000      	movs	r0, r0
	...

08008c50 <_printf_float>:
 8008c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c54:	b08b      	sub	sp, #44	; 0x2c
 8008c56:	460c      	mov	r4, r1
 8008c58:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 8008c5c:	4616      	mov	r6, r2
 8008c5e:	461f      	mov	r7, r3
 8008c60:	4605      	mov	r5, r0
 8008c62:	f002 fe8b 	bl	800b97c <_localeconv_r>
 8008c66:	f8d0 b000 	ldr.w	fp, [r0]
 8008c6a:	4658      	mov	r0, fp
 8008c6c:	f7f7 faf2 	bl	8000254 <strlen>
 8008c70:	2300      	movs	r3, #0
 8008c72:	9308      	str	r3, [sp, #32]
 8008c74:	f8d8 3000 	ldr.w	r3, [r8]
 8008c78:	f894 9018 	ldrb.w	r9, [r4, #24]
 8008c7c:	6822      	ldr	r2, [r4, #0]
 8008c7e:	3307      	adds	r3, #7
 8008c80:	f023 0307 	bic.w	r3, r3, #7
 8008c84:	f103 0108 	add.w	r1, r3, #8
 8008c88:	f8c8 1000 	str.w	r1, [r8]
 8008c8c:	4682      	mov	sl, r0
 8008c8e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008c92:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
 8008c96:	ed9f 7b98 	vldr	d7, [pc, #608]	; 8008ef8 <_printf_float+0x2a8>
 8008c9a:	ed94 0b12 	vldr	d0, [r4, #72]	; 0x48
 8008c9e:	eeb0 6bc0 	vabs.f64	d6, d0
 8008ca2:	eeb4 6b47 	vcmp.f64	d6, d7
 8008ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008caa:	dd24      	ble.n	8008cf6 <_printf_float+0xa6>
 8008cac:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8008cb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cb4:	d502      	bpl.n	8008cbc <_printf_float+0x6c>
 8008cb6:	232d      	movs	r3, #45	; 0x2d
 8008cb8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008cbc:	4b90      	ldr	r3, [pc, #576]	; (8008f00 <_printf_float+0x2b0>)
 8008cbe:	4891      	ldr	r0, [pc, #580]	; (8008f04 <_printf_float+0x2b4>)
 8008cc0:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8008cc4:	bf94      	ite	ls
 8008cc6:	4698      	movls	r8, r3
 8008cc8:	4680      	movhi	r8, r0
 8008cca:	2303      	movs	r3, #3
 8008ccc:	6123      	str	r3, [r4, #16]
 8008cce:	f022 0204 	bic.w	r2, r2, #4
 8008cd2:	2300      	movs	r3, #0
 8008cd4:	6022      	str	r2, [r4, #0]
 8008cd6:	9304      	str	r3, [sp, #16]
 8008cd8:	9700      	str	r7, [sp, #0]
 8008cda:	4633      	mov	r3, r6
 8008cdc:	aa09      	add	r2, sp, #36	; 0x24
 8008cde:	4621      	mov	r1, r4
 8008ce0:	4628      	mov	r0, r5
 8008ce2:	f000 f9d3 	bl	800908c <_printf_common>
 8008ce6:	3001      	adds	r0, #1
 8008ce8:	f040 808a 	bne.w	8008e00 <_printf_float+0x1b0>
 8008cec:	f04f 30ff 	mov.w	r0, #4294967295
 8008cf0:	b00b      	add	sp, #44	; 0x2c
 8008cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008cf6:	eeb4 0b40 	vcmp.f64	d0, d0
 8008cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cfe:	d709      	bvc.n	8008d14 <_printf_float+0xc4>
 8008d00:	ee10 3a90 	vmov	r3, s1
 8008d04:	2b00      	cmp	r3, #0
 8008d06:	bfbc      	itt	lt
 8008d08:	232d      	movlt	r3, #45	; 0x2d
 8008d0a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8008d0e:	487e      	ldr	r0, [pc, #504]	; (8008f08 <_printf_float+0x2b8>)
 8008d10:	4b7e      	ldr	r3, [pc, #504]	; (8008f0c <_printf_float+0x2bc>)
 8008d12:	e7d5      	b.n	8008cc0 <_printf_float+0x70>
 8008d14:	6863      	ldr	r3, [r4, #4]
 8008d16:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8008d1a:	9104      	str	r1, [sp, #16]
 8008d1c:	1c59      	adds	r1, r3, #1
 8008d1e:	d13c      	bne.n	8008d9a <_printf_float+0x14a>
 8008d20:	2306      	movs	r3, #6
 8008d22:	6063      	str	r3, [r4, #4]
 8008d24:	2300      	movs	r3, #0
 8008d26:	9303      	str	r3, [sp, #12]
 8008d28:	ab08      	add	r3, sp, #32
 8008d2a:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8008d2e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008d32:	ab07      	add	r3, sp, #28
 8008d34:	6861      	ldr	r1, [r4, #4]
 8008d36:	9300      	str	r3, [sp, #0]
 8008d38:	6022      	str	r2, [r4, #0]
 8008d3a:	f10d 031b 	add.w	r3, sp, #27
 8008d3e:	4628      	mov	r0, r5
 8008d40:	f7ff fef4 	bl	8008b2c <__cvt>
 8008d44:	9b04      	ldr	r3, [sp, #16]
 8008d46:	9907      	ldr	r1, [sp, #28]
 8008d48:	2b47      	cmp	r3, #71	; 0x47
 8008d4a:	4680      	mov	r8, r0
 8008d4c:	d108      	bne.n	8008d60 <_printf_float+0x110>
 8008d4e:	1cc8      	adds	r0, r1, #3
 8008d50:	db02      	blt.n	8008d58 <_printf_float+0x108>
 8008d52:	6863      	ldr	r3, [r4, #4]
 8008d54:	4299      	cmp	r1, r3
 8008d56:	dd41      	ble.n	8008ddc <_printf_float+0x18c>
 8008d58:	f1a9 0902 	sub.w	r9, r9, #2
 8008d5c:	fa5f f989 	uxtb.w	r9, r9
 8008d60:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8008d64:	d820      	bhi.n	8008da8 <_printf_float+0x158>
 8008d66:	3901      	subs	r1, #1
 8008d68:	464a      	mov	r2, r9
 8008d6a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8008d6e:	9107      	str	r1, [sp, #28]
 8008d70:	f7ff ff2e 	bl	8008bd0 <__exponent>
 8008d74:	9a08      	ldr	r2, [sp, #32]
 8008d76:	9004      	str	r0, [sp, #16]
 8008d78:	1813      	adds	r3, r2, r0
 8008d7a:	2a01      	cmp	r2, #1
 8008d7c:	6123      	str	r3, [r4, #16]
 8008d7e:	dc02      	bgt.n	8008d86 <_printf_float+0x136>
 8008d80:	6822      	ldr	r2, [r4, #0]
 8008d82:	07d2      	lsls	r2, r2, #31
 8008d84:	d501      	bpl.n	8008d8a <_printf_float+0x13a>
 8008d86:	3301      	adds	r3, #1
 8008d88:	6123      	str	r3, [r4, #16]
 8008d8a:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8008d8e:	2b00      	cmp	r3, #0
 8008d90:	d0a2      	beq.n	8008cd8 <_printf_float+0x88>
 8008d92:	232d      	movs	r3, #45	; 0x2d
 8008d94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008d98:	e79e      	b.n	8008cd8 <_printf_float+0x88>
 8008d9a:	9904      	ldr	r1, [sp, #16]
 8008d9c:	2947      	cmp	r1, #71	; 0x47
 8008d9e:	d1c1      	bne.n	8008d24 <_printf_float+0xd4>
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d1bf      	bne.n	8008d24 <_printf_float+0xd4>
 8008da4:	2301      	movs	r3, #1
 8008da6:	e7bc      	b.n	8008d22 <_printf_float+0xd2>
 8008da8:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8008dac:	d118      	bne.n	8008de0 <_printf_float+0x190>
 8008dae:	2900      	cmp	r1, #0
 8008db0:	6863      	ldr	r3, [r4, #4]
 8008db2:	dd0b      	ble.n	8008dcc <_printf_float+0x17c>
 8008db4:	6121      	str	r1, [r4, #16]
 8008db6:	b913      	cbnz	r3, 8008dbe <_printf_float+0x16e>
 8008db8:	6822      	ldr	r2, [r4, #0]
 8008dba:	07d0      	lsls	r0, r2, #31
 8008dbc:	d502      	bpl.n	8008dc4 <_printf_float+0x174>
 8008dbe:	3301      	adds	r3, #1
 8008dc0:	440b      	add	r3, r1
 8008dc2:	6123      	str	r3, [r4, #16]
 8008dc4:	2300      	movs	r3, #0
 8008dc6:	65a1      	str	r1, [r4, #88]	; 0x58
 8008dc8:	9304      	str	r3, [sp, #16]
 8008dca:	e7de      	b.n	8008d8a <_printf_float+0x13a>
 8008dcc:	b913      	cbnz	r3, 8008dd4 <_printf_float+0x184>
 8008dce:	6822      	ldr	r2, [r4, #0]
 8008dd0:	07d2      	lsls	r2, r2, #31
 8008dd2:	d501      	bpl.n	8008dd8 <_printf_float+0x188>
 8008dd4:	3302      	adds	r3, #2
 8008dd6:	e7f4      	b.n	8008dc2 <_printf_float+0x172>
 8008dd8:	2301      	movs	r3, #1
 8008dda:	e7f2      	b.n	8008dc2 <_printf_float+0x172>
 8008ddc:	f04f 0967 	mov.w	r9, #103	; 0x67
 8008de0:	9b08      	ldr	r3, [sp, #32]
 8008de2:	4299      	cmp	r1, r3
 8008de4:	db05      	blt.n	8008df2 <_printf_float+0x1a2>
 8008de6:	6823      	ldr	r3, [r4, #0]
 8008de8:	6121      	str	r1, [r4, #16]
 8008dea:	07d8      	lsls	r0, r3, #31
 8008dec:	d5ea      	bpl.n	8008dc4 <_printf_float+0x174>
 8008dee:	1c4b      	adds	r3, r1, #1
 8008df0:	e7e7      	b.n	8008dc2 <_printf_float+0x172>
 8008df2:	2900      	cmp	r1, #0
 8008df4:	bfd4      	ite	le
 8008df6:	f1c1 0202 	rsble	r2, r1, #2
 8008dfa:	2201      	movgt	r2, #1
 8008dfc:	4413      	add	r3, r2
 8008dfe:	e7e0      	b.n	8008dc2 <_printf_float+0x172>
 8008e00:	6823      	ldr	r3, [r4, #0]
 8008e02:	055a      	lsls	r2, r3, #21
 8008e04:	d407      	bmi.n	8008e16 <_printf_float+0x1c6>
 8008e06:	6923      	ldr	r3, [r4, #16]
 8008e08:	4642      	mov	r2, r8
 8008e0a:	4631      	mov	r1, r6
 8008e0c:	4628      	mov	r0, r5
 8008e0e:	47b8      	blx	r7
 8008e10:	3001      	adds	r0, #1
 8008e12:	d12a      	bne.n	8008e6a <_printf_float+0x21a>
 8008e14:	e76a      	b.n	8008cec <_printf_float+0x9c>
 8008e16:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8008e1a:	f240 80e2 	bls.w	8008fe2 <_printf_float+0x392>
 8008e1e:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8008e22:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8008e26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e2a:	d133      	bne.n	8008e94 <_printf_float+0x244>
 8008e2c:	4a38      	ldr	r2, [pc, #224]	; (8008f10 <_printf_float+0x2c0>)
 8008e2e:	2301      	movs	r3, #1
 8008e30:	4631      	mov	r1, r6
 8008e32:	4628      	mov	r0, r5
 8008e34:	47b8      	blx	r7
 8008e36:	3001      	adds	r0, #1
 8008e38:	f43f af58 	beq.w	8008cec <_printf_float+0x9c>
 8008e3c:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8008e40:	429a      	cmp	r2, r3
 8008e42:	db02      	blt.n	8008e4a <_printf_float+0x1fa>
 8008e44:	6823      	ldr	r3, [r4, #0]
 8008e46:	07d8      	lsls	r0, r3, #31
 8008e48:	d50f      	bpl.n	8008e6a <_printf_float+0x21a>
 8008e4a:	4653      	mov	r3, sl
 8008e4c:	465a      	mov	r2, fp
 8008e4e:	4631      	mov	r1, r6
 8008e50:	4628      	mov	r0, r5
 8008e52:	47b8      	blx	r7
 8008e54:	3001      	adds	r0, #1
 8008e56:	f43f af49 	beq.w	8008cec <_printf_float+0x9c>
 8008e5a:	f04f 0800 	mov.w	r8, #0
 8008e5e:	f104 091a 	add.w	r9, r4, #26
 8008e62:	9b08      	ldr	r3, [sp, #32]
 8008e64:	3b01      	subs	r3, #1
 8008e66:	4543      	cmp	r3, r8
 8008e68:	dc09      	bgt.n	8008e7e <_printf_float+0x22e>
 8008e6a:	6823      	ldr	r3, [r4, #0]
 8008e6c:	079b      	lsls	r3, r3, #30
 8008e6e:	f100 8108 	bmi.w	8009082 <_printf_float+0x432>
 8008e72:	68e0      	ldr	r0, [r4, #12]
 8008e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008e76:	4298      	cmp	r0, r3
 8008e78:	bfb8      	it	lt
 8008e7a:	4618      	movlt	r0, r3
 8008e7c:	e738      	b.n	8008cf0 <_printf_float+0xa0>
 8008e7e:	2301      	movs	r3, #1
 8008e80:	464a      	mov	r2, r9
 8008e82:	4631      	mov	r1, r6
 8008e84:	4628      	mov	r0, r5
 8008e86:	47b8      	blx	r7
 8008e88:	3001      	adds	r0, #1
 8008e8a:	f43f af2f 	beq.w	8008cec <_printf_float+0x9c>
 8008e8e:	f108 0801 	add.w	r8, r8, #1
 8008e92:	e7e6      	b.n	8008e62 <_printf_float+0x212>
 8008e94:	9b07      	ldr	r3, [sp, #28]
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	dc3c      	bgt.n	8008f14 <_printf_float+0x2c4>
 8008e9a:	4a1d      	ldr	r2, [pc, #116]	; (8008f10 <_printf_float+0x2c0>)
 8008e9c:	2301      	movs	r3, #1
 8008e9e:	4631      	mov	r1, r6
 8008ea0:	4628      	mov	r0, r5
 8008ea2:	47b8      	blx	r7
 8008ea4:	3001      	adds	r0, #1
 8008ea6:	f43f af21 	beq.w	8008cec <_printf_float+0x9c>
 8008eaa:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8008eae:	4313      	orrs	r3, r2
 8008eb0:	d102      	bne.n	8008eb8 <_printf_float+0x268>
 8008eb2:	6823      	ldr	r3, [r4, #0]
 8008eb4:	07d9      	lsls	r1, r3, #31
 8008eb6:	d5d8      	bpl.n	8008e6a <_printf_float+0x21a>
 8008eb8:	4653      	mov	r3, sl
 8008eba:	465a      	mov	r2, fp
 8008ebc:	4631      	mov	r1, r6
 8008ebe:	4628      	mov	r0, r5
 8008ec0:	47b8      	blx	r7
 8008ec2:	3001      	adds	r0, #1
 8008ec4:	f43f af12 	beq.w	8008cec <_printf_float+0x9c>
 8008ec8:	f04f 0900 	mov.w	r9, #0
 8008ecc:	f104 0a1a 	add.w	sl, r4, #26
 8008ed0:	9b07      	ldr	r3, [sp, #28]
 8008ed2:	425b      	negs	r3, r3
 8008ed4:	454b      	cmp	r3, r9
 8008ed6:	dc01      	bgt.n	8008edc <_printf_float+0x28c>
 8008ed8:	9b08      	ldr	r3, [sp, #32]
 8008eda:	e795      	b.n	8008e08 <_printf_float+0x1b8>
 8008edc:	2301      	movs	r3, #1
 8008ede:	4652      	mov	r2, sl
 8008ee0:	4631      	mov	r1, r6
 8008ee2:	4628      	mov	r0, r5
 8008ee4:	47b8      	blx	r7
 8008ee6:	3001      	adds	r0, #1
 8008ee8:	f43f af00 	beq.w	8008cec <_printf_float+0x9c>
 8008eec:	f109 0901 	add.w	r9, r9, #1
 8008ef0:	e7ee      	b.n	8008ed0 <_printf_float+0x280>
 8008ef2:	bf00      	nop
 8008ef4:	f3af 8000 	nop.w
 8008ef8:	ffffffff 	.word	0xffffffff
 8008efc:	7fefffff 	.word	0x7fefffff
 8008f00:	0800e718 	.word	0x0800e718
 8008f04:	0800e71c 	.word	0x0800e71c
 8008f08:	0800e724 	.word	0x0800e724
 8008f0c:	0800e720 	.word	0x0800e720
 8008f10:	0800eb29 	.word	0x0800eb29
 8008f14:	9a08      	ldr	r2, [sp, #32]
 8008f16:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8008f18:	429a      	cmp	r2, r3
 8008f1a:	bfa8      	it	ge
 8008f1c:	461a      	movge	r2, r3
 8008f1e:	2a00      	cmp	r2, #0
 8008f20:	4691      	mov	r9, r2
 8008f22:	dc38      	bgt.n	8008f96 <_printf_float+0x346>
 8008f24:	2300      	movs	r3, #0
 8008f26:	9305      	str	r3, [sp, #20]
 8008f28:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008f2c:	f104 021a 	add.w	r2, r4, #26
 8008f30:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8008f32:	9905      	ldr	r1, [sp, #20]
 8008f34:	9304      	str	r3, [sp, #16]
 8008f36:	eba3 0309 	sub.w	r3, r3, r9
 8008f3a:	428b      	cmp	r3, r1
 8008f3c:	dc33      	bgt.n	8008fa6 <_printf_float+0x356>
 8008f3e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8008f42:	429a      	cmp	r2, r3
 8008f44:	db3c      	blt.n	8008fc0 <_printf_float+0x370>
 8008f46:	6823      	ldr	r3, [r4, #0]
 8008f48:	07da      	lsls	r2, r3, #31
 8008f4a:	d439      	bmi.n	8008fc0 <_printf_float+0x370>
 8008f4c:	9a08      	ldr	r2, [sp, #32]
 8008f4e:	9b04      	ldr	r3, [sp, #16]
 8008f50:	9907      	ldr	r1, [sp, #28]
 8008f52:	1ad3      	subs	r3, r2, r3
 8008f54:	eba2 0901 	sub.w	r9, r2, r1
 8008f58:	4599      	cmp	r9, r3
 8008f5a:	bfa8      	it	ge
 8008f5c:	4699      	movge	r9, r3
 8008f5e:	f1b9 0f00 	cmp.w	r9, #0
 8008f62:	dc35      	bgt.n	8008fd0 <_printf_float+0x380>
 8008f64:	f04f 0800 	mov.w	r8, #0
 8008f68:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008f6c:	f104 0a1a 	add.w	sl, r4, #26
 8008f70:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8008f74:	1a9b      	subs	r3, r3, r2
 8008f76:	eba3 0309 	sub.w	r3, r3, r9
 8008f7a:	4543      	cmp	r3, r8
 8008f7c:	f77f af75 	ble.w	8008e6a <_printf_float+0x21a>
 8008f80:	2301      	movs	r3, #1
 8008f82:	4652      	mov	r2, sl
 8008f84:	4631      	mov	r1, r6
 8008f86:	4628      	mov	r0, r5
 8008f88:	47b8      	blx	r7
 8008f8a:	3001      	adds	r0, #1
 8008f8c:	f43f aeae 	beq.w	8008cec <_printf_float+0x9c>
 8008f90:	f108 0801 	add.w	r8, r8, #1
 8008f94:	e7ec      	b.n	8008f70 <_printf_float+0x320>
 8008f96:	4613      	mov	r3, r2
 8008f98:	4631      	mov	r1, r6
 8008f9a:	4642      	mov	r2, r8
 8008f9c:	4628      	mov	r0, r5
 8008f9e:	47b8      	blx	r7
 8008fa0:	3001      	adds	r0, #1
 8008fa2:	d1bf      	bne.n	8008f24 <_printf_float+0x2d4>
 8008fa4:	e6a2      	b.n	8008cec <_printf_float+0x9c>
 8008fa6:	2301      	movs	r3, #1
 8008fa8:	4631      	mov	r1, r6
 8008faa:	4628      	mov	r0, r5
 8008fac:	9204      	str	r2, [sp, #16]
 8008fae:	47b8      	blx	r7
 8008fb0:	3001      	adds	r0, #1
 8008fb2:	f43f ae9b 	beq.w	8008cec <_printf_float+0x9c>
 8008fb6:	9b05      	ldr	r3, [sp, #20]
 8008fb8:	9a04      	ldr	r2, [sp, #16]
 8008fba:	3301      	adds	r3, #1
 8008fbc:	9305      	str	r3, [sp, #20]
 8008fbe:	e7b7      	b.n	8008f30 <_printf_float+0x2e0>
 8008fc0:	4653      	mov	r3, sl
 8008fc2:	465a      	mov	r2, fp
 8008fc4:	4631      	mov	r1, r6
 8008fc6:	4628      	mov	r0, r5
 8008fc8:	47b8      	blx	r7
 8008fca:	3001      	adds	r0, #1
 8008fcc:	d1be      	bne.n	8008f4c <_printf_float+0x2fc>
 8008fce:	e68d      	b.n	8008cec <_printf_float+0x9c>
 8008fd0:	9a04      	ldr	r2, [sp, #16]
 8008fd2:	464b      	mov	r3, r9
 8008fd4:	4442      	add	r2, r8
 8008fd6:	4631      	mov	r1, r6
 8008fd8:	4628      	mov	r0, r5
 8008fda:	47b8      	blx	r7
 8008fdc:	3001      	adds	r0, #1
 8008fde:	d1c1      	bne.n	8008f64 <_printf_float+0x314>
 8008fe0:	e684      	b.n	8008cec <_printf_float+0x9c>
 8008fe2:	9a08      	ldr	r2, [sp, #32]
 8008fe4:	2a01      	cmp	r2, #1
 8008fe6:	dc01      	bgt.n	8008fec <_printf_float+0x39c>
 8008fe8:	07db      	lsls	r3, r3, #31
 8008fea:	d537      	bpl.n	800905c <_printf_float+0x40c>
 8008fec:	2301      	movs	r3, #1
 8008fee:	4642      	mov	r2, r8
 8008ff0:	4631      	mov	r1, r6
 8008ff2:	4628      	mov	r0, r5
 8008ff4:	47b8      	blx	r7
 8008ff6:	3001      	adds	r0, #1
 8008ff8:	f43f ae78 	beq.w	8008cec <_printf_float+0x9c>
 8008ffc:	4653      	mov	r3, sl
 8008ffe:	465a      	mov	r2, fp
 8009000:	4631      	mov	r1, r6
 8009002:	4628      	mov	r0, r5
 8009004:	47b8      	blx	r7
 8009006:	3001      	adds	r0, #1
 8009008:	f43f ae70 	beq.w	8008cec <_printf_float+0x9c>
 800900c:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8009010:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8009014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009018:	d01b      	beq.n	8009052 <_printf_float+0x402>
 800901a:	9b08      	ldr	r3, [sp, #32]
 800901c:	f108 0201 	add.w	r2, r8, #1
 8009020:	3b01      	subs	r3, #1
 8009022:	4631      	mov	r1, r6
 8009024:	4628      	mov	r0, r5
 8009026:	47b8      	blx	r7
 8009028:	3001      	adds	r0, #1
 800902a:	d10e      	bne.n	800904a <_printf_float+0x3fa>
 800902c:	e65e      	b.n	8008cec <_printf_float+0x9c>
 800902e:	2301      	movs	r3, #1
 8009030:	464a      	mov	r2, r9
 8009032:	4631      	mov	r1, r6
 8009034:	4628      	mov	r0, r5
 8009036:	47b8      	blx	r7
 8009038:	3001      	adds	r0, #1
 800903a:	f43f ae57 	beq.w	8008cec <_printf_float+0x9c>
 800903e:	f108 0801 	add.w	r8, r8, #1
 8009042:	9b08      	ldr	r3, [sp, #32]
 8009044:	3b01      	subs	r3, #1
 8009046:	4543      	cmp	r3, r8
 8009048:	dcf1      	bgt.n	800902e <_printf_float+0x3de>
 800904a:	9b04      	ldr	r3, [sp, #16]
 800904c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8009050:	e6db      	b.n	8008e0a <_printf_float+0x1ba>
 8009052:	f04f 0800 	mov.w	r8, #0
 8009056:	f104 091a 	add.w	r9, r4, #26
 800905a:	e7f2      	b.n	8009042 <_printf_float+0x3f2>
 800905c:	2301      	movs	r3, #1
 800905e:	4642      	mov	r2, r8
 8009060:	e7df      	b.n	8009022 <_printf_float+0x3d2>
 8009062:	2301      	movs	r3, #1
 8009064:	464a      	mov	r2, r9
 8009066:	4631      	mov	r1, r6
 8009068:	4628      	mov	r0, r5
 800906a:	47b8      	blx	r7
 800906c:	3001      	adds	r0, #1
 800906e:	f43f ae3d 	beq.w	8008cec <_printf_float+0x9c>
 8009072:	f108 0801 	add.w	r8, r8, #1
 8009076:	68e3      	ldr	r3, [r4, #12]
 8009078:	9909      	ldr	r1, [sp, #36]	; 0x24
 800907a:	1a5b      	subs	r3, r3, r1
 800907c:	4543      	cmp	r3, r8
 800907e:	dcf0      	bgt.n	8009062 <_printf_float+0x412>
 8009080:	e6f7      	b.n	8008e72 <_printf_float+0x222>
 8009082:	f04f 0800 	mov.w	r8, #0
 8009086:	f104 0919 	add.w	r9, r4, #25
 800908a:	e7f4      	b.n	8009076 <_printf_float+0x426>

0800908c <_printf_common>:
 800908c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009090:	4616      	mov	r6, r2
 8009092:	4699      	mov	r9, r3
 8009094:	688a      	ldr	r2, [r1, #8]
 8009096:	690b      	ldr	r3, [r1, #16]
 8009098:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800909c:	4293      	cmp	r3, r2
 800909e:	bfb8      	it	lt
 80090a0:	4613      	movlt	r3, r2
 80090a2:	6033      	str	r3, [r6, #0]
 80090a4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80090a8:	4607      	mov	r7, r0
 80090aa:	460c      	mov	r4, r1
 80090ac:	b10a      	cbz	r2, 80090b2 <_printf_common+0x26>
 80090ae:	3301      	adds	r3, #1
 80090b0:	6033      	str	r3, [r6, #0]
 80090b2:	6823      	ldr	r3, [r4, #0]
 80090b4:	0699      	lsls	r1, r3, #26
 80090b6:	bf42      	ittt	mi
 80090b8:	6833      	ldrmi	r3, [r6, #0]
 80090ba:	3302      	addmi	r3, #2
 80090bc:	6033      	strmi	r3, [r6, #0]
 80090be:	6825      	ldr	r5, [r4, #0]
 80090c0:	f015 0506 	ands.w	r5, r5, #6
 80090c4:	d106      	bne.n	80090d4 <_printf_common+0x48>
 80090c6:	f104 0a19 	add.w	sl, r4, #25
 80090ca:	68e3      	ldr	r3, [r4, #12]
 80090cc:	6832      	ldr	r2, [r6, #0]
 80090ce:	1a9b      	subs	r3, r3, r2
 80090d0:	42ab      	cmp	r3, r5
 80090d2:	dc26      	bgt.n	8009122 <_printf_common+0x96>
 80090d4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80090d8:	1e13      	subs	r3, r2, #0
 80090da:	6822      	ldr	r2, [r4, #0]
 80090dc:	bf18      	it	ne
 80090de:	2301      	movne	r3, #1
 80090e0:	0692      	lsls	r2, r2, #26
 80090e2:	d42b      	bmi.n	800913c <_printf_common+0xb0>
 80090e4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80090e8:	4649      	mov	r1, r9
 80090ea:	4638      	mov	r0, r7
 80090ec:	47c0      	blx	r8
 80090ee:	3001      	adds	r0, #1
 80090f0:	d01e      	beq.n	8009130 <_printf_common+0xa4>
 80090f2:	6823      	ldr	r3, [r4, #0]
 80090f4:	68e5      	ldr	r5, [r4, #12]
 80090f6:	6832      	ldr	r2, [r6, #0]
 80090f8:	f003 0306 	and.w	r3, r3, #6
 80090fc:	2b04      	cmp	r3, #4
 80090fe:	bf08      	it	eq
 8009100:	1aad      	subeq	r5, r5, r2
 8009102:	68a3      	ldr	r3, [r4, #8]
 8009104:	6922      	ldr	r2, [r4, #16]
 8009106:	bf0c      	ite	eq
 8009108:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800910c:	2500      	movne	r5, #0
 800910e:	4293      	cmp	r3, r2
 8009110:	bfc4      	itt	gt
 8009112:	1a9b      	subgt	r3, r3, r2
 8009114:	18ed      	addgt	r5, r5, r3
 8009116:	2600      	movs	r6, #0
 8009118:	341a      	adds	r4, #26
 800911a:	42b5      	cmp	r5, r6
 800911c:	d11a      	bne.n	8009154 <_printf_common+0xc8>
 800911e:	2000      	movs	r0, #0
 8009120:	e008      	b.n	8009134 <_printf_common+0xa8>
 8009122:	2301      	movs	r3, #1
 8009124:	4652      	mov	r2, sl
 8009126:	4649      	mov	r1, r9
 8009128:	4638      	mov	r0, r7
 800912a:	47c0      	blx	r8
 800912c:	3001      	adds	r0, #1
 800912e:	d103      	bne.n	8009138 <_printf_common+0xac>
 8009130:	f04f 30ff 	mov.w	r0, #4294967295
 8009134:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009138:	3501      	adds	r5, #1
 800913a:	e7c6      	b.n	80090ca <_printf_common+0x3e>
 800913c:	18e1      	adds	r1, r4, r3
 800913e:	1c5a      	adds	r2, r3, #1
 8009140:	2030      	movs	r0, #48	; 0x30
 8009142:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009146:	4422      	add	r2, r4
 8009148:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800914c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8009150:	3302      	adds	r3, #2
 8009152:	e7c7      	b.n	80090e4 <_printf_common+0x58>
 8009154:	2301      	movs	r3, #1
 8009156:	4622      	mov	r2, r4
 8009158:	4649      	mov	r1, r9
 800915a:	4638      	mov	r0, r7
 800915c:	47c0      	blx	r8
 800915e:	3001      	adds	r0, #1
 8009160:	d0e6      	beq.n	8009130 <_printf_common+0xa4>
 8009162:	3601      	adds	r6, #1
 8009164:	e7d9      	b.n	800911a <_printf_common+0x8e>
	...

08009168 <_printf_i>:
 8009168:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800916c:	460c      	mov	r4, r1
 800916e:	4691      	mov	r9, r2
 8009170:	7e27      	ldrb	r7, [r4, #24]
 8009172:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009174:	2f78      	cmp	r7, #120	; 0x78
 8009176:	4680      	mov	r8, r0
 8009178:	469a      	mov	sl, r3
 800917a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800917e:	d807      	bhi.n	8009190 <_printf_i+0x28>
 8009180:	2f62      	cmp	r7, #98	; 0x62
 8009182:	d80a      	bhi.n	800919a <_printf_i+0x32>
 8009184:	2f00      	cmp	r7, #0
 8009186:	f000 80d8 	beq.w	800933a <_printf_i+0x1d2>
 800918a:	2f58      	cmp	r7, #88	; 0x58
 800918c:	f000 80a3 	beq.w	80092d6 <_printf_i+0x16e>
 8009190:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8009194:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009198:	e03a      	b.n	8009210 <_printf_i+0xa8>
 800919a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800919e:	2b15      	cmp	r3, #21
 80091a0:	d8f6      	bhi.n	8009190 <_printf_i+0x28>
 80091a2:	a001      	add	r0, pc, #4	; (adr r0, 80091a8 <_printf_i+0x40>)
 80091a4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80091a8:	08009201 	.word	0x08009201
 80091ac:	08009215 	.word	0x08009215
 80091b0:	08009191 	.word	0x08009191
 80091b4:	08009191 	.word	0x08009191
 80091b8:	08009191 	.word	0x08009191
 80091bc:	08009191 	.word	0x08009191
 80091c0:	08009215 	.word	0x08009215
 80091c4:	08009191 	.word	0x08009191
 80091c8:	08009191 	.word	0x08009191
 80091cc:	08009191 	.word	0x08009191
 80091d0:	08009191 	.word	0x08009191
 80091d4:	08009321 	.word	0x08009321
 80091d8:	08009245 	.word	0x08009245
 80091dc:	08009303 	.word	0x08009303
 80091e0:	08009191 	.word	0x08009191
 80091e4:	08009191 	.word	0x08009191
 80091e8:	08009343 	.word	0x08009343
 80091ec:	08009191 	.word	0x08009191
 80091f0:	08009245 	.word	0x08009245
 80091f4:	08009191 	.word	0x08009191
 80091f8:	08009191 	.word	0x08009191
 80091fc:	0800930b 	.word	0x0800930b
 8009200:	680b      	ldr	r3, [r1, #0]
 8009202:	1d1a      	adds	r2, r3, #4
 8009204:	681b      	ldr	r3, [r3, #0]
 8009206:	600a      	str	r2, [r1, #0]
 8009208:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800920c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009210:	2301      	movs	r3, #1
 8009212:	e0a3      	b.n	800935c <_printf_i+0x1f4>
 8009214:	6825      	ldr	r5, [r4, #0]
 8009216:	6808      	ldr	r0, [r1, #0]
 8009218:	062e      	lsls	r6, r5, #24
 800921a:	f100 0304 	add.w	r3, r0, #4
 800921e:	d50a      	bpl.n	8009236 <_printf_i+0xce>
 8009220:	6805      	ldr	r5, [r0, #0]
 8009222:	600b      	str	r3, [r1, #0]
 8009224:	2d00      	cmp	r5, #0
 8009226:	da03      	bge.n	8009230 <_printf_i+0xc8>
 8009228:	232d      	movs	r3, #45	; 0x2d
 800922a:	426d      	negs	r5, r5
 800922c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009230:	485e      	ldr	r0, [pc, #376]	; (80093ac <_printf_i+0x244>)
 8009232:	230a      	movs	r3, #10
 8009234:	e019      	b.n	800926a <_printf_i+0x102>
 8009236:	f015 0f40 	tst.w	r5, #64	; 0x40
 800923a:	6805      	ldr	r5, [r0, #0]
 800923c:	600b      	str	r3, [r1, #0]
 800923e:	bf18      	it	ne
 8009240:	b22d      	sxthne	r5, r5
 8009242:	e7ef      	b.n	8009224 <_printf_i+0xbc>
 8009244:	680b      	ldr	r3, [r1, #0]
 8009246:	6825      	ldr	r5, [r4, #0]
 8009248:	1d18      	adds	r0, r3, #4
 800924a:	6008      	str	r0, [r1, #0]
 800924c:	0628      	lsls	r0, r5, #24
 800924e:	d501      	bpl.n	8009254 <_printf_i+0xec>
 8009250:	681d      	ldr	r5, [r3, #0]
 8009252:	e002      	b.n	800925a <_printf_i+0xf2>
 8009254:	0669      	lsls	r1, r5, #25
 8009256:	d5fb      	bpl.n	8009250 <_printf_i+0xe8>
 8009258:	881d      	ldrh	r5, [r3, #0]
 800925a:	4854      	ldr	r0, [pc, #336]	; (80093ac <_printf_i+0x244>)
 800925c:	2f6f      	cmp	r7, #111	; 0x6f
 800925e:	bf0c      	ite	eq
 8009260:	2308      	moveq	r3, #8
 8009262:	230a      	movne	r3, #10
 8009264:	2100      	movs	r1, #0
 8009266:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800926a:	6866      	ldr	r6, [r4, #4]
 800926c:	60a6      	str	r6, [r4, #8]
 800926e:	2e00      	cmp	r6, #0
 8009270:	bfa2      	ittt	ge
 8009272:	6821      	ldrge	r1, [r4, #0]
 8009274:	f021 0104 	bicge.w	r1, r1, #4
 8009278:	6021      	strge	r1, [r4, #0]
 800927a:	b90d      	cbnz	r5, 8009280 <_printf_i+0x118>
 800927c:	2e00      	cmp	r6, #0
 800927e:	d04d      	beq.n	800931c <_printf_i+0x1b4>
 8009280:	4616      	mov	r6, r2
 8009282:	fbb5 f1f3 	udiv	r1, r5, r3
 8009286:	fb03 5711 	mls	r7, r3, r1, r5
 800928a:	5dc7      	ldrb	r7, [r0, r7]
 800928c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8009290:	462f      	mov	r7, r5
 8009292:	42bb      	cmp	r3, r7
 8009294:	460d      	mov	r5, r1
 8009296:	d9f4      	bls.n	8009282 <_printf_i+0x11a>
 8009298:	2b08      	cmp	r3, #8
 800929a:	d10b      	bne.n	80092b4 <_printf_i+0x14c>
 800929c:	6823      	ldr	r3, [r4, #0]
 800929e:	07df      	lsls	r7, r3, #31
 80092a0:	d508      	bpl.n	80092b4 <_printf_i+0x14c>
 80092a2:	6923      	ldr	r3, [r4, #16]
 80092a4:	6861      	ldr	r1, [r4, #4]
 80092a6:	4299      	cmp	r1, r3
 80092a8:	bfde      	ittt	le
 80092aa:	2330      	movle	r3, #48	; 0x30
 80092ac:	f806 3c01 	strble.w	r3, [r6, #-1]
 80092b0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80092b4:	1b92      	subs	r2, r2, r6
 80092b6:	6122      	str	r2, [r4, #16]
 80092b8:	f8cd a000 	str.w	sl, [sp]
 80092bc:	464b      	mov	r3, r9
 80092be:	aa03      	add	r2, sp, #12
 80092c0:	4621      	mov	r1, r4
 80092c2:	4640      	mov	r0, r8
 80092c4:	f7ff fee2 	bl	800908c <_printf_common>
 80092c8:	3001      	adds	r0, #1
 80092ca:	d14c      	bne.n	8009366 <_printf_i+0x1fe>
 80092cc:	f04f 30ff 	mov.w	r0, #4294967295
 80092d0:	b004      	add	sp, #16
 80092d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80092d6:	4835      	ldr	r0, [pc, #212]	; (80093ac <_printf_i+0x244>)
 80092d8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80092dc:	6823      	ldr	r3, [r4, #0]
 80092de:	680e      	ldr	r6, [r1, #0]
 80092e0:	061f      	lsls	r7, r3, #24
 80092e2:	f856 5b04 	ldr.w	r5, [r6], #4
 80092e6:	600e      	str	r6, [r1, #0]
 80092e8:	d514      	bpl.n	8009314 <_printf_i+0x1ac>
 80092ea:	07d9      	lsls	r1, r3, #31
 80092ec:	bf44      	itt	mi
 80092ee:	f043 0320 	orrmi.w	r3, r3, #32
 80092f2:	6023      	strmi	r3, [r4, #0]
 80092f4:	b91d      	cbnz	r5, 80092fe <_printf_i+0x196>
 80092f6:	6823      	ldr	r3, [r4, #0]
 80092f8:	f023 0320 	bic.w	r3, r3, #32
 80092fc:	6023      	str	r3, [r4, #0]
 80092fe:	2310      	movs	r3, #16
 8009300:	e7b0      	b.n	8009264 <_printf_i+0xfc>
 8009302:	6823      	ldr	r3, [r4, #0]
 8009304:	f043 0320 	orr.w	r3, r3, #32
 8009308:	6023      	str	r3, [r4, #0]
 800930a:	2378      	movs	r3, #120	; 0x78
 800930c:	4828      	ldr	r0, [pc, #160]	; (80093b0 <_printf_i+0x248>)
 800930e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009312:	e7e3      	b.n	80092dc <_printf_i+0x174>
 8009314:	065e      	lsls	r6, r3, #25
 8009316:	bf48      	it	mi
 8009318:	b2ad      	uxthmi	r5, r5
 800931a:	e7e6      	b.n	80092ea <_printf_i+0x182>
 800931c:	4616      	mov	r6, r2
 800931e:	e7bb      	b.n	8009298 <_printf_i+0x130>
 8009320:	680b      	ldr	r3, [r1, #0]
 8009322:	6826      	ldr	r6, [r4, #0]
 8009324:	6960      	ldr	r0, [r4, #20]
 8009326:	1d1d      	adds	r5, r3, #4
 8009328:	600d      	str	r5, [r1, #0]
 800932a:	0635      	lsls	r5, r6, #24
 800932c:	681b      	ldr	r3, [r3, #0]
 800932e:	d501      	bpl.n	8009334 <_printf_i+0x1cc>
 8009330:	6018      	str	r0, [r3, #0]
 8009332:	e002      	b.n	800933a <_printf_i+0x1d2>
 8009334:	0671      	lsls	r1, r6, #25
 8009336:	d5fb      	bpl.n	8009330 <_printf_i+0x1c8>
 8009338:	8018      	strh	r0, [r3, #0]
 800933a:	2300      	movs	r3, #0
 800933c:	6123      	str	r3, [r4, #16]
 800933e:	4616      	mov	r6, r2
 8009340:	e7ba      	b.n	80092b8 <_printf_i+0x150>
 8009342:	680b      	ldr	r3, [r1, #0]
 8009344:	1d1a      	adds	r2, r3, #4
 8009346:	600a      	str	r2, [r1, #0]
 8009348:	681e      	ldr	r6, [r3, #0]
 800934a:	6862      	ldr	r2, [r4, #4]
 800934c:	2100      	movs	r1, #0
 800934e:	4630      	mov	r0, r6
 8009350:	f7f6 ff8e 	bl	8000270 <memchr>
 8009354:	b108      	cbz	r0, 800935a <_printf_i+0x1f2>
 8009356:	1b80      	subs	r0, r0, r6
 8009358:	6060      	str	r0, [r4, #4]
 800935a:	6863      	ldr	r3, [r4, #4]
 800935c:	6123      	str	r3, [r4, #16]
 800935e:	2300      	movs	r3, #0
 8009360:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009364:	e7a8      	b.n	80092b8 <_printf_i+0x150>
 8009366:	6923      	ldr	r3, [r4, #16]
 8009368:	4632      	mov	r2, r6
 800936a:	4649      	mov	r1, r9
 800936c:	4640      	mov	r0, r8
 800936e:	47d0      	blx	sl
 8009370:	3001      	adds	r0, #1
 8009372:	d0ab      	beq.n	80092cc <_printf_i+0x164>
 8009374:	6823      	ldr	r3, [r4, #0]
 8009376:	079b      	lsls	r3, r3, #30
 8009378:	d413      	bmi.n	80093a2 <_printf_i+0x23a>
 800937a:	68e0      	ldr	r0, [r4, #12]
 800937c:	9b03      	ldr	r3, [sp, #12]
 800937e:	4298      	cmp	r0, r3
 8009380:	bfb8      	it	lt
 8009382:	4618      	movlt	r0, r3
 8009384:	e7a4      	b.n	80092d0 <_printf_i+0x168>
 8009386:	2301      	movs	r3, #1
 8009388:	4632      	mov	r2, r6
 800938a:	4649      	mov	r1, r9
 800938c:	4640      	mov	r0, r8
 800938e:	47d0      	blx	sl
 8009390:	3001      	adds	r0, #1
 8009392:	d09b      	beq.n	80092cc <_printf_i+0x164>
 8009394:	3501      	adds	r5, #1
 8009396:	68e3      	ldr	r3, [r4, #12]
 8009398:	9903      	ldr	r1, [sp, #12]
 800939a:	1a5b      	subs	r3, r3, r1
 800939c:	42ab      	cmp	r3, r5
 800939e:	dcf2      	bgt.n	8009386 <_printf_i+0x21e>
 80093a0:	e7eb      	b.n	800937a <_printf_i+0x212>
 80093a2:	2500      	movs	r5, #0
 80093a4:	f104 0619 	add.w	r6, r4, #25
 80093a8:	e7f5      	b.n	8009396 <_printf_i+0x22e>
 80093aa:	bf00      	nop
 80093ac:	0800e728 	.word	0x0800e728
 80093b0:	0800e739 	.word	0x0800e739

080093b4 <_scanf_float>:
 80093b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093b8:	b087      	sub	sp, #28
 80093ba:	4617      	mov	r7, r2
 80093bc:	9303      	str	r3, [sp, #12]
 80093be:	688b      	ldr	r3, [r1, #8]
 80093c0:	1e5a      	subs	r2, r3, #1
 80093c2:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80093c6:	bf83      	ittte	hi
 80093c8:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80093cc:	195b      	addhi	r3, r3, r5
 80093ce:	9302      	strhi	r3, [sp, #8]
 80093d0:	2300      	movls	r3, #0
 80093d2:	bf86      	itte	hi
 80093d4:	f240 135d 	movwhi	r3, #349	; 0x15d
 80093d8:	608b      	strhi	r3, [r1, #8]
 80093da:	9302      	strls	r3, [sp, #8]
 80093dc:	680b      	ldr	r3, [r1, #0]
 80093de:	468b      	mov	fp, r1
 80093e0:	2500      	movs	r5, #0
 80093e2:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80093e6:	f84b 3b1c 	str.w	r3, [fp], #28
 80093ea:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80093ee:	4680      	mov	r8, r0
 80093f0:	460c      	mov	r4, r1
 80093f2:	465e      	mov	r6, fp
 80093f4:	46aa      	mov	sl, r5
 80093f6:	46a9      	mov	r9, r5
 80093f8:	9501      	str	r5, [sp, #4]
 80093fa:	68a2      	ldr	r2, [r4, #8]
 80093fc:	b152      	cbz	r2, 8009414 <_scanf_float+0x60>
 80093fe:	683b      	ldr	r3, [r7, #0]
 8009400:	781b      	ldrb	r3, [r3, #0]
 8009402:	2b4e      	cmp	r3, #78	; 0x4e
 8009404:	d864      	bhi.n	80094d0 <_scanf_float+0x11c>
 8009406:	2b40      	cmp	r3, #64	; 0x40
 8009408:	d83c      	bhi.n	8009484 <_scanf_float+0xd0>
 800940a:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800940e:	b2c8      	uxtb	r0, r1
 8009410:	280e      	cmp	r0, #14
 8009412:	d93a      	bls.n	800948a <_scanf_float+0xd6>
 8009414:	f1b9 0f00 	cmp.w	r9, #0
 8009418:	d003      	beq.n	8009422 <_scanf_float+0x6e>
 800941a:	6823      	ldr	r3, [r4, #0]
 800941c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009420:	6023      	str	r3, [r4, #0]
 8009422:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009426:	f1ba 0f01 	cmp.w	sl, #1
 800942a:	f200 8113 	bhi.w	8009654 <_scanf_float+0x2a0>
 800942e:	455e      	cmp	r6, fp
 8009430:	f200 8105 	bhi.w	800963e <_scanf_float+0x28a>
 8009434:	2501      	movs	r5, #1
 8009436:	4628      	mov	r0, r5
 8009438:	b007      	add	sp, #28
 800943a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800943e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8009442:	2a0d      	cmp	r2, #13
 8009444:	d8e6      	bhi.n	8009414 <_scanf_float+0x60>
 8009446:	a101      	add	r1, pc, #4	; (adr r1, 800944c <_scanf_float+0x98>)
 8009448:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800944c:	0800958b 	.word	0x0800958b
 8009450:	08009415 	.word	0x08009415
 8009454:	08009415 	.word	0x08009415
 8009458:	08009415 	.word	0x08009415
 800945c:	080095eb 	.word	0x080095eb
 8009460:	080095c3 	.word	0x080095c3
 8009464:	08009415 	.word	0x08009415
 8009468:	08009415 	.word	0x08009415
 800946c:	08009599 	.word	0x08009599
 8009470:	08009415 	.word	0x08009415
 8009474:	08009415 	.word	0x08009415
 8009478:	08009415 	.word	0x08009415
 800947c:	08009415 	.word	0x08009415
 8009480:	08009551 	.word	0x08009551
 8009484:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8009488:	e7db      	b.n	8009442 <_scanf_float+0x8e>
 800948a:	290e      	cmp	r1, #14
 800948c:	d8c2      	bhi.n	8009414 <_scanf_float+0x60>
 800948e:	a001      	add	r0, pc, #4	; (adr r0, 8009494 <_scanf_float+0xe0>)
 8009490:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009494:	08009543 	.word	0x08009543
 8009498:	08009415 	.word	0x08009415
 800949c:	08009543 	.word	0x08009543
 80094a0:	080095d7 	.word	0x080095d7
 80094a4:	08009415 	.word	0x08009415
 80094a8:	080094f1 	.word	0x080094f1
 80094ac:	0800952d 	.word	0x0800952d
 80094b0:	0800952d 	.word	0x0800952d
 80094b4:	0800952d 	.word	0x0800952d
 80094b8:	0800952d 	.word	0x0800952d
 80094bc:	0800952d 	.word	0x0800952d
 80094c0:	0800952d 	.word	0x0800952d
 80094c4:	0800952d 	.word	0x0800952d
 80094c8:	0800952d 	.word	0x0800952d
 80094cc:	0800952d 	.word	0x0800952d
 80094d0:	2b6e      	cmp	r3, #110	; 0x6e
 80094d2:	d809      	bhi.n	80094e8 <_scanf_float+0x134>
 80094d4:	2b60      	cmp	r3, #96	; 0x60
 80094d6:	d8b2      	bhi.n	800943e <_scanf_float+0x8a>
 80094d8:	2b54      	cmp	r3, #84	; 0x54
 80094da:	d077      	beq.n	80095cc <_scanf_float+0x218>
 80094dc:	2b59      	cmp	r3, #89	; 0x59
 80094de:	d199      	bne.n	8009414 <_scanf_float+0x60>
 80094e0:	2d07      	cmp	r5, #7
 80094e2:	d197      	bne.n	8009414 <_scanf_float+0x60>
 80094e4:	2508      	movs	r5, #8
 80094e6:	e029      	b.n	800953c <_scanf_float+0x188>
 80094e8:	2b74      	cmp	r3, #116	; 0x74
 80094ea:	d06f      	beq.n	80095cc <_scanf_float+0x218>
 80094ec:	2b79      	cmp	r3, #121	; 0x79
 80094ee:	e7f6      	b.n	80094de <_scanf_float+0x12a>
 80094f0:	6821      	ldr	r1, [r4, #0]
 80094f2:	05c8      	lsls	r0, r1, #23
 80094f4:	d51a      	bpl.n	800952c <_scanf_float+0x178>
 80094f6:	9b02      	ldr	r3, [sp, #8]
 80094f8:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80094fc:	6021      	str	r1, [r4, #0]
 80094fe:	f109 0901 	add.w	r9, r9, #1
 8009502:	b11b      	cbz	r3, 800950c <_scanf_float+0x158>
 8009504:	3b01      	subs	r3, #1
 8009506:	3201      	adds	r2, #1
 8009508:	9302      	str	r3, [sp, #8]
 800950a:	60a2      	str	r2, [r4, #8]
 800950c:	68a3      	ldr	r3, [r4, #8]
 800950e:	3b01      	subs	r3, #1
 8009510:	60a3      	str	r3, [r4, #8]
 8009512:	6923      	ldr	r3, [r4, #16]
 8009514:	3301      	adds	r3, #1
 8009516:	6123      	str	r3, [r4, #16]
 8009518:	687b      	ldr	r3, [r7, #4]
 800951a:	3b01      	subs	r3, #1
 800951c:	2b00      	cmp	r3, #0
 800951e:	607b      	str	r3, [r7, #4]
 8009520:	f340 8084 	ble.w	800962c <_scanf_float+0x278>
 8009524:	683b      	ldr	r3, [r7, #0]
 8009526:	3301      	adds	r3, #1
 8009528:	603b      	str	r3, [r7, #0]
 800952a:	e766      	b.n	80093fa <_scanf_float+0x46>
 800952c:	eb1a 0f05 	cmn.w	sl, r5
 8009530:	f47f af70 	bne.w	8009414 <_scanf_float+0x60>
 8009534:	6822      	ldr	r2, [r4, #0]
 8009536:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800953a:	6022      	str	r2, [r4, #0]
 800953c:	f806 3b01 	strb.w	r3, [r6], #1
 8009540:	e7e4      	b.n	800950c <_scanf_float+0x158>
 8009542:	6822      	ldr	r2, [r4, #0]
 8009544:	0610      	lsls	r0, r2, #24
 8009546:	f57f af65 	bpl.w	8009414 <_scanf_float+0x60>
 800954a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800954e:	e7f4      	b.n	800953a <_scanf_float+0x186>
 8009550:	f1ba 0f00 	cmp.w	sl, #0
 8009554:	d10e      	bne.n	8009574 <_scanf_float+0x1c0>
 8009556:	f1b9 0f00 	cmp.w	r9, #0
 800955a:	d10e      	bne.n	800957a <_scanf_float+0x1c6>
 800955c:	6822      	ldr	r2, [r4, #0]
 800955e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009562:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009566:	d108      	bne.n	800957a <_scanf_float+0x1c6>
 8009568:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800956c:	6022      	str	r2, [r4, #0]
 800956e:	f04f 0a01 	mov.w	sl, #1
 8009572:	e7e3      	b.n	800953c <_scanf_float+0x188>
 8009574:	f1ba 0f02 	cmp.w	sl, #2
 8009578:	d055      	beq.n	8009626 <_scanf_float+0x272>
 800957a:	2d01      	cmp	r5, #1
 800957c:	d002      	beq.n	8009584 <_scanf_float+0x1d0>
 800957e:	2d04      	cmp	r5, #4
 8009580:	f47f af48 	bne.w	8009414 <_scanf_float+0x60>
 8009584:	3501      	adds	r5, #1
 8009586:	b2ed      	uxtb	r5, r5
 8009588:	e7d8      	b.n	800953c <_scanf_float+0x188>
 800958a:	f1ba 0f01 	cmp.w	sl, #1
 800958e:	f47f af41 	bne.w	8009414 <_scanf_float+0x60>
 8009592:	f04f 0a02 	mov.w	sl, #2
 8009596:	e7d1      	b.n	800953c <_scanf_float+0x188>
 8009598:	b97d      	cbnz	r5, 80095ba <_scanf_float+0x206>
 800959a:	f1b9 0f00 	cmp.w	r9, #0
 800959e:	f47f af3c 	bne.w	800941a <_scanf_float+0x66>
 80095a2:	6822      	ldr	r2, [r4, #0]
 80095a4:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80095a8:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80095ac:	f47f af39 	bne.w	8009422 <_scanf_float+0x6e>
 80095b0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80095b4:	6022      	str	r2, [r4, #0]
 80095b6:	2501      	movs	r5, #1
 80095b8:	e7c0      	b.n	800953c <_scanf_float+0x188>
 80095ba:	2d03      	cmp	r5, #3
 80095bc:	d0e2      	beq.n	8009584 <_scanf_float+0x1d0>
 80095be:	2d05      	cmp	r5, #5
 80095c0:	e7de      	b.n	8009580 <_scanf_float+0x1cc>
 80095c2:	2d02      	cmp	r5, #2
 80095c4:	f47f af26 	bne.w	8009414 <_scanf_float+0x60>
 80095c8:	2503      	movs	r5, #3
 80095ca:	e7b7      	b.n	800953c <_scanf_float+0x188>
 80095cc:	2d06      	cmp	r5, #6
 80095ce:	f47f af21 	bne.w	8009414 <_scanf_float+0x60>
 80095d2:	2507      	movs	r5, #7
 80095d4:	e7b2      	b.n	800953c <_scanf_float+0x188>
 80095d6:	6822      	ldr	r2, [r4, #0]
 80095d8:	0591      	lsls	r1, r2, #22
 80095da:	f57f af1b 	bpl.w	8009414 <_scanf_float+0x60>
 80095de:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 80095e2:	6022      	str	r2, [r4, #0]
 80095e4:	f8cd 9004 	str.w	r9, [sp, #4]
 80095e8:	e7a8      	b.n	800953c <_scanf_float+0x188>
 80095ea:	6822      	ldr	r2, [r4, #0]
 80095ec:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 80095f0:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 80095f4:	d006      	beq.n	8009604 <_scanf_float+0x250>
 80095f6:	0550      	lsls	r0, r2, #21
 80095f8:	f57f af0c 	bpl.w	8009414 <_scanf_float+0x60>
 80095fc:	f1b9 0f00 	cmp.w	r9, #0
 8009600:	f43f af0f 	beq.w	8009422 <_scanf_float+0x6e>
 8009604:	0591      	lsls	r1, r2, #22
 8009606:	bf58      	it	pl
 8009608:	9901      	ldrpl	r1, [sp, #4]
 800960a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800960e:	bf58      	it	pl
 8009610:	eba9 0101 	subpl.w	r1, r9, r1
 8009614:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8009618:	bf58      	it	pl
 800961a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800961e:	6022      	str	r2, [r4, #0]
 8009620:	f04f 0900 	mov.w	r9, #0
 8009624:	e78a      	b.n	800953c <_scanf_float+0x188>
 8009626:	f04f 0a03 	mov.w	sl, #3
 800962a:	e787      	b.n	800953c <_scanf_float+0x188>
 800962c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8009630:	4639      	mov	r1, r7
 8009632:	4640      	mov	r0, r8
 8009634:	4798      	blx	r3
 8009636:	2800      	cmp	r0, #0
 8009638:	f43f aedf 	beq.w	80093fa <_scanf_float+0x46>
 800963c:	e6ea      	b.n	8009414 <_scanf_float+0x60>
 800963e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009642:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009646:	463a      	mov	r2, r7
 8009648:	4640      	mov	r0, r8
 800964a:	4798      	blx	r3
 800964c:	6923      	ldr	r3, [r4, #16]
 800964e:	3b01      	subs	r3, #1
 8009650:	6123      	str	r3, [r4, #16]
 8009652:	e6ec      	b.n	800942e <_scanf_float+0x7a>
 8009654:	1e6b      	subs	r3, r5, #1
 8009656:	2b06      	cmp	r3, #6
 8009658:	d825      	bhi.n	80096a6 <_scanf_float+0x2f2>
 800965a:	2d02      	cmp	r5, #2
 800965c:	d836      	bhi.n	80096cc <_scanf_float+0x318>
 800965e:	455e      	cmp	r6, fp
 8009660:	f67f aee8 	bls.w	8009434 <_scanf_float+0x80>
 8009664:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009668:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800966c:	463a      	mov	r2, r7
 800966e:	4640      	mov	r0, r8
 8009670:	4798      	blx	r3
 8009672:	6923      	ldr	r3, [r4, #16]
 8009674:	3b01      	subs	r3, #1
 8009676:	6123      	str	r3, [r4, #16]
 8009678:	e7f1      	b.n	800965e <_scanf_float+0x2aa>
 800967a:	9802      	ldr	r0, [sp, #8]
 800967c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009680:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8009684:	9002      	str	r0, [sp, #8]
 8009686:	463a      	mov	r2, r7
 8009688:	4640      	mov	r0, r8
 800968a:	4798      	blx	r3
 800968c:	6923      	ldr	r3, [r4, #16]
 800968e:	3b01      	subs	r3, #1
 8009690:	6123      	str	r3, [r4, #16]
 8009692:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009696:	fa5f fa8a 	uxtb.w	sl, sl
 800969a:	f1ba 0f02 	cmp.w	sl, #2
 800969e:	d1ec      	bne.n	800967a <_scanf_float+0x2c6>
 80096a0:	3d03      	subs	r5, #3
 80096a2:	b2ed      	uxtb	r5, r5
 80096a4:	1b76      	subs	r6, r6, r5
 80096a6:	6823      	ldr	r3, [r4, #0]
 80096a8:	05da      	lsls	r2, r3, #23
 80096aa:	d52f      	bpl.n	800970c <_scanf_float+0x358>
 80096ac:	055b      	lsls	r3, r3, #21
 80096ae:	d510      	bpl.n	80096d2 <_scanf_float+0x31e>
 80096b0:	455e      	cmp	r6, fp
 80096b2:	f67f aebf 	bls.w	8009434 <_scanf_float+0x80>
 80096b6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80096ba:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80096be:	463a      	mov	r2, r7
 80096c0:	4640      	mov	r0, r8
 80096c2:	4798      	blx	r3
 80096c4:	6923      	ldr	r3, [r4, #16]
 80096c6:	3b01      	subs	r3, #1
 80096c8:	6123      	str	r3, [r4, #16]
 80096ca:	e7f1      	b.n	80096b0 <_scanf_float+0x2fc>
 80096cc:	46aa      	mov	sl, r5
 80096ce:	9602      	str	r6, [sp, #8]
 80096d0:	e7df      	b.n	8009692 <_scanf_float+0x2de>
 80096d2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80096d6:	6923      	ldr	r3, [r4, #16]
 80096d8:	2965      	cmp	r1, #101	; 0x65
 80096da:	f103 33ff 	add.w	r3, r3, #4294967295
 80096de:	f106 35ff 	add.w	r5, r6, #4294967295
 80096e2:	6123      	str	r3, [r4, #16]
 80096e4:	d00c      	beq.n	8009700 <_scanf_float+0x34c>
 80096e6:	2945      	cmp	r1, #69	; 0x45
 80096e8:	d00a      	beq.n	8009700 <_scanf_float+0x34c>
 80096ea:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80096ee:	463a      	mov	r2, r7
 80096f0:	4640      	mov	r0, r8
 80096f2:	4798      	blx	r3
 80096f4:	6923      	ldr	r3, [r4, #16]
 80096f6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80096fa:	3b01      	subs	r3, #1
 80096fc:	1eb5      	subs	r5, r6, #2
 80096fe:	6123      	str	r3, [r4, #16]
 8009700:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009704:	463a      	mov	r2, r7
 8009706:	4640      	mov	r0, r8
 8009708:	4798      	blx	r3
 800970a:	462e      	mov	r6, r5
 800970c:	6825      	ldr	r5, [r4, #0]
 800970e:	f015 0510 	ands.w	r5, r5, #16
 8009712:	d14d      	bne.n	80097b0 <_scanf_float+0x3fc>
 8009714:	7035      	strb	r5, [r6, #0]
 8009716:	6823      	ldr	r3, [r4, #0]
 8009718:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800971c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009720:	d11a      	bne.n	8009758 <_scanf_float+0x3a4>
 8009722:	9b01      	ldr	r3, [sp, #4]
 8009724:	454b      	cmp	r3, r9
 8009726:	eba3 0209 	sub.w	r2, r3, r9
 800972a:	d122      	bne.n	8009772 <_scanf_float+0x3be>
 800972c:	2200      	movs	r2, #0
 800972e:	4659      	mov	r1, fp
 8009730:	4640      	mov	r0, r8
 8009732:	f000 fef7 	bl	800a524 <_strtod_r>
 8009736:	9b03      	ldr	r3, [sp, #12]
 8009738:	6821      	ldr	r1, [r4, #0]
 800973a:	681b      	ldr	r3, [r3, #0]
 800973c:	f011 0f02 	tst.w	r1, #2
 8009740:	f103 0204 	add.w	r2, r3, #4
 8009744:	d020      	beq.n	8009788 <_scanf_float+0x3d4>
 8009746:	9903      	ldr	r1, [sp, #12]
 8009748:	600a      	str	r2, [r1, #0]
 800974a:	681b      	ldr	r3, [r3, #0]
 800974c:	ed83 0b00 	vstr	d0, [r3]
 8009750:	68e3      	ldr	r3, [r4, #12]
 8009752:	3301      	adds	r3, #1
 8009754:	60e3      	str	r3, [r4, #12]
 8009756:	e66e      	b.n	8009436 <_scanf_float+0x82>
 8009758:	9b04      	ldr	r3, [sp, #16]
 800975a:	2b00      	cmp	r3, #0
 800975c:	d0e6      	beq.n	800972c <_scanf_float+0x378>
 800975e:	9905      	ldr	r1, [sp, #20]
 8009760:	230a      	movs	r3, #10
 8009762:	462a      	mov	r2, r5
 8009764:	3101      	adds	r1, #1
 8009766:	4640      	mov	r0, r8
 8009768:	f000 ff66 	bl	800a638 <_strtol_r>
 800976c:	9b04      	ldr	r3, [sp, #16]
 800976e:	9e05      	ldr	r6, [sp, #20]
 8009770:	1ac2      	subs	r2, r0, r3
 8009772:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8009776:	429e      	cmp	r6, r3
 8009778:	bf28      	it	cs
 800977a:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800977e:	490d      	ldr	r1, [pc, #52]	; (80097b4 <_scanf_float+0x400>)
 8009780:	4630      	mov	r0, r6
 8009782:	f000 f821 	bl	80097c8 <siprintf>
 8009786:	e7d1      	b.n	800972c <_scanf_float+0x378>
 8009788:	f011 0f04 	tst.w	r1, #4
 800978c:	9903      	ldr	r1, [sp, #12]
 800978e:	600a      	str	r2, [r1, #0]
 8009790:	d1db      	bne.n	800974a <_scanf_float+0x396>
 8009792:	eeb4 0b40 	vcmp.f64	d0, d0
 8009796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800979a:	681e      	ldr	r6, [r3, #0]
 800979c:	d705      	bvc.n	80097aa <_scanf_float+0x3f6>
 800979e:	4806      	ldr	r0, [pc, #24]	; (80097b8 <_scanf_float+0x404>)
 80097a0:	f000 f80c 	bl	80097bc <nanf>
 80097a4:	ed86 0a00 	vstr	s0, [r6]
 80097a8:	e7d2      	b.n	8009750 <_scanf_float+0x39c>
 80097aa:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 80097ae:	e7f9      	b.n	80097a4 <_scanf_float+0x3f0>
 80097b0:	2500      	movs	r5, #0
 80097b2:	e640      	b.n	8009436 <_scanf_float+0x82>
 80097b4:	0800e74a 	.word	0x0800e74a
 80097b8:	0800eb7b 	.word	0x0800eb7b

080097bc <nanf>:
 80097bc:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80097c4 <nanf+0x8>
 80097c0:	4770      	bx	lr
 80097c2:	bf00      	nop
 80097c4:	7fc00000 	.word	0x7fc00000

080097c8 <siprintf>:
 80097c8:	b40e      	push	{r1, r2, r3}
 80097ca:	b500      	push	{lr}
 80097cc:	b09c      	sub	sp, #112	; 0x70
 80097ce:	ab1d      	add	r3, sp, #116	; 0x74
 80097d0:	9002      	str	r0, [sp, #8]
 80097d2:	9006      	str	r0, [sp, #24]
 80097d4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80097d8:	4809      	ldr	r0, [pc, #36]	; (8009800 <siprintf+0x38>)
 80097da:	9107      	str	r1, [sp, #28]
 80097dc:	9104      	str	r1, [sp, #16]
 80097de:	4909      	ldr	r1, [pc, #36]	; (8009804 <siprintf+0x3c>)
 80097e0:	f853 2b04 	ldr.w	r2, [r3], #4
 80097e4:	9105      	str	r1, [sp, #20]
 80097e6:	6800      	ldr	r0, [r0, #0]
 80097e8:	9301      	str	r3, [sp, #4]
 80097ea:	a902      	add	r1, sp, #8
 80097ec:	f002 fed6 	bl	800c59c <_svfiprintf_r>
 80097f0:	9b02      	ldr	r3, [sp, #8]
 80097f2:	2200      	movs	r2, #0
 80097f4:	701a      	strb	r2, [r3, #0]
 80097f6:	b01c      	add	sp, #112	; 0x70
 80097f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80097fc:	b003      	add	sp, #12
 80097fe:	4770      	bx	lr
 8009800:	20000114 	.word	0x20000114
 8009804:	ffff0208 	.word	0xffff0208

08009808 <siscanf>:
 8009808:	b40e      	push	{r1, r2, r3}
 800980a:	b510      	push	{r4, lr}
 800980c:	b09f      	sub	sp, #124	; 0x7c
 800980e:	ac21      	add	r4, sp, #132	; 0x84
 8009810:	f44f 7101 	mov.w	r1, #516	; 0x204
 8009814:	f854 2b04 	ldr.w	r2, [r4], #4
 8009818:	9201      	str	r2, [sp, #4]
 800981a:	f8ad 101c 	strh.w	r1, [sp, #28]
 800981e:	9004      	str	r0, [sp, #16]
 8009820:	9008      	str	r0, [sp, #32]
 8009822:	f7f6 fd17 	bl	8000254 <strlen>
 8009826:	4b0c      	ldr	r3, [pc, #48]	; (8009858 <siscanf+0x50>)
 8009828:	9005      	str	r0, [sp, #20]
 800982a:	9009      	str	r0, [sp, #36]	; 0x24
 800982c:	930d      	str	r3, [sp, #52]	; 0x34
 800982e:	480b      	ldr	r0, [pc, #44]	; (800985c <siscanf+0x54>)
 8009830:	9a01      	ldr	r2, [sp, #4]
 8009832:	6800      	ldr	r0, [r0, #0]
 8009834:	9403      	str	r4, [sp, #12]
 8009836:	2300      	movs	r3, #0
 8009838:	9311      	str	r3, [sp, #68]	; 0x44
 800983a:	9316      	str	r3, [sp, #88]	; 0x58
 800983c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009840:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009844:	a904      	add	r1, sp, #16
 8009846:	4623      	mov	r3, r4
 8009848:	f003 f802 	bl	800c850 <__ssvfiscanf_r>
 800984c:	b01f      	add	sp, #124	; 0x7c
 800984e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009852:	b003      	add	sp, #12
 8009854:	4770      	bx	lr
 8009856:	bf00      	nop
 8009858:	08009883 	.word	0x08009883
 800985c:	20000114 	.word	0x20000114

08009860 <__sread>:
 8009860:	b510      	push	{r4, lr}
 8009862:	460c      	mov	r4, r1
 8009864:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009868:	f003 fab6 	bl	800cdd8 <_read_r>
 800986c:	2800      	cmp	r0, #0
 800986e:	bfab      	itete	ge
 8009870:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8009872:	89a3      	ldrhlt	r3, [r4, #12]
 8009874:	181b      	addge	r3, r3, r0
 8009876:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800987a:	bfac      	ite	ge
 800987c:	6563      	strge	r3, [r4, #84]	; 0x54
 800987e:	81a3      	strhlt	r3, [r4, #12]
 8009880:	bd10      	pop	{r4, pc}

08009882 <__seofread>:
 8009882:	2000      	movs	r0, #0
 8009884:	4770      	bx	lr

08009886 <__swrite>:
 8009886:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800988a:	461f      	mov	r7, r3
 800988c:	898b      	ldrh	r3, [r1, #12]
 800988e:	05db      	lsls	r3, r3, #23
 8009890:	4605      	mov	r5, r0
 8009892:	460c      	mov	r4, r1
 8009894:	4616      	mov	r6, r2
 8009896:	d505      	bpl.n	80098a4 <__swrite+0x1e>
 8009898:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800989c:	2302      	movs	r3, #2
 800989e:	2200      	movs	r2, #0
 80098a0:	f002 f870 	bl	800b984 <_lseek_r>
 80098a4:	89a3      	ldrh	r3, [r4, #12]
 80098a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80098aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80098ae:	81a3      	strh	r3, [r4, #12]
 80098b0:	4632      	mov	r2, r6
 80098b2:	463b      	mov	r3, r7
 80098b4:	4628      	mov	r0, r5
 80098b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80098ba:	f000 bebf 	b.w	800a63c <_write_r>

080098be <__sseek>:
 80098be:	b510      	push	{r4, lr}
 80098c0:	460c      	mov	r4, r1
 80098c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80098c6:	f002 f85d 	bl	800b984 <_lseek_r>
 80098ca:	1c43      	adds	r3, r0, #1
 80098cc:	89a3      	ldrh	r3, [r4, #12]
 80098ce:	bf15      	itete	ne
 80098d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80098d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80098d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80098da:	81a3      	strheq	r3, [r4, #12]
 80098dc:	bf18      	it	ne
 80098de:	81a3      	strhne	r3, [r4, #12]
 80098e0:	bd10      	pop	{r4, pc}

080098e2 <__sclose>:
 80098e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80098e6:	f000 bebb 	b.w	800a660 <_close_r>

080098ea <strcpy>:
 80098ea:	4603      	mov	r3, r0
 80098ec:	f811 2b01 	ldrb.w	r2, [r1], #1
 80098f0:	f803 2b01 	strb.w	r2, [r3], #1
 80098f4:	2a00      	cmp	r2, #0
 80098f6:	d1f9      	bne.n	80098ec <strcpy+0x2>
 80098f8:	4770      	bx	lr

080098fa <strncmp>:
 80098fa:	b510      	push	{r4, lr}
 80098fc:	b16a      	cbz	r2, 800991a <strncmp+0x20>
 80098fe:	3901      	subs	r1, #1
 8009900:	1884      	adds	r4, r0, r2
 8009902:	f810 3b01 	ldrb.w	r3, [r0], #1
 8009906:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800990a:	4293      	cmp	r3, r2
 800990c:	d103      	bne.n	8009916 <strncmp+0x1c>
 800990e:	42a0      	cmp	r0, r4
 8009910:	d001      	beq.n	8009916 <strncmp+0x1c>
 8009912:	2b00      	cmp	r3, #0
 8009914:	d1f5      	bne.n	8009902 <strncmp+0x8>
 8009916:	1a98      	subs	r0, r3, r2
 8009918:	bd10      	pop	{r4, pc}
 800991a:	4610      	mov	r0, r2
 800991c:	e7fc      	b.n	8009918 <strncmp+0x1e>

0800991e <strncpy>:
 800991e:	b510      	push	{r4, lr}
 8009920:	3901      	subs	r1, #1
 8009922:	4603      	mov	r3, r0
 8009924:	b132      	cbz	r2, 8009934 <strncpy+0x16>
 8009926:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800992a:	f803 4b01 	strb.w	r4, [r3], #1
 800992e:	3a01      	subs	r2, #1
 8009930:	2c00      	cmp	r4, #0
 8009932:	d1f7      	bne.n	8009924 <strncpy+0x6>
 8009934:	441a      	add	r2, r3
 8009936:	2100      	movs	r1, #0
 8009938:	4293      	cmp	r3, r2
 800993a:	d100      	bne.n	800993e <strncpy+0x20>
 800993c:	bd10      	pop	{r4, pc}
 800993e:	f803 1b01 	strb.w	r1, [r3], #1
 8009942:	e7f9      	b.n	8009938 <strncpy+0x1a>

08009944 <sulp>:
 8009944:	b570      	push	{r4, r5, r6, lr}
 8009946:	4604      	mov	r4, r0
 8009948:	460d      	mov	r5, r1
 800994a:	4616      	mov	r6, r2
 800994c:	ec45 4b10 	vmov	d0, r4, r5
 8009950:	f002 fbbe 	bl	800c0d0 <__ulp>
 8009954:	b17e      	cbz	r6, 8009976 <sulp+0x32>
 8009956:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800995a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800995e:	2b00      	cmp	r3, #0
 8009960:	dd09      	ble.n	8009976 <sulp+0x32>
 8009962:	051b      	lsls	r3, r3, #20
 8009964:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 8009968:	2000      	movs	r0, #0
 800996a:	f501 1140 	add.w	r1, r1, #3145728	; 0x300000
 800996e:	ec41 0b17 	vmov	d7, r0, r1
 8009972:	ee20 0b07 	vmul.f64	d0, d0, d7
 8009976:	bd70      	pop	{r4, r5, r6, pc}

08009978 <_strtod_l>:
 8009978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800997c:	ed2d 8b0c 	vpush	{d8-d13}
 8009980:	b09d      	sub	sp, #116	; 0x74
 8009982:	461f      	mov	r7, r3
 8009984:	2300      	movs	r3, #0
 8009986:	9318      	str	r3, [sp, #96]	; 0x60
 8009988:	4ba6      	ldr	r3, [pc, #664]	; (8009c24 <_strtod_l+0x2ac>)
 800998a:	9213      	str	r2, [sp, #76]	; 0x4c
 800998c:	681b      	ldr	r3, [r3, #0]
 800998e:	9308      	str	r3, [sp, #32]
 8009990:	4604      	mov	r4, r0
 8009992:	4618      	mov	r0, r3
 8009994:	468a      	mov	sl, r1
 8009996:	f7f6 fc5d 	bl	8000254 <strlen>
 800999a:	f04f 0800 	mov.w	r8, #0
 800999e:	4605      	mov	r5, r0
 80099a0:	f04f 0900 	mov.w	r9, #0
 80099a4:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 80099a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80099aa:	781a      	ldrb	r2, [r3, #0]
 80099ac:	2a2b      	cmp	r2, #43	; 0x2b
 80099ae:	d04d      	beq.n	8009a4c <_strtod_l+0xd4>
 80099b0:	d83a      	bhi.n	8009a28 <_strtod_l+0xb0>
 80099b2:	2a0d      	cmp	r2, #13
 80099b4:	d833      	bhi.n	8009a1e <_strtod_l+0xa6>
 80099b6:	2a08      	cmp	r2, #8
 80099b8:	d833      	bhi.n	8009a22 <_strtod_l+0xaa>
 80099ba:	2a00      	cmp	r2, #0
 80099bc:	d03d      	beq.n	8009a3a <_strtod_l+0xc2>
 80099be:	2300      	movs	r3, #0
 80099c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80099c2:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80099c4:	7833      	ldrb	r3, [r6, #0]
 80099c6:	2b30      	cmp	r3, #48	; 0x30
 80099c8:	f040 80b6 	bne.w	8009b38 <_strtod_l+0x1c0>
 80099cc:	7873      	ldrb	r3, [r6, #1]
 80099ce:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80099d2:	2b58      	cmp	r3, #88	; 0x58
 80099d4:	d16d      	bne.n	8009ab2 <_strtod_l+0x13a>
 80099d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80099d8:	9301      	str	r3, [sp, #4]
 80099da:	ab18      	add	r3, sp, #96	; 0x60
 80099dc:	9702      	str	r7, [sp, #8]
 80099de:	9300      	str	r3, [sp, #0]
 80099e0:	4a91      	ldr	r2, [pc, #580]	; (8009c28 <_strtod_l+0x2b0>)
 80099e2:	ab19      	add	r3, sp, #100	; 0x64
 80099e4:	a917      	add	r1, sp, #92	; 0x5c
 80099e6:	4620      	mov	r0, r4
 80099e8:	f001 fcc0 	bl	800b36c <__gethex>
 80099ec:	f010 0507 	ands.w	r5, r0, #7
 80099f0:	4607      	mov	r7, r0
 80099f2:	d005      	beq.n	8009a00 <_strtod_l+0x88>
 80099f4:	2d06      	cmp	r5, #6
 80099f6:	d12b      	bne.n	8009a50 <_strtod_l+0xd8>
 80099f8:	3601      	adds	r6, #1
 80099fa:	2300      	movs	r3, #0
 80099fc:	9617      	str	r6, [sp, #92]	; 0x5c
 80099fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a00:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009a02:	2b00      	cmp	r3, #0
 8009a04:	f040 856e 	bne.w	800a4e4 <_strtod_l+0xb6c>
 8009a08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009a0a:	b1e3      	cbz	r3, 8009a46 <_strtod_l+0xce>
 8009a0c:	ec49 8b17 	vmov	d7, r8, r9
 8009a10:	eeb1 0b47 	vneg.f64	d0, d7
 8009a14:	b01d      	add	sp, #116	; 0x74
 8009a16:	ecbd 8b0c 	vpop	{d8-d13}
 8009a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a1e:	2a20      	cmp	r2, #32
 8009a20:	d1cd      	bne.n	80099be <_strtod_l+0x46>
 8009a22:	3301      	adds	r3, #1
 8009a24:	9317      	str	r3, [sp, #92]	; 0x5c
 8009a26:	e7bf      	b.n	80099a8 <_strtod_l+0x30>
 8009a28:	2a2d      	cmp	r2, #45	; 0x2d
 8009a2a:	d1c8      	bne.n	80099be <_strtod_l+0x46>
 8009a2c:	2201      	movs	r2, #1
 8009a2e:	920b      	str	r2, [sp, #44]	; 0x2c
 8009a30:	1c5a      	adds	r2, r3, #1
 8009a32:	9217      	str	r2, [sp, #92]	; 0x5c
 8009a34:	785b      	ldrb	r3, [r3, #1]
 8009a36:	2b00      	cmp	r3, #0
 8009a38:	d1c3      	bne.n	80099c2 <_strtod_l+0x4a>
 8009a3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009a3c:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 8009a40:	2b00      	cmp	r3, #0
 8009a42:	f040 854d 	bne.w	800a4e0 <_strtod_l+0xb68>
 8009a46:	ec49 8b10 	vmov	d0, r8, r9
 8009a4a:	e7e3      	b.n	8009a14 <_strtod_l+0x9c>
 8009a4c:	2200      	movs	r2, #0
 8009a4e:	e7ee      	b.n	8009a2e <_strtod_l+0xb6>
 8009a50:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8009a52:	b13a      	cbz	r2, 8009a64 <_strtod_l+0xec>
 8009a54:	2135      	movs	r1, #53	; 0x35
 8009a56:	a81a      	add	r0, sp, #104	; 0x68
 8009a58:	f002 fc46 	bl	800c2e8 <__copybits>
 8009a5c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009a5e:	4620      	mov	r0, r4
 8009a60:	f002 f80a 	bl	800ba78 <_Bfree>
 8009a64:	3d01      	subs	r5, #1
 8009a66:	2d05      	cmp	r5, #5
 8009a68:	d807      	bhi.n	8009a7a <_strtod_l+0x102>
 8009a6a:	e8df f005 	tbb	[pc, r5]
 8009a6e:	0b0e      	.short	0x0b0e
 8009a70:	030e1d18 	.word	0x030e1d18
 8009a74:	f04f 0900 	mov.w	r9, #0
 8009a78:	46c8      	mov	r8, r9
 8009a7a:	073b      	lsls	r3, r7, #28
 8009a7c:	d5c0      	bpl.n	8009a00 <_strtod_l+0x88>
 8009a7e:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8009a82:	e7bd      	b.n	8009a00 <_strtod_l+0x88>
 8009a84:	e9dd 891a 	ldrd	r8, r9, [sp, #104]	; 0x68
 8009a88:	e7f7      	b.n	8009a7a <_strtod_l+0x102>
 8009a8a:	e9dd 831a 	ldrd	r8, r3, [sp, #104]	; 0x68
 8009a8e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8009a90:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8009a94:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8009a98:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8009a9c:	e7ed      	b.n	8009a7a <_strtod_l+0x102>
 8009a9e:	f8df 918c 	ldr.w	r9, [pc, #396]	; 8009c2c <_strtod_l+0x2b4>
 8009aa2:	f04f 0800 	mov.w	r8, #0
 8009aa6:	e7e8      	b.n	8009a7a <_strtod_l+0x102>
 8009aa8:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8009aac:	f04f 38ff 	mov.w	r8, #4294967295
 8009ab0:	e7e3      	b.n	8009a7a <_strtod_l+0x102>
 8009ab2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009ab4:	1c5a      	adds	r2, r3, #1
 8009ab6:	9217      	str	r2, [sp, #92]	; 0x5c
 8009ab8:	785b      	ldrb	r3, [r3, #1]
 8009aba:	2b30      	cmp	r3, #48	; 0x30
 8009abc:	d0f9      	beq.n	8009ab2 <_strtod_l+0x13a>
 8009abe:	2b00      	cmp	r3, #0
 8009ac0:	d09e      	beq.n	8009a00 <_strtod_l+0x88>
 8009ac2:	2301      	movs	r3, #1
 8009ac4:	9306      	str	r3, [sp, #24]
 8009ac6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009ac8:	930c      	str	r3, [sp, #48]	; 0x30
 8009aca:	2300      	movs	r3, #0
 8009acc:	9304      	str	r3, [sp, #16]
 8009ace:	930a      	str	r3, [sp, #40]	; 0x28
 8009ad0:	461e      	mov	r6, r3
 8009ad2:	220a      	movs	r2, #10
 8009ad4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8009ad6:	f890 b000 	ldrb.w	fp, [r0]
 8009ada:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
 8009ade:	b2d9      	uxtb	r1, r3
 8009ae0:	2909      	cmp	r1, #9
 8009ae2:	d92b      	bls.n	8009b3c <_strtod_l+0x1c4>
 8009ae4:	9908      	ldr	r1, [sp, #32]
 8009ae6:	462a      	mov	r2, r5
 8009ae8:	f7ff ff07 	bl	80098fa <strncmp>
 8009aec:	2800      	cmp	r0, #0
 8009aee:	d035      	beq.n	8009b5c <_strtod_l+0x1e4>
 8009af0:	2000      	movs	r0, #0
 8009af2:	465a      	mov	r2, fp
 8009af4:	4633      	mov	r3, r6
 8009af6:	4683      	mov	fp, r0
 8009af8:	4601      	mov	r1, r0
 8009afa:	2a65      	cmp	r2, #101	; 0x65
 8009afc:	d001      	beq.n	8009b02 <_strtod_l+0x18a>
 8009afe:	2a45      	cmp	r2, #69	; 0x45
 8009b00:	d118      	bne.n	8009b34 <_strtod_l+0x1bc>
 8009b02:	b91b      	cbnz	r3, 8009b0c <_strtod_l+0x194>
 8009b04:	9b06      	ldr	r3, [sp, #24]
 8009b06:	4303      	orrs	r3, r0
 8009b08:	d097      	beq.n	8009a3a <_strtod_l+0xc2>
 8009b0a:	2300      	movs	r3, #0
 8009b0c:	f8dd a05c 	ldr.w	sl, [sp, #92]	; 0x5c
 8009b10:	f10a 0201 	add.w	r2, sl, #1
 8009b14:	9217      	str	r2, [sp, #92]	; 0x5c
 8009b16:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8009b1a:	2a2b      	cmp	r2, #43	; 0x2b
 8009b1c:	d077      	beq.n	8009c0e <_strtod_l+0x296>
 8009b1e:	2a2d      	cmp	r2, #45	; 0x2d
 8009b20:	d07d      	beq.n	8009c1e <_strtod_l+0x2a6>
 8009b22:	f04f 0e00 	mov.w	lr, #0
 8009b26:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8009b2a:	2d09      	cmp	r5, #9
 8009b2c:	f240 8084 	bls.w	8009c38 <_strtod_l+0x2c0>
 8009b30:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
 8009b34:	2500      	movs	r5, #0
 8009b36:	e09f      	b.n	8009c78 <_strtod_l+0x300>
 8009b38:	2300      	movs	r3, #0
 8009b3a:	e7c3      	b.n	8009ac4 <_strtod_l+0x14c>
 8009b3c:	2e08      	cmp	r6, #8
 8009b3e:	bfd5      	itete	le
 8009b40:	990a      	ldrle	r1, [sp, #40]	; 0x28
 8009b42:	9904      	ldrgt	r1, [sp, #16]
 8009b44:	fb02 3301 	mlale	r3, r2, r1, r3
 8009b48:	fb02 3301 	mlagt	r3, r2, r1, r3
 8009b4c:	f100 0001 	add.w	r0, r0, #1
 8009b50:	bfd4      	ite	le
 8009b52:	930a      	strle	r3, [sp, #40]	; 0x28
 8009b54:	9304      	strgt	r3, [sp, #16]
 8009b56:	3601      	adds	r6, #1
 8009b58:	9017      	str	r0, [sp, #92]	; 0x5c
 8009b5a:	e7bb      	b.n	8009ad4 <_strtod_l+0x15c>
 8009b5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009b5e:	195a      	adds	r2, r3, r5
 8009b60:	9217      	str	r2, [sp, #92]	; 0x5c
 8009b62:	5d5a      	ldrb	r2, [r3, r5]
 8009b64:	b3ae      	cbz	r6, 8009bd2 <_strtod_l+0x25a>
 8009b66:	4683      	mov	fp, r0
 8009b68:	4633      	mov	r3, r6
 8009b6a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8009b6e:	2909      	cmp	r1, #9
 8009b70:	d912      	bls.n	8009b98 <_strtod_l+0x220>
 8009b72:	2101      	movs	r1, #1
 8009b74:	e7c1      	b.n	8009afa <_strtod_l+0x182>
 8009b76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009b78:	1c5a      	adds	r2, r3, #1
 8009b7a:	9217      	str	r2, [sp, #92]	; 0x5c
 8009b7c:	785a      	ldrb	r2, [r3, #1]
 8009b7e:	3001      	adds	r0, #1
 8009b80:	2a30      	cmp	r2, #48	; 0x30
 8009b82:	d0f8      	beq.n	8009b76 <_strtod_l+0x1fe>
 8009b84:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8009b88:	2b08      	cmp	r3, #8
 8009b8a:	f200 84b0 	bhi.w	800a4ee <_strtod_l+0xb76>
 8009b8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009b90:	930c      	str	r3, [sp, #48]	; 0x30
 8009b92:	4683      	mov	fp, r0
 8009b94:	2000      	movs	r0, #0
 8009b96:	4603      	mov	r3, r0
 8009b98:	3a30      	subs	r2, #48	; 0x30
 8009b9a:	f100 0101 	add.w	r1, r0, #1
 8009b9e:	d012      	beq.n	8009bc6 <_strtod_l+0x24e>
 8009ba0:	448b      	add	fp, r1
 8009ba2:	eb00 0c03 	add.w	ip, r0, r3
 8009ba6:	4619      	mov	r1, r3
 8009ba8:	250a      	movs	r5, #10
 8009baa:	4561      	cmp	r1, ip
 8009bac:	d113      	bne.n	8009bd6 <_strtod_l+0x25e>
 8009bae:	1819      	adds	r1, r3, r0
 8009bb0:	2908      	cmp	r1, #8
 8009bb2:	f103 0301 	add.w	r3, r3, #1
 8009bb6:	4403      	add	r3, r0
 8009bb8:	dc1d      	bgt.n	8009bf6 <_strtod_l+0x27e>
 8009bba:	980a      	ldr	r0, [sp, #40]	; 0x28
 8009bbc:	210a      	movs	r1, #10
 8009bbe:	fb01 2200 	mla	r2, r1, r0, r2
 8009bc2:	920a      	str	r2, [sp, #40]	; 0x28
 8009bc4:	2100      	movs	r1, #0
 8009bc6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8009bc8:	1c50      	adds	r0, r2, #1
 8009bca:	9017      	str	r0, [sp, #92]	; 0x5c
 8009bcc:	7852      	ldrb	r2, [r2, #1]
 8009bce:	4608      	mov	r0, r1
 8009bd0:	e7cb      	b.n	8009b6a <_strtod_l+0x1f2>
 8009bd2:	4630      	mov	r0, r6
 8009bd4:	e7d4      	b.n	8009b80 <_strtod_l+0x208>
 8009bd6:	2908      	cmp	r1, #8
 8009bd8:	dc04      	bgt.n	8009be4 <_strtod_l+0x26c>
 8009bda:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8009bdc:	436f      	muls	r7, r5
 8009bde:	970a      	str	r7, [sp, #40]	; 0x28
 8009be0:	3101      	adds	r1, #1
 8009be2:	e7e2      	b.n	8009baa <_strtod_l+0x232>
 8009be4:	f101 0e01 	add.w	lr, r1, #1
 8009be8:	f1be 0f10 	cmp.w	lr, #16
 8009bec:	bfde      	ittt	le
 8009bee:	9f04      	ldrle	r7, [sp, #16]
 8009bf0:	436f      	mulle	r7, r5
 8009bf2:	9704      	strle	r7, [sp, #16]
 8009bf4:	e7f4      	b.n	8009be0 <_strtod_l+0x268>
 8009bf6:	2b10      	cmp	r3, #16
 8009bf8:	bfdf      	itttt	le
 8009bfa:	9804      	ldrle	r0, [sp, #16]
 8009bfc:	210a      	movle	r1, #10
 8009bfe:	fb01 2200 	mlale	r2, r1, r0, r2
 8009c02:	9204      	strle	r2, [sp, #16]
 8009c04:	e7de      	b.n	8009bc4 <_strtod_l+0x24c>
 8009c06:	f04f 0b00 	mov.w	fp, #0
 8009c0a:	2101      	movs	r1, #1
 8009c0c:	e77a      	b.n	8009b04 <_strtod_l+0x18c>
 8009c0e:	f04f 0e00 	mov.w	lr, #0
 8009c12:	f10a 0202 	add.w	r2, sl, #2
 8009c16:	9217      	str	r2, [sp, #92]	; 0x5c
 8009c18:	f89a 2002 	ldrb.w	r2, [sl, #2]
 8009c1c:	e783      	b.n	8009b26 <_strtod_l+0x1ae>
 8009c1e:	f04f 0e01 	mov.w	lr, #1
 8009c22:	e7f6      	b.n	8009c12 <_strtod_l+0x29a>
 8009c24:	0800e9a0 	.word	0x0800e9a0
 8009c28:	0800e750 	.word	0x0800e750
 8009c2c:	7ff00000 	.word	0x7ff00000
 8009c30:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8009c32:	1c55      	adds	r5, r2, #1
 8009c34:	9517      	str	r5, [sp, #92]	; 0x5c
 8009c36:	7852      	ldrb	r2, [r2, #1]
 8009c38:	2a30      	cmp	r2, #48	; 0x30
 8009c3a:	d0f9      	beq.n	8009c30 <_strtod_l+0x2b8>
 8009c3c:	f1a2 0531 	sub.w	r5, r2, #49	; 0x31
 8009c40:	2d08      	cmp	r5, #8
 8009c42:	f63f af77 	bhi.w	8009b34 <_strtod_l+0x1bc>
 8009c46:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8009c4a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8009c4c:	9208      	str	r2, [sp, #32]
 8009c4e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8009c50:	1c55      	adds	r5, r2, #1
 8009c52:	9517      	str	r5, [sp, #92]	; 0x5c
 8009c54:	7852      	ldrb	r2, [r2, #1]
 8009c56:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
 8009c5a:	2f09      	cmp	r7, #9
 8009c5c:	d937      	bls.n	8009cce <_strtod_l+0x356>
 8009c5e:	9f08      	ldr	r7, [sp, #32]
 8009c60:	1bed      	subs	r5, r5, r7
 8009c62:	2d08      	cmp	r5, #8
 8009c64:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8009c68:	dc02      	bgt.n	8009c70 <_strtod_l+0x2f8>
 8009c6a:	4565      	cmp	r5, ip
 8009c6c:	bfa8      	it	ge
 8009c6e:	4665      	movge	r5, ip
 8009c70:	f1be 0f00 	cmp.w	lr, #0
 8009c74:	d000      	beq.n	8009c78 <_strtod_l+0x300>
 8009c76:	426d      	negs	r5, r5
 8009c78:	2b00      	cmp	r3, #0
 8009c7a:	d14f      	bne.n	8009d1c <_strtod_l+0x3a4>
 8009c7c:	9b06      	ldr	r3, [sp, #24]
 8009c7e:	4303      	orrs	r3, r0
 8009c80:	f47f aebe 	bne.w	8009a00 <_strtod_l+0x88>
 8009c84:	2900      	cmp	r1, #0
 8009c86:	f47f aed8 	bne.w	8009a3a <_strtod_l+0xc2>
 8009c8a:	2a69      	cmp	r2, #105	; 0x69
 8009c8c:	d027      	beq.n	8009cde <_strtod_l+0x366>
 8009c8e:	dc24      	bgt.n	8009cda <_strtod_l+0x362>
 8009c90:	2a49      	cmp	r2, #73	; 0x49
 8009c92:	d024      	beq.n	8009cde <_strtod_l+0x366>
 8009c94:	2a4e      	cmp	r2, #78	; 0x4e
 8009c96:	f47f aed0 	bne.w	8009a3a <_strtod_l+0xc2>
 8009c9a:	499b      	ldr	r1, [pc, #620]	; (8009f08 <_strtod_l+0x590>)
 8009c9c:	a817      	add	r0, sp, #92	; 0x5c
 8009c9e:	f001 fdbd 	bl	800b81c <__match>
 8009ca2:	2800      	cmp	r0, #0
 8009ca4:	f43f aec9 	beq.w	8009a3a <_strtod_l+0xc2>
 8009ca8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009caa:	781b      	ldrb	r3, [r3, #0]
 8009cac:	2b28      	cmp	r3, #40	; 0x28
 8009cae:	d12d      	bne.n	8009d0c <_strtod_l+0x394>
 8009cb0:	4996      	ldr	r1, [pc, #600]	; (8009f0c <_strtod_l+0x594>)
 8009cb2:	aa1a      	add	r2, sp, #104	; 0x68
 8009cb4:	a817      	add	r0, sp, #92	; 0x5c
 8009cb6:	f001 fdc5 	bl	800b844 <__hexnan>
 8009cba:	2805      	cmp	r0, #5
 8009cbc:	d126      	bne.n	8009d0c <_strtod_l+0x394>
 8009cbe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8009cc0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8009cc4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8009cc8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8009ccc:	e698      	b.n	8009a00 <_strtod_l+0x88>
 8009cce:	250a      	movs	r5, #10
 8009cd0:	fb05 250c 	mla	r5, r5, ip, r2
 8009cd4:	f1a5 0c30 	sub.w	ip, r5, #48	; 0x30
 8009cd8:	e7b9      	b.n	8009c4e <_strtod_l+0x2d6>
 8009cda:	2a6e      	cmp	r2, #110	; 0x6e
 8009cdc:	e7db      	b.n	8009c96 <_strtod_l+0x31e>
 8009cde:	498c      	ldr	r1, [pc, #560]	; (8009f10 <_strtod_l+0x598>)
 8009ce0:	a817      	add	r0, sp, #92	; 0x5c
 8009ce2:	f001 fd9b 	bl	800b81c <__match>
 8009ce6:	2800      	cmp	r0, #0
 8009ce8:	f43f aea7 	beq.w	8009a3a <_strtod_l+0xc2>
 8009cec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009cee:	4989      	ldr	r1, [pc, #548]	; (8009f14 <_strtod_l+0x59c>)
 8009cf0:	3b01      	subs	r3, #1
 8009cf2:	a817      	add	r0, sp, #92	; 0x5c
 8009cf4:	9317      	str	r3, [sp, #92]	; 0x5c
 8009cf6:	f001 fd91 	bl	800b81c <__match>
 8009cfa:	b910      	cbnz	r0, 8009d02 <_strtod_l+0x38a>
 8009cfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009cfe:	3301      	adds	r3, #1
 8009d00:	9317      	str	r3, [sp, #92]	; 0x5c
 8009d02:	f8df 9224 	ldr.w	r9, [pc, #548]	; 8009f28 <_strtod_l+0x5b0>
 8009d06:	f04f 0800 	mov.w	r8, #0
 8009d0a:	e679      	b.n	8009a00 <_strtod_l+0x88>
 8009d0c:	4882      	ldr	r0, [pc, #520]	; (8009f18 <_strtod_l+0x5a0>)
 8009d0e:	f003 f877 	bl	800ce00 <nan>
 8009d12:	ed8d 0b04 	vstr	d0, [sp, #16]
 8009d16:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8009d1a:	e671      	b.n	8009a00 <_strtod_l+0x88>
 8009d1c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8009d20:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8009d24:	eba5 020b 	sub.w	r2, r5, fp
 8009d28:	2e00      	cmp	r6, #0
 8009d2a:	bf08      	it	eq
 8009d2c:	461e      	moveq	r6, r3
 8009d2e:	2b10      	cmp	r3, #16
 8009d30:	ed8d 7b08 	vstr	d7, [sp, #32]
 8009d34:	9206      	str	r2, [sp, #24]
 8009d36:	461a      	mov	r2, r3
 8009d38:	bfa8      	it	ge
 8009d3a:	2210      	movge	r2, #16
 8009d3c:	2b09      	cmp	r3, #9
 8009d3e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
 8009d42:	dd0e      	ble.n	8009d62 <_strtod_l+0x3ea>
 8009d44:	4975      	ldr	r1, [pc, #468]	; (8009f1c <_strtod_l+0x5a4>)
 8009d46:	eddd 7a04 	vldr	s15, [sp, #16]
 8009d4a:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8009d4e:	ed11 6b12 	vldr	d6, [r1, #-72]	; 0xffffffb8
 8009d52:	ed9d 5b08 	vldr	d5, [sp, #32]
 8009d56:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8009d5a:	eea5 7b06 	vfma.f64	d7, d5, d6
 8009d5e:	ec59 8b17 	vmov	r8, r9, d7
 8009d62:	2b0f      	cmp	r3, #15
 8009d64:	dc37      	bgt.n	8009dd6 <_strtod_l+0x45e>
 8009d66:	9906      	ldr	r1, [sp, #24]
 8009d68:	2900      	cmp	r1, #0
 8009d6a:	f43f ae49 	beq.w	8009a00 <_strtod_l+0x88>
 8009d6e:	dd23      	ble.n	8009db8 <_strtod_l+0x440>
 8009d70:	2916      	cmp	r1, #22
 8009d72:	dc0b      	bgt.n	8009d8c <_strtod_l+0x414>
 8009d74:	4b69      	ldr	r3, [pc, #420]	; (8009f1c <_strtod_l+0x5a4>)
 8009d76:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8009d7a:	ed93 7b00 	vldr	d7, [r3]
 8009d7e:	ec49 8b16 	vmov	d6, r8, r9
 8009d82:	ee27 7b06 	vmul.f64	d7, d7, d6
 8009d86:	ec59 8b17 	vmov	r8, r9, d7
 8009d8a:	e639      	b.n	8009a00 <_strtod_l+0x88>
 8009d8c:	9806      	ldr	r0, [sp, #24]
 8009d8e:	f1c3 0125 	rsb	r1, r3, #37	; 0x25
 8009d92:	4281      	cmp	r1, r0
 8009d94:	db1f      	blt.n	8009dd6 <_strtod_l+0x45e>
 8009d96:	4a61      	ldr	r2, [pc, #388]	; (8009f1c <_strtod_l+0x5a4>)
 8009d98:	f1c3 030f 	rsb	r3, r3, #15
 8009d9c:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009da0:	ed91 7b00 	vldr	d7, [r1]
 8009da4:	ec49 8b16 	vmov	d6, r8, r9
 8009da8:	1ac3      	subs	r3, r0, r3
 8009daa:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8009dae:	ee27 7b06 	vmul.f64	d7, d7, d6
 8009db2:	ed92 6b00 	vldr	d6, [r2]
 8009db6:	e7e4      	b.n	8009d82 <_strtod_l+0x40a>
 8009db8:	9906      	ldr	r1, [sp, #24]
 8009dba:	3116      	adds	r1, #22
 8009dbc:	db0b      	blt.n	8009dd6 <_strtod_l+0x45e>
 8009dbe:	4b57      	ldr	r3, [pc, #348]	; (8009f1c <_strtod_l+0x5a4>)
 8009dc0:	ebab 0505 	sub.w	r5, fp, r5
 8009dc4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8009dc8:	ed95 7b00 	vldr	d7, [r5]
 8009dcc:	ec49 8b16 	vmov	d6, r8, r9
 8009dd0:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8009dd4:	e7d7      	b.n	8009d86 <_strtod_l+0x40e>
 8009dd6:	9906      	ldr	r1, [sp, #24]
 8009dd8:	1a9a      	subs	r2, r3, r2
 8009dda:	440a      	add	r2, r1
 8009ddc:	2a00      	cmp	r2, #0
 8009dde:	dd74      	ble.n	8009eca <_strtod_l+0x552>
 8009de0:	f012 000f 	ands.w	r0, r2, #15
 8009de4:	d00a      	beq.n	8009dfc <_strtod_l+0x484>
 8009de6:	494d      	ldr	r1, [pc, #308]	; (8009f1c <_strtod_l+0x5a4>)
 8009de8:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8009dec:	ed91 7b00 	vldr	d7, [r1]
 8009df0:	ec49 8b16 	vmov	d6, r8, r9
 8009df4:	ee27 7b06 	vmul.f64	d7, d7, d6
 8009df8:	ec59 8b17 	vmov	r8, r9, d7
 8009dfc:	f032 020f 	bics.w	r2, r2, #15
 8009e00:	d04f      	beq.n	8009ea2 <_strtod_l+0x52a>
 8009e02:	f5b2 7f9a 	cmp.w	r2, #308	; 0x134
 8009e06:	dd22      	ble.n	8009e4e <_strtod_l+0x4d6>
 8009e08:	2500      	movs	r5, #0
 8009e0a:	462e      	mov	r6, r5
 8009e0c:	950a      	str	r5, [sp, #40]	; 0x28
 8009e0e:	462f      	mov	r7, r5
 8009e10:	2322      	movs	r3, #34	; 0x22
 8009e12:	f8df 9114 	ldr.w	r9, [pc, #276]	; 8009f28 <_strtod_l+0x5b0>
 8009e16:	6023      	str	r3, [r4, #0]
 8009e18:	f04f 0800 	mov.w	r8, #0
 8009e1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	f43f adee 	beq.w	8009a00 <_strtod_l+0x88>
 8009e24:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009e26:	4620      	mov	r0, r4
 8009e28:	f001 fe26 	bl	800ba78 <_Bfree>
 8009e2c:	4639      	mov	r1, r7
 8009e2e:	4620      	mov	r0, r4
 8009e30:	f001 fe22 	bl	800ba78 <_Bfree>
 8009e34:	4631      	mov	r1, r6
 8009e36:	4620      	mov	r0, r4
 8009e38:	f001 fe1e 	bl	800ba78 <_Bfree>
 8009e3c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009e3e:	4620      	mov	r0, r4
 8009e40:	f001 fe1a 	bl	800ba78 <_Bfree>
 8009e44:	4629      	mov	r1, r5
 8009e46:	4620      	mov	r0, r4
 8009e48:	f001 fe16 	bl	800ba78 <_Bfree>
 8009e4c:	e5d8      	b.n	8009a00 <_strtod_l+0x88>
 8009e4e:	e9cd 8904 	strd	r8, r9, [sp, #16]
 8009e52:	2000      	movs	r0, #0
 8009e54:	4f32      	ldr	r7, [pc, #200]	; (8009f20 <_strtod_l+0x5a8>)
 8009e56:	1112      	asrs	r2, r2, #4
 8009e58:	4601      	mov	r1, r0
 8009e5a:	2a01      	cmp	r2, #1
 8009e5c:	dc24      	bgt.n	8009ea8 <_strtod_l+0x530>
 8009e5e:	b108      	cbz	r0, 8009e64 <_strtod_l+0x4ec>
 8009e60:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8009e64:	4a2e      	ldr	r2, [pc, #184]	; (8009f20 <_strtod_l+0x5a8>)
 8009e66:	482f      	ldr	r0, [pc, #188]	; (8009f24 <_strtod_l+0x5ac>)
 8009e68:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8009e6c:	ed91 7b00 	vldr	d7, [r1]
 8009e70:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8009e74:	ec49 8b16 	vmov	d6, r8, r9
 8009e78:	ee27 7b06 	vmul.f64	d7, d7, d6
 8009e7c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8009e80:	9905      	ldr	r1, [sp, #20]
 8009e82:	4a29      	ldr	r2, [pc, #164]	; (8009f28 <_strtod_l+0x5b0>)
 8009e84:	400a      	ands	r2, r1
 8009e86:	4282      	cmp	r2, r0
 8009e88:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8009e8c:	d8bc      	bhi.n	8009e08 <_strtod_l+0x490>
 8009e8e:	f5a0 1080 	sub.w	r0, r0, #1048576	; 0x100000
 8009e92:	4282      	cmp	r2, r0
 8009e94:	bf86      	itte	hi
 8009e96:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8009f2c <_strtod_l+0x5b4>
 8009e9a:	f04f 38ff 	movhi.w	r8, #4294967295
 8009e9e:	f101 7954 	addls.w	r9, r1, #55574528	; 0x3500000
 8009ea2:	2200      	movs	r2, #0
 8009ea4:	9204      	str	r2, [sp, #16]
 8009ea6:	e07f      	b.n	8009fa8 <_strtod_l+0x630>
 8009ea8:	f012 0f01 	tst.w	r2, #1
 8009eac:	d00a      	beq.n	8009ec4 <_strtod_l+0x54c>
 8009eae:	eb07 00c1 	add.w	r0, r7, r1, lsl #3
 8009eb2:	ed90 7b00 	vldr	d7, [r0]
 8009eb6:	ed9d 6b04 	vldr	d6, [sp, #16]
 8009eba:	ee26 7b07 	vmul.f64	d7, d6, d7
 8009ebe:	ed8d 7b04 	vstr	d7, [sp, #16]
 8009ec2:	2001      	movs	r0, #1
 8009ec4:	3101      	adds	r1, #1
 8009ec6:	1052      	asrs	r2, r2, #1
 8009ec8:	e7c7      	b.n	8009e5a <_strtod_l+0x4e2>
 8009eca:	d0ea      	beq.n	8009ea2 <_strtod_l+0x52a>
 8009ecc:	4252      	negs	r2, r2
 8009ece:	f012 000f 	ands.w	r0, r2, #15
 8009ed2:	d00a      	beq.n	8009eea <_strtod_l+0x572>
 8009ed4:	4911      	ldr	r1, [pc, #68]	; (8009f1c <_strtod_l+0x5a4>)
 8009ed6:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8009eda:	ed91 7b00 	vldr	d7, [r1]
 8009ede:	ec49 8b16 	vmov	d6, r8, r9
 8009ee2:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8009ee6:	ec59 8b17 	vmov	r8, r9, d7
 8009eea:	1112      	asrs	r2, r2, #4
 8009eec:	d0d9      	beq.n	8009ea2 <_strtod_l+0x52a>
 8009eee:	2a1f      	cmp	r2, #31
 8009ef0:	dd1e      	ble.n	8009f30 <_strtod_l+0x5b8>
 8009ef2:	2500      	movs	r5, #0
 8009ef4:	462e      	mov	r6, r5
 8009ef6:	950a      	str	r5, [sp, #40]	; 0x28
 8009ef8:	462f      	mov	r7, r5
 8009efa:	2322      	movs	r3, #34	; 0x22
 8009efc:	f04f 0800 	mov.w	r8, #0
 8009f00:	f04f 0900 	mov.w	r9, #0
 8009f04:	6023      	str	r3, [r4, #0]
 8009f06:	e789      	b.n	8009e1c <_strtod_l+0x4a4>
 8009f08:	0800e725 	.word	0x0800e725
 8009f0c:	0800e764 	.word	0x0800e764
 8009f10:	0800e71d 	.word	0x0800e71d
 8009f14:	0800e8a4 	.word	0x0800e8a4
 8009f18:	0800eb7b 	.word	0x0800eb7b
 8009f1c:	0800ea40 	.word	0x0800ea40
 8009f20:	0800ea18 	.word	0x0800ea18
 8009f24:	7ca00000 	.word	0x7ca00000
 8009f28:	7ff00000 	.word	0x7ff00000
 8009f2c:	7fefffff 	.word	0x7fefffff
 8009f30:	f012 0110 	ands.w	r1, r2, #16
 8009f34:	bf18      	it	ne
 8009f36:	216a      	movne	r1, #106	; 0x6a
 8009f38:	e9cd 8908 	strd	r8, r9, [sp, #32]
 8009f3c:	9104      	str	r1, [sp, #16]
 8009f3e:	49c0      	ldr	r1, [pc, #768]	; (800a240 <_strtod_l+0x8c8>)
 8009f40:	2000      	movs	r0, #0
 8009f42:	07d7      	lsls	r7, r2, #31
 8009f44:	d508      	bpl.n	8009f58 <_strtod_l+0x5e0>
 8009f46:	ed9d 6b08 	vldr	d6, [sp, #32]
 8009f4a:	ed91 7b00 	vldr	d7, [r1]
 8009f4e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8009f52:	ed8d 7b08 	vstr	d7, [sp, #32]
 8009f56:	2001      	movs	r0, #1
 8009f58:	1052      	asrs	r2, r2, #1
 8009f5a:	f101 0108 	add.w	r1, r1, #8
 8009f5e:	d1f0      	bne.n	8009f42 <_strtod_l+0x5ca>
 8009f60:	b108      	cbz	r0, 8009f66 <_strtod_l+0x5ee>
 8009f62:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
 8009f66:	9a04      	ldr	r2, [sp, #16]
 8009f68:	b1ba      	cbz	r2, 8009f9a <_strtod_l+0x622>
 8009f6a:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8009f6e:	f1c2 026b 	rsb	r2, r2, #107	; 0x6b
 8009f72:	2a00      	cmp	r2, #0
 8009f74:	4649      	mov	r1, r9
 8009f76:	dd10      	ble.n	8009f9a <_strtod_l+0x622>
 8009f78:	2a1f      	cmp	r2, #31
 8009f7a:	f340 8132 	ble.w	800a1e2 <_strtod_l+0x86a>
 8009f7e:	2a34      	cmp	r2, #52	; 0x34
 8009f80:	bfde      	ittt	le
 8009f82:	3a20      	suble	r2, #32
 8009f84:	f04f 30ff 	movle.w	r0, #4294967295
 8009f88:	fa00 f202 	lslle.w	r2, r0, r2
 8009f8c:	f04f 0800 	mov.w	r8, #0
 8009f90:	bfcc      	ite	gt
 8009f92:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8009f96:	ea02 0901 	andle.w	r9, r2, r1
 8009f9a:	ec49 8b17 	vmov	d7, r8, r9
 8009f9e:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8009fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009fa6:	d0a4      	beq.n	8009ef2 <_strtod_l+0x57a>
 8009fa8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009faa:	9200      	str	r2, [sp, #0]
 8009fac:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009fae:	4632      	mov	r2, r6
 8009fb0:	4620      	mov	r0, r4
 8009fb2:	f001 fdcd 	bl	800bb50 <__s2b>
 8009fb6:	900a      	str	r0, [sp, #40]	; 0x28
 8009fb8:	2800      	cmp	r0, #0
 8009fba:	f43f af25 	beq.w	8009e08 <_strtod_l+0x490>
 8009fbe:	9b06      	ldr	r3, [sp, #24]
 8009fc0:	ebab 0505 	sub.w	r5, fp, r5
 8009fc4:	2b00      	cmp	r3, #0
 8009fc6:	bfb4      	ite	lt
 8009fc8:	462b      	movlt	r3, r5
 8009fca:	2300      	movge	r3, #0
 8009fcc:	930c      	str	r3, [sp, #48]	; 0x30
 8009fce:	9b06      	ldr	r3, [sp, #24]
 8009fd0:	ed9f 9b95 	vldr	d9, [pc, #596]	; 800a228 <_strtod_l+0x8b0>
 8009fd4:	ed9f ab96 	vldr	d10, [pc, #600]	; 800a230 <_strtod_l+0x8b8>
 8009fd8:	ed9f bb97 	vldr	d11, [pc, #604]	; 800a238 <_strtod_l+0x8c0>
 8009fdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8009fe0:	2500      	movs	r5, #0
 8009fe2:	9312      	str	r3, [sp, #72]	; 0x48
 8009fe4:	462e      	mov	r6, r5
 8009fe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009fe8:	4620      	mov	r0, r4
 8009fea:	6859      	ldr	r1, [r3, #4]
 8009fec:	f001 fd04 	bl	800b9f8 <_Balloc>
 8009ff0:	4607      	mov	r7, r0
 8009ff2:	2800      	cmp	r0, #0
 8009ff4:	f43f af0c 	beq.w	8009e10 <_strtod_l+0x498>
 8009ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009ffa:	691a      	ldr	r2, [r3, #16]
 8009ffc:	3202      	adds	r2, #2
 8009ffe:	f103 010c 	add.w	r1, r3, #12
 800a002:	0092      	lsls	r2, r2, #2
 800a004:	300c      	adds	r0, #12
 800a006:	f001 fce9 	bl	800b9dc <memcpy>
 800a00a:	ec49 8b10 	vmov	d0, r8, r9
 800a00e:	aa1a      	add	r2, sp, #104	; 0x68
 800a010:	a919      	add	r1, sp, #100	; 0x64
 800a012:	4620      	mov	r0, r4
 800a014:	e9cd 8908 	strd	r8, r9, [sp, #32]
 800a018:	f002 f8d6 	bl	800c1c8 <__d2b>
 800a01c:	9018      	str	r0, [sp, #96]	; 0x60
 800a01e:	2800      	cmp	r0, #0
 800a020:	f43f aef6 	beq.w	8009e10 <_strtod_l+0x498>
 800a024:	2101      	movs	r1, #1
 800a026:	4620      	mov	r0, r4
 800a028:	f001 fe2c 	bl	800bc84 <__i2b>
 800a02c:	4606      	mov	r6, r0
 800a02e:	2800      	cmp	r0, #0
 800a030:	f43f aeee 	beq.w	8009e10 <_strtod_l+0x498>
 800a034:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800a036:	991a      	ldr	r1, [sp, #104]	; 0x68
 800a038:	2b00      	cmp	r3, #0
 800a03a:	bfab      	itete	ge
 800a03c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800a03e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800a040:	f8dd a048 	ldrge.w	sl, [sp, #72]	; 0x48
 800a044:	f8dd b030 	ldrlt.w	fp, [sp, #48]	; 0x30
 800a048:	bfac      	ite	ge
 800a04a:	eb03 0b02 	addge.w	fp, r3, r2
 800a04e:	eba2 0a03 	sublt.w	sl, r2, r3
 800a052:	9a04      	ldr	r2, [sp, #16]
 800a054:	1a9b      	subs	r3, r3, r2
 800a056:	440b      	add	r3, r1
 800a058:	4a7a      	ldr	r2, [pc, #488]	; (800a244 <_strtod_l+0x8cc>)
 800a05a:	3b01      	subs	r3, #1
 800a05c:	4293      	cmp	r3, r2
 800a05e:	f1c1 0136 	rsb	r1, r1, #54	; 0x36
 800a062:	f280 80d1 	bge.w	800a208 <_strtod_l+0x890>
 800a066:	1ad2      	subs	r2, r2, r3
 800a068:	2a1f      	cmp	r2, #31
 800a06a:	eba1 0102 	sub.w	r1, r1, r2
 800a06e:	f04f 0001 	mov.w	r0, #1
 800a072:	f300 80bd 	bgt.w	800a1f0 <_strtod_l+0x878>
 800a076:	fa00 f302 	lsl.w	r3, r0, r2
 800a07a:	930e      	str	r3, [sp, #56]	; 0x38
 800a07c:	2300      	movs	r3, #0
 800a07e:	930d      	str	r3, [sp, #52]	; 0x34
 800a080:	eb0b 0301 	add.w	r3, fp, r1
 800a084:	9a04      	ldr	r2, [sp, #16]
 800a086:	459b      	cmp	fp, r3
 800a088:	448a      	add	sl, r1
 800a08a:	4492      	add	sl, r2
 800a08c:	465a      	mov	r2, fp
 800a08e:	bfa8      	it	ge
 800a090:	461a      	movge	r2, r3
 800a092:	4552      	cmp	r2, sl
 800a094:	bfa8      	it	ge
 800a096:	4652      	movge	r2, sl
 800a098:	2a00      	cmp	r2, #0
 800a09a:	bfc2      	ittt	gt
 800a09c:	1a9b      	subgt	r3, r3, r2
 800a09e:	ebaa 0a02 	subgt.w	sl, sl, r2
 800a0a2:	ebab 0b02 	subgt.w	fp, fp, r2
 800a0a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a0a8:	2a00      	cmp	r2, #0
 800a0aa:	dd18      	ble.n	800a0de <_strtod_l+0x766>
 800a0ac:	4631      	mov	r1, r6
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	9315      	str	r3, [sp, #84]	; 0x54
 800a0b2:	f001 fea3 	bl	800bdfc <__pow5mult>
 800a0b6:	4606      	mov	r6, r0
 800a0b8:	2800      	cmp	r0, #0
 800a0ba:	f43f aea9 	beq.w	8009e10 <_strtod_l+0x498>
 800a0be:	4601      	mov	r1, r0
 800a0c0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800a0c2:	4620      	mov	r0, r4
 800a0c4:	f001 fdf4 	bl	800bcb0 <__multiply>
 800a0c8:	9014      	str	r0, [sp, #80]	; 0x50
 800a0ca:	2800      	cmp	r0, #0
 800a0cc:	f43f aea0 	beq.w	8009e10 <_strtod_l+0x498>
 800a0d0:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a0d2:	4620      	mov	r0, r4
 800a0d4:	f001 fcd0 	bl	800ba78 <_Bfree>
 800a0d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a0da:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a0dc:	9218      	str	r2, [sp, #96]	; 0x60
 800a0de:	2b00      	cmp	r3, #0
 800a0e0:	f300 8097 	bgt.w	800a212 <_strtod_l+0x89a>
 800a0e4:	9b06      	ldr	r3, [sp, #24]
 800a0e6:	2b00      	cmp	r3, #0
 800a0e8:	dd08      	ble.n	800a0fc <_strtod_l+0x784>
 800a0ea:	4639      	mov	r1, r7
 800a0ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a0ee:	4620      	mov	r0, r4
 800a0f0:	f001 fe84 	bl	800bdfc <__pow5mult>
 800a0f4:	4607      	mov	r7, r0
 800a0f6:	2800      	cmp	r0, #0
 800a0f8:	f43f ae8a 	beq.w	8009e10 <_strtod_l+0x498>
 800a0fc:	f1ba 0f00 	cmp.w	sl, #0
 800a100:	dd08      	ble.n	800a114 <_strtod_l+0x79c>
 800a102:	4639      	mov	r1, r7
 800a104:	4652      	mov	r2, sl
 800a106:	4620      	mov	r0, r4
 800a108:	f001 fed2 	bl	800beb0 <__lshift>
 800a10c:	4607      	mov	r7, r0
 800a10e:	2800      	cmp	r0, #0
 800a110:	f43f ae7e 	beq.w	8009e10 <_strtod_l+0x498>
 800a114:	f1bb 0f00 	cmp.w	fp, #0
 800a118:	dd08      	ble.n	800a12c <_strtod_l+0x7b4>
 800a11a:	4631      	mov	r1, r6
 800a11c:	465a      	mov	r2, fp
 800a11e:	4620      	mov	r0, r4
 800a120:	f001 fec6 	bl	800beb0 <__lshift>
 800a124:	4606      	mov	r6, r0
 800a126:	2800      	cmp	r0, #0
 800a128:	f43f ae72 	beq.w	8009e10 <_strtod_l+0x498>
 800a12c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a12e:	463a      	mov	r2, r7
 800a130:	4620      	mov	r0, r4
 800a132:	f001 ff45 	bl	800bfc0 <__mdiff>
 800a136:	4605      	mov	r5, r0
 800a138:	2800      	cmp	r0, #0
 800a13a:	f43f ae69 	beq.w	8009e10 <_strtod_l+0x498>
 800a13e:	2300      	movs	r3, #0
 800a140:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800a144:	60c3      	str	r3, [r0, #12]
 800a146:	4631      	mov	r1, r6
 800a148:	f001 ff1e 	bl	800bf88 <__mcmp>
 800a14c:	2800      	cmp	r0, #0
 800a14e:	da7f      	bge.n	800a250 <_strtod_l+0x8d8>
 800a150:	ea5a 0308 	orrs.w	r3, sl, r8
 800a154:	f040 80a5 	bne.w	800a2a2 <_strtod_l+0x92a>
 800a158:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	f040 80a0 	bne.w	800a2a2 <_strtod_l+0x92a>
 800a162:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800a166:	0d1b      	lsrs	r3, r3, #20
 800a168:	051b      	lsls	r3, r3, #20
 800a16a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800a16e:	f240 8098 	bls.w	800a2a2 <_strtod_l+0x92a>
 800a172:	696b      	ldr	r3, [r5, #20]
 800a174:	b91b      	cbnz	r3, 800a17e <_strtod_l+0x806>
 800a176:	692b      	ldr	r3, [r5, #16]
 800a178:	2b01      	cmp	r3, #1
 800a17a:	f340 8092 	ble.w	800a2a2 <_strtod_l+0x92a>
 800a17e:	4629      	mov	r1, r5
 800a180:	2201      	movs	r2, #1
 800a182:	4620      	mov	r0, r4
 800a184:	f001 fe94 	bl	800beb0 <__lshift>
 800a188:	4631      	mov	r1, r6
 800a18a:	4605      	mov	r5, r0
 800a18c:	f001 fefc 	bl	800bf88 <__mcmp>
 800a190:	2800      	cmp	r0, #0
 800a192:	f340 8086 	ble.w	800a2a2 <_strtod_l+0x92a>
 800a196:	9904      	ldr	r1, [sp, #16]
 800a198:	4a2b      	ldr	r2, [pc, #172]	; (800a248 <_strtod_l+0x8d0>)
 800a19a:	464b      	mov	r3, r9
 800a19c:	2900      	cmp	r1, #0
 800a19e:	f000 80a1 	beq.w	800a2e4 <_strtod_l+0x96c>
 800a1a2:	ea02 0109 	and.w	r1, r2, r9
 800a1a6:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800a1aa:	f300 809b 	bgt.w	800a2e4 <_strtod_l+0x96c>
 800a1ae:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800a1b2:	f77f aea2 	ble.w	8009efa <_strtod_l+0x582>
 800a1b6:	4a25      	ldr	r2, [pc, #148]	; (800a24c <_strtod_l+0x8d4>)
 800a1b8:	2300      	movs	r3, #0
 800a1ba:	e9cd 3210 	strd	r3, r2, [sp, #64]	; 0x40
 800a1be:	ed9d 6b10 	vldr	d6, [sp, #64]	; 0x40
 800a1c2:	ec49 8b17 	vmov	d7, r8, r9
 800a1c6:	ee27 7b06 	vmul.f64	d7, d7, d6
 800a1ca:	ed8d 7b04 	vstr	d7, [sp, #16]
 800a1ce:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800a1d2:	4313      	orrs	r3, r2
 800a1d4:	bf08      	it	eq
 800a1d6:	2322      	moveq	r3, #34	; 0x22
 800a1d8:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800a1dc:	bf08      	it	eq
 800a1de:	6023      	streq	r3, [r4, #0]
 800a1e0:	e620      	b.n	8009e24 <_strtod_l+0x4ac>
 800a1e2:	f04f 31ff 	mov.w	r1, #4294967295
 800a1e6:	fa01 f202 	lsl.w	r2, r1, r2
 800a1ea:	ea02 0808 	and.w	r8, r2, r8
 800a1ee:	e6d4      	b.n	8009f9a <_strtod_l+0x622>
 800a1f0:	f1c3 437f 	rsb	r3, r3, #4278190080	; 0xff000000
 800a1f4:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
 800a1f8:	f503 437b 	add.w	r3, r3, #64256	; 0xfb00
 800a1fc:	33e2      	adds	r3, #226	; 0xe2
 800a1fe:	fa00 f303 	lsl.w	r3, r0, r3
 800a202:	e9cd 300d 	strd	r3, r0, [sp, #52]	; 0x34
 800a206:	e73b      	b.n	800a080 <_strtod_l+0x708>
 800a208:	2000      	movs	r0, #0
 800a20a:	2301      	movs	r3, #1
 800a20c:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
 800a210:	e736      	b.n	800a080 <_strtod_l+0x708>
 800a212:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a214:	461a      	mov	r2, r3
 800a216:	4620      	mov	r0, r4
 800a218:	f001 fe4a 	bl	800beb0 <__lshift>
 800a21c:	9018      	str	r0, [sp, #96]	; 0x60
 800a21e:	2800      	cmp	r0, #0
 800a220:	f47f af60 	bne.w	800a0e4 <_strtod_l+0x76c>
 800a224:	e5f4      	b.n	8009e10 <_strtod_l+0x498>
 800a226:	bf00      	nop
 800a228:	94a03595 	.word	0x94a03595
 800a22c:	3fcfffff 	.word	0x3fcfffff
 800a230:	94a03595 	.word	0x94a03595
 800a234:	3fdfffff 	.word	0x3fdfffff
 800a238:	35afe535 	.word	0x35afe535
 800a23c:	3fe00000 	.word	0x3fe00000
 800a240:	0800e778 	.word	0x0800e778
 800a244:	fffffc02 	.word	0xfffffc02
 800a248:	7ff00000 	.word	0x7ff00000
 800a24c:	39500000 	.word	0x39500000
 800a250:	46cb      	mov	fp, r9
 800a252:	d165      	bne.n	800a320 <_strtod_l+0x9a8>
 800a254:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a258:	f1ba 0f00 	cmp.w	sl, #0
 800a25c:	d02a      	beq.n	800a2b4 <_strtod_l+0x93c>
 800a25e:	4aaa      	ldr	r2, [pc, #680]	; (800a508 <_strtod_l+0xb90>)
 800a260:	4293      	cmp	r3, r2
 800a262:	d12b      	bne.n	800a2bc <_strtod_l+0x944>
 800a264:	9b04      	ldr	r3, [sp, #16]
 800a266:	4641      	mov	r1, r8
 800a268:	b1fb      	cbz	r3, 800a2aa <_strtod_l+0x932>
 800a26a:	4aa8      	ldr	r2, [pc, #672]	; (800a50c <_strtod_l+0xb94>)
 800a26c:	ea09 0202 	and.w	r2, r9, r2
 800a270:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 800a274:	f04f 30ff 	mov.w	r0, #4294967295
 800a278:	d81a      	bhi.n	800a2b0 <_strtod_l+0x938>
 800a27a:	0d12      	lsrs	r2, r2, #20
 800a27c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800a280:	fa00 f303 	lsl.w	r3, r0, r3
 800a284:	4299      	cmp	r1, r3
 800a286:	d119      	bne.n	800a2bc <_strtod_l+0x944>
 800a288:	4ba1      	ldr	r3, [pc, #644]	; (800a510 <_strtod_l+0xb98>)
 800a28a:	459b      	cmp	fp, r3
 800a28c:	d102      	bne.n	800a294 <_strtod_l+0x91c>
 800a28e:	3101      	adds	r1, #1
 800a290:	f43f adbe 	beq.w	8009e10 <_strtod_l+0x498>
 800a294:	4b9d      	ldr	r3, [pc, #628]	; (800a50c <_strtod_l+0xb94>)
 800a296:	ea0b 0303 	and.w	r3, fp, r3
 800a29a:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800a29e:	f04f 0800 	mov.w	r8, #0
 800a2a2:	9b04      	ldr	r3, [sp, #16]
 800a2a4:	2b00      	cmp	r3, #0
 800a2a6:	d186      	bne.n	800a1b6 <_strtod_l+0x83e>
 800a2a8:	e5bc      	b.n	8009e24 <_strtod_l+0x4ac>
 800a2aa:	f04f 33ff 	mov.w	r3, #4294967295
 800a2ae:	e7e9      	b.n	800a284 <_strtod_l+0x90c>
 800a2b0:	4603      	mov	r3, r0
 800a2b2:	e7e7      	b.n	800a284 <_strtod_l+0x90c>
 800a2b4:	ea53 0308 	orrs.w	r3, r3, r8
 800a2b8:	f43f af6d 	beq.w	800a196 <_strtod_l+0x81e>
 800a2bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a2be:	b1db      	cbz	r3, 800a2f8 <_strtod_l+0x980>
 800a2c0:	ea13 0f0b 	tst.w	r3, fp
 800a2c4:	d0ed      	beq.n	800a2a2 <_strtod_l+0x92a>
 800a2c6:	9a04      	ldr	r2, [sp, #16]
 800a2c8:	4640      	mov	r0, r8
 800a2ca:	4649      	mov	r1, r9
 800a2cc:	f1ba 0f00 	cmp.w	sl, #0
 800a2d0:	d016      	beq.n	800a300 <_strtod_l+0x988>
 800a2d2:	f7ff fb37 	bl	8009944 <sulp>
 800a2d6:	ed9d 7b08 	vldr	d7, [sp, #32]
 800a2da:	ee37 7b00 	vadd.f64	d7, d7, d0
 800a2de:	ec59 8b17 	vmov	r8, r9, d7
 800a2e2:	e7de      	b.n	800a2a2 <_strtod_l+0x92a>
 800a2e4:	4013      	ands	r3, r2
 800a2e6:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800a2ea:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800a2ee:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800a2f2:	f04f 38ff 	mov.w	r8, #4294967295
 800a2f6:	e7d4      	b.n	800a2a2 <_strtod_l+0x92a>
 800a2f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a2fa:	ea13 0f08 	tst.w	r3, r8
 800a2fe:	e7e1      	b.n	800a2c4 <_strtod_l+0x94c>
 800a300:	f7ff fb20 	bl	8009944 <sulp>
 800a304:	ed9d 7b08 	vldr	d7, [sp, #32]
 800a308:	ee37 7b40 	vsub.f64	d7, d7, d0
 800a30c:	ed8d 7b06 	vstr	d7, [sp, #24]
 800a310:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800a314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a318:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
 800a31c:	d1c1      	bne.n	800a2a2 <_strtod_l+0x92a>
 800a31e:	e5ec      	b.n	8009efa <_strtod_l+0x582>
 800a320:	4631      	mov	r1, r6
 800a322:	4628      	mov	r0, r5
 800a324:	f001 ffac 	bl	800c280 <__ratio>
 800a328:	eeb0 7b00 	vmov.f64	d7, #0	; 0x40000000  2.0
 800a32c:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800a330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a334:	d867      	bhi.n	800a406 <_strtod_l+0xa8e>
 800a336:	f1ba 0f00 	cmp.w	sl, #0
 800a33a:	d044      	beq.n	800a3c6 <_strtod_l+0xa4e>
 800a33c:	4b75      	ldr	r3, [pc, #468]	; (800a514 <_strtod_l+0xb9c>)
 800a33e:	2200      	movs	r2, #0
 800a340:	eeb7 8b00 	vmov.f64	d8, #112	; 0x3f800000  1.0
 800a344:	4971      	ldr	r1, [pc, #452]	; (800a50c <_strtod_l+0xb94>)
 800a346:	f8df c1d8 	ldr.w	ip, [pc, #472]	; 800a520 <_strtod_l+0xba8>
 800a34a:	ea0b 0001 	and.w	r0, fp, r1
 800a34e:	4560      	cmp	r0, ip
 800a350:	900d      	str	r0, [sp, #52]	; 0x34
 800a352:	f040 808b 	bne.w	800a46c <_strtod_l+0xaf4>
 800a356:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800a35a:	f1ab 7954 	sub.w	r9, fp, #55574528	; 0x3500000
 800a35e:	ec49 8b10 	vmov	d0, r8, r9
 800a362:	ec43 2b1c 	vmov	d12, r2, r3
 800a366:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a36a:	f001 feb1 	bl	800c0d0 <__ulp>
 800a36e:	ec49 8b1d 	vmov	d13, r8, r9
 800a372:	eeac db00 	vfma.f64	d13, d12, d0
 800a376:	ed8d db0e 	vstr	d13, [sp, #56]	; 0x38
 800a37a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a37c:	4963      	ldr	r1, [pc, #396]	; (800a50c <_strtod_l+0xb94>)
 800a37e:	4a66      	ldr	r2, [pc, #408]	; (800a518 <_strtod_l+0xba0>)
 800a380:	4019      	ands	r1, r3
 800a382:	4291      	cmp	r1, r2
 800a384:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
 800a388:	d947      	bls.n	800a41a <_strtod_l+0xaa2>
 800a38a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a38c:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800a390:	4293      	cmp	r3, r2
 800a392:	d103      	bne.n	800a39c <_strtod_l+0xa24>
 800a394:	9b08      	ldr	r3, [sp, #32]
 800a396:	3301      	adds	r3, #1
 800a398:	f43f ad3a 	beq.w	8009e10 <_strtod_l+0x498>
 800a39c:	f8df 9170 	ldr.w	r9, [pc, #368]	; 800a510 <_strtod_l+0xb98>
 800a3a0:	f04f 38ff 	mov.w	r8, #4294967295
 800a3a4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a3a6:	4620      	mov	r0, r4
 800a3a8:	f001 fb66 	bl	800ba78 <_Bfree>
 800a3ac:	4639      	mov	r1, r7
 800a3ae:	4620      	mov	r0, r4
 800a3b0:	f001 fb62 	bl	800ba78 <_Bfree>
 800a3b4:	4631      	mov	r1, r6
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	f001 fb5e 	bl	800ba78 <_Bfree>
 800a3bc:	4629      	mov	r1, r5
 800a3be:	4620      	mov	r0, r4
 800a3c0:	f001 fb5a 	bl	800ba78 <_Bfree>
 800a3c4:	e60f      	b.n	8009fe6 <_strtod_l+0x66e>
 800a3c6:	f1b8 0f00 	cmp.w	r8, #0
 800a3ca:	d112      	bne.n	800a3f2 <_strtod_l+0xa7a>
 800a3cc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a3d0:	b9b3      	cbnz	r3, 800a400 <_strtod_l+0xa88>
 800a3d2:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 800a3d6:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800a3da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3de:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 800a3e2:	d401      	bmi.n	800a3e8 <_strtod_l+0xa70>
 800a3e4:	ee20 8b08 	vmul.f64	d8, d0, d8
 800a3e8:	eeb1 7b48 	vneg.f64	d7, d8
 800a3ec:	ec53 2b17 	vmov	r2, r3, d7
 800a3f0:	e7a8      	b.n	800a344 <_strtod_l+0x9cc>
 800a3f2:	f1b8 0f01 	cmp.w	r8, #1
 800a3f6:	d103      	bne.n	800a400 <_strtod_l+0xa88>
 800a3f8:	f1b9 0f00 	cmp.w	r9, #0
 800a3fc:	f43f ad7d 	beq.w	8009efa <_strtod_l+0x582>
 800a400:	4b46      	ldr	r3, [pc, #280]	; (800a51c <_strtod_l+0xba4>)
 800a402:	2200      	movs	r2, #0
 800a404:	e79c      	b.n	800a340 <_strtod_l+0x9c8>
 800a406:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 800a40a:	ee20 8b08 	vmul.f64	d8, d0, d8
 800a40e:	f1ba 0f00 	cmp.w	sl, #0
 800a412:	d0e9      	beq.n	800a3e8 <_strtod_l+0xa70>
 800a414:	ec53 2b18 	vmov	r2, r3, d8
 800a418:	e794      	b.n	800a344 <_strtod_l+0x9cc>
 800a41a:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800a41e:	9b04      	ldr	r3, [sp, #16]
 800a420:	2b00      	cmp	r3, #0
 800a422:	d1bf      	bne.n	800a3a4 <_strtod_l+0xa2c>
 800a424:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800a428:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a42a:	0d1b      	lsrs	r3, r3, #20
 800a42c:	051b      	lsls	r3, r3, #20
 800a42e:	429a      	cmp	r2, r3
 800a430:	d1b8      	bne.n	800a3a4 <_strtod_l+0xa2c>
 800a432:	ec51 0b18 	vmov	r0, r1, d8
 800a436:	f7f6 f93f 	bl	80006b8 <__aeabi_d2lz>
 800a43a:	f7f6 f8f7 	bl	800062c <__aeabi_l2d>
 800a43e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a442:	ec41 0b17 	vmov	d7, r0, r1
 800a446:	ea43 0308 	orr.w	r3, r3, r8
 800a44a:	ea53 030a 	orrs.w	r3, r3, sl
 800a44e:	ee38 8b47 	vsub.f64	d8, d8, d7
 800a452:	d03e      	beq.n	800a4d2 <_strtod_l+0xb5a>
 800a454:	eeb4 8bca 	vcmpe.f64	d8, d10
 800a458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a45c:	f53f ace2 	bmi.w	8009e24 <_strtod_l+0x4ac>
 800a460:	eeb4 8bcb 	vcmpe.f64	d8, d11
 800a464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a468:	dd9c      	ble.n	800a3a4 <_strtod_l+0xa2c>
 800a46a:	e4db      	b.n	8009e24 <_strtod_l+0x4ac>
 800a46c:	9904      	ldr	r1, [sp, #16]
 800a46e:	b301      	cbz	r1, 800a4b2 <_strtod_l+0xb3a>
 800a470:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a472:	f1b1 6fd4 	cmp.w	r1, #111149056	; 0x6a00000
 800a476:	d81c      	bhi.n	800a4b2 <_strtod_l+0xb3a>
 800a478:	ed9f 7b21 	vldr	d7, [pc, #132]	; 800a500 <_strtod_l+0xb88>
 800a47c:	eeb4 8bc7 	vcmpe.f64	d8, d7
 800a480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a484:	d811      	bhi.n	800a4aa <_strtod_l+0xb32>
 800a486:	eebc 8bc8 	vcvt.u32.f64	s16, d8
 800a48a:	ee18 3a10 	vmov	r3, s16
 800a48e:	2b01      	cmp	r3, #1
 800a490:	bf38      	it	cc
 800a492:	2301      	movcc	r3, #1
 800a494:	ee08 3a10 	vmov	s16, r3
 800a498:	eeb8 8b48 	vcvt.f64.u32	d8, s16
 800a49c:	f1ba 0f00 	cmp.w	sl, #0
 800a4a0:	d114      	bne.n	800a4cc <_strtod_l+0xb54>
 800a4a2:	eeb1 7b48 	vneg.f64	d7, d8
 800a4a6:	ec53 2b17 	vmov	r2, r3, d7
 800a4aa:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a4ac:	f103 61d6 	add.w	r1, r3, #112197632	; 0x6b00000
 800a4b0:	1a0b      	subs	r3, r1, r0
 800a4b2:	ed9d 0b08 	vldr	d0, [sp, #32]
 800a4b6:	ec43 2b1c 	vmov	d12, r2, r3
 800a4ba:	f001 fe09 	bl	800c0d0 <__ulp>
 800a4be:	ed9d 7b08 	vldr	d7, [sp, #32]
 800a4c2:	eeac 7b00 	vfma.f64	d7, d12, d0
 800a4c6:	ec59 8b17 	vmov	r8, r9, d7
 800a4ca:	e7a8      	b.n	800a41e <_strtod_l+0xaa6>
 800a4cc:	ec53 2b18 	vmov	r2, r3, d8
 800a4d0:	e7eb      	b.n	800a4aa <_strtod_l+0xb32>
 800a4d2:	eeb4 8bc9 	vcmpe.f64	d8, d9
 800a4d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a4da:	f57f af63 	bpl.w	800a3a4 <_strtod_l+0xa2c>
 800a4de:	e4a1      	b.n	8009e24 <_strtod_l+0x4ac>
 800a4e0:	2300      	movs	r3, #0
 800a4e2:	930b      	str	r3, [sp, #44]	; 0x2c
 800a4e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800a4e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a4e8:	6013      	str	r3, [r2, #0]
 800a4ea:	f7ff ba8d 	b.w	8009a08 <_strtod_l+0x90>
 800a4ee:	2a65      	cmp	r2, #101	; 0x65
 800a4f0:	f43f ab89 	beq.w	8009c06 <_strtod_l+0x28e>
 800a4f4:	2a45      	cmp	r2, #69	; 0x45
 800a4f6:	f43f ab86 	beq.w	8009c06 <_strtod_l+0x28e>
 800a4fa:	2101      	movs	r1, #1
 800a4fc:	f7ff bbbe 	b.w	8009c7c <_strtod_l+0x304>
 800a500:	ffc00000 	.word	0xffc00000
 800a504:	41dfffff 	.word	0x41dfffff
 800a508:	000fffff 	.word	0x000fffff
 800a50c:	7ff00000 	.word	0x7ff00000
 800a510:	7fefffff 	.word	0x7fefffff
 800a514:	3ff00000 	.word	0x3ff00000
 800a518:	7c9fffff 	.word	0x7c9fffff
 800a51c:	bff00000 	.word	0xbff00000
 800a520:	7fe00000 	.word	0x7fe00000

0800a524 <_strtod_r>:
 800a524:	4b01      	ldr	r3, [pc, #4]	; (800a52c <_strtod_r+0x8>)
 800a526:	f7ff ba27 	b.w	8009978 <_strtod_l>
 800a52a:	bf00      	nop
 800a52c:	2000017c 	.word	0x2000017c

0800a530 <_strtol_l.isra.0>:
 800a530:	2b01      	cmp	r3, #1
 800a532:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a536:	d001      	beq.n	800a53c <_strtol_l.isra.0+0xc>
 800a538:	2b24      	cmp	r3, #36	; 0x24
 800a53a:	d906      	bls.n	800a54a <_strtol_l.isra.0+0x1a>
 800a53c:	f7fe fac4 	bl	8008ac8 <__errno>
 800a540:	2316      	movs	r3, #22
 800a542:	6003      	str	r3, [r0, #0]
 800a544:	2000      	movs	r0, #0
 800a546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a54a:	4f3a      	ldr	r7, [pc, #232]	; (800a634 <_strtol_l.isra.0+0x104>)
 800a54c:	468e      	mov	lr, r1
 800a54e:	4676      	mov	r6, lr
 800a550:	f81e 4b01 	ldrb.w	r4, [lr], #1
 800a554:	5de5      	ldrb	r5, [r4, r7]
 800a556:	f015 0508 	ands.w	r5, r5, #8
 800a55a:	d1f8      	bne.n	800a54e <_strtol_l.isra.0+0x1e>
 800a55c:	2c2d      	cmp	r4, #45	; 0x2d
 800a55e:	d134      	bne.n	800a5ca <_strtol_l.isra.0+0x9a>
 800a560:	f89e 4000 	ldrb.w	r4, [lr]
 800a564:	f04f 0801 	mov.w	r8, #1
 800a568:	f106 0e02 	add.w	lr, r6, #2
 800a56c:	2b00      	cmp	r3, #0
 800a56e:	d05c      	beq.n	800a62a <_strtol_l.isra.0+0xfa>
 800a570:	2b10      	cmp	r3, #16
 800a572:	d10c      	bne.n	800a58e <_strtol_l.isra.0+0x5e>
 800a574:	2c30      	cmp	r4, #48	; 0x30
 800a576:	d10a      	bne.n	800a58e <_strtol_l.isra.0+0x5e>
 800a578:	f89e 4000 	ldrb.w	r4, [lr]
 800a57c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800a580:	2c58      	cmp	r4, #88	; 0x58
 800a582:	d14d      	bne.n	800a620 <_strtol_l.isra.0+0xf0>
 800a584:	f89e 4001 	ldrb.w	r4, [lr, #1]
 800a588:	2310      	movs	r3, #16
 800a58a:	f10e 0e02 	add.w	lr, lr, #2
 800a58e:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 800a592:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a596:	2600      	movs	r6, #0
 800a598:	fbbc f9f3 	udiv	r9, ip, r3
 800a59c:	4635      	mov	r5, r6
 800a59e:	fb03 ca19 	mls	sl, r3, r9, ip
 800a5a2:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 800a5a6:	2f09      	cmp	r7, #9
 800a5a8:	d818      	bhi.n	800a5dc <_strtol_l.isra.0+0xac>
 800a5aa:	463c      	mov	r4, r7
 800a5ac:	42a3      	cmp	r3, r4
 800a5ae:	dd24      	ble.n	800a5fa <_strtol_l.isra.0+0xca>
 800a5b0:	2e00      	cmp	r6, #0
 800a5b2:	db1f      	blt.n	800a5f4 <_strtol_l.isra.0+0xc4>
 800a5b4:	45a9      	cmp	r9, r5
 800a5b6:	d31d      	bcc.n	800a5f4 <_strtol_l.isra.0+0xc4>
 800a5b8:	d101      	bne.n	800a5be <_strtol_l.isra.0+0x8e>
 800a5ba:	45a2      	cmp	sl, r4
 800a5bc:	db1a      	blt.n	800a5f4 <_strtol_l.isra.0+0xc4>
 800a5be:	fb05 4503 	mla	r5, r5, r3, r4
 800a5c2:	2601      	movs	r6, #1
 800a5c4:	f81e 4b01 	ldrb.w	r4, [lr], #1
 800a5c8:	e7eb      	b.n	800a5a2 <_strtol_l.isra.0+0x72>
 800a5ca:	2c2b      	cmp	r4, #43	; 0x2b
 800a5cc:	bf08      	it	eq
 800a5ce:	f89e 4000 	ldrbeq.w	r4, [lr]
 800a5d2:	46a8      	mov	r8, r5
 800a5d4:	bf08      	it	eq
 800a5d6:	f106 0e02 	addeq.w	lr, r6, #2
 800a5da:	e7c7      	b.n	800a56c <_strtol_l.isra.0+0x3c>
 800a5dc:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 800a5e0:	2f19      	cmp	r7, #25
 800a5e2:	d801      	bhi.n	800a5e8 <_strtol_l.isra.0+0xb8>
 800a5e4:	3c37      	subs	r4, #55	; 0x37
 800a5e6:	e7e1      	b.n	800a5ac <_strtol_l.isra.0+0x7c>
 800a5e8:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 800a5ec:	2f19      	cmp	r7, #25
 800a5ee:	d804      	bhi.n	800a5fa <_strtol_l.isra.0+0xca>
 800a5f0:	3c57      	subs	r4, #87	; 0x57
 800a5f2:	e7db      	b.n	800a5ac <_strtol_l.isra.0+0x7c>
 800a5f4:	f04f 36ff 	mov.w	r6, #4294967295
 800a5f8:	e7e4      	b.n	800a5c4 <_strtol_l.isra.0+0x94>
 800a5fa:	2e00      	cmp	r6, #0
 800a5fc:	da05      	bge.n	800a60a <_strtol_l.isra.0+0xda>
 800a5fe:	2322      	movs	r3, #34	; 0x22
 800a600:	6003      	str	r3, [r0, #0]
 800a602:	4665      	mov	r5, ip
 800a604:	b942      	cbnz	r2, 800a618 <_strtol_l.isra.0+0xe8>
 800a606:	4628      	mov	r0, r5
 800a608:	e79d      	b.n	800a546 <_strtol_l.isra.0+0x16>
 800a60a:	f1b8 0f00 	cmp.w	r8, #0
 800a60e:	d000      	beq.n	800a612 <_strtol_l.isra.0+0xe2>
 800a610:	426d      	negs	r5, r5
 800a612:	2a00      	cmp	r2, #0
 800a614:	d0f7      	beq.n	800a606 <_strtol_l.isra.0+0xd6>
 800a616:	b10e      	cbz	r6, 800a61c <_strtol_l.isra.0+0xec>
 800a618:	f10e 31ff 	add.w	r1, lr, #4294967295
 800a61c:	6011      	str	r1, [r2, #0]
 800a61e:	e7f2      	b.n	800a606 <_strtol_l.isra.0+0xd6>
 800a620:	2430      	movs	r4, #48	; 0x30
 800a622:	2b00      	cmp	r3, #0
 800a624:	d1b3      	bne.n	800a58e <_strtol_l.isra.0+0x5e>
 800a626:	2308      	movs	r3, #8
 800a628:	e7b1      	b.n	800a58e <_strtol_l.isra.0+0x5e>
 800a62a:	2c30      	cmp	r4, #48	; 0x30
 800a62c:	d0a4      	beq.n	800a578 <_strtol_l.isra.0+0x48>
 800a62e:	230a      	movs	r3, #10
 800a630:	e7ad      	b.n	800a58e <_strtol_l.isra.0+0x5e>
 800a632:	bf00      	nop
 800a634:	0800e7a1 	.word	0x0800e7a1

0800a638 <_strtol_r>:
 800a638:	f7ff bf7a 	b.w	800a530 <_strtol_l.isra.0>

0800a63c <_write_r>:
 800a63c:	b538      	push	{r3, r4, r5, lr}
 800a63e:	4d07      	ldr	r5, [pc, #28]	; (800a65c <_write_r+0x20>)
 800a640:	4604      	mov	r4, r0
 800a642:	4608      	mov	r0, r1
 800a644:	4611      	mov	r1, r2
 800a646:	2200      	movs	r2, #0
 800a648:	602a      	str	r2, [r5, #0]
 800a64a:	461a      	mov	r2, r3
 800a64c:	f7f8 fbdf 	bl	8002e0e <_write>
 800a650:	1c43      	adds	r3, r0, #1
 800a652:	d102      	bne.n	800a65a <_write_r+0x1e>
 800a654:	682b      	ldr	r3, [r5, #0]
 800a656:	b103      	cbz	r3, 800a65a <_write_r+0x1e>
 800a658:	6023      	str	r3, [r4, #0]
 800a65a:	bd38      	pop	{r3, r4, r5, pc}
 800a65c:	200187bc 	.word	0x200187bc

0800a660 <_close_r>:
 800a660:	b538      	push	{r3, r4, r5, lr}
 800a662:	4d06      	ldr	r5, [pc, #24]	; (800a67c <_close_r+0x1c>)
 800a664:	2300      	movs	r3, #0
 800a666:	4604      	mov	r4, r0
 800a668:	4608      	mov	r0, r1
 800a66a:	602b      	str	r3, [r5, #0]
 800a66c:	f7f8 fbeb 	bl	8002e46 <_close>
 800a670:	1c43      	adds	r3, r0, #1
 800a672:	d102      	bne.n	800a67a <_close_r+0x1a>
 800a674:	682b      	ldr	r3, [r5, #0]
 800a676:	b103      	cbz	r3, 800a67a <_close_r+0x1a>
 800a678:	6023      	str	r3, [r4, #0]
 800a67a:	bd38      	pop	{r3, r4, r5, pc}
 800a67c:	200187bc 	.word	0x200187bc

0800a680 <quorem>:
 800a680:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a684:	6903      	ldr	r3, [r0, #16]
 800a686:	690c      	ldr	r4, [r1, #16]
 800a688:	42a3      	cmp	r3, r4
 800a68a:	4607      	mov	r7, r0
 800a68c:	f2c0 8081 	blt.w	800a792 <quorem+0x112>
 800a690:	3c01      	subs	r4, #1
 800a692:	f101 0814 	add.w	r8, r1, #20
 800a696:	f100 0514 	add.w	r5, r0, #20
 800a69a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a69e:	9301      	str	r3, [sp, #4]
 800a6a0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a6a4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a6a8:	3301      	adds	r3, #1
 800a6aa:	429a      	cmp	r2, r3
 800a6ac:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800a6b0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a6b4:	fbb2 f6f3 	udiv	r6, r2, r3
 800a6b8:	d331      	bcc.n	800a71e <quorem+0x9e>
 800a6ba:	f04f 0e00 	mov.w	lr, #0
 800a6be:	4640      	mov	r0, r8
 800a6c0:	46ac      	mov	ip, r5
 800a6c2:	46f2      	mov	sl, lr
 800a6c4:	f850 2b04 	ldr.w	r2, [r0], #4
 800a6c8:	b293      	uxth	r3, r2
 800a6ca:	fb06 e303 	mla	r3, r6, r3, lr
 800a6ce:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800a6d2:	b29b      	uxth	r3, r3
 800a6d4:	ebaa 0303 	sub.w	r3, sl, r3
 800a6d8:	0c12      	lsrs	r2, r2, #16
 800a6da:	f8dc a000 	ldr.w	sl, [ip]
 800a6de:	fb06 e202 	mla	r2, r6, r2, lr
 800a6e2:	fa13 f38a 	uxtah	r3, r3, sl
 800a6e6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a6ea:	fa1f fa82 	uxth.w	sl, r2
 800a6ee:	f8dc 2000 	ldr.w	r2, [ip]
 800a6f2:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 800a6f6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a6fa:	b29b      	uxth	r3, r3
 800a6fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a700:	4581      	cmp	r9, r0
 800a702:	f84c 3b04 	str.w	r3, [ip], #4
 800a706:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800a70a:	d2db      	bcs.n	800a6c4 <quorem+0x44>
 800a70c:	f855 300b 	ldr.w	r3, [r5, fp]
 800a710:	b92b      	cbnz	r3, 800a71e <quorem+0x9e>
 800a712:	9b01      	ldr	r3, [sp, #4]
 800a714:	3b04      	subs	r3, #4
 800a716:	429d      	cmp	r5, r3
 800a718:	461a      	mov	r2, r3
 800a71a:	d32e      	bcc.n	800a77a <quorem+0xfa>
 800a71c:	613c      	str	r4, [r7, #16]
 800a71e:	4638      	mov	r0, r7
 800a720:	f001 fc32 	bl	800bf88 <__mcmp>
 800a724:	2800      	cmp	r0, #0
 800a726:	db24      	blt.n	800a772 <quorem+0xf2>
 800a728:	3601      	adds	r6, #1
 800a72a:	4628      	mov	r0, r5
 800a72c:	f04f 0c00 	mov.w	ip, #0
 800a730:	f858 2b04 	ldr.w	r2, [r8], #4
 800a734:	f8d0 e000 	ldr.w	lr, [r0]
 800a738:	b293      	uxth	r3, r2
 800a73a:	ebac 0303 	sub.w	r3, ip, r3
 800a73e:	0c12      	lsrs	r2, r2, #16
 800a740:	fa13 f38e 	uxtah	r3, r3, lr
 800a744:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800a748:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a74c:	b29b      	uxth	r3, r3
 800a74e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a752:	45c1      	cmp	r9, r8
 800a754:	f840 3b04 	str.w	r3, [r0], #4
 800a758:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800a75c:	d2e8      	bcs.n	800a730 <quorem+0xb0>
 800a75e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a762:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a766:	b922      	cbnz	r2, 800a772 <quorem+0xf2>
 800a768:	3b04      	subs	r3, #4
 800a76a:	429d      	cmp	r5, r3
 800a76c:	461a      	mov	r2, r3
 800a76e:	d30a      	bcc.n	800a786 <quorem+0x106>
 800a770:	613c      	str	r4, [r7, #16]
 800a772:	4630      	mov	r0, r6
 800a774:	b003      	add	sp, #12
 800a776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a77a:	6812      	ldr	r2, [r2, #0]
 800a77c:	3b04      	subs	r3, #4
 800a77e:	2a00      	cmp	r2, #0
 800a780:	d1cc      	bne.n	800a71c <quorem+0x9c>
 800a782:	3c01      	subs	r4, #1
 800a784:	e7c7      	b.n	800a716 <quorem+0x96>
 800a786:	6812      	ldr	r2, [r2, #0]
 800a788:	3b04      	subs	r3, #4
 800a78a:	2a00      	cmp	r2, #0
 800a78c:	d1f0      	bne.n	800a770 <quorem+0xf0>
 800a78e:	3c01      	subs	r4, #1
 800a790:	e7eb      	b.n	800a76a <quorem+0xea>
 800a792:	2000      	movs	r0, #0
 800a794:	e7ee      	b.n	800a774 <quorem+0xf4>
	...

0800a798 <_dtoa_r>:
 800a798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a79c:	ec59 8b10 	vmov	r8, r9, d0
 800a7a0:	b095      	sub	sp, #84	; 0x54
 800a7a2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800a7a4:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800a7a6:	9107      	str	r1, [sp, #28]
 800a7a8:	e9cd 8902 	strd	r8, r9, [sp, #8]
 800a7ac:	4606      	mov	r6, r0
 800a7ae:	9209      	str	r2, [sp, #36]	; 0x24
 800a7b0:	9310      	str	r3, [sp, #64]	; 0x40
 800a7b2:	b975      	cbnz	r5, 800a7d2 <_dtoa_r+0x3a>
 800a7b4:	2010      	movs	r0, #16
 800a7b6:	f001 f8f7 	bl	800b9a8 <malloc>
 800a7ba:	4602      	mov	r2, r0
 800a7bc:	6270      	str	r0, [r6, #36]	; 0x24
 800a7be:	b920      	cbnz	r0, 800a7ca <_dtoa_r+0x32>
 800a7c0:	4bab      	ldr	r3, [pc, #684]	; (800aa70 <_dtoa_r+0x2d8>)
 800a7c2:	21ea      	movs	r1, #234	; 0xea
 800a7c4:	48ab      	ldr	r0, [pc, #684]	; (800aa74 <_dtoa_r+0x2dc>)
 800a7c6:	f002 fc33 	bl	800d030 <__assert_func>
 800a7ca:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800a7ce:	6005      	str	r5, [r0, #0]
 800a7d0:	60c5      	str	r5, [r0, #12]
 800a7d2:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800a7d4:	6819      	ldr	r1, [r3, #0]
 800a7d6:	b151      	cbz	r1, 800a7ee <_dtoa_r+0x56>
 800a7d8:	685a      	ldr	r2, [r3, #4]
 800a7da:	604a      	str	r2, [r1, #4]
 800a7dc:	2301      	movs	r3, #1
 800a7de:	4093      	lsls	r3, r2
 800a7e0:	608b      	str	r3, [r1, #8]
 800a7e2:	4630      	mov	r0, r6
 800a7e4:	f001 f948 	bl	800ba78 <_Bfree>
 800a7e8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800a7ea:	2200      	movs	r2, #0
 800a7ec:	601a      	str	r2, [r3, #0]
 800a7ee:	f1b9 0300 	subs.w	r3, r9, #0
 800a7f2:	bfbb      	ittet	lt
 800a7f4:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800a7f8:	9303      	strlt	r3, [sp, #12]
 800a7fa:	2300      	movge	r3, #0
 800a7fc:	2201      	movlt	r2, #1
 800a7fe:	bfac      	ite	ge
 800a800:	6023      	strge	r3, [r4, #0]
 800a802:	6022      	strlt	r2, [r4, #0]
 800a804:	4b9c      	ldr	r3, [pc, #624]	; (800aa78 <_dtoa_r+0x2e0>)
 800a806:	9c03      	ldr	r4, [sp, #12]
 800a808:	43a3      	bics	r3, r4
 800a80a:	d11a      	bne.n	800a842 <_dtoa_r+0xaa>
 800a80c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a80e:	f242 730f 	movw	r3, #9999	; 0x270f
 800a812:	6013      	str	r3, [r2, #0]
 800a814:	f3c4 0313 	ubfx	r3, r4, #0, #20
 800a818:	ea53 0308 	orrs.w	r3, r3, r8
 800a81c:	f000 8512 	beq.w	800b244 <_dtoa_r+0xaac>
 800a820:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800a822:	b953      	cbnz	r3, 800a83a <_dtoa_r+0xa2>
 800a824:	4b95      	ldr	r3, [pc, #596]	; (800aa7c <_dtoa_r+0x2e4>)
 800a826:	e01f      	b.n	800a868 <_dtoa_r+0xd0>
 800a828:	4b95      	ldr	r3, [pc, #596]	; (800aa80 <_dtoa_r+0x2e8>)
 800a82a:	9300      	str	r3, [sp, #0]
 800a82c:	3308      	adds	r3, #8
 800a82e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800a830:	6013      	str	r3, [r2, #0]
 800a832:	9800      	ldr	r0, [sp, #0]
 800a834:	b015      	add	sp, #84	; 0x54
 800a836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a83a:	4b90      	ldr	r3, [pc, #576]	; (800aa7c <_dtoa_r+0x2e4>)
 800a83c:	9300      	str	r3, [sp, #0]
 800a83e:	3303      	adds	r3, #3
 800a840:	e7f5      	b.n	800a82e <_dtoa_r+0x96>
 800a842:	ed9d 7b02 	vldr	d7, [sp, #8]
 800a846:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800a84a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a84e:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800a852:	d10b      	bne.n	800a86c <_dtoa_r+0xd4>
 800a854:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a856:	2301      	movs	r3, #1
 800a858:	6013      	str	r3, [r2, #0]
 800a85a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	f000 84ee 	beq.w	800b23e <_dtoa_r+0xaa6>
 800a862:	4888      	ldr	r0, [pc, #544]	; (800aa84 <_dtoa_r+0x2ec>)
 800a864:	6018      	str	r0, [r3, #0]
 800a866:	1e43      	subs	r3, r0, #1
 800a868:	9300      	str	r3, [sp, #0]
 800a86a:	e7e2      	b.n	800a832 <_dtoa_r+0x9a>
 800a86c:	a913      	add	r1, sp, #76	; 0x4c
 800a86e:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 800a872:	aa12      	add	r2, sp, #72	; 0x48
 800a874:	4630      	mov	r0, r6
 800a876:	f001 fca7 	bl	800c1c8 <__d2b>
 800a87a:	f3c4 510a 	ubfx	r1, r4, #20, #11
 800a87e:	4605      	mov	r5, r0
 800a880:	9812      	ldr	r0, [sp, #72]	; 0x48
 800a882:	2900      	cmp	r1, #0
 800a884:	d047      	beq.n	800a916 <_dtoa_r+0x17e>
 800a886:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a888:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800a88c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800a890:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
 800a894:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800a898:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 800a89c:	2400      	movs	r4, #0
 800a89e:	ec43 2b16 	vmov	d6, r2, r3
 800a8a2:	eeb7 7b08 	vmov.f64	d7, #120	; 0x3fc00000  1.5
 800a8a6:	ed9f 5b6c 	vldr	d5, [pc, #432]	; 800aa58 <_dtoa_r+0x2c0>
 800a8aa:	ee36 7b47 	vsub.f64	d7, d6, d7
 800a8ae:	ed9f 6b6c 	vldr	d6, [pc, #432]	; 800aa60 <_dtoa_r+0x2c8>
 800a8b2:	eea7 6b05 	vfma.f64	d6, d7, d5
 800a8b6:	eeb0 7b46 	vmov.f64	d7, d6
 800a8ba:	ee06 1a90 	vmov	s13, r1
 800a8be:	eeb8 5be6 	vcvt.f64.s32	d5, s13
 800a8c2:	ed9f 6b69 	vldr	d6, [pc, #420]	; 800aa68 <_dtoa_r+0x2d0>
 800a8c6:	eea5 7b06 	vfma.f64	d7, d5, d6
 800a8ca:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 800a8ce:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 800a8d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8d6:	ee16 ba90 	vmov	fp, s13
 800a8da:	9411      	str	r4, [sp, #68]	; 0x44
 800a8dc:	d508      	bpl.n	800a8f0 <_dtoa_r+0x158>
 800a8de:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 800a8e2:	eeb4 6b47 	vcmp.f64	d6, d7
 800a8e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8ea:	bf18      	it	ne
 800a8ec:	f10b 3bff 	addne.w	fp, fp, #4294967295
 800a8f0:	f1bb 0f16 	cmp.w	fp, #22
 800a8f4:	d832      	bhi.n	800a95c <_dtoa_r+0x1c4>
 800a8f6:	4b64      	ldr	r3, [pc, #400]	; (800aa88 <_dtoa_r+0x2f0>)
 800a8f8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800a8fc:	ed93 7b00 	vldr	d7, [r3]
 800a900:	ed9d 6b0a 	vldr	d6, [sp, #40]	; 0x28
 800a904:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800a908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a90c:	d501      	bpl.n	800a912 <_dtoa_r+0x17a>
 800a90e:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a912:	2300      	movs	r3, #0
 800a914:	e023      	b.n	800a95e <_dtoa_r+0x1c6>
 800a916:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800a918:	4401      	add	r1, r0
 800a91a:	f201 4332 	addw	r3, r1, #1074	; 0x432
 800a91e:	2b20      	cmp	r3, #32
 800a920:	bfc3      	ittte	gt
 800a922:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800a926:	fa04 f303 	lslgt.w	r3, r4, r3
 800a92a:	f201 4412 	addwgt	r4, r1, #1042	; 0x412
 800a92e:	f1c3 0320 	rsble	r3, r3, #32
 800a932:	bfc6      	itte	gt
 800a934:	fa28 f804 	lsrgt.w	r8, r8, r4
 800a938:	ea43 0308 	orrgt.w	r3, r3, r8
 800a93c:	fa08 f303 	lslle.w	r3, r8, r3
 800a940:	ee07 3a90 	vmov	s15, r3
 800a944:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800a948:	3901      	subs	r1, #1
 800a94a:	ed8d 7b00 	vstr	d7, [sp]
 800a94e:	9c01      	ldr	r4, [sp, #4]
 800a950:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a954:	f1a4 73f8 	sub.w	r3, r4, #32505856	; 0x1f00000
 800a958:	2401      	movs	r4, #1
 800a95a:	e7a0      	b.n	800a89e <_dtoa_r+0x106>
 800a95c:	2301      	movs	r3, #1
 800a95e:	930f      	str	r3, [sp, #60]	; 0x3c
 800a960:	1a43      	subs	r3, r0, r1
 800a962:	1e5a      	subs	r2, r3, #1
 800a964:	bf45      	ittet	mi
 800a966:	f1c3 0301 	rsbmi	r3, r3, #1
 800a96a:	9305      	strmi	r3, [sp, #20]
 800a96c:	2300      	movpl	r3, #0
 800a96e:	2300      	movmi	r3, #0
 800a970:	9206      	str	r2, [sp, #24]
 800a972:	bf54      	ite	pl
 800a974:	9305      	strpl	r3, [sp, #20]
 800a976:	9306      	strmi	r3, [sp, #24]
 800a978:	f1bb 0f00 	cmp.w	fp, #0
 800a97c:	db18      	blt.n	800a9b0 <_dtoa_r+0x218>
 800a97e:	9b06      	ldr	r3, [sp, #24]
 800a980:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 800a984:	445b      	add	r3, fp
 800a986:	9306      	str	r3, [sp, #24]
 800a988:	2300      	movs	r3, #0
 800a98a:	9a07      	ldr	r2, [sp, #28]
 800a98c:	2a09      	cmp	r2, #9
 800a98e:	d849      	bhi.n	800aa24 <_dtoa_r+0x28c>
 800a990:	2a05      	cmp	r2, #5
 800a992:	bfc4      	itt	gt
 800a994:	3a04      	subgt	r2, #4
 800a996:	9207      	strgt	r2, [sp, #28]
 800a998:	9a07      	ldr	r2, [sp, #28]
 800a99a:	f1a2 0202 	sub.w	r2, r2, #2
 800a99e:	bfcc      	ite	gt
 800a9a0:	2400      	movgt	r4, #0
 800a9a2:	2401      	movle	r4, #1
 800a9a4:	2a03      	cmp	r2, #3
 800a9a6:	d848      	bhi.n	800aa3a <_dtoa_r+0x2a2>
 800a9a8:	e8df f002 	tbb	[pc, r2]
 800a9ac:	3a2c2e0b 	.word	0x3a2c2e0b
 800a9b0:	9b05      	ldr	r3, [sp, #20]
 800a9b2:	2200      	movs	r2, #0
 800a9b4:	eba3 030b 	sub.w	r3, r3, fp
 800a9b8:	9305      	str	r3, [sp, #20]
 800a9ba:	920e      	str	r2, [sp, #56]	; 0x38
 800a9bc:	f1cb 0300 	rsb	r3, fp, #0
 800a9c0:	e7e3      	b.n	800a98a <_dtoa_r+0x1f2>
 800a9c2:	2200      	movs	r2, #0
 800a9c4:	9208      	str	r2, [sp, #32]
 800a9c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a9c8:	2a00      	cmp	r2, #0
 800a9ca:	dc39      	bgt.n	800aa40 <_dtoa_r+0x2a8>
 800a9cc:	f04f 0a01 	mov.w	sl, #1
 800a9d0:	46d1      	mov	r9, sl
 800a9d2:	4652      	mov	r2, sl
 800a9d4:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800a9d8:	6a77      	ldr	r7, [r6, #36]	; 0x24
 800a9da:	2100      	movs	r1, #0
 800a9dc:	6079      	str	r1, [r7, #4]
 800a9de:	2004      	movs	r0, #4
 800a9e0:	f100 0c14 	add.w	ip, r0, #20
 800a9e4:	4594      	cmp	ip, r2
 800a9e6:	6879      	ldr	r1, [r7, #4]
 800a9e8:	d92f      	bls.n	800aa4a <_dtoa_r+0x2b2>
 800a9ea:	4630      	mov	r0, r6
 800a9ec:	930c      	str	r3, [sp, #48]	; 0x30
 800a9ee:	f001 f803 	bl	800b9f8 <_Balloc>
 800a9f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a9f4:	9000      	str	r0, [sp, #0]
 800a9f6:	4602      	mov	r2, r0
 800a9f8:	2800      	cmp	r0, #0
 800a9fa:	d149      	bne.n	800aa90 <_dtoa_r+0x2f8>
 800a9fc:	4b23      	ldr	r3, [pc, #140]	; (800aa8c <_dtoa_r+0x2f4>)
 800a9fe:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800aa02:	e6df      	b.n	800a7c4 <_dtoa_r+0x2c>
 800aa04:	2201      	movs	r2, #1
 800aa06:	e7dd      	b.n	800a9c4 <_dtoa_r+0x22c>
 800aa08:	2200      	movs	r2, #0
 800aa0a:	9208      	str	r2, [sp, #32]
 800aa0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aa0e:	eb0b 0a02 	add.w	sl, fp, r2
 800aa12:	f10a 0901 	add.w	r9, sl, #1
 800aa16:	464a      	mov	r2, r9
 800aa18:	2a01      	cmp	r2, #1
 800aa1a:	bfb8      	it	lt
 800aa1c:	2201      	movlt	r2, #1
 800aa1e:	e7db      	b.n	800a9d8 <_dtoa_r+0x240>
 800aa20:	2201      	movs	r2, #1
 800aa22:	e7f2      	b.n	800aa0a <_dtoa_r+0x272>
 800aa24:	2401      	movs	r4, #1
 800aa26:	2200      	movs	r2, #0
 800aa28:	e9cd 2407 	strd	r2, r4, [sp, #28]
 800aa2c:	f04f 3aff 	mov.w	sl, #4294967295
 800aa30:	2100      	movs	r1, #0
 800aa32:	46d1      	mov	r9, sl
 800aa34:	2212      	movs	r2, #18
 800aa36:	9109      	str	r1, [sp, #36]	; 0x24
 800aa38:	e7ce      	b.n	800a9d8 <_dtoa_r+0x240>
 800aa3a:	2201      	movs	r2, #1
 800aa3c:	9208      	str	r2, [sp, #32]
 800aa3e:	e7f5      	b.n	800aa2c <_dtoa_r+0x294>
 800aa40:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 800aa44:	46d1      	mov	r9, sl
 800aa46:	4652      	mov	r2, sl
 800aa48:	e7c6      	b.n	800a9d8 <_dtoa_r+0x240>
 800aa4a:	3101      	adds	r1, #1
 800aa4c:	6079      	str	r1, [r7, #4]
 800aa4e:	0040      	lsls	r0, r0, #1
 800aa50:	e7c6      	b.n	800a9e0 <_dtoa_r+0x248>
 800aa52:	bf00      	nop
 800aa54:	f3af 8000 	nop.w
 800aa58:	636f4361 	.word	0x636f4361
 800aa5c:	3fd287a7 	.word	0x3fd287a7
 800aa60:	8b60c8b3 	.word	0x8b60c8b3
 800aa64:	3fc68a28 	.word	0x3fc68a28
 800aa68:	509f79fb 	.word	0x509f79fb
 800aa6c:	3fd34413 	.word	0x3fd34413
 800aa70:	0800e8ae 	.word	0x0800e8ae
 800aa74:	0800e8c5 	.word	0x0800e8c5
 800aa78:	7ff00000 	.word	0x7ff00000
 800aa7c:	0800e8aa 	.word	0x0800e8aa
 800aa80:	0800e8a1 	.word	0x0800e8a1
 800aa84:	0800eb2a 	.word	0x0800eb2a
 800aa88:	0800ea40 	.word	0x0800ea40
 800aa8c:	0800e924 	.word	0x0800e924
 800aa90:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800aa92:	9900      	ldr	r1, [sp, #0]
 800aa94:	6011      	str	r1, [r2, #0]
 800aa96:	f1b9 0f0e 	cmp.w	r9, #14
 800aa9a:	d872      	bhi.n	800ab82 <_dtoa_r+0x3ea>
 800aa9c:	2c00      	cmp	r4, #0
 800aa9e:	d070      	beq.n	800ab82 <_dtoa_r+0x3ea>
 800aaa0:	f1bb 0f00 	cmp.w	fp, #0
 800aaa4:	f340 80a6 	ble.w	800abf4 <_dtoa_r+0x45c>
 800aaa8:	49ca      	ldr	r1, [pc, #808]	; (800add4 <_dtoa_r+0x63c>)
 800aaaa:	f00b 020f 	and.w	r2, fp, #15
 800aaae:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800aab2:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800aab6:	ed92 7b00 	vldr	d7, [r2]
 800aaba:	ea4f 112b 	mov.w	r1, fp, asr #4
 800aabe:	f000 808d 	beq.w	800abdc <_dtoa_r+0x444>
 800aac2:	4ac5      	ldr	r2, [pc, #788]	; (800add8 <_dtoa_r+0x640>)
 800aac4:	ed9d 5b0a 	vldr	d5, [sp, #40]	; 0x28
 800aac8:	ed92 6b08 	vldr	d6, [r2, #32]
 800aacc:	ee85 6b06 	vdiv.f64	d6, d5, d6
 800aad0:	ed8d 6b02 	vstr	d6, [sp, #8]
 800aad4:	f001 010f 	and.w	r1, r1, #15
 800aad8:	2203      	movs	r2, #3
 800aada:	48bf      	ldr	r0, [pc, #764]	; (800add8 <_dtoa_r+0x640>)
 800aadc:	2900      	cmp	r1, #0
 800aade:	d17f      	bne.n	800abe0 <_dtoa_r+0x448>
 800aae0:	ed9d 6b02 	vldr	d6, [sp, #8]
 800aae4:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800aae8:	ed8d 7b02 	vstr	d7, [sp, #8]
 800aaec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800aaee:	2900      	cmp	r1, #0
 800aaf0:	f000 80b2 	beq.w	800ac58 <_dtoa_r+0x4c0>
 800aaf4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800aaf8:	ed9d 7b02 	vldr	d7, [sp, #8]
 800aafc:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800ab00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab04:	f140 80a8 	bpl.w	800ac58 <_dtoa_r+0x4c0>
 800ab08:	f1b9 0f00 	cmp.w	r9, #0
 800ab0c:	f000 80a4 	beq.w	800ac58 <_dtoa_r+0x4c0>
 800ab10:	f1ba 0f00 	cmp.w	sl, #0
 800ab14:	dd31      	ble.n	800ab7a <_dtoa_r+0x3e2>
 800ab16:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
 800ab1a:	ee27 7b06 	vmul.f64	d7, d7, d6
 800ab1e:	ed8d 7b02 	vstr	d7, [sp, #8]
 800ab22:	f10b 37ff 	add.w	r7, fp, #4294967295
 800ab26:	3201      	adds	r2, #1
 800ab28:	4650      	mov	r0, sl
 800ab2a:	ed9d 6b02 	vldr	d6, [sp, #8]
 800ab2e:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
 800ab32:	ee07 2a90 	vmov	s15, r2
 800ab36:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 800ab3a:	eea7 5b06 	vfma.f64	d5, d7, d6
 800ab3e:	ed8d 5b02 	vstr	d5, [sp, #8]
 800ab42:	9c03      	ldr	r4, [sp, #12]
 800ab44:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ab48:	f1a4 7250 	sub.w	r2, r4, #54525952	; 0x3400000
 800ab4c:	2800      	cmp	r0, #0
 800ab4e:	f040 8086 	bne.w	800ac5e <_dtoa_r+0x4c6>
 800ab52:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800ab56:	ee36 6b47 	vsub.f64	d6, d6, d7
 800ab5a:	ec42 1b17 	vmov	d7, r1, r2
 800ab5e:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800ab62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab66:	f300 8272 	bgt.w	800b04e <_dtoa_r+0x8b6>
 800ab6a:	eeb1 7b47 	vneg.f64	d7, d7
 800ab6e:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800ab72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab76:	f100 8267 	bmi.w	800b048 <_dtoa_r+0x8b0>
 800ab7a:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
 800ab7e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800ab82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ab84:	2a00      	cmp	r2, #0
 800ab86:	f2c0 8129 	blt.w	800addc <_dtoa_r+0x644>
 800ab8a:	f1bb 0f0e 	cmp.w	fp, #14
 800ab8e:	f300 8125 	bgt.w	800addc <_dtoa_r+0x644>
 800ab92:	4b90      	ldr	r3, [pc, #576]	; (800add4 <_dtoa_r+0x63c>)
 800ab94:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800ab98:	ed93 6b00 	vldr	d6, [r3]
 800ab9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ab9e:	2b00      	cmp	r3, #0
 800aba0:	f280 80c3 	bge.w	800ad2a <_dtoa_r+0x592>
 800aba4:	f1b9 0f00 	cmp.w	r9, #0
 800aba8:	f300 80bf 	bgt.w	800ad2a <_dtoa_r+0x592>
 800abac:	f040 824c 	bne.w	800b048 <_dtoa_r+0x8b0>
 800abb0:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 800abb4:	ee26 6b07 	vmul.f64	d6, d6, d7
 800abb8:	ed9d 7b02 	vldr	d7, [sp, #8]
 800abbc:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800abc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800abc4:	464c      	mov	r4, r9
 800abc6:	464f      	mov	r7, r9
 800abc8:	f280 8222 	bge.w	800b010 <_dtoa_r+0x878>
 800abcc:	f8dd 8000 	ldr.w	r8, [sp]
 800abd0:	2331      	movs	r3, #49	; 0x31
 800abd2:	f808 3b01 	strb.w	r3, [r8], #1
 800abd6:	f10b 0b01 	add.w	fp, fp, #1
 800abda:	e21e      	b.n	800b01a <_dtoa_r+0x882>
 800abdc:	2202      	movs	r2, #2
 800abde:	e77c      	b.n	800aada <_dtoa_r+0x342>
 800abe0:	07cc      	lsls	r4, r1, #31
 800abe2:	d504      	bpl.n	800abee <_dtoa_r+0x456>
 800abe4:	ed90 6b00 	vldr	d6, [r0]
 800abe8:	3201      	adds	r2, #1
 800abea:	ee27 7b06 	vmul.f64	d7, d7, d6
 800abee:	1049      	asrs	r1, r1, #1
 800abf0:	3008      	adds	r0, #8
 800abf2:	e773      	b.n	800aadc <_dtoa_r+0x344>
 800abf4:	d02e      	beq.n	800ac54 <_dtoa_r+0x4bc>
 800abf6:	f1cb 0100 	rsb	r1, fp, #0
 800abfa:	4a76      	ldr	r2, [pc, #472]	; (800add4 <_dtoa_r+0x63c>)
 800abfc:	f001 000f 	and.w	r0, r1, #15
 800ac00:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 800ac04:	ed92 7b00 	vldr	d7, [r2]
 800ac08:	ed9d 6b0a 	vldr	d6, [sp, #40]	; 0x28
 800ac0c:	ee26 7b07 	vmul.f64	d7, d6, d7
 800ac10:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 800ac14:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800ac18:	e9cd 7802 	strd	r7, r8, [sp, #8]
 800ac1c:	486e      	ldr	r0, [pc, #440]	; (800add8 <_dtoa_r+0x640>)
 800ac1e:	1109      	asrs	r1, r1, #4
 800ac20:	2400      	movs	r4, #0
 800ac22:	2202      	movs	r2, #2
 800ac24:	b939      	cbnz	r1, 800ac36 <_dtoa_r+0x49e>
 800ac26:	2c00      	cmp	r4, #0
 800ac28:	f43f af60 	beq.w	800aaec <_dtoa_r+0x354>
 800ac2c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800ac30:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ac34:	e75a      	b.n	800aaec <_dtoa_r+0x354>
 800ac36:	07cf      	lsls	r7, r1, #31
 800ac38:	d509      	bpl.n	800ac4e <_dtoa_r+0x4b6>
 800ac3a:	ed9d 6b0c 	vldr	d6, [sp, #48]	; 0x30
 800ac3e:	ed90 7b00 	vldr	d7, [r0]
 800ac42:	ee26 7b07 	vmul.f64	d7, d6, d7
 800ac46:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 800ac4a:	3201      	adds	r2, #1
 800ac4c:	2401      	movs	r4, #1
 800ac4e:	1049      	asrs	r1, r1, #1
 800ac50:	3008      	adds	r0, #8
 800ac52:	e7e7      	b.n	800ac24 <_dtoa_r+0x48c>
 800ac54:	2202      	movs	r2, #2
 800ac56:	e749      	b.n	800aaec <_dtoa_r+0x354>
 800ac58:	465f      	mov	r7, fp
 800ac5a:	4648      	mov	r0, r9
 800ac5c:	e765      	b.n	800ab2a <_dtoa_r+0x392>
 800ac5e:	ec42 1b17 	vmov	d7, r1, r2
 800ac62:	4a5c      	ldr	r2, [pc, #368]	; (800add4 <_dtoa_r+0x63c>)
 800ac64:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 800ac68:	ed12 4b02 	vldr	d4, [r2, #-8]
 800ac6c:	9a00      	ldr	r2, [sp, #0]
 800ac6e:	1814      	adds	r4, r2, r0
 800ac70:	9a08      	ldr	r2, [sp, #32]
 800ac72:	b352      	cbz	r2, 800acca <_dtoa_r+0x532>
 800ac74:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
 800ac78:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
 800ac7c:	f8dd 8000 	ldr.w	r8, [sp]
 800ac80:	ee83 5b04 	vdiv.f64	d5, d3, d4
 800ac84:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 800ac88:	ee35 7b47 	vsub.f64	d7, d5, d7
 800ac8c:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800ac90:	ee14 2a90 	vmov	r2, s9
 800ac94:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800ac98:	3230      	adds	r2, #48	; 0x30
 800ac9a:	ee36 6b45 	vsub.f64	d6, d6, d5
 800ac9e:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800aca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aca6:	f808 2b01 	strb.w	r2, [r8], #1
 800acaa:	d439      	bmi.n	800ad20 <_dtoa_r+0x588>
 800acac:	ee32 5b46 	vsub.f64	d5, d2, d6
 800acb0:	eeb4 5bc7 	vcmpe.f64	d5, d7
 800acb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800acb8:	d472      	bmi.n	800ada0 <_dtoa_r+0x608>
 800acba:	45a0      	cmp	r8, r4
 800acbc:	f43f af5d 	beq.w	800ab7a <_dtoa_r+0x3e2>
 800acc0:	ee27 7b03 	vmul.f64	d7, d7, d3
 800acc4:	ee26 6b03 	vmul.f64	d6, d6, d3
 800acc8:	e7e0      	b.n	800ac8c <_dtoa_r+0x4f4>
 800acca:	f8dd 8000 	ldr.w	r8, [sp]
 800acce:	ee27 7b04 	vmul.f64	d7, d7, d4
 800acd2:	4621      	mov	r1, r4
 800acd4:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 800acd8:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800acdc:	ee14 2a90 	vmov	r2, s9
 800ace0:	3230      	adds	r2, #48	; 0x30
 800ace2:	f808 2b01 	strb.w	r2, [r8], #1
 800ace6:	45a0      	cmp	r8, r4
 800ace8:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800acec:	ee36 6b45 	vsub.f64	d6, d6, d5
 800acf0:	d118      	bne.n	800ad24 <_dtoa_r+0x58c>
 800acf2:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
 800acf6:	ee37 4b05 	vadd.f64	d4, d7, d5
 800acfa:	eeb4 6bc4 	vcmpe.f64	d6, d4
 800acfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad02:	dc4d      	bgt.n	800ada0 <_dtoa_r+0x608>
 800ad04:	ee35 7b47 	vsub.f64	d7, d5, d7
 800ad08:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800ad0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad10:	f57f af33 	bpl.w	800ab7a <_dtoa_r+0x3e2>
 800ad14:	4688      	mov	r8, r1
 800ad16:	3901      	subs	r1, #1
 800ad18:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 800ad1c:	2b30      	cmp	r3, #48	; 0x30
 800ad1e:	d0f9      	beq.n	800ad14 <_dtoa_r+0x57c>
 800ad20:	46bb      	mov	fp, r7
 800ad22:	e02a      	b.n	800ad7a <_dtoa_r+0x5e2>
 800ad24:	ee26 6b03 	vmul.f64	d6, d6, d3
 800ad28:	e7d6      	b.n	800acd8 <_dtoa_r+0x540>
 800ad2a:	ed9d 7b02 	vldr	d7, [sp, #8]
 800ad2e:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
 800ad32:	f8dd 8000 	ldr.w	r8, [sp]
 800ad36:	ee87 5b06 	vdiv.f64	d5, d7, d6
 800ad3a:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 800ad3e:	ee15 3a10 	vmov	r3, s10
 800ad42:	3330      	adds	r3, #48	; 0x30
 800ad44:	f808 3b01 	strb.w	r3, [r8], #1
 800ad48:	9b00      	ldr	r3, [sp, #0]
 800ad4a:	eba8 0303 	sub.w	r3, r8, r3
 800ad4e:	4599      	cmp	r9, r3
 800ad50:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 800ad54:	eea3 7b46 	vfms.f64	d7, d3, d6
 800ad58:	d133      	bne.n	800adc2 <_dtoa_r+0x62a>
 800ad5a:	ee37 7b07 	vadd.f64	d7, d7, d7
 800ad5e:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800ad62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad66:	dc1a      	bgt.n	800ad9e <_dtoa_r+0x606>
 800ad68:	eeb4 7b46 	vcmp.f64	d7, d6
 800ad6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad70:	d103      	bne.n	800ad7a <_dtoa_r+0x5e2>
 800ad72:	ee15 3a10 	vmov	r3, s10
 800ad76:	07d9      	lsls	r1, r3, #31
 800ad78:	d411      	bmi.n	800ad9e <_dtoa_r+0x606>
 800ad7a:	4629      	mov	r1, r5
 800ad7c:	4630      	mov	r0, r6
 800ad7e:	f000 fe7b 	bl	800ba78 <_Bfree>
 800ad82:	2300      	movs	r3, #0
 800ad84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ad86:	f888 3000 	strb.w	r3, [r8]
 800ad8a:	f10b 0301 	add.w	r3, fp, #1
 800ad8e:	6013      	str	r3, [r2, #0]
 800ad90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800ad92:	2b00      	cmp	r3, #0
 800ad94:	f43f ad4d 	beq.w	800a832 <_dtoa_r+0x9a>
 800ad98:	f8c3 8000 	str.w	r8, [r3]
 800ad9c:	e549      	b.n	800a832 <_dtoa_r+0x9a>
 800ad9e:	465f      	mov	r7, fp
 800ada0:	4643      	mov	r3, r8
 800ada2:	4698      	mov	r8, r3
 800ada4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ada8:	2a39      	cmp	r2, #57	; 0x39
 800adaa:	d106      	bne.n	800adba <_dtoa_r+0x622>
 800adac:	9a00      	ldr	r2, [sp, #0]
 800adae:	429a      	cmp	r2, r3
 800adb0:	d1f7      	bne.n	800ada2 <_dtoa_r+0x60a>
 800adb2:	9900      	ldr	r1, [sp, #0]
 800adb4:	2230      	movs	r2, #48	; 0x30
 800adb6:	3701      	adds	r7, #1
 800adb8:	700a      	strb	r2, [r1, #0]
 800adba:	781a      	ldrb	r2, [r3, #0]
 800adbc:	3201      	adds	r2, #1
 800adbe:	701a      	strb	r2, [r3, #0]
 800adc0:	e7ae      	b.n	800ad20 <_dtoa_r+0x588>
 800adc2:	ee27 7b04 	vmul.f64	d7, d7, d4
 800adc6:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800adca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adce:	d1b2      	bne.n	800ad36 <_dtoa_r+0x59e>
 800add0:	e7d3      	b.n	800ad7a <_dtoa_r+0x5e2>
 800add2:	bf00      	nop
 800add4:	0800ea40 	.word	0x0800ea40
 800add8:	0800ea18 	.word	0x0800ea18
 800addc:	9908      	ldr	r1, [sp, #32]
 800adde:	2900      	cmp	r1, #0
 800ade0:	f000 80d1 	beq.w	800af86 <_dtoa_r+0x7ee>
 800ade4:	9907      	ldr	r1, [sp, #28]
 800ade6:	2901      	cmp	r1, #1
 800ade8:	f300 80b4 	bgt.w	800af54 <_dtoa_r+0x7bc>
 800adec:	9911      	ldr	r1, [sp, #68]	; 0x44
 800adee:	2900      	cmp	r1, #0
 800adf0:	f000 80ac 	beq.w	800af4c <_dtoa_r+0x7b4>
 800adf4:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800adf8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800adfc:	461c      	mov	r4, r3
 800adfe:	930a      	str	r3, [sp, #40]	; 0x28
 800ae00:	9b05      	ldr	r3, [sp, #20]
 800ae02:	4413      	add	r3, r2
 800ae04:	9305      	str	r3, [sp, #20]
 800ae06:	9b06      	ldr	r3, [sp, #24]
 800ae08:	2101      	movs	r1, #1
 800ae0a:	4413      	add	r3, r2
 800ae0c:	4630      	mov	r0, r6
 800ae0e:	9306      	str	r3, [sp, #24]
 800ae10:	f000 ff38 	bl	800bc84 <__i2b>
 800ae14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ae16:	4607      	mov	r7, r0
 800ae18:	f1b8 0f00 	cmp.w	r8, #0
 800ae1c:	dd0d      	ble.n	800ae3a <_dtoa_r+0x6a2>
 800ae1e:	9a06      	ldr	r2, [sp, #24]
 800ae20:	2a00      	cmp	r2, #0
 800ae22:	dd0a      	ble.n	800ae3a <_dtoa_r+0x6a2>
 800ae24:	4542      	cmp	r2, r8
 800ae26:	9905      	ldr	r1, [sp, #20]
 800ae28:	bfa8      	it	ge
 800ae2a:	4642      	movge	r2, r8
 800ae2c:	1a89      	subs	r1, r1, r2
 800ae2e:	9105      	str	r1, [sp, #20]
 800ae30:	9906      	ldr	r1, [sp, #24]
 800ae32:	eba8 0802 	sub.w	r8, r8, r2
 800ae36:	1a8a      	subs	r2, r1, r2
 800ae38:	9206      	str	r2, [sp, #24]
 800ae3a:	b303      	cbz	r3, 800ae7e <_dtoa_r+0x6e6>
 800ae3c:	9a08      	ldr	r2, [sp, #32]
 800ae3e:	2a00      	cmp	r2, #0
 800ae40:	f000 80a6 	beq.w	800af90 <_dtoa_r+0x7f8>
 800ae44:	2c00      	cmp	r4, #0
 800ae46:	dd13      	ble.n	800ae70 <_dtoa_r+0x6d8>
 800ae48:	4639      	mov	r1, r7
 800ae4a:	4622      	mov	r2, r4
 800ae4c:	4630      	mov	r0, r6
 800ae4e:	930c      	str	r3, [sp, #48]	; 0x30
 800ae50:	f000 ffd4 	bl	800bdfc <__pow5mult>
 800ae54:	462a      	mov	r2, r5
 800ae56:	4601      	mov	r1, r0
 800ae58:	4607      	mov	r7, r0
 800ae5a:	4630      	mov	r0, r6
 800ae5c:	f000 ff28 	bl	800bcb0 <__multiply>
 800ae60:	4629      	mov	r1, r5
 800ae62:	900a      	str	r0, [sp, #40]	; 0x28
 800ae64:	4630      	mov	r0, r6
 800ae66:	f000 fe07 	bl	800ba78 <_Bfree>
 800ae6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ae6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae6e:	4615      	mov	r5, r2
 800ae70:	1b1a      	subs	r2, r3, r4
 800ae72:	d004      	beq.n	800ae7e <_dtoa_r+0x6e6>
 800ae74:	4629      	mov	r1, r5
 800ae76:	4630      	mov	r0, r6
 800ae78:	f000 ffc0 	bl	800bdfc <__pow5mult>
 800ae7c:	4605      	mov	r5, r0
 800ae7e:	2101      	movs	r1, #1
 800ae80:	4630      	mov	r0, r6
 800ae82:	f000 feff 	bl	800bc84 <__i2b>
 800ae86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae88:	2b00      	cmp	r3, #0
 800ae8a:	4604      	mov	r4, r0
 800ae8c:	f340 8082 	ble.w	800af94 <_dtoa_r+0x7fc>
 800ae90:	461a      	mov	r2, r3
 800ae92:	4601      	mov	r1, r0
 800ae94:	4630      	mov	r0, r6
 800ae96:	f000 ffb1 	bl	800bdfc <__pow5mult>
 800ae9a:	9b07      	ldr	r3, [sp, #28]
 800ae9c:	2b01      	cmp	r3, #1
 800ae9e:	4604      	mov	r4, r0
 800aea0:	dd7b      	ble.n	800af9a <_dtoa_r+0x802>
 800aea2:	2300      	movs	r3, #0
 800aea4:	930a      	str	r3, [sp, #40]	; 0x28
 800aea6:	6922      	ldr	r2, [r4, #16]
 800aea8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800aeac:	6910      	ldr	r0, [r2, #16]
 800aeae:	f000 fe99 	bl	800bbe4 <__hi0bits>
 800aeb2:	f1c0 0020 	rsb	r0, r0, #32
 800aeb6:	9b06      	ldr	r3, [sp, #24]
 800aeb8:	4418      	add	r0, r3
 800aeba:	f010 001f 	ands.w	r0, r0, #31
 800aebe:	f000 808d 	beq.w	800afdc <_dtoa_r+0x844>
 800aec2:	f1c0 0220 	rsb	r2, r0, #32
 800aec6:	2a04      	cmp	r2, #4
 800aec8:	f340 8086 	ble.w	800afd8 <_dtoa_r+0x840>
 800aecc:	f1c0 001c 	rsb	r0, r0, #28
 800aed0:	9b05      	ldr	r3, [sp, #20]
 800aed2:	4403      	add	r3, r0
 800aed4:	9305      	str	r3, [sp, #20]
 800aed6:	9b06      	ldr	r3, [sp, #24]
 800aed8:	4403      	add	r3, r0
 800aeda:	4480      	add	r8, r0
 800aedc:	9306      	str	r3, [sp, #24]
 800aede:	9b05      	ldr	r3, [sp, #20]
 800aee0:	2b00      	cmp	r3, #0
 800aee2:	dd05      	ble.n	800aef0 <_dtoa_r+0x758>
 800aee4:	4629      	mov	r1, r5
 800aee6:	461a      	mov	r2, r3
 800aee8:	4630      	mov	r0, r6
 800aeea:	f000 ffe1 	bl	800beb0 <__lshift>
 800aeee:	4605      	mov	r5, r0
 800aef0:	9b06      	ldr	r3, [sp, #24]
 800aef2:	2b00      	cmp	r3, #0
 800aef4:	dd05      	ble.n	800af02 <_dtoa_r+0x76a>
 800aef6:	4621      	mov	r1, r4
 800aef8:	461a      	mov	r2, r3
 800aefa:	4630      	mov	r0, r6
 800aefc:	f000 ffd8 	bl	800beb0 <__lshift>
 800af00:	4604      	mov	r4, r0
 800af02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800af04:	2b00      	cmp	r3, #0
 800af06:	d06b      	beq.n	800afe0 <_dtoa_r+0x848>
 800af08:	4621      	mov	r1, r4
 800af0a:	4628      	mov	r0, r5
 800af0c:	f001 f83c 	bl	800bf88 <__mcmp>
 800af10:	2800      	cmp	r0, #0
 800af12:	da65      	bge.n	800afe0 <_dtoa_r+0x848>
 800af14:	2300      	movs	r3, #0
 800af16:	4629      	mov	r1, r5
 800af18:	220a      	movs	r2, #10
 800af1a:	4630      	mov	r0, r6
 800af1c:	f000 fdce 	bl	800babc <__multadd>
 800af20:	9b08      	ldr	r3, [sp, #32]
 800af22:	f10b 3bff 	add.w	fp, fp, #4294967295
 800af26:	4605      	mov	r5, r0
 800af28:	2b00      	cmp	r3, #0
 800af2a:	f000 8192 	beq.w	800b252 <_dtoa_r+0xaba>
 800af2e:	4639      	mov	r1, r7
 800af30:	2300      	movs	r3, #0
 800af32:	220a      	movs	r2, #10
 800af34:	4630      	mov	r0, r6
 800af36:	f000 fdc1 	bl	800babc <__multadd>
 800af3a:	f1ba 0f00 	cmp.w	sl, #0
 800af3e:	4607      	mov	r7, r0
 800af40:	f300 808e 	bgt.w	800b060 <_dtoa_r+0x8c8>
 800af44:	9b07      	ldr	r3, [sp, #28]
 800af46:	2b02      	cmp	r3, #2
 800af48:	dc51      	bgt.n	800afee <_dtoa_r+0x856>
 800af4a:	e089      	b.n	800b060 <_dtoa_r+0x8c8>
 800af4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800af4e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800af52:	e751      	b.n	800adf8 <_dtoa_r+0x660>
 800af54:	f109 34ff 	add.w	r4, r9, #4294967295
 800af58:	42a3      	cmp	r3, r4
 800af5a:	bfbf      	itttt	lt
 800af5c:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 800af5e:	1ae3      	sublt	r3, r4, r3
 800af60:	18d2      	addlt	r2, r2, r3
 800af62:	4613      	movlt	r3, r2
 800af64:	bfb7      	itett	lt
 800af66:	930e      	strlt	r3, [sp, #56]	; 0x38
 800af68:	1b1c      	subge	r4, r3, r4
 800af6a:	4623      	movlt	r3, r4
 800af6c:	2400      	movlt	r4, #0
 800af6e:	f1b9 0f00 	cmp.w	r9, #0
 800af72:	bfb5      	itete	lt
 800af74:	9a05      	ldrlt	r2, [sp, #20]
 800af76:	f8dd 8014 	ldrge.w	r8, [sp, #20]
 800af7a:	eba2 0809 	sublt.w	r8, r2, r9
 800af7e:	464a      	movge	r2, r9
 800af80:	bfb8      	it	lt
 800af82:	2200      	movlt	r2, #0
 800af84:	e73b      	b.n	800adfe <_dtoa_r+0x666>
 800af86:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800af8a:	9f08      	ldr	r7, [sp, #32]
 800af8c:	461c      	mov	r4, r3
 800af8e:	e743      	b.n	800ae18 <_dtoa_r+0x680>
 800af90:	461a      	mov	r2, r3
 800af92:	e76f      	b.n	800ae74 <_dtoa_r+0x6dc>
 800af94:	9b07      	ldr	r3, [sp, #28]
 800af96:	2b01      	cmp	r3, #1
 800af98:	dc18      	bgt.n	800afcc <_dtoa_r+0x834>
 800af9a:	9b02      	ldr	r3, [sp, #8]
 800af9c:	b9b3      	cbnz	r3, 800afcc <_dtoa_r+0x834>
 800af9e:	9b03      	ldr	r3, [sp, #12]
 800afa0:	f3c3 0213 	ubfx	r2, r3, #0, #20
 800afa4:	b9a2      	cbnz	r2, 800afd0 <_dtoa_r+0x838>
 800afa6:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 800afaa:	0d12      	lsrs	r2, r2, #20
 800afac:	0512      	lsls	r2, r2, #20
 800afae:	b18a      	cbz	r2, 800afd4 <_dtoa_r+0x83c>
 800afb0:	9b05      	ldr	r3, [sp, #20]
 800afb2:	3301      	adds	r3, #1
 800afb4:	9305      	str	r3, [sp, #20]
 800afb6:	9b06      	ldr	r3, [sp, #24]
 800afb8:	3301      	adds	r3, #1
 800afba:	9306      	str	r3, [sp, #24]
 800afbc:	2301      	movs	r3, #1
 800afbe:	930a      	str	r3, [sp, #40]	; 0x28
 800afc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800afc2:	2b00      	cmp	r3, #0
 800afc4:	f47f af6f 	bne.w	800aea6 <_dtoa_r+0x70e>
 800afc8:	2001      	movs	r0, #1
 800afca:	e774      	b.n	800aeb6 <_dtoa_r+0x71e>
 800afcc:	2300      	movs	r3, #0
 800afce:	e7f6      	b.n	800afbe <_dtoa_r+0x826>
 800afd0:	9b02      	ldr	r3, [sp, #8]
 800afd2:	e7f4      	b.n	800afbe <_dtoa_r+0x826>
 800afd4:	920a      	str	r2, [sp, #40]	; 0x28
 800afd6:	e7f3      	b.n	800afc0 <_dtoa_r+0x828>
 800afd8:	d081      	beq.n	800aede <_dtoa_r+0x746>
 800afda:	4610      	mov	r0, r2
 800afdc:	301c      	adds	r0, #28
 800afde:	e777      	b.n	800aed0 <_dtoa_r+0x738>
 800afe0:	f1b9 0f00 	cmp.w	r9, #0
 800afe4:	dc37      	bgt.n	800b056 <_dtoa_r+0x8be>
 800afe6:	9b07      	ldr	r3, [sp, #28]
 800afe8:	2b02      	cmp	r3, #2
 800afea:	dd34      	ble.n	800b056 <_dtoa_r+0x8be>
 800afec:	46ca      	mov	sl, r9
 800afee:	f1ba 0f00 	cmp.w	sl, #0
 800aff2:	d10d      	bne.n	800b010 <_dtoa_r+0x878>
 800aff4:	4621      	mov	r1, r4
 800aff6:	4653      	mov	r3, sl
 800aff8:	2205      	movs	r2, #5
 800affa:	4630      	mov	r0, r6
 800affc:	f000 fd5e 	bl	800babc <__multadd>
 800b000:	4601      	mov	r1, r0
 800b002:	4604      	mov	r4, r0
 800b004:	4628      	mov	r0, r5
 800b006:	f000 ffbf 	bl	800bf88 <__mcmp>
 800b00a:	2800      	cmp	r0, #0
 800b00c:	f73f adde 	bgt.w	800abcc <_dtoa_r+0x434>
 800b010:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b012:	f8dd 8000 	ldr.w	r8, [sp]
 800b016:	ea6f 0b03 	mvn.w	fp, r3
 800b01a:	f04f 0900 	mov.w	r9, #0
 800b01e:	4621      	mov	r1, r4
 800b020:	4630      	mov	r0, r6
 800b022:	f000 fd29 	bl	800ba78 <_Bfree>
 800b026:	2f00      	cmp	r7, #0
 800b028:	f43f aea7 	beq.w	800ad7a <_dtoa_r+0x5e2>
 800b02c:	f1b9 0f00 	cmp.w	r9, #0
 800b030:	d005      	beq.n	800b03e <_dtoa_r+0x8a6>
 800b032:	45b9      	cmp	r9, r7
 800b034:	d003      	beq.n	800b03e <_dtoa_r+0x8a6>
 800b036:	4649      	mov	r1, r9
 800b038:	4630      	mov	r0, r6
 800b03a:	f000 fd1d 	bl	800ba78 <_Bfree>
 800b03e:	4639      	mov	r1, r7
 800b040:	4630      	mov	r0, r6
 800b042:	f000 fd19 	bl	800ba78 <_Bfree>
 800b046:	e698      	b.n	800ad7a <_dtoa_r+0x5e2>
 800b048:	2400      	movs	r4, #0
 800b04a:	4627      	mov	r7, r4
 800b04c:	e7e0      	b.n	800b010 <_dtoa_r+0x878>
 800b04e:	46bb      	mov	fp, r7
 800b050:	4604      	mov	r4, r0
 800b052:	4607      	mov	r7, r0
 800b054:	e5ba      	b.n	800abcc <_dtoa_r+0x434>
 800b056:	9b08      	ldr	r3, [sp, #32]
 800b058:	46ca      	mov	sl, r9
 800b05a:	2b00      	cmp	r3, #0
 800b05c:	f000 8100 	beq.w	800b260 <_dtoa_r+0xac8>
 800b060:	f1b8 0f00 	cmp.w	r8, #0
 800b064:	dd05      	ble.n	800b072 <_dtoa_r+0x8da>
 800b066:	4639      	mov	r1, r7
 800b068:	4642      	mov	r2, r8
 800b06a:	4630      	mov	r0, r6
 800b06c:	f000 ff20 	bl	800beb0 <__lshift>
 800b070:	4607      	mov	r7, r0
 800b072:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b074:	2b00      	cmp	r3, #0
 800b076:	d05d      	beq.n	800b134 <_dtoa_r+0x99c>
 800b078:	6879      	ldr	r1, [r7, #4]
 800b07a:	4630      	mov	r0, r6
 800b07c:	f000 fcbc 	bl	800b9f8 <_Balloc>
 800b080:	4680      	mov	r8, r0
 800b082:	b928      	cbnz	r0, 800b090 <_dtoa_r+0x8f8>
 800b084:	4b82      	ldr	r3, [pc, #520]	; (800b290 <_dtoa_r+0xaf8>)
 800b086:	4602      	mov	r2, r0
 800b088:	f240 21ea 	movw	r1, #746	; 0x2ea
 800b08c:	f7ff bb9a 	b.w	800a7c4 <_dtoa_r+0x2c>
 800b090:	693a      	ldr	r2, [r7, #16]
 800b092:	3202      	adds	r2, #2
 800b094:	0092      	lsls	r2, r2, #2
 800b096:	f107 010c 	add.w	r1, r7, #12
 800b09a:	300c      	adds	r0, #12
 800b09c:	f000 fc9e 	bl	800b9dc <memcpy>
 800b0a0:	2201      	movs	r2, #1
 800b0a2:	4641      	mov	r1, r8
 800b0a4:	4630      	mov	r0, r6
 800b0a6:	f000 ff03 	bl	800beb0 <__lshift>
 800b0aa:	9b00      	ldr	r3, [sp, #0]
 800b0ac:	3301      	adds	r3, #1
 800b0ae:	9305      	str	r3, [sp, #20]
 800b0b0:	9b00      	ldr	r3, [sp, #0]
 800b0b2:	4453      	add	r3, sl
 800b0b4:	9309      	str	r3, [sp, #36]	; 0x24
 800b0b6:	9b02      	ldr	r3, [sp, #8]
 800b0b8:	f003 0301 	and.w	r3, r3, #1
 800b0bc:	46b9      	mov	r9, r7
 800b0be:	9308      	str	r3, [sp, #32]
 800b0c0:	4607      	mov	r7, r0
 800b0c2:	9b05      	ldr	r3, [sp, #20]
 800b0c4:	4621      	mov	r1, r4
 800b0c6:	3b01      	subs	r3, #1
 800b0c8:	4628      	mov	r0, r5
 800b0ca:	9302      	str	r3, [sp, #8]
 800b0cc:	f7ff fad8 	bl	800a680 <quorem>
 800b0d0:	4603      	mov	r3, r0
 800b0d2:	3330      	adds	r3, #48	; 0x30
 800b0d4:	9006      	str	r0, [sp, #24]
 800b0d6:	4649      	mov	r1, r9
 800b0d8:	4628      	mov	r0, r5
 800b0da:	930a      	str	r3, [sp, #40]	; 0x28
 800b0dc:	f000 ff54 	bl	800bf88 <__mcmp>
 800b0e0:	463a      	mov	r2, r7
 800b0e2:	4682      	mov	sl, r0
 800b0e4:	4621      	mov	r1, r4
 800b0e6:	4630      	mov	r0, r6
 800b0e8:	f000 ff6a 	bl	800bfc0 <__mdiff>
 800b0ec:	68c2      	ldr	r2, [r0, #12]
 800b0ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0f0:	4680      	mov	r8, r0
 800b0f2:	bb0a      	cbnz	r2, 800b138 <_dtoa_r+0x9a0>
 800b0f4:	4601      	mov	r1, r0
 800b0f6:	4628      	mov	r0, r5
 800b0f8:	f000 ff46 	bl	800bf88 <__mcmp>
 800b0fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0fe:	4602      	mov	r2, r0
 800b100:	4641      	mov	r1, r8
 800b102:	4630      	mov	r0, r6
 800b104:	920e      	str	r2, [sp, #56]	; 0x38
 800b106:	930a      	str	r3, [sp, #40]	; 0x28
 800b108:	f000 fcb6 	bl	800ba78 <_Bfree>
 800b10c:	9b07      	ldr	r3, [sp, #28]
 800b10e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b110:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800b114:	ea43 0102 	orr.w	r1, r3, r2
 800b118:	9b08      	ldr	r3, [sp, #32]
 800b11a:	430b      	orrs	r3, r1
 800b11c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b11e:	d10d      	bne.n	800b13c <_dtoa_r+0x9a4>
 800b120:	2b39      	cmp	r3, #57	; 0x39
 800b122:	d029      	beq.n	800b178 <_dtoa_r+0x9e0>
 800b124:	f1ba 0f00 	cmp.w	sl, #0
 800b128:	dd01      	ble.n	800b12e <_dtoa_r+0x996>
 800b12a:	9b06      	ldr	r3, [sp, #24]
 800b12c:	3331      	adds	r3, #49	; 0x31
 800b12e:	9a02      	ldr	r2, [sp, #8]
 800b130:	7013      	strb	r3, [r2, #0]
 800b132:	e774      	b.n	800b01e <_dtoa_r+0x886>
 800b134:	4638      	mov	r0, r7
 800b136:	e7b8      	b.n	800b0aa <_dtoa_r+0x912>
 800b138:	2201      	movs	r2, #1
 800b13a:	e7e1      	b.n	800b100 <_dtoa_r+0x968>
 800b13c:	f1ba 0f00 	cmp.w	sl, #0
 800b140:	db06      	blt.n	800b150 <_dtoa_r+0x9b8>
 800b142:	9907      	ldr	r1, [sp, #28]
 800b144:	ea41 0a0a 	orr.w	sl, r1, sl
 800b148:	9908      	ldr	r1, [sp, #32]
 800b14a:	ea5a 0101 	orrs.w	r1, sl, r1
 800b14e:	d120      	bne.n	800b192 <_dtoa_r+0x9fa>
 800b150:	2a00      	cmp	r2, #0
 800b152:	ddec      	ble.n	800b12e <_dtoa_r+0x996>
 800b154:	4629      	mov	r1, r5
 800b156:	2201      	movs	r2, #1
 800b158:	4630      	mov	r0, r6
 800b15a:	9305      	str	r3, [sp, #20]
 800b15c:	f000 fea8 	bl	800beb0 <__lshift>
 800b160:	4621      	mov	r1, r4
 800b162:	4605      	mov	r5, r0
 800b164:	f000 ff10 	bl	800bf88 <__mcmp>
 800b168:	2800      	cmp	r0, #0
 800b16a:	9b05      	ldr	r3, [sp, #20]
 800b16c:	dc02      	bgt.n	800b174 <_dtoa_r+0x9dc>
 800b16e:	d1de      	bne.n	800b12e <_dtoa_r+0x996>
 800b170:	07da      	lsls	r2, r3, #31
 800b172:	d5dc      	bpl.n	800b12e <_dtoa_r+0x996>
 800b174:	2b39      	cmp	r3, #57	; 0x39
 800b176:	d1d8      	bne.n	800b12a <_dtoa_r+0x992>
 800b178:	9a02      	ldr	r2, [sp, #8]
 800b17a:	2339      	movs	r3, #57	; 0x39
 800b17c:	7013      	strb	r3, [r2, #0]
 800b17e:	4643      	mov	r3, r8
 800b180:	4698      	mov	r8, r3
 800b182:	3b01      	subs	r3, #1
 800b184:	f818 2c01 	ldrb.w	r2, [r8, #-1]
 800b188:	2a39      	cmp	r2, #57	; 0x39
 800b18a:	d051      	beq.n	800b230 <_dtoa_r+0xa98>
 800b18c:	3201      	adds	r2, #1
 800b18e:	701a      	strb	r2, [r3, #0]
 800b190:	e745      	b.n	800b01e <_dtoa_r+0x886>
 800b192:	2a00      	cmp	r2, #0
 800b194:	dd03      	ble.n	800b19e <_dtoa_r+0xa06>
 800b196:	2b39      	cmp	r3, #57	; 0x39
 800b198:	d0ee      	beq.n	800b178 <_dtoa_r+0x9e0>
 800b19a:	3301      	adds	r3, #1
 800b19c:	e7c7      	b.n	800b12e <_dtoa_r+0x996>
 800b19e:	9a05      	ldr	r2, [sp, #20]
 800b1a0:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b1a2:	f802 3c01 	strb.w	r3, [r2, #-1]
 800b1a6:	428a      	cmp	r2, r1
 800b1a8:	d02b      	beq.n	800b202 <_dtoa_r+0xa6a>
 800b1aa:	4629      	mov	r1, r5
 800b1ac:	2300      	movs	r3, #0
 800b1ae:	220a      	movs	r2, #10
 800b1b0:	4630      	mov	r0, r6
 800b1b2:	f000 fc83 	bl	800babc <__multadd>
 800b1b6:	45b9      	cmp	r9, r7
 800b1b8:	4605      	mov	r5, r0
 800b1ba:	f04f 0300 	mov.w	r3, #0
 800b1be:	f04f 020a 	mov.w	r2, #10
 800b1c2:	4649      	mov	r1, r9
 800b1c4:	4630      	mov	r0, r6
 800b1c6:	d107      	bne.n	800b1d8 <_dtoa_r+0xa40>
 800b1c8:	f000 fc78 	bl	800babc <__multadd>
 800b1cc:	4681      	mov	r9, r0
 800b1ce:	4607      	mov	r7, r0
 800b1d0:	9b05      	ldr	r3, [sp, #20]
 800b1d2:	3301      	adds	r3, #1
 800b1d4:	9305      	str	r3, [sp, #20]
 800b1d6:	e774      	b.n	800b0c2 <_dtoa_r+0x92a>
 800b1d8:	f000 fc70 	bl	800babc <__multadd>
 800b1dc:	4639      	mov	r1, r7
 800b1de:	4681      	mov	r9, r0
 800b1e0:	2300      	movs	r3, #0
 800b1e2:	220a      	movs	r2, #10
 800b1e4:	4630      	mov	r0, r6
 800b1e6:	f000 fc69 	bl	800babc <__multadd>
 800b1ea:	4607      	mov	r7, r0
 800b1ec:	e7f0      	b.n	800b1d0 <_dtoa_r+0xa38>
 800b1ee:	f1ba 0f00 	cmp.w	sl, #0
 800b1f2:	9a00      	ldr	r2, [sp, #0]
 800b1f4:	bfcc      	ite	gt
 800b1f6:	46d0      	movgt	r8, sl
 800b1f8:	f04f 0801 	movle.w	r8, #1
 800b1fc:	4490      	add	r8, r2
 800b1fe:	f04f 0900 	mov.w	r9, #0
 800b202:	4629      	mov	r1, r5
 800b204:	2201      	movs	r2, #1
 800b206:	4630      	mov	r0, r6
 800b208:	9302      	str	r3, [sp, #8]
 800b20a:	f000 fe51 	bl	800beb0 <__lshift>
 800b20e:	4621      	mov	r1, r4
 800b210:	4605      	mov	r5, r0
 800b212:	f000 feb9 	bl	800bf88 <__mcmp>
 800b216:	2800      	cmp	r0, #0
 800b218:	dcb1      	bgt.n	800b17e <_dtoa_r+0x9e6>
 800b21a:	d102      	bne.n	800b222 <_dtoa_r+0xa8a>
 800b21c:	9b02      	ldr	r3, [sp, #8]
 800b21e:	07db      	lsls	r3, r3, #31
 800b220:	d4ad      	bmi.n	800b17e <_dtoa_r+0x9e6>
 800b222:	4643      	mov	r3, r8
 800b224:	4698      	mov	r8, r3
 800b226:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800b22a:	2a30      	cmp	r2, #48	; 0x30
 800b22c:	d0fa      	beq.n	800b224 <_dtoa_r+0xa8c>
 800b22e:	e6f6      	b.n	800b01e <_dtoa_r+0x886>
 800b230:	9a00      	ldr	r2, [sp, #0]
 800b232:	429a      	cmp	r2, r3
 800b234:	d1a4      	bne.n	800b180 <_dtoa_r+0x9e8>
 800b236:	f10b 0b01 	add.w	fp, fp, #1
 800b23a:	2331      	movs	r3, #49	; 0x31
 800b23c:	e778      	b.n	800b130 <_dtoa_r+0x998>
 800b23e:	4b15      	ldr	r3, [pc, #84]	; (800b294 <_dtoa_r+0xafc>)
 800b240:	f7ff bb12 	b.w	800a868 <_dtoa_r+0xd0>
 800b244:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800b246:	2b00      	cmp	r3, #0
 800b248:	f47f aaee 	bne.w	800a828 <_dtoa_r+0x90>
 800b24c:	4b12      	ldr	r3, [pc, #72]	; (800b298 <_dtoa_r+0xb00>)
 800b24e:	f7ff bb0b 	b.w	800a868 <_dtoa_r+0xd0>
 800b252:	f1ba 0f00 	cmp.w	sl, #0
 800b256:	dc03      	bgt.n	800b260 <_dtoa_r+0xac8>
 800b258:	9b07      	ldr	r3, [sp, #28]
 800b25a:	2b02      	cmp	r3, #2
 800b25c:	f73f aec7 	bgt.w	800afee <_dtoa_r+0x856>
 800b260:	f8dd 8000 	ldr.w	r8, [sp]
 800b264:	4621      	mov	r1, r4
 800b266:	4628      	mov	r0, r5
 800b268:	f7ff fa0a 	bl	800a680 <quorem>
 800b26c:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800b270:	f808 3b01 	strb.w	r3, [r8], #1
 800b274:	9a00      	ldr	r2, [sp, #0]
 800b276:	eba8 0202 	sub.w	r2, r8, r2
 800b27a:	4592      	cmp	sl, r2
 800b27c:	ddb7      	ble.n	800b1ee <_dtoa_r+0xa56>
 800b27e:	4629      	mov	r1, r5
 800b280:	2300      	movs	r3, #0
 800b282:	220a      	movs	r2, #10
 800b284:	4630      	mov	r0, r6
 800b286:	f000 fc19 	bl	800babc <__multadd>
 800b28a:	4605      	mov	r5, r0
 800b28c:	e7ea      	b.n	800b264 <_dtoa_r+0xacc>
 800b28e:	bf00      	nop
 800b290:	0800e924 	.word	0x0800e924
 800b294:	0800eb29 	.word	0x0800eb29
 800b298:	0800e8a1 	.word	0x0800e8a1

0800b29c <rshift>:
 800b29c:	6903      	ldr	r3, [r0, #16]
 800b29e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800b2a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2a6:	ea4f 1261 	mov.w	r2, r1, asr #5
 800b2aa:	f100 0414 	add.w	r4, r0, #20
 800b2ae:	dd45      	ble.n	800b33c <rshift+0xa0>
 800b2b0:	f011 011f 	ands.w	r1, r1, #31
 800b2b4:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800b2b8:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800b2bc:	d10c      	bne.n	800b2d8 <rshift+0x3c>
 800b2be:	f100 0710 	add.w	r7, r0, #16
 800b2c2:	4629      	mov	r1, r5
 800b2c4:	42b1      	cmp	r1, r6
 800b2c6:	d334      	bcc.n	800b332 <rshift+0x96>
 800b2c8:	1a9b      	subs	r3, r3, r2
 800b2ca:	009b      	lsls	r3, r3, #2
 800b2cc:	1eea      	subs	r2, r5, #3
 800b2ce:	4296      	cmp	r6, r2
 800b2d0:	bf38      	it	cc
 800b2d2:	2300      	movcc	r3, #0
 800b2d4:	4423      	add	r3, r4
 800b2d6:	e015      	b.n	800b304 <rshift+0x68>
 800b2d8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800b2dc:	f1c1 0820 	rsb	r8, r1, #32
 800b2e0:	40cf      	lsrs	r7, r1
 800b2e2:	f105 0e04 	add.w	lr, r5, #4
 800b2e6:	46a1      	mov	r9, r4
 800b2e8:	4576      	cmp	r6, lr
 800b2ea:	46f4      	mov	ip, lr
 800b2ec:	d815      	bhi.n	800b31a <rshift+0x7e>
 800b2ee:	1a9b      	subs	r3, r3, r2
 800b2f0:	009a      	lsls	r2, r3, #2
 800b2f2:	3a04      	subs	r2, #4
 800b2f4:	3501      	adds	r5, #1
 800b2f6:	42ae      	cmp	r6, r5
 800b2f8:	bf38      	it	cc
 800b2fa:	2200      	movcc	r2, #0
 800b2fc:	18a3      	adds	r3, r4, r2
 800b2fe:	50a7      	str	r7, [r4, r2]
 800b300:	b107      	cbz	r7, 800b304 <rshift+0x68>
 800b302:	3304      	adds	r3, #4
 800b304:	1b1a      	subs	r2, r3, r4
 800b306:	42a3      	cmp	r3, r4
 800b308:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800b30c:	bf08      	it	eq
 800b30e:	2300      	moveq	r3, #0
 800b310:	6102      	str	r2, [r0, #16]
 800b312:	bf08      	it	eq
 800b314:	6143      	streq	r3, [r0, #20]
 800b316:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b31a:	f8dc c000 	ldr.w	ip, [ip]
 800b31e:	fa0c fc08 	lsl.w	ip, ip, r8
 800b322:	ea4c 0707 	orr.w	r7, ip, r7
 800b326:	f849 7b04 	str.w	r7, [r9], #4
 800b32a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800b32e:	40cf      	lsrs	r7, r1
 800b330:	e7da      	b.n	800b2e8 <rshift+0x4c>
 800b332:	f851 cb04 	ldr.w	ip, [r1], #4
 800b336:	f847 cf04 	str.w	ip, [r7, #4]!
 800b33a:	e7c3      	b.n	800b2c4 <rshift+0x28>
 800b33c:	4623      	mov	r3, r4
 800b33e:	e7e1      	b.n	800b304 <rshift+0x68>

0800b340 <__hexdig_fun>:
 800b340:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800b344:	2b09      	cmp	r3, #9
 800b346:	d802      	bhi.n	800b34e <__hexdig_fun+0xe>
 800b348:	3820      	subs	r0, #32
 800b34a:	b2c0      	uxtb	r0, r0
 800b34c:	4770      	bx	lr
 800b34e:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800b352:	2b05      	cmp	r3, #5
 800b354:	d801      	bhi.n	800b35a <__hexdig_fun+0x1a>
 800b356:	3847      	subs	r0, #71	; 0x47
 800b358:	e7f7      	b.n	800b34a <__hexdig_fun+0xa>
 800b35a:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b35e:	2b05      	cmp	r3, #5
 800b360:	d801      	bhi.n	800b366 <__hexdig_fun+0x26>
 800b362:	3827      	subs	r0, #39	; 0x27
 800b364:	e7f1      	b.n	800b34a <__hexdig_fun+0xa>
 800b366:	2000      	movs	r0, #0
 800b368:	4770      	bx	lr
	...

0800b36c <__gethex>:
 800b36c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b370:	ed2d 8b02 	vpush	{d8}
 800b374:	b089      	sub	sp, #36	; 0x24
 800b376:	ee08 0a10 	vmov	s16, r0
 800b37a:	9304      	str	r3, [sp, #16]
 800b37c:	4bbc      	ldr	r3, [pc, #752]	; (800b670 <__gethex+0x304>)
 800b37e:	681b      	ldr	r3, [r3, #0]
 800b380:	9301      	str	r3, [sp, #4]
 800b382:	4618      	mov	r0, r3
 800b384:	468b      	mov	fp, r1
 800b386:	4690      	mov	r8, r2
 800b388:	f7f4 ff64 	bl	8000254 <strlen>
 800b38c:	9b01      	ldr	r3, [sp, #4]
 800b38e:	f8db 2000 	ldr.w	r2, [fp]
 800b392:	4403      	add	r3, r0
 800b394:	4682      	mov	sl, r0
 800b396:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800b39a:	9305      	str	r3, [sp, #20]
 800b39c:	1c93      	adds	r3, r2, #2
 800b39e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b3a2:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b3a6:	32fe      	adds	r2, #254	; 0xfe
 800b3a8:	18d1      	adds	r1, r2, r3
 800b3aa:	461f      	mov	r7, r3
 800b3ac:	f813 0b01 	ldrb.w	r0, [r3], #1
 800b3b0:	9100      	str	r1, [sp, #0]
 800b3b2:	2830      	cmp	r0, #48	; 0x30
 800b3b4:	d0f8      	beq.n	800b3a8 <__gethex+0x3c>
 800b3b6:	f7ff ffc3 	bl	800b340 <__hexdig_fun>
 800b3ba:	4604      	mov	r4, r0
 800b3bc:	2800      	cmp	r0, #0
 800b3be:	d13a      	bne.n	800b436 <__gethex+0xca>
 800b3c0:	9901      	ldr	r1, [sp, #4]
 800b3c2:	4652      	mov	r2, sl
 800b3c4:	4638      	mov	r0, r7
 800b3c6:	f7fe fa98 	bl	80098fa <strncmp>
 800b3ca:	4605      	mov	r5, r0
 800b3cc:	2800      	cmp	r0, #0
 800b3ce:	d168      	bne.n	800b4a2 <__gethex+0x136>
 800b3d0:	f817 000a 	ldrb.w	r0, [r7, sl]
 800b3d4:	eb07 060a 	add.w	r6, r7, sl
 800b3d8:	f7ff ffb2 	bl	800b340 <__hexdig_fun>
 800b3dc:	2800      	cmp	r0, #0
 800b3de:	d062      	beq.n	800b4a6 <__gethex+0x13a>
 800b3e0:	4633      	mov	r3, r6
 800b3e2:	7818      	ldrb	r0, [r3, #0]
 800b3e4:	2830      	cmp	r0, #48	; 0x30
 800b3e6:	461f      	mov	r7, r3
 800b3e8:	f103 0301 	add.w	r3, r3, #1
 800b3ec:	d0f9      	beq.n	800b3e2 <__gethex+0x76>
 800b3ee:	f7ff ffa7 	bl	800b340 <__hexdig_fun>
 800b3f2:	2301      	movs	r3, #1
 800b3f4:	fab0 f480 	clz	r4, r0
 800b3f8:	0964      	lsrs	r4, r4, #5
 800b3fa:	4635      	mov	r5, r6
 800b3fc:	9300      	str	r3, [sp, #0]
 800b3fe:	463a      	mov	r2, r7
 800b400:	4616      	mov	r6, r2
 800b402:	3201      	adds	r2, #1
 800b404:	7830      	ldrb	r0, [r6, #0]
 800b406:	f7ff ff9b 	bl	800b340 <__hexdig_fun>
 800b40a:	2800      	cmp	r0, #0
 800b40c:	d1f8      	bne.n	800b400 <__gethex+0x94>
 800b40e:	9901      	ldr	r1, [sp, #4]
 800b410:	4652      	mov	r2, sl
 800b412:	4630      	mov	r0, r6
 800b414:	f7fe fa71 	bl	80098fa <strncmp>
 800b418:	b980      	cbnz	r0, 800b43c <__gethex+0xd0>
 800b41a:	b94d      	cbnz	r5, 800b430 <__gethex+0xc4>
 800b41c:	eb06 050a 	add.w	r5, r6, sl
 800b420:	462a      	mov	r2, r5
 800b422:	4616      	mov	r6, r2
 800b424:	3201      	adds	r2, #1
 800b426:	7830      	ldrb	r0, [r6, #0]
 800b428:	f7ff ff8a 	bl	800b340 <__hexdig_fun>
 800b42c:	2800      	cmp	r0, #0
 800b42e:	d1f8      	bne.n	800b422 <__gethex+0xb6>
 800b430:	1bad      	subs	r5, r5, r6
 800b432:	00ad      	lsls	r5, r5, #2
 800b434:	e004      	b.n	800b440 <__gethex+0xd4>
 800b436:	2400      	movs	r4, #0
 800b438:	4625      	mov	r5, r4
 800b43a:	e7e0      	b.n	800b3fe <__gethex+0x92>
 800b43c:	2d00      	cmp	r5, #0
 800b43e:	d1f7      	bne.n	800b430 <__gethex+0xc4>
 800b440:	7833      	ldrb	r3, [r6, #0]
 800b442:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800b446:	2b50      	cmp	r3, #80	; 0x50
 800b448:	d13b      	bne.n	800b4c2 <__gethex+0x156>
 800b44a:	7873      	ldrb	r3, [r6, #1]
 800b44c:	2b2b      	cmp	r3, #43	; 0x2b
 800b44e:	d02c      	beq.n	800b4aa <__gethex+0x13e>
 800b450:	2b2d      	cmp	r3, #45	; 0x2d
 800b452:	d02e      	beq.n	800b4b2 <__gethex+0x146>
 800b454:	1c71      	adds	r1, r6, #1
 800b456:	f04f 0900 	mov.w	r9, #0
 800b45a:	7808      	ldrb	r0, [r1, #0]
 800b45c:	f7ff ff70 	bl	800b340 <__hexdig_fun>
 800b460:	1e43      	subs	r3, r0, #1
 800b462:	b2db      	uxtb	r3, r3
 800b464:	2b18      	cmp	r3, #24
 800b466:	d82c      	bhi.n	800b4c2 <__gethex+0x156>
 800b468:	f1a0 0210 	sub.w	r2, r0, #16
 800b46c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800b470:	f7ff ff66 	bl	800b340 <__hexdig_fun>
 800b474:	1e43      	subs	r3, r0, #1
 800b476:	b2db      	uxtb	r3, r3
 800b478:	2b18      	cmp	r3, #24
 800b47a:	d91d      	bls.n	800b4b8 <__gethex+0x14c>
 800b47c:	f1b9 0f00 	cmp.w	r9, #0
 800b480:	d000      	beq.n	800b484 <__gethex+0x118>
 800b482:	4252      	negs	r2, r2
 800b484:	4415      	add	r5, r2
 800b486:	f8cb 1000 	str.w	r1, [fp]
 800b48a:	b1e4      	cbz	r4, 800b4c6 <__gethex+0x15a>
 800b48c:	9b00      	ldr	r3, [sp, #0]
 800b48e:	2b00      	cmp	r3, #0
 800b490:	bf14      	ite	ne
 800b492:	2700      	movne	r7, #0
 800b494:	2706      	moveq	r7, #6
 800b496:	4638      	mov	r0, r7
 800b498:	b009      	add	sp, #36	; 0x24
 800b49a:	ecbd 8b02 	vpop	{d8}
 800b49e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4a2:	463e      	mov	r6, r7
 800b4a4:	4625      	mov	r5, r4
 800b4a6:	2401      	movs	r4, #1
 800b4a8:	e7ca      	b.n	800b440 <__gethex+0xd4>
 800b4aa:	f04f 0900 	mov.w	r9, #0
 800b4ae:	1cb1      	adds	r1, r6, #2
 800b4b0:	e7d3      	b.n	800b45a <__gethex+0xee>
 800b4b2:	f04f 0901 	mov.w	r9, #1
 800b4b6:	e7fa      	b.n	800b4ae <__gethex+0x142>
 800b4b8:	230a      	movs	r3, #10
 800b4ba:	fb03 0202 	mla	r2, r3, r2, r0
 800b4be:	3a10      	subs	r2, #16
 800b4c0:	e7d4      	b.n	800b46c <__gethex+0x100>
 800b4c2:	4631      	mov	r1, r6
 800b4c4:	e7df      	b.n	800b486 <__gethex+0x11a>
 800b4c6:	1bf3      	subs	r3, r6, r7
 800b4c8:	3b01      	subs	r3, #1
 800b4ca:	4621      	mov	r1, r4
 800b4cc:	2b07      	cmp	r3, #7
 800b4ce:	dc0b      	bgt.n	800b4e8 <__gethex+0x17c>
 800b4d0:	ee18 0a10 	vmov	r0, s16
 800b4d4:	f000 fa90 	bl	800b9f8 <_Balloc>
 800b4d8:	4604      	mov	r4, r0
 800b4da:	b940      	cbnz	r0, 800b4ee <__gethex+0x182>
 800b4dc:	4b65      	ldr	r3, [pc, #404]	; (800b674 <__gethex+0x308>)
 800b4de:	4602      	mov	r2, r0
 800b4e0:	21de      	movs	r1, #222	; 0xde
 800b4e2:	4865      	ldr	r0, [pc, #404]	; (800b678 <__gethex+0x30c>)
 800b4e4:	f001 fda4 	bl	800d030 <__assert_func>
 800b4e8:	3101      	adds	r1, #1
 800b4ea:	105b      	asrs	r3, r3, #1
 800b4ec:	e7ee      	b.n	800b4cc <__gethex+0x160>
 800b4ee:	f100 0914 	add.w	r9, r0, #20
 800b4f2:	f04f 0b00 	mov.w	fp, #0
 800b4f6:	f1ca 0301 	rsb	r3, sl, #1
 800b4fa:	f8cd 9008 	str.w	r9, [sp, #8]
 800b4fe:	f8cd b000 	str.w	fp, [sp]
 800b502:	9306      	str	r3, [sp, #24]
 800b504:	42b7      	cmp	r7, r6
 800b506:	d340      	bcc.n	800b58a <__gethex+0x21e>
 800b508:	9802      	ldr	r0, [sp, #8]
 800b50a:	9b00      	ldr	r3, [sp, #0]
 800b50c:	f840 3b04 	str.w	r3, [r0], #4
 800b510:	eba0 0009 	sub.w	r0, r0, r9
 800b514:	1080      	asrs	r0, r0, #2
 800b516:	0146      	lsls	r6, r0, #5
 800b518:	6120      	str	r0, [r4, #16]
 800b51a:	4618      	mov	r0, r3
 800b51c:	f000 fb62 	bl	800bbe4 <__hi0bits>
 800b520:	1a30      	subs	r0, r6, r0
 800b522:	f8d8 6000 	ldr.w	r6, [r8]
 800b526:	42b0      	cmp	r0, r6
 800b528:	dd63      	ble.n	800b5f2 <__gethex+0x286>
 800b52a:	1b87      	subs	r7, r0, r6
 800b52c:	4639      	mov	r1, r7
 800b52e:	4620      	mov	r0, r4
 800b530:	f000 fefd 	bl	800c32e <__any_on>
 800b534:	4682      	mov	sl, r0
 800b536:	b1a8      	cbz	r0, 800b564 <__gethex+0x1f8>
 800b538:	1e7b      	subs	r3, r7, #1
 800b53a:	1159      	asrs	r1, r3, #5
 800b53c:	f003 021f 	and.w	r2, r3, #31
 800b540:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800b544:	f04f 0a01 	mov.w	sl, #1
 800b548:	fa0a f202 	lsl.w	r2, sl, r2
 800b54c:	420a      	tst	r2, r1
 800b54e:	d009      	beq.n	800b564 <__gethex+0x1f8>
 800b550:	4553      	cmp	r3, sl
 800b552:	dd05      	ble.n	800b560 <__gethex+0x1f4>
 800b554:	1eb9      	subs	r1, r7, #2
 800b556:	4620      	mov	r0, r4
 800b558:	f000 fee9 	bl	800c32e <__any_on>
 800b55c:	2800      	cmp	r0, #0
 800b55e:	d145      	bne.n	800b5ec <__gethex+0x280>
 800b560:	f04f 0a02 	mov.w	sl, #2
 800b564:	4639      	mov	r1, r7
 800b566:	4620      	mov	r0, r4
 800b568:	f7ff fe98 	bl	800b29c <rshift>
 800b56c:	443d      	add	r5, r7
 800b56e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b572:	42ab      	cmp	r3, r5
 800b574:	da4c      	bge.n	800b610 <__gethex+0x2a4>
 800b576:	ee18 0a10 	vmov	r0, s16
 800b57a:	4621      	mov	r1, r4
 800b57c:	f000 fa7c 	bl	800ba78 <_Bfree>
 800b580:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b582:	2300      	movs	r3, #0
 800b584:	6013      	str	r3, [r2, #0]
 800b586:	27a3      	movs	r7, #163	; 0xa3
 800b588:	e785      	b.n	800b496 <__gethex+0x12a>
 800b58a:	1e73      	subs	r3, r6, #1
 800b58c:	9a05      	ldr	r2, [sp, #20]
 800b58e:	9303      	str	r3, [sp, #12]
 800b590:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800b594:	4293      	cmp	r3, r2
 800b596:	d019      	beq.n	800b5cc <__gethex+0x260>
 800b598:	f1bb 0f20 	cmp.w	fp, #32
 800b59c:	d107      	bne.n	800b5ae <__gethex+0x242>
 800b59e:	9b02      	ldr	r3, [sp, #8]
 800b5a0:	9a00      	ldr	r2, [sp, #0]
 800b5a2:	f843 2b04 	str.w	r2, [r3], #4
 800b5a6:	9302      	str	r3, [sp, #8]
 800b5a8:	2300      	movs	r3, #0
 800b5aa:	9300      	str	r3, [sp, #0]
 800b5ac:	469b      	mov	fp, r3
 800b5ae:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800b5b2:	f7ff fec5 	bl	800b340 <__hexdig_fun>
 800b5b6:	9b00      	ldr	r3, [sp, #0]
 800b5b8:	f000 000f 	and.w	r0, r0, #15
 800b5bc:	fa00 f00b 	lsl.w	r0, r0, fp
 800b5c0:	4303      	orrs	r3, r0
 800b5c2:	9300      	str	r3, [sp, #0]
 800b5c4:	f10b 0b04 	add.w	fp, fp, #4
 800b5c8:	9b03      	ldr	r3, [sp, #12]
 800b5ca:	e00d      	b.n	800b5e8 <__gethex+0x27c>
 800b5cc:	9b03      	ldr	r3, [sp, #12]
 800b5ce:	9a06      	ldr	r2, [sp, #24]
 800b5d0:	4413      	add	r3, r2
 800b5d2:	42bb      	cmp	r3, r7
 800b5d4:	d3e0      	bcc.n	800b598 <__gethex+0x22c>
 800b5d6:	4618      	mov	r0, r3
 800b5d8:	9901      	ldr	r1, [sp, #4]
 800b5da:	9307      	str	r3, [sp, #28]
 800b5dc:	4652      	mov	r2, sl
 800b5de:	f7fe f98c 	bl	80098fa <strncmp>
 800b5e2:	9b07      	ldr	r3, [sp, #28]
 800b5e4:	2800      	cmp	r0, #0
 800b5e6:	d1d7      	bne.n	800b598 <__gethex+0x22c>
 800b5e8:	461e      	mov	r6, r3
 800b5ea:	e78b      	b.n	800b504 <__gethex+0x198>
 800b5ec:	f04f 0a03 	mov.w	sl, #3
 800b5f0:	e7b8      	b.n	800b564 <__gethex+0x1f8>
 800b5f2:	da0a      	bge.n	800b60a <__gethex+0x29e>
 800b5f4:	1a37      	subs	r7, r6, r0
 800b5f6:	4621      	mov	r1, r4
 800b5f8:	ee18 0a10 	vmov	r0, s16
 800b5fc:	463a      	mov	r2, r7
 800b5fe:	f000 fc57 	bl	800beb0 <__lshift>
 800b602:	1bed      	subs	r5, r5, r7
 800b604:	4604      	mov	r4, r0
 800b606:	f100 0914 	add.w	r9, r0, #20
 800b60a:	f04f 0a00 	mov.w	sl, #0
 800b60e:	e7ae      	b.n	800b56e <__gethex+0x202>
 800b610:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800b614:	42a8      	cmp	r0, r5
 800b616:	dd72      	ble.n	800b6fe <__gethex+0x392>
 800b618:	1b45      	subs	r5, r0, r5
 800b61a:	42ae      	cmp	r6, r5
 800b61c:	dc36      	bgt.n	800b68c <__gethex+0x320>
 800b61e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b622:	2b02      	cmp	r3, #2
 800b624:	d02a      	beq.n	800b67c <__gethex+0x310>
 800b626:	2b03      	cmp	r3, #3
 800b628:	d02c      	beq.n	800b684 <__gethex+0x318>
 800b62a:	2b01      	cmp	r3, #1
 800b62c:	d115      	bne.n	800b65a <__gethex+0x2ee>
 800b62e:	42ae      	cmp	r6, r5
 800b630:	d113      	bne.n	800b65a <__gethex+0x2ee>
 800b632:	2e01      	cmp	r6, #1
 800b634:	d10b      	bne.n	800b64e <__gethex+0x2e2>
 800b636:	9a04      	ldr	r2, [sp, #16]
 800b638:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800b63c:	6013      	str	r3, [r2, #0]
 800b63e:	2301      	movs	r3, #1
 800b640:	6123      	str	r3, [r4, #16]
 800b642:	f8c9 3000 	str.w	r3, [r9]
 800b646:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800b648:	2762      	movs	r7, #98	; 0x62
 800b64a:	601c      	str	r4, [r3, #0]
 800b64c:	e723      	b.n	800b496 <__gethex+0x12a>
 800b64e:	1e71      	subs	r1, r6, #1
 800b650:	4620      	mov	r0, r4
 800b652:	f000 fe6c 	bl	800c32e <__any_on>
 800b656:	2800      	cmp	r0, #0
 800b658:	d1ed      	bne.n	800b636 <__gethex+0x2ca>
 800b65a:	ee18 0a10 	vmov	r0, s16
 800b65e:	4621      	mov	r1, r4
 800b660:	f000 fa0a 	bl	800ba78 <_Bfree>
 800b664:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b666:	2300      	movs	r3, #0
 800b668:	6013      	str	r3, [r2, #0]
 800b66a:	2750      	movs	r7, #80	; 0x50
 800b66c:	e713      	b.n	800b496 <__gethex+0x12a>
 800b66e:	bf00      	nop
 800b670:	0800e9a0 	.word	0x0800e9a0
 800b674:	0800e924 	.word	0x0800e924
 800b678:	0800e935 	.word	0x0800e935
 800b67c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b67e:	2b00      	cmp	r3, #0
 800b680:	d1eb      	bne.n	800b65a <__gethex+0x2ee>
 800b682:	e7d8      	b.n	800b636 <__gethex+0x2ca>
 800b684:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b686:	2b00      	cmp	r3, #0
 800b688:	d1d5      	bne.n	800b636 <__gethex+0x2ca>
 800b68a:	e7e6      	b.n	800b65a <__gethex+0x2ee>
 800b68c:	1e6f      	subs	r7, r5, #1
 800b68e:	f1ba 0f00 	cmp.w	sl, #0
 800b692:	d131      	bne.n	800b6f8 <__gethex+0x38c>
 800b694:	b127      	cbz	r7, 800b6a0 <__gethex+0x334>
 800b696:	4639      	mov	r1, r7
 800b698:	4620      	mov	r0, r4
 800b69a:	f000 fe48 	bl	800c32e <__any_on>
 800b69e:	4682      	mov	sl, r0
 800b6a0:	117b      	asrs	r3, r7, #5
 800b6a2:	2101      	movs	r1, #1
 800b6a4:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800b6a8:	f007 071f 	and.w	r7, r7, #31
 800b6ac:	fa01 f707 	lsl.w	r7, r1, r7
 800b6b0:	421f      	tst	r7, r3
 800b6b2:	4629      	mov	r1, r5
 800b6b4:	4620      	mov	r0, r4
 800b6b6:	bf18      	it	ne
 800b6b8:	f04a 0a02 	orrne.w	sl, sl, #2
 800b6bc:	1b76      	subs	r6, r6, r5
 800b6be:	f7ff fded 	bl	800b29c <rshift>
 800b6c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800b6c6:	2702      	movs	r7, #2
 800b6c8:	f1ba 0f00 	cmp.w	sl, #0
 800b6cc:	d048      	beq.n	800b760 <__gethex+0x3f4>
 800b6ce:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b6d2:	2b02      	cmp	r3, #2
 800b6d4:	d015      	beq.n	800b702 <__gethex+0x396>
 800b6d6:	2b03      	cmp	r3, #3
 800b6d8:	d017      	beq.n	800b70a <__gethex+0x39e>
 800b6da:	2b01      	cmp	r3, #1
 800b6dc:	d109      	bne.n	800b6f2 <__gethex+0x386>
 800b6de:	f01a 0f02 	tst.w	sl, #2
 800b6e2:	d006      	beq.n	800b6f2 <__gethex+0x386>
 800b6e4:	f8d9 0000 	ldr.w	r0, [r9]
 800b6e8:	ea4a 0a00 	orr.w	sl, sl, r0
 800b6ec:	f01a 0f01 	tst.w	sl, #1
 800b6f0:	d10e      	bne.n	800b710 <__gethex+0x3a4>
 800b6f2:	f047 0710 	orr.w	r7, r7, #16
 800b6f6:	e033      	b.n	800b760 <__gethex+0x3f4>
 800b6f8:	f04f 0a01 	mov.w	sl, #1
 800b6fc:	e7d0      	b.n	800b6a0 <__gethex+0x334>
 800b6fe:	2701      	movs	r7, #1
 800b700:	e7e2      	b.n	800b6c8 <__gethex+0x35c>
 800b702:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b704:	f1c3 0301 	rsb	r3, r3, #1
 800b708:	9315      	str	r3, [sp, #84]	; 0x54
 800b70a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b70c:	2b00      	cmp	r3, #0
 800b70e:	d0f0      	beq.n	800b6f2 <__gethex+0x386>
 800b710:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800b714:	f104 0314 	add.w	r3, r4, #20
 800b718:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800b71c:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800b720:	f04f 0c00 	mov.w	ip, #0
 800b724:	4618      	mov	r0, r3
 800b726:	f853 2b04 	ldr.w	r2, [r3], #4
 800b72a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800b72e:	d01c      	beq.n	800b76a <__gethex+0x3fe>
 800b730:	3201      	adds	r2, #1
 800b732:	6002      	str	r2, [r0, #0]
 800b734:	2f02      	cmp	r7, #2
 800b736:	f104 0314 	add.w	r3, r4, #20
 800b73a:	d13f      	bne.n	800b7bc <__gethex+0x450>
 800b73c:	f8d8 2000 	ldr.w	r2, [r8]
 800b740:	3a01      	subs	r2, #1
 800b742:	42b2      	cmp	r2, r6
 800b744:	d10a      	bne.n	800b75c <__gethex+0x3f0>
 800b746:	1171      	asrs	r1, r6, #5
 800b748:	2201      	movs	r2, #1
 800b74a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b74e:	f006 061f 	and.w	r6, r6, #31
 800b752:	fa02 f606 	lsl.w	r6, r2, r6
 800b756:	421e      	tst	r6, r3
 800b758:	bf18      	it	ne
 800b75a:	4617      	movne	r7, r2
 800b75c:	f047 0720 	orr.w	r7, r7, #32
 800b760:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800b762:	601c      	str	r4, [r3, #0]
 800b764:	9b04      	ldr	r3, [sp, #16]
 800b766:	601d      	str	r5, [r3, #0]
 800b768:	e695      	b.n	800b496 <__gethex+0x12a>
 800b76a:	4299      	cmp	r1, r3
 800b76c:	f843 cc04 	str.w	ip, [r3, #-4]
 800b770:	d8d8      	bhi.n	800b724 <__gethex+0x3b8>
 800b772:	68a3      	ldr	r3, [r4, #8]
 800b774:	459b      	cmp	fp, r3
 800b776:	db19      	blt.n	800b7ac <__gethex+0x440>
 800b778:	6861      	ldr	r1, [r4, #4]
 800b77a:	ee18 0a10 	vmov	r0, s16
 800b77e:	3101      	adds	r1, #1
 800b780:	f000 f93a 	bl	800b9f8 <_Balloc>
 800b784:	4681      	mov	r9, r0
 800b786:	b918      	cbnz	r0, 800b790 <__gethex+0x424>
 800b788:	4b1a      	ldr	r3, [pc, #104]	; (800b7f4 <__gethex+0x488>)
 800b78a:	4602      	mov	r2, r0
 800b78c:	2184      	movs	r1, #132	; 0x84
 800b78e:	e6a8      	b.n	800b4e2 <__gethex+0x176>
 800b790:	6922      	ldr	r2, [r4, #16]
 800b792:	3202      	adds	r2, #2
 800b794:	f104 010c 	add.w	r1, r4, #12
 800b798:	0092      	lsls	r2, r2, #2
 800b79a:	300c      	adds	r0, #12
 800b79c:	f000 f91e 	bl	800b9dc <memcpy>
 800b7a0:	4621      	mov	r1, r4
 800b7a2:	ee18 0a10 	vmov	r0, s16
 800b7a6:	f000 f967 	bl	800ba78 <_Bfree>
 800b7aa:	464c      	mov	r4, r9
 800b7ac:	6923      	ldr	r3, [r4, #16]
 800b7ae:	1c5a      	adds	r2, r3, #1
 800b7b0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800b7b4:	6122      	str	r2, [r4, #16]
 800b7b6:	2201      	movs	r2, #1
 800b7b8:	615a      	str	r2, [r3, #20]
 800b7ba:	e7bb      	b.n	800b734 <__gethex+0x3c8>
 800b7bc:	6922      	ldr	r2, [r4, #16]
 800b7be:	455a      	cmp	r2, fp
 800b7c0:	dd0b      	ble.n	800b7da <__gethex+0x46e>
 800b7c2:	2101      	movs	r1, #1
 800b7c4:	4620      	mov	r0, r4
 800b7c6:	f7ff fd69 	bl	800b29c <rshift>
 800b7ca:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b7ce:	3501      	adds	r5, #1
 800b7d0:	42ab      	cmp	r3, r5
 800b7d2:	f6ff aed0 	blt.w	800b576 <__gethex+0x20a>
 800b7d6:	2701      	movs	r7, #1
 800b7d8:	e7c0      	b.n	800b75c <__gethex+0x3f0>
 800b7da:	f016 061f 	ands.w	r6, r6, #31
 800b7de:	d0fa      	beq.n	800b7d6 <__gethex+0x46a>
 800b7e0:	449a      	add	sl, r3
 800b7e2:	f1c6 0620 	rsb	r6, r6, #32
 800b7e6:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 800b7ea:	f000 f9fb 	bl	800bbe4 <__hi0bits>
 800b7ee:	42b0      	cmp	r0, r6
 800b7f0:	dbe7      	blt.n	800b7c2 <__gethex+0x456>
 800b7f2:	e7f0      	b.n	800b7d6 <__gethex+0x46a>
 800b7f4:	0800e924 	.word	0x0800e924

0800b7f8 <L_shift>:
 800b7f8:	f1c2 0208 	rsb	r2, r2, #8
 800b7fc:	0092      	lsls	r2, r2, #2
 800b7fe:	b570      	push	{r4, r5, r6, lr}
 800b800:	f1c2 0620 	rsb	r6, r2, #32
 800b804:	6843      	ldr	r3, [r0, #4]
 800b806:	6804      	ldr	r4, [r0, #0]
 800b808:	fa03 f506 	lsl.w	r5, r3, r6
 800b80c:	432c      	orrs	r4, r5
 800b80e:	40d3      	lsrs	r3, r2
 800b810:	6004      	str	r4, [r0, #0]
 800b812:	f840 3f04 	str.w	r3, [r0, #4]!
 800b816:	4288      	cmp	r0, r1
 800b818:	d3f4      	bcc.n	800b804 <L_shift+0xc>
 800b81a:	bd70      	pop	{r4, r5, r6, pc}

0800b81c <__match>:
 800b81c:	b530      	push	{r4, r5, lr}
 800b81e:	6803      	ldr	r3, [r0, #0]
 800b820:	3301      	adds	r3, #1
 800b822:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b826:	b914      	cbnz	r4, 800b82e <__match+0x12>
 800b828:	6003      	str	r3, [r0, #0]
 800b82a:	2001      	movs	r0, #1
 800b82c:	bd30      	pop	{r4, r5, pc}
 800b82e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b832:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800b836:	2d19      	cmp	r5, #25
 800b838:	bf98      	it	ls
 800b83a:	3220      	addls	r2, #32
 800b83c:	42a2      	cmp	r2, r4
 800b83e:	d0f0      	beq.n	800b822 <__match+0x6>
 800b840:	2000      	movs	r0, #0
 800b842:	e7f3      	b.n	800b82c <__match+0x10>

0800b844 <__hexnan>:
 800b844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b848:	680b      	ldr	r3, [r1, #0]
 800b84a:	6801      	ldr	r1, [r0, #0]
 800b84c:	115e      	asrs	r6, r3, #5
 800b84e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800b852:	f013 031f 	ands.w	r3, r3, #31
 800b856:	b087      	sub	sp, #28
 800b858:	bf18      	it	ne
 800b85a:	3604      	addne	r6, #4
 800b85c:	2500      	movs	r5, #0
 800b85e:	1f37      	subs	r7, r6, #4
 800b860:	4682      	mov	sl, r0
 800b862:	4690      	mov	r8, r2
 800b864:	9301      	str	r3, [sp, #4]
 800b866:	f846 5c04 	str.w	r5, [r6, #-4]
 800b86a:	46b9      	mov	r9, r7
 800b86c:	463c      	mov	r4, r7
 800b86e:	9502      	str	r5, [sp, #8]
 800b870:	46ab      	mov	fp, r5
 800b872:	784a      	ldrb	r2, [r1, #1]
 800b874:	1c4b      	adds	r3, r1, #1
 800b876:	9303      	str	r3, [sp, #12]
 800b878:	b342      	cbz	r2, 800b8cc <__hexnan+0x88>
 800b87a:	4610      	mov	r0, r2
 800b87c:	9105      	str	r1, [sp, #20]
 800b87e:	9204      	str	r2, [sp, #16]
 800b880:	f7ff fd5e 	bl	800b340 <__hexdig_fun>
 800b884:	2800      	cmp	r0, #0
 800b886:	d14f      	bne.n	800b928 <__hexnan+0xe4>
 800b888:	9a04      	ldr	r2, [sp, #16]
 800b88a:	9905      	ldr	r1, [sp, #20]
 800b88c:	2a20      	cmp	r2, #32
 800b88e:	d818      	bhi.n	800b8c2 <__hexnan+0x7e>
 800b890:	9b02      	ldr	r3, [sp, #8]
 800b892:	459b      	cmp	fp, r3
 800b894:	dd13      	ble.n	800b8be <__hexnan+0x7a>
 800b896:	454c      	cmp	r4, r9
 800b898:	d206      	bcs.n	800b8a8 <__hexnan+0x64>
 800b89a:	2d07      	cmp	r5, #7
 800b89c:	dc04      	bgt.n	800b8a8 <__hexnan+0x64>
 800b89e:	462a      	mov	r2, r5
 800b8a0:	4649      	mov	r1, r9
 800b8a2:	4620      	mov	r0, r4
 800b8a4:	f7ff ffa8 	bl	800b7f8 <L_shift>
 800b8a8:	4544      	cmp	r4, r8
 800b8aa:	d950      	bls.n	800b94e <__hexnan+0x10a>
 800b8ac:	2300      	movs	r3, #0
 800b8ae:	f1a4 0904 	sub.w	r9, r4, #4
 800b8b2:	f844 3c04 	str.w	r3, [r4, #-4]
 800b8b6:	f8cd b008 	str.w	fp, [sp, #8]
 800b8ba:	464c      	mov	r4, r9
 800b8bc:	461d      	mov	r5, r3
 800b8be:	9903      	ldr	r1, [sp, #12]
 800b8c0:	e7d7      	b.n	800b872 <__hexnan+0x2e>
 800b8c2:	2a29      	cmp	r2, #41	; 0x29
 800b8c4:	d156      	bne.n	800b974 <__hexnan+0x130>
 800b8c6:	3102      	adds	r1, #2
 800b8c8:	f8ca 1000 	str.w	r1, [sl]
 800b8cc:	f1bb 0f00 	cmp.w	fp, #0
 800b8d0:	d050      	beq.n	800b974 <__hexnan+0x130>
 800b8d2:	454c      	cmp	r4, r9
 800b8d4:	d206      	bcs.n	800b8e4 <__hexnan+0xa0>
 800b8d6:	2d07      	cmp	r5, #7
 800b8d8:	dc04      	bgt.n	800b8e4 <__hexnan+0xa0>
 800b8da:	462a      	mov	r2, r5
 800b8dc:	4649      	mov	r1, r9
 800b8de:	4620      	mov	r0, r4
 800b8e0:	f7ff ff8a 	bl	800b7f8 <L_shift>
 800b8e4:	4544      	cmp	r4, r8
 800b8e6:	d934      	bls.n	800b952 <__hexnan+0x10e>
 800b8e8:	f1a8 0204 	sub.w	r2, r8, #4
 800b8ec:	4623      	mov	r3, r4
 800b8ee:	f853 1b04 	ldr.w	r1, [r3], #4
 800b8f2:	f842 1f04 	str.w	r1, [r2, #4]!
 800b8f6:	429f      	cmp	r7, r3
 800b8f8:	d2f9      	bcs.n	800b8ee <__hexnan+0xaa>
 800b8fa:	1b3b      	subs	r3, r7, r4
 800b8fc:	f023 0303 	bic.w	r3, r3, #3
 800b900:	3304      	adds	r3, #4
 800b902:	3401      	adds	r4, #1
 800b904:	3e03      	subs	r6, #3
 800b906:	42b4      	cmp	r4, r6
 800b908:	bf88      	it	hi
 800b90a:	2304      	movhi	r3, #4
 800b90c:	4443      	add	r3, r8
 800b90e:	2200      	movs	r2, #0
 800b910:	f843 2b04 	str.w	r2, [r3], #4
 800b914:	429f      	cmp	r7, r3
 800b916:	d2fb      	bcs.n	800b910 <__hexnan+0xcc>
 800b918:	683b      	ldr	r3, [r7, #0]
 800b91a:	b91b      	cbnz	r3, 800b924 <__hexnan+0xe0>
 800b91c:	4547      	cmp	r7, r8
 800b91e:	d127      	bne.n	800b970 <__hexnan+0x12c>
 800b920:	2301      	movs	r3, #1
 800b922:	603b      	str	r3, [r7, #0]
 800b924:	2005      	movs	r0, #5
 800b926:	e026      	b.n	800b976 <__hexnan+0x132>
 800b928:	3501      	adds	r5, #1
 800b92a:	2d08      	cmp	r5, #8
 800b92c:	f10b 0b01 	add.w	fp, fp, #1
 800b930:	dd06      	ble.n	800b940 <__hexnan+0xfc>
 800b932:	4544      	cmp	r4, r8
 800b934:	d9c3      	bls.n	800b8be <__hexnan+0x7a>
 800b936:	2300      	movs	r3, #0
 800b938:	f844 3c04 	str.w	r3, [r4, #-4]
 800b93c:	2501      	movs	r5, #1
 800b93e:	3c04      	subs	r4, #4
 800b940:	6822      	ldr	r2, [r4, #0]
 800b942:	f000 000f 	and.w	r0, r0, #15
 800b946:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800b94a:	6022      	str	r2, [r4, #0]
 800b94c:	e7b7      	b.n	800b8be <__hexnan+0x7a>
 800b94e:	2508      	movs	r5, #8
 800b950:	e7b5      	b.n	800b8be <__hexnan+0x7a>
 800b952:	9b01      	ldr	r3, [sp, #4]
 800b954:	2b00      	cmp	r3, #0
 800b956:	d0df      	beq.n	800b918 <__hexnan+0xd4>
 800b958:	f04f 32ff 	mov.w	r2, #4294967295
 800b95c:	f1c3 0320 	rsb	r3, r3, #32
 800b960:	fa22 f303 	lsr.w	r3, r2, r3
 800b964:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800b968:	401a      	ands	r2, r3
 800b96a:	f846 2c04 	str.w	r2, [r6, #-4]
 800b96e:	e7d3      	b.n	800b918 <__hexnan+0xd4>
 800b970:	3f04      	subs	r7, #4
 800b972:	e7d1      	b.n	800b918 <__hexnan+0xd4>
 800b974:	2004      	movs	r0, #4
 800b976:	b007      	add	sp, #28
 800b978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b97c <_localeconv_r>:
 800b97c:	4800      	ldr	r0, [pc, #0]	; (800b980 <_localeconv_r+0x4>)
 800b97e:	4770      	bx	lr
 800b980:	2000026c 	.word	0x2000026c

0800b984 <_lseek_r>:
 800b984:	b538      	push	{r3, r4, r5, lr}
 800b986:	4d07      	ldr	r5, [pc, #28]	; (800b9a4 <_lseek_r+0x20>)
 800b988:	4604      	mov	r4, r0
 800b98a:	4608      	mov	r0, r1
 800b98c:	4611      	mov	r1, r2
 800b98e:	2200      	movs	r2, #0
 800b990:	602a      	str	r2, [r5, #0]
 800b992:	461a      	mov	r2, r3
 800b994:	f7f7 fa7e 	bl	8002e94 <_lseek>
 800b998:	1c43      	adds	r3, r0, #1
 800b99a:	d102      	bne.n	800b9a2 <_lseek_r+0x1e>
 800b99c:	682b      	ldr	r3, [r5, #0]
 800b99e:	b103      	cbz	r3, 800b9a2 <_lseek_r+0x1e>
 800b9a0:	6023      	str	r3, [r4, #0]
 800b9a2:	bd38      	pop	{r3, r4, r5, pc}
 800b9a4:	200187bc 	.word	0x200187bc

0800b9a8 <malloc>:
 800b9a8:	4b02      	ldr	r3, [pc, #8]	; (800b9b4 <malloc+0xc>)
 800b9aa:	4601      	mov	r1, r0
 800b9ac:	6818      	ldr	r0, [r3, #0]
 800b9ae:	f000 bd3f 	b.w	800c430 <_malloc_r>
 800b9b2:	bf00      	nop
 800b9b4:	20000114 	.word	0x20000114

0800b9b8 <__ascii_mbtowc>:
 800b9b8:	b082      	sub	sp, #8
 800b9ba:	b901      	cbnz	r1, 800b9be <__ascii_mbtowc+0x6>
 800b9bc:	a901      	add	r1, sp, #4
 800b9be:	b142      	cbz	r2, 800b9d2 <__ascii_mbtowc+0x1a>
 800b9c0:	b14b      	cbz	r3, 800b9d6 <__ascii_mbtowc+0x1e>
 800b9c2:	7813      	ldrb	r3, [r2, #0]
 800b9c4:	600b      	str	r3, [r1, #0]
 800b9c6:	7812      	ldrb	r2, [r2, #0]
 800b9c8:	1e10      	subs	r0, r2, #0
 800b9ca:	bf18      	it	ne
 800b9cc:	2001      	movne	r0, #1
 800b9ce:	b002      	add	sp, #8
 800b9d0:	4770      	bx	lr
 800b9d2:	4610      	mov	r0, r2
 800b9d4:	e7fb      	b.n	800b9ce <__ascii_mbtowc+0x16>
 800b9d6:	f06f 0001 	mvn.w	r0, #1
 800b9da:	e7f8      	b.n	800b9ce <__ascii_mbtowc+0x16>

0800b9dc <memcpy>:
 800b9dc:	440a      	add	r2, r1
 800b9de:	4291      	cmp	r1, r2
 800b9e0:	f100 33ff 	add.w	r3, r0, #4294967295
 800b9e4:	d100      	bne.n	800b9e8 <memcpy+0xc>
 800b9e6:	4770      	bx	lr
 800b9e8:	b510      	push	{r4, lr}
 800b9ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b9ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b9f2:	4291      	cmp	r1, r2
 800b9f4:	d1f9      	bne.n	800b9ea <memcpy+0xe>
 800b9f6:	bd10      	pop	{r4, pc}

0800b9f8 <_Balloc>:
 800b9f8:	b570      	push	{r4, r5, r6, lr}
 800b9fa:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800b9fc:	4604      	mov	r4, r0
 800b9fe:	460d      	mov	r5, r1
 800ba00:	b976      	cbnz	r6, 800ba20 <_Balloc+0x28>
 800ba02:	2010      	movs	r0, #16
 800ba04:	f7ff ffd0 	bl	800b9a8 <malloc>
 800ba08:	4602      	mov	r2, r0
 800ba0a:	6260      	str	r0, [r4, #36]	; 0x24
 800ba0c:	b920      	cbnz	r0, 800ba18 <_Balloc+0x20>
 800ba0e:	4b18      	ldr	r3, [pc, #96]	; (800ba70 <_Balloc+0x78>)
 800ba10:	4818      	ldr	r0, [pc, #96]	; (800ba74 <_Balloc+0x7c>)
 800ba12:	2166      	movs	r1, #102	; 0x66
 800ba14:	f001 fb0c 	bl	800d030 <__assert_func>
 800ba18:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ba1c:	6006      	str	r6, [r0, #0]
 800ba1e:	60c6      	str	r6, [r0, #12]
 800ba20:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800ba22:	68f3      	ldr	r3, [r6, #12]
 800ba24:	b183      	cbz	r3, 800ba48 <_Balloc+0x50>
 800ba26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ba28:	68db      	ldr	r3, [r3, #12]
 800ba2a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800ba2e:	b9b8      	cbnz	r0, 800ba60 <_Balloc+0x68>
 800ba30:	2101      	movs	r1, #1
 800ba32:	fa01 f605 	lsl.w	r6, r1, r5
 800ba36:	1d72      	adds	r2, r6, #5
 800ba38:	0092      	lsls	r2, r2, #2
 800ba3a:	4620      	mov	r0, r4
 800ba3c:	f000 fc98 	bl	800c370 <_calloc_r>
 800ba40:	b160      	cbz	r0, 800ba5c <_Balloc+0x64>
 800ba42:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800ba46:	e00e      	b.n	800ba66 <_Balloc+0x6e>
 800ba48:	2221      	movs	r2, #33	; 0x21
 800ba4a:	2104      	movs	r1, #4
 800ba4c:	4620      	mov	r0, r4
 800ba4e:	f000 fc8f 	bl	800c370 <_calloc_r>
 800ba52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ba54:	60f0      	str	r0, [r6, #12]
 800ba56:	68db      	ldr	r3, [r3, #12]
 800ba58:	2b00      	cmp	r3, #0
 800ba5a:	d1e4      	bne.n	800ba26 <_Balloc+0x2e>
 800ba5c:	2000      	movs	r0, #0
 800ba5e:	bd70      	pop	{r4, r5, r6, pc}
 800ba60:	6802      	ldr	r2, [r0, #0]
 800ba62:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800ba66:	2300      	movs	r3, #0
 800ba68:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ba6c:	e7f7      	b.n	800ba5e <_Balloc+0x66>
 800ba6e:	bf00      	nop
 800ba70:	0800e8ae 	.word	0x0800e8ae
 800ba74:	0800e9b4 	.word	0x0800e9b4

0800ba78 <_Bfree>:
 800ba78:	b570      	push	{r4, r5, r6, lr}
 800ba7a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800ba7c:	4605      	mov	r5, r0
 800ba7e:	460c      	mov	r4, r1
 800ba80:	b976      	cbnz	r6, 800baa0 <_Bfree+0x28>
 800ba82:	2010      	movs	r0, #16
 800ba84:	f7ff ff90 	bl	800b9a8 <malloc>
 800ba88:	4602      	mov	r2, r0
 800ba8a:	6268      	str	r0, [r5, #36]	; 0x24
 800ba8c:	b920      	cbnz	r0, 800ba98 <_Bfree+0x20>
 800ba8e:	4b09      	ldr	r3, [pc, #36]	; (800bab4 <_Bfree+0x3c>)
 800ba90:	4809      	ldr	r0, [pc, #36]	; (800bab8 <_Bfree+0x40>)
 800ba92:	218a      	movs	r1, #138	; 0x8a
 800ba94:	f001 facc 	bl	800d030 <__assert_func>
 800ba98:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ba9c:	6006      	str	r6, [r0, #0]
 800ba9e:	60c6      	str	r6, [r0, #12]
 800baa0:	b13c      	cbz	r4, 800bab2 <_Bfree+0x3a>
 800baa2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800baa4:	6862      	ldr	r2, [r4, #4]
 800baa6:	68db      	ldr	r3, [r3, #12]
 800baa8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800baac:	6021      	str	r1, [r4, #0]
 800baae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800bab2:	bd70      	pop	{r4, r5, r6, pc}
 800bab4:	0800e8ae 	.word	0x0800e8ae
 800bab8:	0800e9b4 	.word	0x0800e9b4

0800babc <__multadd>:
 800babc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bac0:	690e      	ldr	r6, [r1, #16]
 800bac2:	4607      	mov	r7, r0
 800bac4:	4698      	mov	r8, r3
 800bac6:	460c      	mov	r4, r1
 800bac8:	f101 0014 	add.w	r0, r1, #20
 800bacc:	2300      	movs	r3, #0
 800bace:	6805      	ldr	r5, [r0, #0]
 800bad0:	b2a9      	uxth	r1, r5
 800bad2:	fb02 8101 	mla	r1, r2, r1, r8
 800bad6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 800bada:	0c2d      	lsrs	r5, r5, #16
 800badc:	fb02 c505 	mla	r5, r2, r5, ip
 800bae0:	b289      	uxth	r1, r1
 800bae2:	3301      	adds	r3, #1
 800bae4:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 800bae8:	429e      	cmp	r6, r3
 800baea:	f840 1b04 	str.w	r1, [r0], #4
 800baee:	ea4f 4815 	mov.w	r8, r5, lsr #16
 800baf2:	dcec      	bgt.n	800bace <__multadd+0x12>
 800baf4:	f1b8 0f00 	cmp.w	r8, #0
 800baf8:	d022      	beq.n	800bb40 <__multadd+0x84>
 800bafa:	68a3      	ldr	r3, [r4, #8]
 800bafc:	42b3      	cmp	r3, r6
 800bafe:	dc19      	bgt.n	800bb34 <__multadd+0x78>
 800bb00:	6861      	ldr	r1, [r4, #4]
 800bb02:	4638      	mov	r0, r7
 800bb04:	3101      	adds	r1, #1
 800bb06:	f7ff ff77 	bl	800b9f8 <_Balloc>
 800bb0a:	4605      	mov	r5, r0
 800bb0c:	b928      	cbnz	r0, 800bb1a <__multadd+0x5e>
 800bb0e:	4602      	mov	r2, r0
 800bb10:	4b0d      	ldr	r3, [pc, #52]	; (800bb48 <__multadd+0x8c>)
 800bb12:	480e      	ldr	r0, [pc, #56]	; (800bb4c <__multadd+0x90>)
 800bb14:	21b5      	movs	r1, #181	; 0xb5
 800bb16:	f001 fa8b 	bl	800d030 <__assert_func>
 800bb1a:	6922      	ldr	r2, [r4, #16]
 800bb1c:	3202      	adds	r2, #2
 800bb1e:	f104 010c 	add.w	r1, r4, #12
 800bb22:	0092      	lsls	r2, r2, #2
 800bb24:	300c      	adds	r0, #12
 800bb26:	f7ff ff59 	bl	800b9dc <memcpy>
 800bb2a:	4621      	mov	r1, r4
 800bb2c:	4638      	mov	r0, r7
 800bb2e:	f7ff ffa3 	bl	800ba78 <_Bfree>
 800bb32:	462c      	mov	r4, r5
 800bb34:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 800bb38:	3601      	adds	r6, #1
 800bb3a:	f8c3 8014 	str.w	r8, [r3, #20]
 800bb3e:	6126      	str	r6, [r4, #16]
 800bb40:	4620      	mov	r0, r4
 800bb42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb46:	bf00      	nop
 800bb48:	0800e924 	.word	0x0800e924
 800bb4c:	0800e9b4 	.word	0x0800e9b4

0800bb50 <__s2b>:
 800bb50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bb54:	460c      	mov	r4, r1
 800bb56:	4615      	mov	r5, r2
 800bb58:	461f      	mov	r7, r3
 800bb5a:	2209      	movs	r2, #9
 800bb5c:	3308      	adds	r3, #8
 800bb5e:	4606      	mov	r6, r0
 800bb60:	fb93 f3f2 	sdiv	r3, r3, r2
 800bb64:	2100      	movs	r1, #0
 800bb66:	2201      	movs	r2, #1
 800bb68:	429a      	cmp	r2, r3
 800bb6a:	db09      	blt.n	800bb80 <__s2b+0x30>
 800bb6c:	4630      	mov	r0, r6
 800bb6e:	f7ff ff43 	bl	800b9f8 <_Balloc>
 800bb72:	b940      	cbnz	r0, 800bb86 <__s2b+0x36>
 800bb74:	4602      	mov	r2, r0
 800bb76:	4b19      	ldr	r3, [pc, #100]	; (800bbdc <__s2b+0x8c>)
 800bb78:	4819      	ldr	r0, [pc, #100]	; (800bbe0 <__s2b+0x90>)
 800bb7a:	21ce      	movs	r1, #206	; 0xce
 800bb7c:	f001 fa58 	bl	800d030 <__assert_func>
 800bb80:	0052      	lsls	r2, r2, #1
 800bb82:	3101      	adds	r1, #1
 800bb84:	e7f0      	b.n	800bb68 <__s2b+0x18>
 800bb86:	9b08      	ldr	r3, [sp, #32]
 800bb88:	6143      	str	r3, [r0, #20]
 800bb8a:	2d09      	cmp	r5, #9
 800bb8c:	f04f 0301 	mov.w	r3, #1
 800bb90:	6103      	str	r3, [r0, #16]
 800bb92:	dd16      	ble.n	800bbc2 <__s2b+0x72>
 800bb94:	f104 0909 	add.w	r9, r4, #9
 800bb98:	46c8      	mov	r8, r9
 800bb9a:	442c      	add	r4, r5
 800bb9c:	f818 3b01 	ldrb.w	r3, [r8], #1
 800bba0:	4601      	mov	r1, r0
 800bba2:	3b30      	subs	r3, #48	; 0x30
 800bba4:	220a      	movs	r2, #10
 800bba6:	4630      	mov	r0, r6
 800bba8:	f7ff ff88 	bl	800babc <__multadd>
 800bbac:	45a0      	cmp	r8, r4
 800bbae:	d1f5      	bne.n	800bb9c <__s2b+0x4c>
 800bbb0:	f1a5 0408 	sub.w	r4, r5, #8
 800bbb4:	444c      	add	r4, r9
 800bbb6:	1b2d      	subs	r5, r5, r4
 800bbb8:	1963      	adds	r3, r4, r5
 800bbba:	42bb      	cmp	r3, r7
 800bbbc:	db04      	blt.n	800bbc8 <__s2b+0x78>
 800bbbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bbc2:	340a      	adds	r4, #10
 800bbc4:	2509      	movs	r5, #9
 800bbc6:	e7f6      	b.n	800bbb6 <__s2b+0x66>
 800bbc8:	f814 3b01 	ldrb.w	r3, [r4], #1
 800bbcc:	4601      	mov	r1, r0
 800bbce:	3b30      	subs	r3, #48	; 0x30
 800bbd0:	220a      	movs	r2, #10
 800bbd2:	4630      	mov	r0, r6
 800bbd4:	f7ff ff72 	bl	800babc <__multadd>
 800bbd8:	e7ee      	b.n	800bbb8 <__s2b+0x68>
 800bbda:	bf00      	nop
 800bbdc:	0800e924 	.word	0x0800e924
 800bbe0:	0800e9b4 	.word	0x0800e9b4

0800bbe4 <__hi0bits>:
 800bbe4:	0c03      	lsrs	r3, r0, #16
 800bbe6:	041b      	lsls	r3, r3, #16
 800bbe8:	b9d3      	cbnz	r3, 800bc20 <__hi0bits+0x3c>
 800bbea:	0400      	lsls	r0, r0, #16
 800bbec:	2310      	movs	r3, #16
 800bbee:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800bbf2:	bf04      	itt	eq
 800bbf4:	0200      	lsleq	r0, r0, #8
 800bbf6:	3308      	addeq	r3, #8
 800bbf8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800bbfc:	bf04      	itt	eq
 800bbfe:	0100      	lsleq	r0, r0, #4
 800bc00:	3304      	addeq	r3, #4
 800bc02:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800bc06:	bf04      	itt	eq
 800bc08:	0080      	lsleq	r0, r0, #2
 800bc0a:	3302      	addeq	r3, #2
 800bc0c:	2800      	cmp	r0, #0
 800bc0e:	db05      	blt.n	800bc1c <__hi0bits+0x38>
 800bc10:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800bc14:	f103 0301 	add.w	r3, r3, #1
 800bc18:	bf08      	it	eq
 800bc1a:	2320      	moveq	r3, #32
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	4770      	bx	lr
 800bc20:	2300      	movs	r3, #0
 800bc22:	e7e4      	b.n	800bbee <__hi0bits+0xa>

0800bc24 <__lo0bits>:
 800bc24:	6803      	ldr	r3, [r0, #0]
 800bc26:	f013 0207 	ands.w	r2, r3, #7
 800bc2a:	4601      	mov	r1, r0
 800bc2c:	d00b      	beq.n	800bc46 <__lo0bits+0x22>
 800bc2e:	07da      	lsls	r2, r3, #31
 800bc30:	d424      	bmi.n	800bc7c <__lo0bits+0x58>
 800bc32:	0798      	lsls	r0, r3, #30
 800bc34:	bf49      	itett	mi
 800bc36:	085b      	lsrmi	r3, r3, #1
 800bc38:	089b      	lsrpl	r3, r3, #2
 800bc3a:	2001      	movmi	r0, #1
 800bc3c:	600b      	strmi	r3, [r1, #0]
 800bc3e:	bf5c      	itt	pl
 800bc40:	600b      	strpl	r3, [r1, #0]
 800bc42:	2002      	movpl	r0, #2
 800bc44:	4770      	bx	lr
 800bc46:	b298      	uxth	r0, r3
 800bc48:	b9b0      	cbnz	r0, 800bc78 <__lo0bits+0x54>
 800bc4a:	0c1b      	lsrs	r3, r3, #16
 800bc4c:	2010      	movs	r0, #16
 800bc4e:	f013 0fff 	tst.w	r3, #255	; 0xff
 800bc52:	bf04      	itt	eq
 800bc54:	0a1b      	lsreq	r3, r3, #8
 800bc56:	3008      	addeq	r0, #8
 800bc58:	071a      	lsls	r2, r3, #28
 800bc5a:	bf04      	itt	eq
 800bc5c:	091b      	lsreq	r3, r3, #4
 800bc5e:	3004      	addeq	r0, #4
 800bc60:	079a      	lsls	r2, r3, #30
 800bc62:	bf04      	itt	eq
 800bc64:	089b      	lsreq	r3, r3, #2
 800bc66:	3002      	addeq	r0, #2
 800bc68:	07da      	lsls	r2, r3, #31
 800bc6a:	d403      	bmi.n	800bc74 <__lo0bits+0x50>
 800bc6c:	085b      	lsrs	r3, r3, #1
 800bc6e:	f100 0001 	add.w	r0, r0, #1
 800bc72:	d005      	beq.n	800bc80 <__lo0bits+0x5c>
 800bc74:	600b      	str	r3, [r1, #0]
 800bc76:	4770      	bx	lr
 800bc78:	4610      	mov	r0, r2
 800bc7a:	e7e8      	b.n	800bc4e <__lo0bits+0x2a>
 800bc7c:	2000      	movs	r0, #0
 800bc7e:	4770      	bx	lr
 800bc80:	2020      	movs	r0, #32
 800bc82:	4770      	bx	lr

0800bc84 <__i2b>:
 800bc84:	b510      	push	{r4, lr}
 800bc86:	460c      	mov	r4, r1
 800bc88:	2101      	movs	r1, #1
 800bc8a:	f7ff feb5 	bl	800b9f8 <_Balloc>
 800bc8e:	4602      	mov	r2, r0
 800bc90:	b928      	cbnz	r0, 800bc9e <__i2b+0x1a>
 800bc92:	4b05      	ldr	r3, [pc, #20]	; (800bca8 <__i2b+0x24>)
 800bc94:	4805      	ldr	r0, [pc, #20]	; (800bcac <__i2b+0x28>)
 800bc96:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800bc9a:	f001 f9c9 	bl	800d030 <__assert_func>
 800bc9e:	2301      	movs	r3, #1
 800bca0:	6144      	str	r4, [r0, #20]
 800bca2:	6103      	str	r3, [r0, #16]
 800bca4:	bd10      	pop	{r4, pc}
 800bca6:	bf00      	nop
 800bca8:	0800e924 	.word	0x0800e924
 800bcac:	0800e9b4 	.word	0x0800e9b4

0800bcb0 <__multiply>:
 800bcb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcb4:	4614      	mov	r4, r2
 800bcb6:	690a      	ldr	r2, [r1, #16]
 800bcb8:	6923      	ldr	r3, [r4, #16]
 800bcba:	429a      	cmp	r2, r3
 800bcbc:	bfb8      	it	lt
 800bcbe:	460b      	movlt	r3, r1
 800bcc0:	460d      	mov	r5, r1
 800bcc2:	bfbc      	itt	lt
 800bcc4:	4625      	movlt	r5, r4
 800bcc6:	461c      	movlt	r4, r3
 800bcc8:	f8d5 a010 	ldr.w	sl, [r5, #16]
 800bccc:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800bcd0:	68ab      	ldr	r3, [r5, #8]
 800bcd2:	6869      	ldr	r1, [r5, #4]
 800bcd4:	eb0a 0709 	add.w	r7, sl, r9
 800bcd8:	42bb      	cmp	r3, r7
 800bcda:	b085      	sub	sp, #20
 800bcdc:	bfb8      	it	lt
 800bcde:	3101      	addlt	r1, #1
 800bce0:	f7ff fe8a 	bl	800b9f8 <_Balloc>
 800bce4:	b930      	cbnz	r0, 800bcf4 <__multiply+0x44>
 800bce6:	4602      	mov	r2, r0
 800bce8:	4b42      	ldr	r3, [pc, #264]	; (800bdf4 <__multiply+0x144>)
 800bcea:	4843      	ldr	r0, [pc, #268]	; (800bdf8 <__multiply+0x148>)
 800bcec:	f240 115d 	movw	r1, #349	; 0x15d
 800bcf0:	f001 f99e 	bl	800d030 <__assert_func>
 800bcf4:	f100 0614 	add.w	r6, r0, #20
 800bcf8:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 800bcfc:	4633      	mov	r3, r6
 800bcfe:	2200      	movs	r2, #0
 800bd00:	4543      	cmp	r3, r8
 800bd02:	d31e      	bcc.n	800bd42 <__multiply+0x92>
 800bd04:	f105 0c14 	add.w	ip, r5, #20
 800bd08:	f104 0314 	add.w	r3, r4, #20
 800bd0c:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 800bd10:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 800bd14:	9202      	str	r2, [sp, #8]
 800bd16:	ebac 0205 	sub.w	r2, ip, r5
 800bd1a:	3a15      	subs	r2, #21
 800bd1c:	f022 0203 	bic.w	r2, r2, #3
 800bd20:	3204      	adds	r2, #4
 800bd22:	f105 0115 	add.w	r1, r5, #21
 800bd26:	458c      	cmp	ip, r1
 800bd28:	bf38      	it	cc
 800bd2a:	2204      	movcc	r2, #4
 800bd2c:	9201      	str	r2, [sp, #4]
 800bd2e:	9a02      	ldr	r2, [sp, #8]
 800bd30:	9303      	str	r3, [sp, #12]
 800bd32:	429a      	cmp	r2, r3
 800bd34:	d808      	bhi.n	800bd48 <__multiply+0x98>
 800bd36:	2f00      	cmp	r7, #0
 800bd38:	dc55      	bgt.n	800bde6 <__multiply+0x136>
 800bd3a:	6107      	str	r7, [r0, #16]
 800bd3c:	b005      	add	sp, #20
 800bd3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd42:	f843 2b04 	str.w	r2, [r3], #4
 800bd46:	e7db      	b.n	800bd00 <__multiply+0x50>
 800bd48:	f8b3 a000 	ldrh.w	sl, [r3]
 800bd4c:	f1ba 0f00 	cmp.w	sl, #0
 800bd50:	d020      	beq.n	800bd94 <__multiply+0xe4>
 800bd52:	f105 0e14 	add.w	lr, r5, #20
 800bd56:	46b1      	mov	r9, r6
 800bd58:	2200      	movs	r2, #0
 800bd5a:	f85e 4b04 	ldr.w	r4, [lr], #4
 800bd5e:	f8d9 b000 	ldr.w	fp, [r9]
 800bd62:	b2a1      	uxth	r1, r4
 800bd64:	fa1f fb8b 	uxth.w	fp, fp
 800bd68:	fb0a b101 	mla	r1, sl, r1, fp
 800bd6c:	4411      	add	r1, r2
 800bd6e:	f8d9 2000 	ldr.w	r2, [r9]
 800bd72:	0c24      	lsrs	r4, r4, #16
 800bd74:	0c12      	lsrs	r2, r2, #16
 800bd76:	fb0a 2404 	mla	r4, sl, r4, r2
 800bd7a:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 800bd7e:	b289      	uxth	r1, r1
 800bd80:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800bd84:	45f4      	cmp	ip, lr
 800bd86:	f849 1b04 	str.w	r1, [r9], #4
 800bd8a:	ea4f 4214 	mov.w	r2, r4, lsr #16
 800bd8e:	d8e4      	bhi.n	800bd5a <__multiply+0xaa>
 800bd90:	9901      	ldr	r1, [sp, #4]
 800bd92:	5072      	str	r2, [r6, r1]
 800bd94:	9a03      	ldr	r2, [sp, #12]
 800bd96:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800bd9a:	3304      	adds	r3, #4
 800bd9c:	f1b9 0f00 	cmp.w	r9, #0
 800bda0:	d01f      	beq.n	800bde2 <__multiply+0x132>
 800bda2:	6834      	ldr	r4, [r6, #0]
 800bda4:	f105 0114 	add.w	r1, r5, #20
 800bda8:	46b6      	mov	lr, r6
 800bdaa:	f04f 0a00 	mov.w	sl, #0
 800bdae:	880a      	ldrh	r2, [r1, #0]
 800bdb0:	f8be b002 	ldrh.w	fp, [lr, #2]
 800bdb4:	fb09 b202 	mla	r2, r9, r2, fp
 800bdb8:	4492      	add	sl, r2
 800bdba:	b2a4      	uxth	r4, r4
 800bdbc:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800bdc0:	f84e 4b04 	str.w	r4, [lr], #4
 800bdc4:	f851 4b04 	ldr.w	r4, [r1], #4
 800bdc8:	f8be 2000 	ldrh.w	r2, [lr]
 800bdcc:	0c24      	lsrs	r4, r4, #16
 800bdce:	fb09 2404 	mla	r4, r9, r4, r2
 800bdd2:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 800bdd6:	458c      	cmp	ip, r1
 800bdd8:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 800bddc:	d8e7      	bhi.n	800bdae <__multiply+0xfe>
 800bdde:	9a01      	ldr	r2, [sp, #4]
 800bde0:	50b4      	str	r4, [r6, r2]
 800bde2:	3604      	adds	r6, #4
 800bde4:	e7a3      	b.n	800bd2e <__multiply+0x7e>
 800bde6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800bdea:	2b00      	cmp	r3, #0
 800bdec:	d1a5      	bne.n	800bd3a <__multiply+0x8a>
 800bdee:	3f01      	subs	r7, #1
 800bdf0:	e7a1      	b.n	800bd36 <__multiply+0x86>
 800bdf2:	bf00      	nop
 800bdf4:	0800e924 	.word	0x0800e924
 800bdf8:	0800e9b4 	.word	0x0800e9b4

0800bdfc <__pow5mult>:
 800bdfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800be00:	4615      	mov	r5, r2
 800be02:	f012 0203 	ands.w	r2, r2, #3
 800be06:	4606      	mov	r6, r0
 800be08:	460f      	mov	r7, r1
 800be0a:	d007      	beq.n	800be1c <__pow5mult+0x20>
 800be0c:	4c25      	ldr	r4, [pc, #148]	; (800bea4 <__pow5mult+0xa8>)
 800be0e:	3a01      	subs	r2, #1
 800be10:	2300      	movs	r3, #0
 800be12:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800be16:	f7ff fe51 	bl	800babc <__multadd>
 800be1a:	4607      	mov	r7, r0
 800be1c:	10ad      	asrs	r5, r5, #2
 800be1e:	d03d      	beq.n	800be9c <__pow5mult+0xa0>
 800be20:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800be22:	b97c      	cbnz	r4, 800be44 <__pow5mult+0x48>
 800be24:	2010      	movs	r0, #16
 800be26:	f7ff fdbf 	bl	800b9a8 <malloc>
 800be2a:	4602      	mov	r2, r0
 800be2c:	6270      	str	r0, [r6, #36]	; 0x24
 800be2e:	b928      	cbnz	r0, 800be3c <__pow5mult+0x40>
 800be30:	4b1d      	ldr	r3, [pc, #116]	; (800bea8 <__pow5mult+0xac>)
 800be32:	481e      	ldr	r0, [pc, #120]	; (800beac <__pow5mult+0xb0>)
 800be34:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800be38:	f001 f8fa 	bl	800d030 <__assert_func>
 800be3c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800be40:	6004      	str	r4, [r0, #0]
 800be42:	60c4      	str	r4, [r0, #12]
 800be44:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800be48:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800be4c:	b94c      	cbnz	r4, 800be62 <__pow5mult+0x66>
 800be4e:	f240 2171 	movw	r1, #625	; 0x271
 800be52:	4630      	mov	r0, r6
 800be54:	f7ff ff16 	bl	800bc84 <__i2b>
 800be58:	2300      	movs	r3, #0
 800be5a:	f8c8 0008 	str.w	r0, [r8, #8]
 800be5e:	4604      	mov	r4, r0
 800be60:	6003      	str	r3, [r0, #0]
 800be62:	f04f 0900 	mov.w	r9, #0
 800be66:	07eb      	lsls	r3, r5, #31
 800be68:	d50a      	bpl.n	800be80 <__pow5mult+0x84>
 800be6a:	4639      	mov	r1, r7
 800be6c:	4622      	mov	r2, r4
 800be6e:	4630      	mov	r0, r6
 800be70:	f7ff ff1e 	bl	800bcb0 <__multiply>
 800be74:	4639      	mov	r1, r7
 800be76:	4680      	mov	r8, r0
 800be78:	4630      	mov	r0, r6
 800be7a:	f7ff fdfd 	bl	800ba78 <_Bfree>
 800be7e:	4647      	mov	r7, r8
 800be80:	106d      	asrs	r5, r5, #1
 800be82:	d00b      	beq.n	800be9c <__pow5mult+0xa0>
 800be84:	6820      	ldr	r0, [r4, #0]
 800be86:	b938      	cbnz	r0, 800be98 <__pow5mult+0x9c>
 800be88:	4622      	mov	r2, r4
 800be8a:	4621      	mov	r1, r4
 800be8c:	4630      	mov	r0, r6
 800be8e:	f7ff ff0f 	bl	800bcb0 <__multiply>
 800be92:	6020      	str	r0, [r4, #0]
 800be94:	f8c0 9000 	str.w	r9, [r0]
 800be98:	4604      	mov	r4, r0
 800be9a:	e7e4      	b.n	800be66 <__pow5mult+0x6a>
 800be9c:	4638      	mov	r0, r7
 800be9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bea2:	bf00      	nop
 800bea4:	0800eb08 	.word	0x0800eb08
 800bea8:	0800e8ae 	.word	0x0800e8ae
 800beac:	0800e9b4 	.word	0x0800e9b4

0800beb0 <__lshift>:
 800beb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800beb4:	460c      	mov	r4, r1
 800beb6:	6849      	ldr	r1, [r1, #4]
 800beb8:	6923      	ldr	r3, [r4, #16]
 800beba:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800bebe:	68a3      	ldr	r3, [r4, #8]
 800bec0:	4607      	mov	r7, r0
 800bec2:	4691      	mov	r9, r2
 800bec4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800bec8:	f108 0601 	add.w	r6, r8, #1
 800becc:	42b3      	cmp	r3, r6
 800bece:	db0b      	blt.n	800bee8 <__lshift+0x38>
 800bed0:	4638      	mov	r0, r7
 800bed2:	f7ff fd91 	bl	800b9f8 <_Balloc>
 800bed6:	4605      	mov	r5, r0
 800bed8:	b948      	cbnz	r0, 800beee <__lshift+0x3e>
 800beda:	4602      	mov	r2, r0
 800bedc:	4b28      	ldr	r3, [pc, #160]	; (800bf80 <__lshift+0xd0>)
 800bede:	4829      	ldr	r0, [pc, #164]	; (800bf84 <__lshift+0xd4>)
 800bee0:	f240 11d9 	movw	r1, #473	; 0x1d9
 800bee4:	f001 f8a4 	bl	800d030 <__assert_func>
 800bee8:	3101      	adds	r1, #1
 800beea:	005b      	lsls	r3, r3, #1
 800beec:	e7ee      	b.n	800becc <__lshift+0x1c>
 800beee:	2300      	movs	r3, #0
 800bef0:	f100 0114 	add.w	r1, r0, #20
 800bef4:	f100 0210 	add.w	r2, r0, #16
 800bef8:	4618      	mov	r0, r3
 800befa:	4553      	cmp	r3, sl
 800befc:	db33      	blt.n	800bf66 <__lshift+0xb6>
 800befe:	6920      	ldr	r0, [r4, #16]
 800bf00:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800bf04:	f104 0314 	add.w	r3, r4, #20
 800bf08:	f019 091f 	ands.w	r9, r9, #31
 800bf0c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800bf10:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800bf14:	d02b      	beq.n	800bf6e <__lshift+0xbe>
 800bf16:	f1c9 0e20 	rsb	lr, r9, #32
 800bf1a:	468a      	mov	sl, r1
 800bf1c:	2200      	movs	r2, #0
 800bf1e:	6818      	ldr	r0, [r3, #0]
 800bf20:	fa00 f009 	lsl.w	r0, r0, r9
 800bf24:	4302      	orrs	r2, r0
 800bf26:	f84a 2b04 	str.w	r2, [sl], #4
 800bf2a:	f853 2b04 	ldr.w	r2, [r3], #4
 800bf2e:	459c      	cmp	ip, r3
 800bf30:	fa22 f20e 	lsr.w	r2, r2, lr
 800bf34:	d8f3      	bhi.n	800bf1e <__lshift+0x6e>
 800bf36:	ebac 0304 	sub.w	r3, ip, r4
 800bf3a:	3b15      	subs	r3, #21
 800bf3c:	f023 0303 	bic.w	r3, r3, #3
 800bf40:	3304      	adds	r3, #4
 800bf42:	f104 0015 	add.w	r0, r4, #21
 800bf46:	4584      	cmp	ip, r0
 800bf48:	bf38      	it	cc
 800bf4a:	2304      	movcc	r3, #4
 800bf4c:	50ca      	str	r2, [r1, r3]
 800bf4e:	b10a      	cbz	r2, 800bf54 <__lshift+0xa4>
 800bf50:	f108 0602 	add.w	r6, r8, #2
 800bf54:	3e01      	subs	r6, #1
 800bf56:	4638      	mov	r0, r7
 800bf58:	612e      	str	r6, [r5, #16]
 800bf5a:	4621      	mov	r1, r4
 800bf5c:	f7ff fd8c 	bl	800ba78 <_Bfree>
 800bf60:	4628      	mov	r0, r5
 800bf62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf66:	f842 0f04 	str.w	r0, [r2, #4]!
 800bf6a:	3301      	adds	r3, #1
 800bf6c:	e7c5      	b.n	800befa <__lshift+0x4a>
 800bf6e:	3904      	subs	r1, #4
 800bf70:	f853 2b04 	ldr.w	r2, [r3], #4
 800bf74:	f841 2f04 	str.w	r2, [r1, #4]!
 800bf78:	459c      	cmp	ip, r3
 800bf7a:	d8f9      	bhi.n	800bf70 <__lshift+0xc0>
 800bf7c:	e7ea      	b.n	800bf54 <__lshift+0xa4>
 800bf7e:	bf00      	nop
 800bf80:	0800e924 	.word	0x0800e924
 800bf84:	0800e9b4 	.word	0x0800e9b4

0800bf88 <__mcmp>:
 800bf88:	b530      	push	{r4, r5, lr}
 800bf8a:	6902      	ldr	r2, [r0, #16]
 800bf8c:	690c      	ldr	r4, [r1, #16]
 800bf8e:	1b12      	subs	r2, r2, r4
 800bf90:	d10e      	bne.n	800bfb0 <__mcmp+0x28>
 800bf92:	f100 0314 	add.w	r3, r0, #20
 800bf96:	3114      	adds	r1, #20
 800bf98:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800bf9c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800bfa0:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800bfa4:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800bfa8:	42a5      	cmp	r5, r4
 800bfaa:	d003      	beq.n	800bfb4 <__mcmp+0x2c>
 800bfac:	d305      	bcc.n	800bfba <__mcmp+0x32>
 800bfae:	2201      	movs	r2, #1
 800bfb0:	4610      	mov	r0, r2
 800bfb2:	bd30      	pop	{r4, r5, pc}
 800bfb4:	4283      	cmp	r3, r0
 800bfb6:	d3f3      	bcc.n	800bfa0 <__mcmp+0x18>
 800bfb8:	e7fa      	b.n	800bfb0 <__mcmp+0x28>
 800bfba:	f04f 32ff 	mov.w	r2, #4294967295
 800bfbe:	e7f7      	b.n	800bfb0 <__mcmp+0x28>

0800bfc0 <__mdiff>:
 800bfc0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfc4:	460c      	mov	r4, r1
 800bfc6:	4606      	mov	r6, r0
 800bfc8:	4611      	mov	r1, r2
 800bfca:	4620      	mov	r0, r4
 800bfcc:	4617      	mov	r7, r2
 800bfce:	f7ff ffdb 	bl	800bf88 <__mcmp>
 800bfd2:	1e05      	subs	r5, r0, #0
 800bfd4:	d110      	bne.n	800bff8 <__mdiff+0x38>
 800bfd6:	4629      	mov	r1, r5
 800bfd8:	4630      	mov	r0, r6
 800bfda:	f7ff fd0d 	bl	800b9f8 <_Balloc>
 800bfde:	b930      	cbnz	r0, 800bfee <__mdiff+0x2e>
 800bfe0:	4b39      	ldr	r3, [pc, #228]	; (800c0c8 <__mdiff+0x108>)
 800bfe2:	4602      	mov	r2, r0
 800bfe4:	f240 2132 	movw	r1, #562	; 0x232
 800bfe8:	4838      	ldr	r0, [pc, #224]	; (800c0cc <__mdiff+0x10c>)
 800bfea:	f001 f821 	bl	800d030 <__assert_func>
 800bfee:	2301      	movs	r3, #1
 800bff0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800bff4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bff8:	bfa4      	itt	ge
 800bffa:	463b      	movge	r3, r7
 800bffc:	4627      	movge	r7, r4
 800bffe:	4630      	mov	r0, r6
 800c000:	6879      	ldr	r1, [r7, #4]
 800c002:	bfa6      	itte	ge
 800c004:	461c      	movge	r4, r3
 800c006:	2500      	movge	r5, #0
 800c008:	2501      	movlt	r5, #1
 800c00a:	f7ff fcf5 	bl	800b9f8 <_Balloc>
 800c00e:	b920      	cbnz	r0, 800c01a <__mdiff+0x5a>
 800c010:	4b2d      	ldr	r3, [pc, #180]	; (800c0c8 <__mdiff+0x108>)
 800c012:	4602      	mov	r2, r0
 800c014:	f44f 7110 	mov.w	r1, #576	; 0x240
 800c018:	e7e6      	b.n	800bfe8 <__mdiff+0x28>
 800c01a:	693e      	ldr	r6, [r7, #16]
 800c01c:	60c5      	str	r5, [r0, #12]
 800c01e:	6925      	ldr	r5, [r4, #16]
 800c020:	f107 0114 	add.w	r1, r7, #20
 800c024:	f104 0914 	add.w	r9, r4, #20
 800c028:	f100 0e14 	add.w	lr, r0, #20
 800c02c:	f107 0210 	add.w	r2, r7, #16
 800c030:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800c034:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 800c038:	46f2      	mov	sl, lr
 800c03a:	2700      	movs	r7, #0
 800c03c:	f859 3b04 	ldr.w	r3, [r9], #4
 800c040:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800c044:	fa1f f883 	uxth.w	r8, r3
 800c048:	fa17 f78b 	uxtah	r7, r7, fp
 800c04c:	0c1b      	lsrs	r3, r3, #16
 800c04e:	eba7 0808 	sub.w	r8, r7, r8
 800c052:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800c056:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800c05a:	fa1f f888 	uxth.w	r8, r8
 800c05e:	141f      	asrs	r7, r3, #16
 800c060:	454d      	cmp	r5, r9
 800c062:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800c066:	f84a 3b04 	str.w	r3, [sl], #4
 800c06a:	d8e7      	bhi.n	800c03c <__mdiff+0x7c>
 800c06c:	1b2b      	subs	r3, r5, r4
 800c06e:	3b15      	subs	r3, #21
 800c070:	f023 0303 	bic.w	r3, r3, #3
 800c074:	3304      	adds	r3, #4
 800c076:	3415      	adds	r4, #21
 800c078:	42a5      	cmp	r5, r4
 800c07a:	bf38      	it	cc
 800c07c:	2304      	movcc	r3, #4
 800c07e:	4419      	add	r1, r3
 800c080:	4473      	add	r3, lr
 800c082:	469e      	mov	lr, r3
 800c084:	460d      	mov	r5, r1
 800c086:	4565      	cmp	r5, ip
 800c088:	d30e      	bcc.n	800c0a8 <__mdiff+0xe8>
 800c08a:	f10c 0203 	add.w	r2, ip, #3
 800c08e:	1a52      	subs	r2, r2, r1
 800c090:	f022 0203 	bic.w	r2, r2, #3
 800c094:	3903      	subs	r1, #3
 800c096:	458c      	cmp	ip, r1
 800c098:	bf38      	it	cc
 800c09a:	2200      	movcc	r2, #0
 800c09c:	441a      	add	r2, r3
 800c09e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800c0a2:	b17b      	cbz	r3, 800c0c4 <__mdiff+0x104>
 800c0a4:	6106      	str	r6, [r0, #16]
 800c0a6:	e7a5      	b.n	800bff4 <__mdiff+0x34>
 800c0a8:	f855 8b04 	ldr.w	r8, [r5], #4
 800c0ac:	fa17 f488 	uxtah	r4, r7, r8
 800c0b0:	1422      	asrs	r2, r4, #16
 800c0b2:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 800c0b6:	b2a4      	uxth	r4, r4
 800c0b8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800c0bc:	f84e 4b04 	str.w	r4, [lr], #4
 800c0c0:	1417      	asrs	r7, r2, #16
 800c0c2:	e7e0      	b.n	800c086 <__mdiff+0xc6>
 800c0c4:	3e01      	subs	r6, #1
 800c0c6:	e7ea      	b.n	800c09e <__mdiff+0xde>
 800c0c8:	0800e924 	.word	0x0800e924
 800c0cc:	0800e9b4 	.word	0x0800e9b4

0800c0d0 <__ulp>:
 800c0d0:	b082      	sub	sp, #8
 800c0d2:	ed8d 0b00 	vstr	d0, [sp]
 800c0d6:	9b01      	ldr	r3, [sp, #4]
 800c0d8:	4912      	ldr	r1, [pc, #72]	; (800c124 <__ulp+0x54>)
 800c0da:	4019      	ands	r1, r3
 800c0dc:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800c0e0:	2900      	cmp	r1, #0
 800c0e2:	dd05      	ble.n	800c0f0 <__ulp+0x20>
 800c0e4:	2200      	movs	r2, #0
 800c0e6:	460b      	mov	r3, r1
 800c0e8:	ec43 2b10 	vmov	d0, r2, r3
 800c0ec:	b002      	add	sp, #8
 800c0ee:	4770      	bx	lr
 800c0f0:	4249      	negs	r1, r1
 800c0f2:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800c0f6:	ea4f 5021 	mov.w	r0, r1, asr #20
 800c0fa:	f04f 0200 	mov.w	r2, #0
 800c0fe:	f04f 0300 	mov.w	r3, #0
 800c102:	da04      	bge.n	800c10e <__ulp+0x3e>
 800c104:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800c108:	fa41 f300 	asr.w	r3, r1, r0
 800c10c:	e7ec      	b.n	800c0e8 <__ulp+0x18>
 800c10e:	f1a0 0114 	sub.w	r1, r0, #20
 800c112:	291e      	cmp	r1, #30
 800c114:	bfda      	itte	le
 800c116:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800c11a:	fa20 f101 	lsrle.w	r1, r0, r1
 800c11e:	2101      	movgt	r1, #1
 800c120:	460a      	mov	r2, r1
 800c122:	e7e1      	b.n	800c0e8 <__ulp+0x18>
 800c124:	7ff00000 	.word	0x7ff00000

0800c128 <__b2d>:
 800c128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c12a:	6905      	ldr	r5, [r0, #16]
 800c12c:	f100 0714 	add.w	r7, r0, #20
 800c130:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800c134:	1f2e      	subs	r6, r5, #4
 800c136:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800c13a:	4620      	mov	r0, r4
 800c13c:	f7ff fd52 	bl	800bbe4 <__hi0bits>
 800c140:	f1c0 0320 	rsb	r3, r0, #32
 800c144:	280a      	cmp	r0, #10
 800c146:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800c1c4 <__b2d+0x9c>
 800c14a:	600b      	str	r3, [r1, #0]
 800c14c:	dc14      	bgt.n	800c178 <__b2d+0x50>
 800c14e:	f1c0 0e0b 	rsb	lr, r0, #11
 800c152:	fa24 f10e 	lsr.w	r1, r4, lr
 800c156:	42b7      	cmp	r7, r6
 800c158:	ea41 030c 	orr.w	r3, r1, ip
 800c15c:	bf34      	ite	cc
 800c15e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800c162:	2100      	movcs	r1, #0
 800c164:	3015      	adds	r0, #21
 800c166:	fa04 f000 	lsl.w	r0, r4, r0
 800c16a:	fa21 f10e 	lsr.w	r1, r1, lr
 800c16e:	ea40 0201 	orr.w	r2, r0, r1
 800c172:	ec43 2b10 	vmov	d0, r2, r3
 800c176:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c178:	42b7      	cmp	r7, r6
 800c17a:	bf3a      	itte	cc
 800c17c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800c180:	f1a5 0608 	subcc.w	r6, r5, #8
 800c184:	2100      	movcs	r1, #0
 800c186:	380b      	subs	r0, #11
 800c188:	d017      	beq.n	800c1ba <__b2d+0x92>
 800c18a:	f1c0 0c20 	rsb	ip, r0, #32
 800c18e:	fa04 f500 	lsl.w	r5, r4, r0
 800c192:	42be      	cmp	r6, r7
 800c194:	fa21 f40c 	lsr.w	r4, r1, ip
 800c198:	ea45 0504 	orr.w	r5, r5, r4
 800c19c:	bf8c      	ite	hi
 800c19e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800c1a2:	2400      	movls	r4, #0
 800c1a4:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800c1a8:	fa01 f000 	lsl.w	r0, r1, r0
 800c1ac:	fa24 f40c 	lsr.w	r4, r4, ip
 800c1b0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800c1b4:	ea40 0204 	orr.w	r2, r0, r4
 800c1b8:	e7db      	b.n	800c172 <__b2d+0x4a>
 800c1ba:	ea44 030c 	orr.w	r3, r4, ip
 800c1be:	460a      	mov	r2, r1
 800c1c0:	e7d7      	b.n	800c172 <__b2d+0x4a>
 800c1c2:	bf00      	nop
 800c1c4:	3ff00000 	.word	0x3ff00000

0800c1c8 <__d2b>:
 800c1c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c1cc:	4689      	mov	r9, r1
 800c1ce:	2101      	movs	r1, #1
 800c1d0:	ec57 6b10 	vmov	r6, r7, d0
 800c1d4:	4690      	mov	r8, r2
 800c1d6:	f7ff fc0f 	bl	800b9f8 <_Balloc>
 800c1da:	4604      	mov	r4, r0
 800c1dc:	b930      	cbnz	r0, 800c1ec <__d2b+0x24>
 800c1de:	4602      	mov	r2, r0
 800c1e0:	4b25      	ldr	r3, [pc, #148]	; (800c278 <__d2b+0xb0>)
 800c1e2:	4826      	ldr	r0, [pc, #152]	; (800c27c <__d2b+0xb4>)
 800c1e4:	f240 310a 	movw	r1, #778	; 0x30a
 800c1e8:	f000 ff22 	bl	800d030 <__assert_func>
 800c1ec:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800c1f0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800c1f4:	bb35      	cbnz	r5, 800c244 <__d2b+0x7c>
 800c1f6:	2e00      	cmp	r6, #0
 800c1f8:	9301      	str	r3, [sp, #4]
 800c1fa:	d028      	beq.n	800c24e <__d2b+0x86>
 800c1fc:	4668      	mov	r0, sp
 800c1fe:	9600      	str	r6, [sp, #0]
 800c200:	f7ff fd10 	bl	800bc24 <__lo0bits>
 800c204:	9900      	ldr	r1, [sp, #0]
 800c206:	b300      	cbz	r0, 800c24a <__d2b+0x82>
 800c208:	9a01      	ldr	r2, [sp, #4]
 800c20a:	f1c0 0320 	rsb	r3, r0, #32
 800c20e:	fa02 f303 	lsl.w	r3, r2, r3
 800c212:	430b      	orrs	r3, r1
 800c214:	40c2      	lsrs	r2, r0
 800c216:	6163      	str	r3, [r4, #20]
 800c218:	9201      	str	r2, [sp, #4]
 800c21a:	9b01      	ldr	r3, [sp, #4]
 800c21c:	61a3      	str	r3, [r4, #24]
 800c21e:	2b00      	cmp	r3, #0
 800c220:	bf14      	ite	ne
 800c222:	2202      	movne	r2, #2
 800c224:	2201      	moveq	r2, #1
 800c226:	6122      	str	r2, [r4, #16]
 800c228:	b1d5      	cbz	r5, 800c260 <__d2b+0x98>
 800c22a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800c22e:	4405      	add	r5, r0
 800c230:	f8c9 5000 	str.w	r5, [r9]
 800c234:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800c238:	f8c8 0000 	str.w	r0, [r8]
 800c23c:	4620      	mov	r0, r4
 800c23e:	b003      	add	sp, #12
 800c240:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c244:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800c248:	e7d5      	b.n	800c1f6 <__d2b+0x2e>
 800c24a:	6161      	str	r1, [r4, #20]
 800c24c:	e7e5      	b.n	800c21a <__d2b+0x52>
 800c24e:	a801      	add	r0, sp, #4
 800c250:	f7ff fce8 	bl	800bc24 <__lo0bits>
 800c254:	9b01      	ldr	r3, [sp, #4]
 800c256:	6163      	str	r3, [r4, #20]
 800c258:	2201      	movs	r2, #1
 800c25a:	6122      	str	r2, [r4, #16]
 800c25c:	3020      	adds	r0, #32
 800c25e:	e7e3      	b.n	800c228 <__d2b+0x60>
 800c260:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800c264:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800c268:	f8c9 0000 	str.w	r0, [r9]
 800c26c:	6918      	ldr	r0, [r3, #16]
 800c26e:	f7ff fcb9 	bl	800bbe4 <__hi0bits>
 800c272:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800c276:	e7df      	b.n	800c238 <__d2b+0x70>
 800c278:	0800e924 	.word	0x0800e924
 800c27c:	0800e9b4 	.word	0x0800e9b4

0800c280 <__ratio>:
 800c280:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c284:	468a      	mov	sl, r1
 800c286:	4669      	mov	r1, sp
 800c288:	4683      	mov	fp, r0
 800c28a:	f7ff ff4d 	bl	800c128 <__b2d>
 800c28e:	a901      	add	r1, sp, #4
 800c290:	4650      	mov	r0, sl
 800c292:	ec59 8b10 	vmov	r8, r9, d0
 800c296:	ee10 6a10 	vmov	r6, s0
 800c29a:	f7ff ff45 	bl	800c128 <__b2d>
 800c29e:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c2a2:	f8da 2010 	ldr.w	r2, [sl, #16]
 800c2a6:	eba3 0c02 	sub.w	ip, r3, r2
 800c2aa:	e9dd 3200 	ldrd	r3, r2, [sp]
 800c2ae:	1a9b      	subs	r3, r3, r2
 800c2b0:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800c2b4:	ec55 4b10 	vmov	r4, r5, d0
 800c2b8:	2b00      	cmp	r3, #0
 800c2ba:	ee10 0a10 	vmov	r0, s0
 800c2be:	bfce      	itee	gt
 800c2c0:	464a      	movgt	r2, r9
 800c2c2:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800c2c6:	462a      	movle	r2, r5
 800c2c8:	464f      	mov	r7, r9
 800c2ca:	4629      	mov	r1, r5
 800c2cc:	bfcc      	ite	gt
 800c2ce:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800c2d2:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
 800c2d6:	ec47 6b17 	vmov	d7, r6, r7
 800c2da:	ec41 0b16 	vmov	d6, r0, r1
 800c2de:	ee87 0b06 	vdiv.f64	d0, d7, d6
 800c2e2:	b003      	add	sp, #12
 800c2e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c2e8 <__copybits>:
 800c2e8:	3901      	subs	r1, #1
 800c2ea:	b570      	push	{r4, r5, r6, lr}
 800c2ec:	1149      	asrs	r1, r1, #5
 800c2ee:	6914      	ldr	r4, [r2, #16]
 800c2f0:	3101      	adds	r1, #1
 800c2f2:	f102 0314 	add.w	r3, r2, #20
 800c2f6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800c2fa:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800c2fe:	1f05      	subs	r5, r0, #4
 800c300:	42a3      	cmp	r3, r4
 800c302:	d30c      	bcc.n	800c31e <__copybits+0x36>
 800c304:	1aa3      	subs	r3, r4, r2
 800c306:	3b11      	subs	r3, #17
 800c308:	f023 0303 	bic.w	r3, r3, #3
 800c30c:	3211      	adds	r2, #17
 800c30e:	42a2      	cmp	r2, r4
 800c310:	bf88      	it	hi
 800c312:	2300      	movhi	r3, #0
 800c314:	4418      	add	r0, r3
 800c316:	2300      	movs	r3, #0
 800c318:	4288      	cmp	r0, r1
 800c31a:	d305      	bcc.n	800c328 <__copybits+0x40>
 800c31c:	bd70      	pop	{r4, r5, r6, pc}
 800c31e:	f853 6b04 	ldr.w	r6, [r3], #4
 800c322:	f845 6f04 	str.w	r6, [r5, #4]!
 800c326:	e7eb      	b.n	800c300 <__copybits+0x18>
 800c328:	f840 3b04 	str.w	r3, [r0], #4
 800c32c:	e7f4      	b.n	800c318 <__copybits+0x30>

0800c32e <__any_on>:
 800c32e:	f100 0214 	add.w	r2, r0, #20
 800c332:	6900      	ldr	r0, [r0, #16]
 800c334:	114b      	asrs	r3, r1, #5
 800c336:	4298      	cmp	r0, r3
 800c338:	b510      	push	{r4, lr}
 800c33a:	db11      	blt.n	800c360 <__any_on+0x32>
 800c33c:	dd0a      	ble.n	800c354 <__any_on+0x26>
 800c33e:	f011 011f 	ands.w	r1, r1, #31
 800c342:	d007      	beq.n	800c354 <__any_on+0x26>
 800c344:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800c348:	fa24 f001 	lsr.w	r0, r4, r1
 800c34c:	fa00 f101 	lsl.w	r1, r0, r1
 800c350:	428c      	cmp	r4, r1
 800c352:	d10b      	bne.n	800c36c <__any_on+0x3e>
 800c354:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800c358:	4293      	cmp	r3, r2
 800c35a:	d803      	bhi.n	800c364 <__any_on+0x36>
 800c35c:	2000      	movs	r0, #0
 800c35e:	bd10      	pop	{r4, pc}
 800c360:	4603      	mov	r3, r0
 800c362:	e7f7      	b.n	800c354 <__any_on+0x26>
 800c364:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800c368:	2900      	cmp	r1, #0
 800c36a:	d0f5      	beq.n	800c358 <__any_on+0x2a>
 800c36c:	2001      	movs	r0, #1
 800c36e:	e7f6      	b.n	800c35e <__any_on+0x30>

0800c370 <_calloc_r>:
 800c370:	b513      	push	{r0, r1, r4, lr}
 800c372:	434a      	muls	r2, r1
 800c374:	4611      	mov	r1, r2
 800c376:	9201      	str	r2, [sp, #4]
 800c378:	f000 f85a 	bl	800c430 <_malloc_r>
 800c37c:	4604      	mov	r4, r0
 800c37e:	b118      	cbz	r0, 800c388 <_calloc_r+0x18>
 800c380:	9a01      	ldr	r2, [sp, #4]
 800c382:	2100      	movs	r1, #0
 800c384:	f7fc fbca 	bl	8008b1c <memset>
 800c388:	4620      	mov	r0, r4
 800c38a:	b002      	add	sp, #8
 800c38c:	bd10      	pop	{r4, pc}
	...

0800c390 <_free_r>:
 800c390:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c392:	2900      	cmp	r1, #0
 800c394:	d048      	beq.n	800c428 <_free_r+0x98>
 800c396:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c39a:	9001      	str	r0, [sp, #4]
 800c39c:	2b00      	cmp	r3, #0
 800c39e:	f1a1 0404 	sub.w	r4, r1, #4
 800c3a2:	bfb8      	it	lt
 800c3a4:	18e4      	addlt	r4, r4, r3
 800c3a6:	f001 f847 	bl	800d438 <__malloc_lock>
 800c3aa:	4a20      	ldr	r2, [pc, #128]	; (800c42c <_free_r+0x9c>)
 800c3ac:	9801      	ldr	r0, [sp, #4]
 800c3ae:	6813      	ldr	r3, [r2, #0]
 800c3b0:	4615      	mov	r5, r2
 800c3b2:	b933      	cbnz	r3, 800c3c2 <_free_r+0x32>
 800c3b4:	6063      	str	r3, [r4, #4]
 800c3b6:	6014      	str	r4, [r2, #0]
 800c3b8:	b003      	add	sp, #12
 800c3ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c3be:	f001 b841 	b.w	800d444 <__malloc_unlock>
 800c3c2:	42a3      	cmp	r3, r4
 800c3c4:	d90b      	bls.n	800c3de <_free_r+0x4e>
 800c3c6:	6821      	ldr	r1, [r4, #0]
 800c3c8:	1862      	adds	r2, r4, r1
 800c3ca:	4293      	cmp	r3, r2
 800c3cc:	bf04      	itt	eq
 800c3ce:	681a      	ldreq	r2, [r3, #0]
 800c3d0:	685b      	ldreq	r3, [r3, #4]
 800c3d2:	6063      	str	r3, [r4, #4]
 800c3d4:	bf04      	itt	eq
 800c3d6:	1852      	addeq	r2, r2, r1
 800c3d8:	6022      	streq	r2, [r4, #0]
 800c3da:	602c      	str	r4, [r5, #0]
 800c3dc:	e7ec      	b.n	800c3b8 <_free_r+0x28>
 800c3de:	461a      	mov	r2, r3
 800c3e0:	685b      	ldr	r3, [r3, #4]
 800c3e2:	b10b      	cbz	r3, 800c3e8 <_free_r+0x58>
 800c3e4:	42a3      	cmp	r3, r4
 800c3e6:	d9fa      	bls.n	800c3de <_free_r+0x4e>
 800c3e8:	6811      	ldr	r1, [r2, #0]
 800c3ea:	1855      	adds	r5, r2, r1
 800c3ec:	42a5      	cmp	r5, r4
 800c3ee:	d10b      	bne.n	800c408 <_free_r+0x78>
 800c3f0:	6824      	ldr	r4, [r4, #0]
 800c3f2:	4421      	add	r1, r4
 800c3f4:	1854      	adds	r4, r2, r1
 800c3f6:	42a3      	cmp	r3, r4
 800c3f8:	6011      	str	r1, [r2, #0]
 800c3fa:	d1dd      	bne.n	800c3b8 <_free_r+0x28>
 800c3fc:	681c      	ldr	r4, [r3, #0]
 800c3fe:	685b      	ldr	r3, [r3, #4]
 800c400:	6053      	str	r3, [r2, #4]
 800c402:	4421      	add	r1, r4
 800c404:	6011      	str	r1, [r2, #0]
 800c406:	e7d7      	b.n	800c3b8 <_free_r+0x28>
 800c408:	d902      	bls.n	800c410 <_free_r+0x80>
 800c40a:	230c      	movs	r3, #12
 800c40c:	6003      	str	r3, [r0, #0]
 800c40e:	e7d3      	b.n	800c3b8 <_free_r+0x28>
 800c410:	6825      	ldr	r5, [r4, #0]
 800c412:	1961      	adds	r1, r4, r5
 800c414:	428b      	cmp	r3, r1
 800c416:	bf04      	itt	eq
 800c418:	6819      	ldreq	r1, [r3, #0]
 800c41a:	685b      	ldreq	r3, [r3, #4]
 800c41c:	6063      	str	r3, [r4, #4]
 800c41e:	bf04      	itt	eq
 800c420:	1949      	addeq	r1, r1, r5
 800c422:	6021      	streq	r1, [r4, #0]
 800c424:	6054      	str	r4, [r2, #4]
 800c426:	e7c7      	b.n	800c3b8 <_free_r+0x28>
 800c428:	b003      	add	sp, #12
 800c42a:	bd30      	pop	{r4, r5, pc}
 800c42c:	20000320 	.word	0x20000320

0800c430 <_malloc_r>:
 800c430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c432:	1ccd      	adds	r5, r1, #3
 800c434:	f025 0503 	bic.w	r5, r5, #3
 800c438:	3508      	adds	r5, #8
 800c43a:	2d0c      	cmp	r5, #12
 800c43c:	bf38      	it	cc
 800c43e:	250c      	movcc	r5, #12
 800c440:	2d00      	cmp	r5, #0
 800c442:	4606      	mov	r6, r0
 800c444:	db01      	blt.n	800c44a <_malloc_r+0x1a>
 800c446:	42a9      	cmp	r1, r5
 800c448:	d903      	bls.n	800c452 <_malloc_r+0x22>
 800c44a:	230c      	movs	r3, #12
 800c44c:	6033      	str	r3, [r6, #0]
 800c44e:	2000      	movs	r0, #0
 800c450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c452:	f000 fff1 	bl	800d438 <__malloc_lock>
 800c456:	4921      	ldr	r1, [pc, #132]	; (800c4dc <_malloc_r+0xac>)
 800c458:	680a      	ldr	r2, [r1, #0]
 800c45a:	4614      	mov	r4, r2
 800c45c:	b99c      	cbnz	r4, 800c486 <_malloc_r+0x56>
 800c45e:	4f20      	ldr	r7, [pc, #128]	; (800c4e0 <_malloc_r+0xb0>)
 800c460:	683b      	ldr	r3, [r7, #0]
 800c462:	b923      	cbnz	r3, 800c46e <_malloc_r+0x3e>
 800c464:	4621      	mov	r1, r4
 800c466:	4630      	mov	r0, r6
 800c468:	f000 fcd2 	bl	800ce10 <_sbrk_r>
 800c46c:	6038      	str	r0, [r7, #0]
 800c46e:	4629      	mov	r1, r5
 800c470:	4630      	mov	r0, r6
 800c472:	f000 fccd 	bl	800ce10 <_sbrk_r>
 800c476:	1c43      	adds	r3, r0, #1
 800c478:	d123      	bne.n	800c4c2 <_malloc_r+0x92>
 800c47a:	230c      	movs	r3, #12
 800c47c:	6033      	str	r3, [r6, #0]
 800c47e:	4630      	mov	r0, r6
 800c480:	f000 ffe0 	bl	800d444 <__malloc_unlock>
 800c484:	e7e3      	b.n	800c44e <_malloc_r+0x1e>
 800c486:	6823      	ldr	r3, [r4, #0]
 800c488:	1b5b      	subs	r3, r3, r5
 800c48a:	d417      	bmi.n	800c4bc <_malloc_r+0x8c>
 800c48c:	2b0b      	cmp	r3, #11
 800c48e:	d903      	bls.n	800c498 <_malloc_r+0x68>
 800c490:	6023      	str	r3, [r4, #0]
 800c492:	441c      	add	r4, r3
 800c494:	6025      	str	r5, [r4, #0]
 800c496:	e004      	b.n	800c4a2 <_malloc_r+0x72>
 800c498:	6863      	ldr	r3, [r4, #4]
 800c49a:	42a2      	cmp	r2, r4
 800c49c:	bf0c      	ite	eq
 800c49e:	600b      	streq	r3, [r1, #0]
 800c4a0:	6053      	strne	r3, [r2, #4]
 800c4a2:	4630      	mov	r0, r6
 800c4a4:	f000 ffce 	bl	800d444 <__malloc_unlock>
 800c4a8:	f104 000b 	add.w	r0, r4, #11
 800c4ac:	1d23      	adds	r3, r4, #4
 800c4ae:	f020 0007 	bic.w	r0, r0, #7
 800c4b2:	1ac2      	subs	r2, r0, r3
 800c4b4:	d0cc      	beq.n	800c450 <_malloc_r+0x20>
 800c4b6:	1a1b      	subs	r3, r3, r0
 800c4b8:	50a3      	str	r3, [r4, r2]
 800c4ba:	e7c9      	b.n	800c450 <_malloc_r+0x20>
 800c4bc:	4622      	mov	r2, r4
 800c4be:	6864      	ldr	r4, [r4, #4]
 800c4c0:	e7cc      	b.n	800c45c <_malloc_r+0x2c>
 800c4c2:	1cc4      	adds	r4, r0, #3
 800c4c4:	f024 0403 	bic.w	r4, r4, #3
 800c4c8:	42a0      	cmp	r0, r4
 800c4ca:	d0e3      	beq.n	800c494 <_malloc_r+0x64>
 800c4cc:	1a21      	subs	r1, r4, r0
 800c4ce:	4630      	mov	r0, r6
 800c4d0:	f000 fc9e 	bl	800ce10 <_sbrk_r>
 800c4d4:	3001      	adds	r0, #1
 800c4d6:	d1dd      	bne.n	800c494 <_malloc_r+0x64>
 800c4d8:	e7cf      	b.n	800c47a <_malloc_r+0x4a>
 800c4da:	bf00      	nop
 800c4dc:	20000320 	.word	0x20000320
 800c4e0:	20000324 	.word	0x20000324

0800c4e4 <__ssputs_r>:
 800c4e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c4e8:	688e      	ldr	r6, [r1, #8]
 800c4ea:	429e      	cmp	r6, r3
 800c4ec:	4682      	mov	sl, r0
 800c4ee:	460c      	mov	r4, r1
 800c4f0:	4690      	mov	r8, r2
 800c4f2:	461f      	mov	r7, r3
 800c4f4:	d838      	bhi.n	800c568 <__ssputs_r+0x84>
 800c4f6:	898a      	ldrh	r2, [r1, #12]
 800c4f8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800c4fc:	d032      	beq.n	800c564 <__ssputs_r+0x80>
 800c4fe:	6825      	ldr	r5, [r4, #0]
 800c500:	6909      	ldr	r1, [r1, #16]
 800c502:	eba5 0901 	sub.w	r9, r5, r1
 800c506:	6965      	ldr	r5, [r4, #20]
 800c508:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c50c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c510:	3301      	adds	r3, #1
 800c512:	444b      	add	r3, r9
 800c514:	106d      	asrs	r5, r5, #1
 800c516:	429d      	cmp	r5, r3
 800c518:	bf38      	it	cc
 800c51a:	461d      	movcc	r5, r3
 800c51c:	0553      	lsls	r3, r2, #21
 800c51e:	d531      	bpl.n	800c584 <__ssputs_r+0xa0>
 800c520:	4629      	mov	r1, r5
 800c522:	f7ff ff85 	bl	800c430 <_malloc_r>
 800c526:	4606      	mov	r6, r0
 800c528:	b950      	cbnz	r0, 800c540 <__ssputs_r+0x5c>
 800c52a:	230c      	movs	r3, #12
 800c52c:	f8ca 3000 	str.w	r3, [sl]
 800c530:	89a3      	ldrh	r3, [r4, #12]
 800c532:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c536:	81a3      	strh	r3, [r4, #12]
 800c538:	f04f 30ff 	mov.w	r0, #4294967295
 800c53c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c540:	6921      	ldr	r1, [r4, #16]
 800c542:	464a      	mov	r2, r9
 800c544:	f7ff fa4a 	bl	800b9dc <memcpy>
 800c548:	89a3      	ldrh	r3, [r4, #12]
 800c54a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800c54e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c552:	81a3      	strh	r3, [r4, #12]
 800c554:	6126      	str	r6, [r4, #16]
 800c556:	6165      	str	r5, [r4, #20]
 800c558:	444e      	add	r6, r9
 800c55a:	eba5 0509 	sub.w	r5, r5, r9
 800c55e:	6026      	str	r6, [r4, #0]
 800c560:	60a5      	str	r5, [r4, #8]
 800c562:	463e      	mov	r6, r7
 800c564:	42be      	cmp	r6, r7
 800c566:	d900      	bls.n	800c56a <__ssputs_r+0x86>
 800c568:	463e      	mov	r6, r7
 800c56a:	4632      	mov	r2, r6
 800c56c:	6820      	ldr	r0, [r4, #0]
 800c56e:	4641      	mov	r1, r8
 800c570:	f000 ff48 	bl	800d404 <memmove>
 800c574:	68a3      	ldr	r3, [r4, #8]
 800c576:	6822      	ldr	r2, [r4, #0]
 800c578:	1b9b      	subs	r3, r3, r6
 800c57a:	4432      	add	r2, r6
 800c57c:	60a3      	str	r3, [r4, #8]
 800c57e:	6022      	str	r2, [r4, #0]
 800c580:	2000      	movs	r0, #0
 800c582:	e7db      	b.n	800c53c <__ssputs_r+0x58>
 800c584:	462a      	mov	r2, r5
 800c586:	f000 ff63 	bl	800d450 <_realloc_r>
 800c58a:	4606      	mov	r6, r0
 800c58c:	2800      	cmp	r0, #0
 800c58e:	d1e1      	bne.n	800c554 <__ssputs_r+0x70>
 800c590:	6921      	ldr	r1, [r4, #16]
 800c592:	4650      	mov	r0, sl
 800c594:	f7ff fefc 	bl	800c390 <_free_r>
 800c598:	e7c7      	b.n	800c52a <__ssputs_r+0x46>
	...

0800c59c <_svfiprintf_r>:
 800c59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5a0:	4698      	mov	r8, r3
 800c5a2:	898b      	ldrh	r3, [r1, #12]
 800c5a4:	061b      	lsls	r3, r3, #24
 800c5a6:	b09d      	sub	sp, #116	; 0x74
 800c5a8:	4607      	mov	r7, r0
 800c5aa:	460d      	mov	r5, r1
 800c5ac:	4614      	mov	r4, r2
 800c5ae:	d50e      	bpl.n	800c5ce <_svfiprintf_r+0x32>
 800c5b0:	690b      	ldr	r3, [r1, #16]
 800c5b2:	b963      	cbnz	r3, 800c5ce <_svfiprintf_r+0x32>
 800c5b4:	2140      	movs	r1, #64	; 0x40
 800c5b6:	f7ff ff3b 	bl	800c430 <_malloc_r>
 800c5ba:	6028      	str	r0, [r5, #0]
 800c5bc:	6128      	str	r0, [r5, #16]
 800c5be:	b920      	cbnz	r0, 800c5ca <_svfiprintf_r+0x2e>
 800c5c0:	230c      	movs	r3, #12
 800c5c2:	603b      	str	r3, [r7, #0]
 800c5c4:	f04f 30ff 	mov.w	r0, #4294967295
 800c5c8:	e0d1      	b.n	800c76e <_svfiprintf_r+0x1d2>
 800c5ca:	2340      	movs	r3, #64	; 0x40
 800c5cc:	616b      	str	r3, [r5, #20]
 800c5ce:	2300      	movs	r3, #0
 800c5d0:	9309      	str	r3, [sp, #36]	; 0x24
 800c5d2:	2320      	movs	r3, #32
 800c5d4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c5d8:	f8cd 800c 	str.w	r8, [sp, #12]
 800c5dc:	2330      	movs	r3, #48	; 0x30
 800c5de:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800c788 <_svfiprintf_r+0x1ec>
 800c5e2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c5e6:	f04f 0901 	mov.w	r9, #1
 800c5ea:	4623      	mov	r3, r4
 800c5ec:	469a      	mov	sl, r3
 800c5ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c5f2:	b10a      	cbz	r2, 800c5f8 <_svfiprintf_r+0x5c>
 800c5f4:	2a25      	cmp	r2, #37	; 0x25
 800c5f6:	d1f9      	bne.n	800c5ec <_svfiprintf_r+0x50>
 800c5f8:	ebba 0b04 	subs.w	fp, sl, r4
 800c5fc:	d00b      	beq.n	800c616 <_svfiprintf_r+0x7a>
 800c5fe:	465b      	mov	r3, fp
 800c600:	4622      	mov	r2, r4
 800c602:	4629      	mov	r1, r5
 800c604:	4638      	mov	r0, r7
 800c606:	f7ff ff6d 	bl	800c4e4 <__ssputs_r>
 800c60a:	3001      	adds	r0, #1
 800c60c:	f000 80aa 	beq.w	800c764 <_svfiprintf_r+0x1c8>
 800c610:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c612:	445a      	add	r2, fp
 800c614:	9209      	str	r2, [sp, #36]	; 0x24
 800c616:	f89a 3000 	ldrb.w	r3, [sl]
 800c61a:	2b00      	cmp	r3, #0
 800c61c:	f000 80a2 	beq.w	800c764 <_svfiprintf_r+0x1c8>
 800c620:	2300      	movs	r3, #0
 800c622:	f04f 32ff 	mov.w	r2, #4294967295
 800c626:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c62a:	f10a 0a01 	add.w	sl, sl, #1
 800c62e:	9304      	str	r3, [sp, #16]
 800c630:	9307      	str	r3, [sp, #28]
 800c632:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c636:	931a      	str	r3, [sp, #104]	; 0x68
 800c638:	4654      	mov	r4, sl
 800c63a:	2205      	movs	r2, #5
 800c63c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c640:	4851      	ldr	r0, [pc, #324]	; (800c788 <_svfiprintf_r+0x1ec>)
 800c642:	f7f3 fe15 	bl	8000270 <memchr>
 800c646:	9a04      	ldr	r2, [sp, #16]
 800c648:	b9d8      	cbnz	r0, 800c682 <_svfiprintf_r+0xe6>
 800c64a:	06d0      	lsls	r0, r2, #27
 800c64c:	bf44      	itt	mi
 800c64e:	2320      	movmi	r3, #32
 800c650:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c654:	0711      	lsls	r1, r2, #28
 800c656:	bf44      	itt	mi
 800c658:	232b      	movmi	r3, #43	; 0x2b
 800c65a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c65e:	f89a 3000 	ldrb.w	r3, [sl]
 800c662:	2b2a      	cmp	r3, #42	; 0x2a
 800c664:	d015      	beq.n	800c692 <_svfiprintf_r+0xf6>
 800c666:	9a07      	ldr	r2, [sp, #28]
 800c668:	4654      	mov	r4, sl
 800c66a:	2000      	movs	r0, #0
 800c66c:	f04f 0c0a 	mov.w	ip, #10
 800c670:	4621      	mov	r1, r4
 800c672:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c676:	3b30      	subs	r3, #48	; 0x30
 800c678:	2b09      	cmp	r3, #9
 800c67a:	d94e      	bls.n	800c71a <_svfiprintf_r+0x17e>
 800c67c:	b1b0      	cbz	r0, 800c6ac <_svfiprintf_r+0x110>
 800c67e:	9207      	str	r2, [sp, #28]
 800c680:	e014      	b.n	800c6ac <_svfiprintf_r+0x110>
 800c682:	eba0 0308 	sub.w	r3, r0, r8
 800c686:	fa09 f303 	lsl.w	r3, r9, r3
 800c68a:	4313      	orrs	r3, r2
 800c68c:	9304      	str	r3, [sp, #16]
 800c68e:	46a2      	mov	sl, r4
 800c690:	e7d2      	b.n	800c638 <_svfiprintf_r+0x9c>
 800c692:	9b03      	ldr	r3, [sp, #12]
 800c694:	1d19      	adds	r1, r3, #4
 800c696:	681b      	ldr	r3, [r3, #0]
 800c698:	9103      	str	r1, [sp, #12]
 800c69a:	2b00      	cmp	r3, #0
 800c69c:	bfbb      	ittet	lt
 800c69e:	425b      	neglt	r3, r3
 800c6a0:	f042 0202 	orrlt.w	r2, r2, #2
 800c6a4:	9307      	strge	r3, [sp, #28]
 800c6a6:	9307      	strlt	r3, [sp, #28]
 800c6a8:	bfb8      	it	lt
 800c6aa:	9204      	strlt	r2, [sp, #16]
 800c6ac:	7823      	ldrb	r3, [r4, #0]
 800c6ae:	2b2e      	cmp	r3, #46	; 0x2e
 800c6b0:	d10c      	bne.n	800c6cc <_svfiprintf_r+0x130>
 800c6b2:	7863      	ldrb	r3, [r4, #1]
 800c6b4:	2b2a      	cmp	r3, #42	; 0x2a
 800c6b6:	d135      	bne.n	800c724 <_svfiprintf_r+0x188>
 800c6b8:	9b03      	ldr	r3, [sp, #12]
 800c6ba:	1d1a      	adds	r2, r3, #4
 800c6bc:	681b      	ldr	r3, [r3, #0]
 800c6be:	9203      	str	r2, [sp, #12]
 800c6c0:	2b00      	cmp	r3, #0
 800c6c2:	bfb8      	it	lt
 800c6c4:	f04f 33ff 	movlt.w	r3, #4294967295
 800c6c8:	3402      	adds	r4, #2
 800c6ca:	9305      	str	r3, [sp, #20]
 800c6cc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800c798 <_svfiprintf_r+0x1fc>
 800c6d0:	7821      	ldrb	r1, [r4, #0]
 800c6d2:	2203      	movs	r2, #3
 800c6d4:	4650      	mov	r0, sl
 800c6d6:	f7f3 fdcb 	bl	8000270 <memchr>
 800c6da:	b140      	cbz	r0, 800c6ee <_svfiprintf_r+0x152>
 800c6dc:	2340      	movs	r3, #64	; 0x40
 800c6de:	eba0 000a 	sub.w	r0, r0, sl
 800c6e2:	fa03 f000 	lsl.w	r0, r3, r0
 800c6e6:	9b04      	ldr	r3, [sp, #16]
 800c6e8:	4303      	orrs	r3, r0
 800c6ea:	3401      	adds	r4, #1
 800c6ec:	9304      	str	r3, [sp, #16]
 800c6ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c6f2:	4826      	ldr	r0, [pc, #152]	; (800c78c <_svfiprintf_r+0x1f0>)
 800c6f4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c6f8:	2206      	movs	r2, #6
 800c6fa:	f7f3 fdb9 	bl	8000270 <memchr>
 800c6fe:	2800      	cmp	r0, #0
 800c700:	d038      	beq.n	800c774 <_svfiprintf_r+0x1d8>
 800c702:	4b23      	ldr	r3, [pc, #140]	; (800c790 <_svfiprintf_r+0x1f4>)
 800c704:	bb1b      	cbnz	r3, 800c74e <_svfiprintf_r+0x1b2>
 800c706:	9b03      	ldr	r3, [sp, #12]
 800c708:	3307      	adds	r3, #7
 800c70a:	f023 0307 	bic.w	r3, r3, #7
 800c70e:	3308      	adds	r3, #8
 800c710:	9303      	str	r3, [sp, #12]
 800c712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c714:	4433      	add	r3, r6
 800c716:	9309      	str	r3, [sp, #36]	; 0x24
 800c718:	e767      	b.n	800c5ea <_svfiprintf_r+0x4e>
 800c71a:	fb0c 3202 	mla	r2, ip, r2, r3
 800c71e:	460c      	mov	r4, r1
 800c720:	2001      	movs	r0, #1
 800c722:	e7a5      	b.n	800c670 <_svfiprintf_r+0xd4>
 800c724:	2300      	movs	r3, #0
 800c726:	3401      	adds	r4, #1
 800c728:	9305      	str	r3, [sp, #20]
 800c72a:	4619      	mov	r1, r3
 800c72c:	f04f 0c0a 	mov.w	ip, #10
 800c730:	4620      	mov	r0, r4
 800c732:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c736:	3a30      	subs	r2, #48	; 0x30
 800c738:	2a09      	cmp	r2, #9
 800c73a:	d903      	bls.n	800c744 <_svfiprintf_r+0x1a8>
 800c73c:	2b00      	cmp	r3, #0
 800c73e:	d0c5      	beq.n	800c6cc <_svfiprintf_r+0x130>
 800c740:	9105      	str	r1, [sp, #20]
 800c742:	e7c3      	b.n	800c6cc <_svfiprintf_r+0x130>
 800c744:	fb0c 2101 	mla	r1, ip, r1, r2
 800c748:	4604      	mov	r4, r0
 800c74a:	2301      	movs	r3, #1
 800c74c:	e7f0      	b.n	800c730 <_svfiprintf_r+0x194>
 800c74e:	ab03      	add	r3, sp, #12
 800c750:	9300      	str	r3, [sp, #0]
 800c752:	462a      	mov	r2, r5
 800c754:	4b0f      	ldr	r3, [pc, #60]	; (800c794 <_svfiprintf_r+0x1f8>)
 800c756:	a904      	add	r1, sp, #16
 800c758:	4638      	mov	r0, r7
 800c75a:	f7fc fa79 	bl	8008c50 <_printf_float>
 800c75e:	1c42      	adds	r2, r0, #1
 800c760:	4606      	mov	r6, r0
 800c762:	d1d6      	bne.n	800c712 <_svfiprintf_r+0x176>
 800c764:	89ab      	ldrh	r3, [r5, #12]
 800c766:	065b      	lsls	r3, r3, #25
 800c768:	f53f af2c 	bmi.w	800c5c4 <_svfiprintf_r+0x28>
 800c76c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c76e:	b01d      	add	sp, #116	; 0x74
 800c770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c774:	ab03      	add	r3, sp, #12
 800c776:	9300      	str	r3, [sp, #0]
 800c778:	462a      	mov	r2, r5
 800c77a:	4b06      	ldr	r3, [pc, #24]	; (800c794 <_svfiprintf_r+0x1f8>)
 800c77c:	a904      	add	r1, sp, #16
 800c77e:	4638      	mov	r0, r7
 800c780:	f7fc fcf2 	bl	8009168 <_printf_i>
 800c784:	e7eb      	b.n	800c75e <_svfiprintf_r+0x1c2>
 800c786:	bf00      	nop
 800c788:	0800eb14 	.word	0x0800eb14
 800c78c:	0800eb1e 	.word	0x0800eb1e
 800c790:	08008c51 	.word	0x08008c51
 800c794:	0800c4e5 	.word	0x0800c4e5
 800c798:	0800eb1a 	.word	0x0800eb1a

0800c79c <_sungetc_r>:
 800c79c:	b538      	push	{r3, r4, r5, lr}
 800c79e:	1c4b      	adds	r3, r1, #1
 800c7a0:	4614      	mov	r4, r2
 800c7a2:	d103      	bne.n	800c7ac <_sungetc_r+0x10>
 800c7a4:	f04f 35ff 	mov.w	r5, #4294967295
 800c7a8:	4628      	mov	r0, r5
 800c7aa:	bd38      	pop	{r3, r4, r5, pc}
 800c7ac:	8993      	ldrh	r3, [r2, #12]
 800c7ae:	f023 0320 	bic.w	r3, r3, #32
 800c7b2:	8193      	strh	r3, [r2, #12]
 800c7b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c7b6:	6852      	ldr	r2, [r2, #4]
 800c7b8:	b2cd      	uxtb	r5, r1
 800c7ba:	b18b      	cbz	r3, 800c7e0 <_sungetc_r+0x44>
 800c7bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c7be:	4293      	cmp	r3, r2
 800c7c0:	dd08      	ble.n	800c7d4 <_sungetc_r+0x38>
 800c7c2:	6823      	ldr	r3, [r4, #0]
 800c7c4:	1e5a      	subs	r2, r3, #1
 800c7c6:	6022      	str	r2, [r4, #0]
 800c7c8:	f803 5c01 	strb.w	r5, [r3, #-1]
 800c7cc:	6863      	ldr	r3, [r4, #4]
 800c7ce:	3301      	adds	r3, #1
 800c7d0:	6063      	str	r3, [r4, #4]
 800c7d2:	e7e9      	b.n	800c7a8 <_sungetc_r+0xc>
 800c7d4:	4621      	mov	r1, r4
 800c7d6:	f000 fbe3 	bl	800cfa0 <__submore>
 800c7da:	2800      	cmp	r0, #0
 800c7dc:	d0f1      	beq.n	800c7c2 <_sungetc_r+0x26>
 800c7de:	e7e1      	b.n	800c7a4 <_sungetc_r+0x8>
 800c7e0:	6921      	ldr	r1, [r4, #16]
 800c7e2:	6823      	ldr	r3, [r4, #0]
 800c7e4:	b151      	cbz	r1, 800c7fc <_sungetc_r+0x60>
 800c7e6:	4299      	cmp	r1, r3
 800c7e8:	d208      	bcs.n	800c7fc <_sungetc_r+0x60>
 800c7ea:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800c7ee:	42a9      	cmp	r1, r5
 800c7f0:	d104      	bne.n	800c7fc <_sungetc_r+0x60>
 800c7f2:	3b01      	subs	r3, #1
 800c7f4:	3201      	adds	r2, #1
 800c7f6:	6023      	str	r3, [r4, #0]
 800c7f8:	6062      	str	r2, [r4, #4]
 800c7fa:	e7d5      	b.n	800c7a8 <_sungetc_r+0xc>
 800c7fc:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800c800:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c804:	6363      	str	r3, [r4, #52]	; 0x34
 800c806:	2303      	movs	r3, #3
 800c808:	63a3      	str	r3, [r4, #56]	; 0x38
 800c80a:	4623      	mov	r3, r4
 800c80c:	f803 5f46 	strb.w	r5, [r3, #70]!
 800c810:	6023      	str	r3, [r4, #0]
 800c812:	2301      	movs	r3, #1
 800c814:	e7dc      	b.n	800c7d0 <_sungetc_r+0x34>

0800c816 <__ssrefill_r>:
 800c816:	b510      	push	{r4, lr}
 800c818:	460c      	mov	r4, r1
 800c81a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800c81c:	b169      	cbz	r1, 800c83a <__ssrefill_r+0x24>
 800c81e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c822:	4299      	cmp	r1, r3
 800c824:	d001      	beq.n	800c82a <__ssrefill_r+0x14>
 800c826:	f7ff fdb3 	bl	800c390 <_free_r>
 800c82a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c82c:	6063      	str	r3, [r4, #4]
 800c82e:	2000      	movs	r0, #0
 800c830:	6360      	str	r0, [r4, #52]	; 0x34
 800c832:	b113      	cbz	r3, 800c83a <__ssrefill_r+0x24>
 800c834:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c836:	6023      	str	r3, [r4, #0]
 800c838:	bd10      	pop	{r4, pc}
 800c83a:	6923      	ldr	r3, [r4, #16]
 800c83c:	6023      	str	r3, [r4, #0]
 800c83e:	2300      	movs	r3, #0
 800c840:	6063      	str	r3, [r4, #4]
 800c842:	89a3      	ldrh	r3, [r4, #12]
 800c844:	f043 0320 	orr.w	r3, r3, #32
 800c848:	81a3      	strh	r3, [r4, #12]
 800c84a:	f04f 30ff 	mov.w	r0, #4294967295
 800c84e:	e7f3      	b.n	800c838 <__ssrefill_r+0x22>

0800c850 <__ssvfiscanf_r>:
 800c850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c854:	460c      	mov	r4, r1
 800c856:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 800c85a:	2100      	movs	r1, #0
 800c85c:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800c860:	49b2      	ldr	r1, [pc, #712]	; (800cb2c <__ssvfiscanf_r+0x2dc>)
 800c862:	91a0      	str	r1, [sp, #640]	; 0x280
 800c864:	f10d 0804 	add.w	r8, sp, #4
 800c868:	49b1      	ldr	r1, [pc, #708]	; (800cb30 <__ssvfiscanf_r+0x2e0>)
 800c86a:	4fb2      	ldr	r7, [pc, #712]	; (800cb34 <__ssvfiscanf_r+0x2e4>)
 800c86c:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 800cb38 <__ssvfiscanf_r+0x2e8>
 800c870:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800c874:	4606      	mov	r6, r0
 800c876:	91a1      	str	r1, [sp, #644]	; 0x284
 800c878:	9300      	str	r3, [sp, #0]
 800c87a:	f892 a000 	ldrb.w	sl, [r2]
 800c87e:	f1ba 0f00 	cmp.w	sl, #0
 800c882:	f000 8151 	beq.w	800cb28 <__ssvfiscanf_r+0x2d8>
 800c886:	f81a 3007 	ldrb.w	r3, [sl, r7]
 800c88a:	f013 0308 	ands.w	r3, r3, #8
 800c88e:	f102 0501 	add.w	r5, r2, #1
 800c892:	d019      	beq.n	800c8c8 <__ssvfiscanf_r+0x78>
 800c894:	6863      	ldr	r3, [r4, #4]
 800c896:	2b00      	cmp	r3, #0
 800c898:	dd0f      	ble.n	800c8ba <__ssvfiscanf_r+0x6a>
 800c89a:	6823      	ldr	r3, [r4, #0]
 800c89c:	781a      	ldrb	r2, [r3, #0]
 800c89e:	5cba      	ldrb	r2, [r7, r2]
 800c8a0:	0712      	lsls	r2, r2, #28
 800c8a2:	d401      	bmi.n	800c8a8 <__ssvfiscanf_r+0x58>
 800c8a4:	462a      	mov	r2, r5
 800c8a6:	e7e8      	b.n	800c87a <__ssvfiscanf_r+0x2a>
 800c8a8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800c8aa:	3201      	adds	r2, #1
 800c8ac:	9245      	str	r2, [sp, #276]	; 0x114
 800c8ae:	6862      	ldr	r2, [r4, #4]
 800c8b0:	3301      	adds	r3, #1
 800c8b2:	3a01      	subs	r2, #1
 800c8b4:	6062      	str	r2, [r4, #4]
 800c8b6:	6023      	str	r3, [r4, #0]
 800c8b8:	e7ec      	b.n	800c894 <__ssvfiscanf_r+0x44>
 800c8ba:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800c8bc:	4621      	mov	r1, r4
 800c8be:	4630      	mov	r0, r6
 800c8c0:	4798      	blx	r3
 800c8c2:	2800      	cmp	r0, #0
 800c8c4:	d0e9      	beq.n	800c89a <__ssvfiscanf_r+0x4a>
 800c8c6:	e7ed      	b.n	800c8a4 <__ssvfiscanf_r+0x54>
 800c8c8:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 800c8cc:	f040 8083 	bne.w	800c9d6 <__ssvfiscanf_r+0x186>
 800c8d0:	9341      	str	r3, [sp, #260]	; 0x104
 800c8d2:	9343      	str	r3, [sp, #268]	; 0x10c
 800c8d4:	7853      	ldrb	r3, [r2, #1]
 800c8d6:	2b2a      	cmp	r3, #42	; 0x2a
 800c8d8:	bf02      	ittt	eq
 800c8da:	2310      	moveq	r3, #16
 800c8dc:	1c95      	addeq	r5, r2, #2
 800c8de:	9341      	streq	r3, [sp, #260]	; 0x104
 800c8e0:	220a      	movs	r2, #10
 800c8e2:	46ab      	mov	fp, r5
 800c8e4:	f81b 1b01 	ldrb.w	r1, [fp], #1
 800c8e8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800c8ec:	2b09      	cmp	r3, #9
 800c8ee:	d91d      	bls.n	800c92c <__ssvfiscanf_r+0xdc>
 800c8f0:	4891      	ldr	r0, [pc, #580]	; (800cb38 <__ssvfiscanf_r+0x2e8>)
 800c8f2:	2203      	movs	r2, #3
 800c8f4:	f7f3 fcbc 	bl	8000270 <memchr>
 800c8f8:	b140      	cbz	r0, 800c90c <__ssvfiscanf_r+0xbc>
 800c8fa:	2301      	movs	r3, #1
 800c8fc:	eba0 0009 	sub.w	r0, r0, r9
 800c900:	fa03 f000 	lsl.w	r0, r3, r0
 800c904:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800c906:	4318      	orrs	r0, r3
 800c908:	9041      	str	r0, [sp, #260]	; 0x104
 800c90a:	465d      	mov	r5, fp
 800c90c:	f815 3b01 	ldrb.w	r3, [r5], #1
 800c910:	2b78      	cmp	r3, #120	; 0x78
 800c912:	d806      	bhi.n	800c922 <__ssvfiscanf_r+0xd2>
 800c914:	2b57      	cmp	r3, #87	; 0x57
 800c916:	d810      	bhi.n	800c93a <__ssvfiscanf_r+0xea>
 800c918:	2b25      	cmp	r3, #37	; 0x25
 800c91a:	d05c      	beq.n	800c9d6 <__ssvfiscanf_r+0x186>
 800c91c:	d856      	bhi.n	800c9cc <__ssvfiscanf_r+0x17c>
 800c91e:	2b00      	cmp	r3, #0
 800c920:	d074      	beq.n	800ca0c <__ssvfiscanf_r+0x1bc>
 800c922:	2303      	movs	r3, #3
 800c924:	9347      	str	r3, [sp, #284]	; 0x11c
 800c926:	230a      	movs	r3, #10
 800c928:	9342      	str	r3, [sp, #264]	; 0x108
 800c92a:	e081      	b.n	800ca30 <__ssvfiscanf_r+0x1e0>
 800c92c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800c92e:	fb02 1303 	mla	r3, r2, r3, r1
 800c932:	3b30      	subs	r3, #48	; 0x30
 800c934:	9343      	str	r3, [sp, #268]	; 0x10c
 800c936:	465d      	mov	r5, fp
 800c938:	e7d3      	b.n	800c8e2 <__ssvfiscanf_r+0x92>
 800c93a:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800c93e:	2a20      	cmp	r2, #32
 800c940:	d8ef      	bhi.n	800c922 <__ssvfiscanf_r+0xd2>
 800c942:	a101      	add	r1, pc, #4	; (adr r1, 800c948 <__ssvfiscanf_r+0xf8>)
 800c944:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800c948:	0800ca1b 	.word	0x0800ca1b
 800c94c:	0800c923 	.word	0x0800c923
 800c950:	0800c923 	.word	0x0800c923
 800c954:	0800ca79 	.word	0x0800ca79
 800c958:	0800c923 	.word	0x0800c923
 800c95c:	0800c923 	.word	0x0800c923
 800c960:	0800c923 	.word	0x0800c923
 800c964:	0800c923 	.word	0x0800c923
 800c968:	0800c923 	.word	0x0800c923
 800c96c:	0800c923 	.word	0x0800c923
 800c970:	0800c923 	.word	0x0800c923
 800c974:	0800ca8f 	.word	0x0800ca8f
 800c978:	0800ca65 	.word	0x0800ca65
 800c97c:	0800c9d3 	.word	0x0800c9d3
 800c980:	0800c9d3 	.word	0x0800c9d3
 800c984:	0800c9d3 	.word	0x0800c9d3
 800c988:	0800c923 	.word	0x0800c923
 800c98c:	0800ca69 	.word	0x0800ca69
 800c990:	0800c923 	.word	0x0800c923
 800c994:	0800c923 	.word	0x0800c923
 800c998:	0800c923 	.word	0x0800c923
 800c99c:	0800c923 	.word	0x0800c923
 800c9a0:	0800ca9f 	.word	0x0800ca9f
 800c9a4:	0800ca71 	.word	0x0800ca71
 800c9a8:	0800ca13 	.word	0x0800ca13
 800c9ac:	0800c923 	.word	0x0800c923
 800c9b0:	0800c923 	.word	0x0800c923
 800c9b4:	0800ca9b 	.word	0x0800ca9b
 800c9b8:	0800c923 	.word	0x0800c923
 800c9bc:	0800ca65 	.word	0x0800ca65
 800c9c0:	0800c923 	.word	0x0800c923
 800c9c4:	0800c923 	.word	0x0800c923
 800c9c8:	0800ca1b 	.word	0x0800ca1b
 800c9cc:	3b45      	subs	r3, #69	; 0x45
 800c9ce:	2b02      	cmp	r3, #2
 800c9d0:	d8a7      	bhi.n	800c922 <__ssvfiscanf_r+0xd2>
 800c9d2:	2305      	movs	r3, #5
 800c9d4:	e02b      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800c9d6:	6863      	ldr	r3, [r4, #4]
 800c9d8:	2b00      	cmp	r3, #0
 800c9da:	dd0d      	ble.n	800c9f8 <__ssvfiscanf_r+0x1a8>
 800c9dc:	6823      	ldr	r3, [r4, #0]
 800c9de:	781a      	ldrb	r2, [r3, #0]
 800c9e0:	4552      	cmp	r2, sl
 800c9e2:	f040 80a1 	bne.w	800cb28 <__ssvfiscanf_r+0x2d8>
 800c9e6:	3301      	adds	r3, #1
 800c9e8:	6862      	ldr	r2, [r4, #4]
 800c9ea:	6023      	str	r3, [r4, #0]
 800c9ec:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800c9ee:	3a01      	subs	r2, #1
 800c9f0:	3301      	adds	r3, #1
 800c9f2:	6062      	str	r2, [r4, #4]
 800c9f4:	9345      	str	r3, [sp, #276]	; 0x114
 800c9f6:	e755      	b.n	800c8a4 <__ssvfiscanf_r+0x54>
 800c9f8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800c9fa:	4621      	mov	r1, r4
 800c9fc:	4630      	mov	r0, r6
 800c9fe:	4798      	blx	r3
 800ca00:	2800      	cmp	r0, #0
 800ca02:	d0eb      	beq.n	800c9dc <__ssvfiscanf_r+0x18c>
 800ca04:	9844      	ldr	r0, [sp, #272]	; 0x110
 800ca06:	2800      	cmp	r0, #0
 800ca08:	f040 8084 	bne.w	800cb14 <__ssvfiscanf_r+0x2c4>
 800ca0c:	f04f 30ff 	mov.w	r0, #4294967295
 800ca10:	e086      	b.n	800cb20 <__ssvfiscanf_r+0x2d0>
 800ca12:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800ca14:	f042 0220 	orr.w	r2, r2, #32
 800ca18:	9241      	str	r2, [sp, #260]	; 0x104
 800ca1a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800ca1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ca20:	9241      	str	r2, [sp, #260]	; 0x104
 800ca22:	2210      	movs	r2, #16
 800ca24:	2b6f      	cmp	r3, #111	; 0x6f
 800ca26:	9242      	str	r2, [sp, #264]	; 0x108
 800ca28:	bf34      	ite	cc
 800ca2a:	2303      	movcc	r3, #3
 800ca2c:	2304      	movcs	r3, #4
 800ca2e:	9347      	str	r3, [sp, #284]	; 0x11c
 800ca30:	6863      	ldr	r3, [r4, #4]
 800ca32:	2b00      	cmp	r3, #0
 800ca34:	dd41      	ble.n	800caba <__ssvfiscanf_r+0x26a>
 800ca36:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ca38:	0659      	lsls	r1, r3, #25
 800ca3a:	d404      	bmi.n	800ca46 <__ssvfiscanf_r+0x1f6>
 800ca3c:	6823      	ldr	r3, [r4, #0]
 800ca3e:	781a      	ldrb	r2, [r3, #0]
 800ca40:	5cba      	ldrb	r2, [r7, r2]
 800ca42:	0712      	lsls	r2, r2, #28
 800ca44:	d440      	bmi.n	800cac8 <__ssvfiscanf_r+0x278>
 800ca46:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800ca48:	2b02      	cmp	r3, #2
 800ca4a:	dc4f      	bgt.n	800caec <__ssvfiscanf_r+0x29c>
 800ca4c:	466b      	mov	r3, sp
 800ca4e:	4622      	mov	r2, r4
 800ca50:	a941      	add	r1, sp, #260	; 0x104
 800ca52:	4630      	mov	r0, r6
 800ca54:	f000 f874 	bl	800cb40 <_scanf_chars>
 800ca58:	2801      	cmp	r0, #1
 800ca5a:	d065      	beq.n	800cb28 <__ssvfiscanf_r+0x2d8>
 800ca5c:	2802      	cmp	r0, #2
 800ca5e:	f47f af21 	bne.w	800c8a4 <__ssvfiscanf_r+0x54>
 800ca62:	e7cf      	b.n	800ca04 <__ssvfiscanf_r+0x1b4>
 800ca64:	220a      	movs	r2, #10
 800ca66:	e7dd      	b.n	800ca24 <__ssvfiscanf_r+0x1d4>
 800ca68:	2300      	movs	r3, #0
 800ca6a:	9342      	str	r3, [sp, #264]	; 0x108
 800ca6c:	2303      	movs	r3, #3
 800ca6e:	e7de      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800ca70:	2308      	movs	r3, #8
 800ca72:	9342      	str	r3, [sp, #264]	; 0x108
 800ca74:	2304      	movs	r3, #4
 800ca76:	e7da      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800ca78:	4629      	mov	r1, r5
 800ca7a:	4640      	mov	r0, r8
 800ca7c:	f000 f9d8 	bl	800ce30 <__sccl>
 800ca80:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ca82:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ca86:	9341      	str	r3, [sp, #260]	; 0x104
 800ca88:	4605      	mov	r5, r0
 800ca8a:	2301      	movs	r3, #1
 800ca8c:	e7cf      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800ca8e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ca90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ca94:	9341      	str	r3, [sp, #260]	; 0x104
 800ca96:	2300      	movs	r3, #0
 800ca98:	e7c9      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800ca9a:	2302      	movs	r3, #2
 800ca9c:	e7c7      	b.n	800ca2e <__ssvfiscanf_r+0x1de>
 800ca9e:	9841      	ldr	r0, [sp, #260]	; 0x104
 800caa0:	06c3      	lsls	r3, r0, #27
 800caa2:	f53f aeff 	bmi.w	800c8a4 <__ssvfiscanf_r+0x54>
 800caa6:	9b00      	ldr	r3, [sp, #0]
 800caa8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800caaa:	1d19      	adds	r1, r3, #4
 800caac:	9100      	str	r1, [sp, #0]
 800caae:	681b      	ldr	r3, [r3, #0]
 800cab0:	07c0      	lsls	r0, r0, #31
 800cab2:	bf4c      	ite	mi
 800cab4:	801a      	strhmi	r2, [r3, #0]
 800cab6:	601a      	strpl	r2, [r3, #0]
 800cab8:	e6f4      	b.n	800c8a4 <__ssvfiscanf_r+0x54>
 800caba:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800cabc:	4621      	mov	r1, r4
 800cabe:	4630      	mov	r0, r6
 800cac0:	4798      	blx	r3
 800cac2:	2800      	cmp	r0, #0
 800cac4:	d0b7      	beq.n	800ca36 <__ssvfiscanf_r+0x1e6>
 800cac6:	e79d      	b.n	800ca04 <__ssvfiscanf_r+0x1b4>
 800cac8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800caca:	3201      	adds	r2, #1
 800cacc:	9245      	str	r2, [sp, #276]	; 0x114
 800cace:	6862      	ldr	r2, [r4, #4]
 800cad0:	3a01      	subs	r2, #1
 800cad2:	2a00      	cmp	r2, #0
 800cad4:	6062      	str	r2, [r4, #4]
 800cad6:	dd02      	ble.n	800cade <__ssvfiscanf_r+0x28e>
 800cad8:	3301      	adds	r3, #1
 800cada:	6023      	str	r3, [r4, #0]
 800cadc:	e7ae      	b.n	800ca3c <__ssvfiscanf_r+0x1ec>
 800cade:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800cae0:	4621      	mov	r1, r4
 800cae2:	4630      	mov	r0, r6
 800cae4:	4798      	blx	r3
 800cae6:	2800      	cmp	r0, #0
 800cae8:	d0a8      	beq.n	800ca3c <__ssvfiscanf_r+0x1ec>
 800caea:	e78b      	b.n	800ca04 <__ssvfiscanf_r+0x1b4>
 800caec:	2b04      	cmp	r3, #4
 800caee:	dc06      	bgt.n	800cafe <__ssvfiscanf_r+0x2ae>
 800caf0:	466b      	mov	r3, sp
 800caf2:	4622      	mov	r2, r4
 800caf4:	a941      	add	r1, sp, #260	; 0x104
 800caf6:	4630      	mov	r0, r6
 800caf8:	f000 f87a 	bl	800cbf0 <_scanf_i>
 800cafc:	e7ac      	b.n	800ca58 <__ssvfiscanf_r+0x208>
 800cafe:	4b0f      	ldr	r3, [pc, #60]	; (800cb3c <__ssvfiscanf_r+0x2ec>)
 800cb00:	2b00      	cmp	r3, #0
 800cb02:	f43f aecf 	beq.w	800c8a4 <__ssvfiscanf_r+0x54>
 800cb06:	466b      	mov	r3, sp
 800cb08:	4622      	mov	r2, r4
 800cb0a:	a941      	add	r1, sp, #260	; 0x104
 800cb0c:	4630      	mov	r0, r6
 800cb0e:	f7fc fc51 	bl	80093b4 <_scanf_float>
 800cb12:	e7a1      	b.n	800ca58 <__ssvfiscanf_r+0x208>
 800cb14:	89a3      	ldrh	r3, [r4, #12]
 800cb16:	f013 0f40 	tst.w	r3, #64	; 0x40
 800cb1a:	bf18      	it	ne
 800cb1c:	f04f 30ff 	movne.w	r0, #4294967295
 800cb20:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 800cb24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb28:	9844      	ldr	r0, [sp, #272]	; 0x110
 800cb2a:	e7f9      	b.n	800cb20 <__ssvfiscanf_r+0x2d0>
 800cb2c:	0800c79d 	.word	0x0800c79d
 800cb30:	0800c817 	.word	0x0800c817
 800cb34:	0800e7a1 	.word	0x0800e7a1
 800cb38:	0800eb1a 	.word	0x0800eb1a
 800cb3c:	080093b5 	.word	0x080093b5

0800cb40 <_scanf_chars>:
 800cb40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cb44:	4615      	mov	r5, r2
 800cb46:	688a      	ldr	r2, [r1, #8]
 800cb48:	4680      	mov	r8, r0
 800cb4a:	460c      	mov	r4, r1
 800cb4c:	b932      	cbnz	r2, 800cb5c <_scanf_chars+0x1c>
 800cb4e:	698a      	ldr	r2, [r1, #24]
 800cb50:	2a00      	cmp	r2, #0
 800cb52:	bf0c      	ite	eq
 800cb54:	2201      	moveq	r2, #1
 800cb56:	f04f 32ff 	movne.w	r2, #4294967295
 800cb5a:	608a      	str	r2, [r1, #8]
 800cb5c:	6822      	ldr	r2, [r4, #0]
 800cb5e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800cbec <_scanf_chars+0xac>
 800cb62:	06d1      	lsls	r1, r2, #27
 800cb64:	bf5f      	itttt	pl
 800cb66:	681a      	ldrpl	r2, [r3, #0]
 800cb68:	1d11      	addpl	r1, r2, #4
 800cb6a:	6019      	strpl	r1, [r3, #0]
 800cb6c:	6816      	ldrpl	r6, [r2, #0]
 800cb6e:	2700      	movs	r7, #0
 800cb70:	69a0      	ldr	r0, [r4, #24]
 800cb72:	b188      	cbz	r0, 800cb98 <_scanf_chars+0x58>
 800cb74:	2801      	cmp	r0, #1
 800cb76:	d107      	bne.n	800cb88 <_scanf_chars+0x48>
 800cb78:	682b      	ldr	r3, [r5, #0]
 800cb7a:	781a      	ldrb	r2, [r3, #0]
 800cb7c:	6963      	ldr	r3, [r4, #20]
 800cb7e:	5c9b      	ldrb	r3, [r3, r2]
 800cb80:	b953      	cbnz	r3, 800cb98 <_scanf_chars+0x58>
 800cb82:	bb27      	cbnz	r7, 800cbce <_scanf_chars+0x8e>
 800cb84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cb88:	2802      	cmp	r0, #2
 800cb8a:	d120      	bne.n	800cbce <_scanf_chars+0x8e>
 800cb8c:	682b      	ldr	r3, [r5, #0]
 800cb8e:	781b      	ldrb	r3, [r3, #0]
 800cb90:	f813 3009 	ldrb.w	r3, [r3, r9]
 800cb94:	071b      	lsls	r3, r3, #28
 800cb96:	d41a      	bmi.n	800cbce <_scanf_chars+0x8e>
 800cb98:	6823      	ldr	r3, [r4, #0]
 800cb9a:	06da      	lsls	r2, r3, #27
 800cb9c:	bf5e      	ittt	pl
 800cb9e:	682b      	ldrpl	r3, [r5, #0]
 800cba0:	781b      	ldrbpl	r3, [r3, #0]
 800cba2:	f806 3b01 	strbpl.w	r3, [r6], #1
 800cba6:	682a      	ldr	r2, [r5, #0]
 800cba8:	686b      	ldr	r3, [r5, #4]
 800cbaa:	3201      	adds	r2, #1
 800cbac:	602a      	str	r2, [r5, #0]
 800cbae:	68a2      	ldr	r2, [r4, #8]
 800cbb0:	3b01      	subs	r3, #1
 800cbb2:	3a01      	subs	r2, #1
 800cbb4:	606b      	str	r3, [r5, #4]
 800cbb6:	3701      	adds	r7, #1
 800cbb8:	60a2      	str	r2, [r4, #8]
 800cbba:	b142      	cbz	r2, 800cbce <_scanf_chars+0x8e>
 800cbbc:	2b00      	cmp	r3, #0
 800cbbe:	dcd7      	bgt.n	800cb70 <_scanf_chars+0x30>
 800cbc0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800cbc4:	4629      	mov	r1, r5
 800cbc6:	4640      	mov	r0, r8
 800cbc8:	4798      	blx	r3
 800cbca:	2800      	cmp	r0, #0
 800cbcc:	d0d0      	beq.n	800cb70 <_scanf_chars+0x30>
 800cbce:	6823      	ldr	r3, [r4, #0]
 800cbd0:	f013 0310 	ands.w	r3, r3, #16
 800cbd4:	d105      	bne.n	800cbe2 <_scanf_chars+0xa2>
 800cbd6:	68e2      	ldr	r2, [r4, #12]
 800cbd8:	3201      	adds	r2, #1
 800cbda:	60e2      	str	r2, [r4, #12]
 800cbdc:	69a2      	ldr	r2, [r4, #24]
 800cbde:	b102      	cbz	r2, 800cbe2 <_scanf_chars+0xa2>
 800cbe0:	7033      	strb	r3, [r6, #0]
 800cbe2:	6923      	ldr	r3, [r4, #16]
 800cbe4:	441f      	add	r7, r3
 800cbe6:	6127      	str	r7, [r4, #16]
 800cbe8:	2000      	movs	r0, #0
 800cbea:	e7cb      	b.n	800cb84 <_scanf_chars+0x44>
 800cbec:	0800e7a1 	.word	0x0800e7a1

0800cbf0 <_scanf_i>:
 800cbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbf4:	4698      	mov	r8, r3
 800cbf6:	4b74      	ldr	r3, [pc, #464]	; (800cdc8 <_scanf_i+0x1d8>)
 800cbf8:	460c      	mov	r4, r1
 800cbfa:	4682      	mov	sl, r0
 800cbfc:	4616      	mov	r6, r2
 800cbfe:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800cc02:	b087      	sub	sp, #28
 800cc04:	ab03      	add	r3, sp, #12
 800cc06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800cc0a:	4b70      	ldr	r3, [pc, #448]	; (800cdcc <_scanf_i+0x1dc>)
 800cc0c:	69a1      	ldr	r1, [r4, #24]
 800cc0e:	4a70      	ldr	r2, [pc, #448]	; (800cdd0 <_scanf_i+0x1e0>)
 800cc10:	2903      	cmp	r1, #3
 800cc12:	bf18      	it	ne
 800cc14:	461a      	movne	r2, r3
 800cc16:	68a3      	ldr	r3, [r4, #8]
 800cc18:	9201      	str	r2, [sp, #4]
 800cc1a:	1e5a      	subs	r2, r3, #1
 800cc1c:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800cc20:	bf88      	it	hi
 800cc22:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800cc26:	4627      	mov	r7, r4
 800cc28:	bf82      	ittt	hi
 800cc2a:	eb03 0905 	addhi.w	r9, r3, r5
 800cc2e:	f240 135d 	movwhi	r3, #349	; 0x15d
 800cc32:	60a3      	strhi	r3, [r4, #8]
 800cc34:	f857 3b1c 	ldr.w	r3, [r7], #28
 800cc38:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800cc3c:	bf98      	it	ls
 800cc3e:	f04f 0900 	movls.w	r9, #0
 800cc42:	6023      	str	r3, [r4, #0]
 800cc44:	463d      	mov	r5, r7
 800cc46:	f04f 0b00 	mov.w	fp, #0
 800cc4a:	6831      	ldr	r1, [r6, #0]
 800cc4c:	ab03      	add	r3, sp, #12
 800cc4e:	7809      	ldrb	r1, [r1, #0]
 800cc50:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800cc54:	2202      	movs	r2, #2
 800cc56:	f7f3 fb0b 	bl	8000270 <memchr>
 800cc5a:	b328      	cbz	r0, 800cca8 <_scanf_i+0xb8>
 800cc5c:	f1bb 0f01 	cmp.w	fp, #1
 800cc60:	d159      	bne.n	800cd16 <_scanf_i+0x126>
 800cc62:	6862      	ldr	r2, [r4, #4]
 800cc64:	b92a      	cbnz	r2, 800cc72 <_scanf_i+0x82>
 800cc66:	6822      	ldr	r2, [r4, #0]
 800cc68:	2308      	movs	r3, #8
 800cc6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cc6e:	6063      	str	r3, [r4, #4]
 800cc70:	6022      	str	r2, [r4, #0]
 800cc72:	6822      	ldr	r2, [r4, #0]
 800cc74:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800cc78:	6022      	str	r2, [r4, #0]
 800cc7a:	68a2      	ldr	r2, [r4, #8]
 800cc7c:	1e51      	subs	r1, r2, #1
 800cc7e:	60a1      	str	r1, [r4, #8]
 800cc80:	b192      	cbz	r2, 800cca8 <_scanf_i+0xb8>
 800cc82:	6832      	ldr	r2, [r6, #0]
 800cc84:	1c51      	adds	r1, r2, #1
 800cc86:	6031      	str	r1, [r6, #0]
 800cc88:	7812      	ldrb	r2, [r2, #0]
 800cc8a:	f805 2b01 	strb.w	r2, [r5], #1
 800cc8e:	6872      	ldr	r2, [r6, #4]
 800cc90:	3a01      	subs	r2, #1
 800cc92:	2a00      	cmp	r2, #0
 800cc94:	6072      	str	r2, [r6, #4]
 800cc96:	dc07      	bgt.n	800cca8 <_scanf_i+0xb8>
 800cc98:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800cc9c:	4631      	mov	r1, r6
 800cc9e:	4650      	mov	r0, sl
 800cca0:	4790      	blx	r2
 800cca2:	2800      	cmp	r0, #0
 800cca4:	f040 8085 	bne.w	800cdb2 <_scanf_i+0x1c2>
 800cca8:	f10b 0b01 	add.w	fp, fp, #1
 800ccac:	f1bb 0f03 	cmp.w	fp, #3
 800ccb0:	d1cb      	bne.n	800cc4a <_scanf_i+0x5a>
 800ccb2:	6863      	ldr	r3, [r4, #4]
 800ccb4:	b90b      	cbnz	r3, 800ccba <_scanf_i+0xca>
 800ccb6:	230a      	movs	r3, #10
 800ccb8:	6063      	str	r3, [r4, #4]
 800ccba:	6863      	ldr	r3, [r4, #4]
 800ccbc:	4945      	ldr	r1, [pc, #276]	; (800cdd4 <_scanf_i+0x1e4>)
 800ccbe:	6960      	ldr	r0, [r4, #20]
 800ccc0:	1ac9      	subs	r1, r1, r3
 800ccc2:	f000 f8b5 	bl	800ce30 <__sccl>
 800ccc6:	f04f 0b00 	mov.w	fp, #0
 800ccca:	68a3      	ldr	r3, [r4, #8]
 800cccc:	6822      	ldr	r2, [r4, #0]
 800ccce:	2b00      	cmp	r3, #0
 800ccd0:	d03d      	beq.n	800cd4e <_scanf_i+0x15e>
 800ccd2:	6831      	ldr	r1, [r6, #0]
 800ccd4:	6960      	ldr	r0, [r4, #20]
 800ccd6:	f891 c000 	ldrb.w	ip, [r1]
 800ccda:	f810 000c 	ldrb.w	r0, [r0, ip]
 800ccde:	2800      	cmp	r0, #0
 800cce0:	d035      	beq.n	800cd4e <_scanf_i+0x15e>
 800cce2:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800cce6:	d124      	bne.n	800cd32 <_scanf_i+0x142>
 800cce8:	0510      	lsls	r0, r2, #20
 800ccea:	d522      	bpl.n	800cd32 <_scanf_i+0x142>
 800ccec:	f10b 0b01 	add.w	fp, fp, #1
 800ccf0:	f1b9 0f00 	cmp.w	r9, #0
 800ccf4:	d003      	beq.n	800ccfe <_scanf_i+0x10e>
 800ccf6:	3301      	adds	r3, #1
 800ccf8:	f109 39ff 	add.w	r9, r9, #4294967295
 800ccfc:	60a3      	str	r3, [r4, #8]
 800ccfe:	6873      	ldr	r3, [r6, #4]
 800cd00:	3b01      	subs	r3, #1
 800cd02:	2b00      	cmp	r3, #0
 800cd04:	6073      	str	r3, [r6, #4]
 800cd06:	dd1b      	ble.n	800cd40 <_scanf_i+0x150>
 800cd08:	6833      	ldr	r3, [r6, #0]
 800cd0a:	3301      	adds	r3, #1
 800cd0c:	6033      	str	r3, [r6, #0]
 800cd0e:	68a3      	ldr	r3, [r4, #8]
 800cd10:	3b01      	subs	r3, #1
 800cd12:	60a3      	str	r3, [r4, #8]
 800cd14:	e7d9      	b.n	800ccca <_scanf_i+0xda>
 800cd16:	f1bb 0f02 	cmp.w	fp, #2
 800cd1a:	d1ae      	bne.n	800cc7a <_scanf_i+0x8a>
 800cd1c:	6822      	ldr	r2, [r4, #0]
 800cd1e:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800cd22:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800cd26:	d1bf      	bne.n	800cca8 <_scanf_i+0xb8>
 800cd28:	2310      	movs	r3, #16
 800cd2a:	6063      	str	r3, [r4, #4]
 800cd2c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cd30:	e7a2      	b.n	800cc78 <_scanf_i+0x88>
 800cd32:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800cd36:	6022      	str	r2, [r4, #0]
 800cd38:	780b      	ldrb	r3, [r1, #0]
 800cd3a:	f805 3b01 	strb.w	r3, [r5], #1
 800cd3e:	e7de      	b.n	800ccfe <_scanf_i+0x10e>
 800cd40:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800cd44:	4631      	mov	r1, r6
 800cd46:	4650      	mov	r0, sl
 800cd48:	4798      	blx	r3
 800cd4a:	2800      	cmp	r0, #0
 800cd4c:	d0df      	beq.n	800cd0e <_scanf_i+0x11e>
 800cd4e:	6823      	ldr	r3, [r4, #0]
 800cd50:	05d9      	lsls	r1, r3, #23
 800cd52:	d50d      	bpl.n	800cd70 <_scanf_i+0x180>
 800cd54:	42bd      	cmp	r5, r7
 800cd56:	d909      	bls.n	800cd6c <_scanf_i+0x17c>
 800cd58:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800cd5c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800cd60:	4632      	mov	r2, r6
 800cd62:	4650      	mov	r0, sl
 800cd64:	4798      	blx	r3
 800cd66:	f105 39ff 	add.w	r9, r5, #4294967295
 800cd6a:	464d      	mov	r5, r9
 800cd6c:	42bd      	cmp	r5, r7
 800cd6e:	d028      	beq.n	800cdc2 <_scanf_i+0x1d2>
 800cd70:	6822      	ldr	r2, [r4, #0]
 800cd72:	f012 0210 	ands.w	r2, r2, #16
 800cd76:	d113      	bne.n	800cda0 <_scanf_i+0x1b0>
 800cd78:	702a      	strb	r2, [r5, #0]
 800cd7a:	6863      	ldr	r3, [r4, #4]
 800cd7c:	9e01      	ldr	r6, [sp, #4]
 800cd7e:	4639      	mov	r1, r7
 800cd80:	4650      	mov	r0, sl
 800cd82:	47b0      	blx	r6
 800cd84:	f8d8 3000 	ldr.w	r3, [r8]
 800cd88:	6821      	ldr	r1, [r4, #0]
 800cd8a:	1d1a      	adds	r2, r3, #4
 800cd8c:	f8c8 2000 	str.w	r2, [r8]
 800cd90:	f011 0f20 	tst.w	r1, #32
 800cd94:	681b      	ldr	r3, [r3, #0]
 800cd96:	d00f      	beq.n	800cdb8 <_scanf_i+0x1c8>
 800cd98:	6018      	str	r0, [r3, #0]
 800cd9a:	68e3      	ldr	r3, [r4, #12]
 800cd9c:	3301      	adds	r3, #1
 800cd9e:	60e3      	str	r3, [r4, #12]
 800cda0:	1bed      	subs	r5, r5, r7
 800cda2:	44ab      	add	fp, r5
 800cda4:	6925      	ldr	r5, [r4, #16]
 800cda6:	445d      	add	r5, fp
 800cda8:	6125      	str	r5, [r4, #16]
 800cdaa:	2000      	movs	r0, #0
 800cdac:	b007      	add	sp, #28
 800cdae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdb2:	f04f 0b00 	mov.w	fp, #0
 800cdb6:	e7ca      	b.n	800cd4e <_scanf_i+0x15e>
 800cdb8:	07ca      	lsls	r2, r1, #31
 800cdba:	bf4c      	ite	mi
 800cdbc:	8018      	strhmi	r0, [r3, #0]
 800cdbe:	6018      	strpl	r0, [r3, #0]
 800cdc0:	e7eb      	b.n	800cd9a <_scanf_i+0x1aa>
 800cdc2:	2001      	movs	r0, #1
 800cdc4:	e7f2      	b.n	800cdac <_scanf_i+0x1bc>
 800cdc6:	bf00      	nop
 800cdc8:	0800e6f0 	.word	0x0800e6f0
 800cdcc:	0800cf9d 	.word	0x0800cf9d
 800cdd0:	0800a639 	.word	0x0800a639
 800cdd4:	0800eb3e 	.word	0x0800eb3e

0800cdd8 <_read_r>:
 800cdd8:	b538      	push	{r3, r4, r5, lr}
 800cdda:	4d07      	ldr	r5, [pc, #28]	; (800cdf8 <_read_r+0x20>)
 800cddc:	4604      	mov	r4, r0
 800cdde:	4608      	mov	r0, r1
 800cde0:	4611      	mov	r1, r2
 800cde2:	2200      	movs	r2, #0
 800cde4:	602a      	str	r2, [r5, #0]
 800cde6:	461a      	mov	r2, r3
 800cde8:	f7f5 fff4 	bl	8002dd4 <_read>
 800cdec:	1c43      	adds	r3, r0, #1
 800cdee:	d102      	bne.n	800cdf6 <_read_r+0x1e>
 800cdf0:	682b      	ldr	r3, [r5, #0]
 800cdf2:	b103      	cbz	r3, 800cdf6 <_read_r+0x1e>
 800cdf4:	6023      	str	r3, [r4, #0]
 800cdf6:	bd38      	pop	{r3, r4, r5, pc}
 800cdf8:	200187bc 	.word	0x200187bc
 800cdfc:	00000000 	.word	0x00000000

0800ce00 <nan>:
 800ce00:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800ce08 <nan+0x8>
 800ce04:	4770      	bx	lr
 800ce06:	bf00      	nop
 800ce08:	00000000 	.word	0x00000000
 800ce0c:	7ff80000 	.word	0x7ff80000

0800ce10 <_sbrk_r>:
 800ce10:	b538      	push	{r3, r4, r5, lr}
 800ce12:	4d06      	ldr	r5, [pc, #24]	; (800ce2c <_sbrk_r+0x1c>)
 800ce14:	2300      	movs	r3, #0
 800ce16:	4604      	mov	r4, r0
 800ce18:	4608      	mov	r0, r1
 800ce1a:	602b      	str	r3, [r5, #0]
 800ce1c:	f7f6 f848 	bl	8002eb0 <_sbrk>
 800ce20:	1c43      	adds	r3, r0, #1
 800ce22:	d102      	bne.n	800ce2a <_sbrk_r+0x1a>
 800ce24:	682b      	ldr	r3, [r5, #0]
 800ce26:	b103      	cbz	r3, 800ce2a <_sbrk_r+0x1a>
 800ce28:	6023      	str	r3, [r4, #0]
 800ce2a:	bd38      	pop	{r3, r4, r5, pc}
 800ce2c:	200187bc 	.word	0x200187bc

0800ce30 <__sccl>:
 800ce30:	b570      	push	{r4, r5, r6, lr}
 800ce32:	780b      	ldrb	r3, [r1, #0]
 800ce34:	4604      	mov	r4, r0
 800ce36:	2b5e      	cmp	r3, #94	; 0x5e
 800ce38:	bf0b      	itete	eq
 800ce3a:	784b      	ldrbeq	r3, [r1, #1]
 800ce3c:	1c48      	addne	r0, r1, #1
 800ce3e:	1c88      	addeq	r0, r1, #2
 800ce40:	2200      	movne	r2, #0
 800ce42:	bf08      	it	eq
 800ce44:	2201      	moveq	r2, #1
 800ce46:	1e61      	subs	r1, r4, #1
 800ce48:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800ce4c:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ce50:	42a9      	cmp	r1, r5
 800ce52:	d1fb      	bne.n	800ce4c <__sccl+0x1c>
 800ce54:	b90b      	cbnz	r3, 800ce5a <__sccl+0x2a>
 800ce56:	3801      	subs	r0, #1
 800ce58:	bd70      	pop	{r4, r5, r6, pc}
 800ce5a:	f082 0101 	eor.w	r1, r2, #1
 800ce5e:	54e1      	strb	r1, [r4, r3]
 800ce60:	1c42      	adds	r2, r0, #1
 800ce62:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 800ce66:	2d2d      	cmp	r5, #45	; 0x2d
 800ce68:	f102 36ff 	add.w	r6, r2, #4294967295
 800ce6c:	4610      	mov	r0, r2
 800ce6e:	d006      	beq.n	800ce7e <__sccl+0x4e>
 800ce70:	2d5d      	cmp	r5, #93	; 0x5d
 800ce72:	d0f1      	beq.n	800ce58 <__sccl+0x28>
 800ce74:	b90d      	cbnz	r5, 800ce7a <__sccl+0x4a>
 800ce76:	4630      	mov	r0, r6
 800ce78:	e7ee      	b.n	800ce58 <__sccl+0x28>
 800ce7a:	462b      	mov	r3, r5
 800ce7c:	e7ef      	b.n	800ce5e <__sccl+0x2e>
 800ce7e:	7816      	ldrb	r6, [r2, #0]
 800ce80:	2e5d      	cmp	r6, #93	; 0x5d
 800ce82:	d0fa      	beq.n	800ce7a <__sccl+0x4a>
 800ce84:	42b3      	cmp	r3, r6
 800ce86:	dcf8      	bgt.n	800ce7a <__sccl+0x4a>
 800ce88:	4618      	mov	r0, r3
 800ce8a:	3001      	adds	r0, #1
 800ce8c:	4286      	cmp	r6, r0
 800ce8e:	5421      	strb	r1, [r4, r0]
 800ce90:	dcfb      	bgt.n	800ce8a <__sccl+0x5a>
 800ce92:	43d8      	mvns	r0, r3
 800ce94:	4430      	add	r0, r6
 800ce96:	1c5d      	adds	r5, r3, #1
 800ce98:	42b3      	cmp	r3, r6
 800ce9a:	bfa8      	it	ge
 800ce9c:	2000      	movge	r0, #0
 800ce9e:	182b      	adds	r3, r5, r0
 800cea0:	3202      	adds	r2, #2
 800cea2:	e7de      	b.n	800ce62 <__sccl+0x32>

0800cea4 <_strtoul_l.isra.0>:
 800cea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cea8:	4e3b      	ldr	r6, [pc, #236]	; (800cf98 <_strtoul_l.isra.0+0xf4>)
 800ceaa:	4686      	mov	lr, r0
 800ceac:	468c      	mov	ip, r1
 800ceae:	4660      	mov	r0, ip
 800ceb0:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800ceb4:	5da5      	ldrb	r5, [r4, r6]
 800ceb6:	f015 0508 	ands.w	r5, r5, #8
 800ceba:	d1f8      	bne.n	800ceae <_strtoul_l.isra.0+0xa>
 800cebc:	2c2d      	cmp	r4, #45	; 0x2d
 800cebe:	d134      	bne.n	800cf2a <_strtoul_l.isra.0+0x86>
 800cec0:	f89c 4000 	ldrb.w	r4, [ip]
 800cec4:	f04f 0801 	mov.w	r8, #1
 800cec8:	f100 0c02 	add.w	ip, r0, #2
 800cecc:	2b00      	cmp	r3, #0
 800cece:	d05e      	beq.n	800cf8e <_strtoul_l.isra.0+0xea>
 800ced0:	2b10      	cmp	r3, #16
 800ced2:	d10c      	bne.n	800ceee <_strtoul_l.isra.0+0x4a>
 800ced4:	2c30      	cmp	r4, #48	; 0x30
 800ced6:	d10a      	bne.n	800ceee <_strtoul_l.isra.0+0x4a>
 800ced8:	f89c 0000 	ldrb.w	r0, [ip]
 800cedc:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800cee0:	2858      	cmp	r0, #88	; 0x58
 800cee2:	d14f      	bne.n	800cf84 <_strtoul_l.isra.0+0xe0>
 800cee4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 800cee8:	2310      	movs	r3, #16
 800ceea:	f10c 0c02 	add.w	ip, ip, #2
 800ceee:	f04f 37ff 	mov.w	r7, #4294967295
 800cef2:	2500      	movs	r5, #0
 800cef4:	fbb7 f7f3 	udiv	r7, r7, r3
 800cef8:	fb03 f907 	mul.w	r9, r3, r7
 800cefc:	ea6f 0909 	mvn.w	r9, r9
 800cf00:	4628      	mov	r0, r5
 800cf02:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 800cf06:	2e09      	cmp	r6, #9
 800cf08:	d818      	bhi.n	800cf3c <_strtoul_l.isra.0+0x98>
 800cf0a:	4634      	mov	r4, r6
 800cf0c:	42a3      	cmp	r3, r4
 800cf0e:	dd24      	ble.n	800cf5a <_strtoul_l.isra.0+0xb6>
 800cf10:	2d00      	cmp	r5, #0
 800cf12:	db1f      	blt.n	800cf54 <_strtoul_l.isra.0+0xb0>
 800cf14:	4287      	cmp	r7, r0
 800cf16:	d31d      	bcc.n	800cf54 <_strtoul_l.isra.0+0xb0>
 800cf18:	d101      	bne.n	800cf1e <_strtoul_l.isra.0+0x7a>
 800cf1a:	45a1      	cmp	r9, r4
 800cf1c:	db1a      	blt.n	800cf54 <_strtoul_l.isra.0+0xb0>
 800cf1e:	fb00 4003 	mla	r0, r0, r3, r4
 800cf22:	2501      	movs	r5, #1
 800cf24:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800cf28:	e7eb      	b.n	800cf02 <_strtoul_l.isra.0+0x5e>
 800cf2a:	2c2b      	cmp	r4, #43	; 0x2b
 800cf2c:	bf08      	it	eq
 800cf2e:	f89c 4000 	ldrbeq.w	r4, [ip]
 800cf32:	46a8      	mov	r8, r5
 800cf34:	bf08      	it	eq
 800cf36:	f100 0c02 	addeq.w	ip, r0, #2
 800cf3a:	e7c7      	b.n	800cecc <_strtoul_l.isra.0+0x28>
 800cf3c:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 800cf40:	2e19      	cmp	r6, #25
 800cf42:	d801      	bhi.n	800cf48 <_strtoul_l.isra.0+0xa4>
 800cf44:	3c37      	subs	r4, #55	; 0x37
 800cf46:	e7e1      	b.n	800cf0c <_strtoul_l.isra.0+0x68>
 800cf48:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 800cf4c:	2e19      	cmp	r6, #25
 800cf4e:	d804      	bhi.n	800cf5a <_strtoul_l.isra.0+0xb6>
 800cf50:	3c57      	subs	r4, #87	; 0x57
 800cf52:	e7db      	b.n	800cf0c <_strtoul_l.isra.0+0x68>
 800cf54:	f04f 35ff 	mov.w	r5, #4294967295
 800cf58:	e7e4      	b.n	800cf24 <_strtoul_l.isra.0+0x80>
 800cf5a:	2d00      	cmp	r5, #0
 800cf5c:	da07      	bge.n	800cf6e <_strtoul_l.isra.0+0xca>
 800cf5e:	2322      	movs	r3, #34	; 0x22
 800cf60:	f8ce 3000 	str.w	r3, [lr]
 800cf64:	f04f 30ff 	mov.w	r0, #4294967295
 800cf68:	b942      	cbnz	r2, 800cf7c <_strtoul_l.isra.0+0xd8>
 800cf6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cf6e:	f1b8 0f00 	cmp.w	r8, #0
 800cf72:	d000      	beq.n	800cf76 <_strtoul_l.isra.0+0xd2>
 800cf74:	4240      	negs	r0, r0
 800cf76:	2a00      	cmp	r2, #0
 800cf78:	d0f7      	beq.n	800cf6a <_strtoul_l.isra.0+0xc6>
 800cf7a:	b10d      	cbz	r5, 800cf80 <_strtoul_l.isra.0+0xdc>
 800cf7c:	f10c 31ff 	add.w	r1, ip, #4294967295
 800cf80:	6011      	str	r1, [r2, #0]
 800cf82:	e7f2      	b.n	800cf6a <_strtoul_l.isra.0+0xc6>
 800cf84:	2430      	movs	r4, #48	; 0x30
 800cf86:	2b00      	cmp	r3, #0
 800cf88:	d1b1      	bne.n	800ceee <_strtoul_l.isra.0+0x4a>
 800cf8a:	2308      	movs	r3, #8
 800cf8c:	e7af      	b.n	800ceee <_strtoul_l.isra.0+0x4a>
 800cf8e:	2c30      	cmp	r4, #48	; 0x30
 800cf90:	d0a2      	beq.n	800ced8 <_strtoul_l.isra.0+0x34>
 800cf92:	230a      	movs	r3, #10
 800cf94:	e7ab      	b.n	800ceee <_strtoul_l.isra.0+0x4a>
 800cf96:	bf00      	nop
 800cf98:	0800e7a1 	.word	0x0800e7a1

0800cf9c <_strtoul_r>:
 800cf9c:	f7ff bf82 	b.w	800cea4 <_strtoul_l.isra.0>

0800cfa0 <__submore>:
 800cfa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfa4:	460c      	mov	r4, r1
 800cfa6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800cfa8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800cfac:	4299      	cmp	r1, r3
 800cfae:	d11d      	bne.n	800cfec <__submore+0x4c>
 800cfb0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800cfb4:	f7ff fa3c 	bl	800c430 <_malloc_r>
 800cfb8:	b918      	cbnz	r0, 800cfc2 <__submore+0x22>
 800cfba:	f04f 30ff 	mov.w	r0, #4294967295
 800cfbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cfc6:	63a3      	str	r3, [r4, #56]	; 0x38
 800cfc8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800cfcc:	6360      	str	r0, [r4, #52]	; 0x34
 800cfce:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800cfd2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cfd6:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800cfda:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cfde:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 800cfe2:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800cfe6:	6020      	str	r0, [r4, #0]
 800cfe8:	2000      	movs	r0, #0
 800cfea:	e7e8      	b.n	800cfbe <__submore+0x1e>
 800cfec:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800cfee:	0077      	lsls	r7, r6, #1
 800cff0:	463a      	mov	r2, r7
 800cff2:	f000 fa2d 	bl	800d450 <_realloc_r>
 800cff6:	4605      	mov	r5, r0
 800cff8:	2800      	cmp	r0, #0
 800cffa:	d0de      	beq.n	800cfba <__submore+0x1a>
 800cffc:	eb00 0806 	add.w	r8, r0, r6
 800d000:	4601      	mov	r1, r0
 800d002:	4632      	mov	r2, r6
 800d004:	4640      	mov	r0, r8
 800d006:	f7fe fce9 	bl	800b9dc <memcpy>
 800d00a:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800d00e:	f8c4 8000 	str.w	r8, [r4]
 800d012:	e7e9      	b.n	800cfe8 <__submore+0x48>

0800d014 <__ascii_wctomb>:
 800d014:	b149      	cbz	r1, 800d02a <__ascii_wctomb+0x16>
 800d016:	2aff      	cmp	r2, #255	; 0xff
 800d018:	bf85      	ittet	hi
 800d01a:	238a      	movhi	r3, #138	; 0x8a
 800d01c:	6003      	strhi	r3, [r0, #0]
 800d01e:	700a      	strbls	r2, [r1, #0]
 800d020:	f04f 30ff 	movhi.w	r0, #4294967295
 800d024:	bf98      	it	ls
 800d026:	2001      	movls	r0, #1
 800d028:	4770      	bx	lr
 800d02a:	4608      	mov	r0, r1
 800d02c:	4770      	bx	lr
	...

0800d030 <__assert_func>:
 800d030:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d032:	4614      	mov	r4, r2
 800d034:	461a      	mov	r2, r3
 800d036:	4b09      	ldr	r3, [pc, #36]	; (800d05c <__assert_func+0x2c>)
 800d038:	681b      	ldr	r3, [r3, #0]
 800d03a:	4605      	mov	r5, r0
 800d03c:	68d8      	ldr	r0, [r3, #12]
 800d03e:	b14c      	cbz	r4, 800d054 <__assert_func+0x24>
 800d040:	4b07      	ldr	r3, [pc, #28]	; (800d060 <__assert_func+0x30>)
 800d042:	9100      	str	r1, [sp, #0]
 800d044:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d048:	4906      	ldr	r1, [pc, #24]	; (800d064 <__assert_func+0x34>)
 800d04a:	462b      	mov	r3, r5
 800d04c:	f000 f9a6 	bl	800d39c <fiprintf>
 800d050:	f000 fc3e 	bl	800d8d0 <abort>
 800d054:	4b04      	ldr	r3, [pc, #16]	; (800d068 <__assert_func+0x38>)
 800d056:	461c      	mov	r4, r3
 800d058:	e7f3      	b.n	800d042 <__assert_func+0x12>
 800d05a:	bf00      	nop
 800d05c:	20000114 	.word	0x20000114
 800d060:	0800eb40 	.word	0x0800eb40
 800d064:	0800eb4d 	.word	0x0800eb4d
 800d068:	0800eb7b 	.word	0x0800eb7b

0800d06c <__sflush_r>:
 800d06c:	898a      	ldrh	r2, [r1, #12]
 800d06e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d072:	4605      	mov	r5, r0
 800d074:	0710      	lsls	r0, r2, #28
 800d076:	460c      	mov	r4, r1
 800d078:	d458      	bmi.n	800d12c <__sflush_r+0xc0>
 800d07a:	684b      	ldr	r3, [r1, #4]
 800d07c:	2b00      	cmp	r3, #0
 800d07e:	dc05      	bgt.n	800d08c <__sflush_r+0x20>
 800d080:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800d082:	2b00      	cmp	r3, #0
 800d084:	dc02      	bgt.n	800d08c <__sflush_r+0x20>
 800d086:	2000      	movs	r0, #0
 800d088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d08c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d08e:	2e00      	cmp	r6, #0
 800d090:	d0f9      	beq.n	800d086 <__sflush_r+0x1a>
 800d092:	2300      	movs	r3, #0
 800d094:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800d098:	682f      	ldr	r7, [r5, #0]
 800d09a:	602b      	str	r3, [r5, #0]
 800d09c:	d032      	beq.n	800d104 <__sflush_r+0x98>
 800d09e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800d0a0:	89a3      	ldrh	r3, [r4, #12]
 800d0a2:	075a      	lsls	r2, r3, #29
 800d0a4:	d505      	bpl.n	800d0b2 <__sflush_r+0x46>
 800d0a6:	6863      	ldr	r3, [r4, #4]
 800d0a8:	1ac0      	subs	r0, r0, r3
 800d0aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d0ac:	b10b      	cbz	r3, 800d0b2 <__sflush_r+0x46>
 800d0ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d0b0:	1ac0      	subs	r0, r0, r3
 800d0b2:	2300      	movs	r3, #0
 800d0b4:	4602      	mov	r2, r0
 800d0b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d0b8:	6a21      	ldr	r1, [r4, #32]
 800d0ba:	4628      	mov	r0, r5
 800d0bc:	47b0      	blx	r6
 800d0be:	1c43      	adds	r3, r0, #1
 800d0c0:	89a3      	ldrh	r3, [r4, #12]
 800d0c2:	d106      	bne.n	800d0d2 <__sflush_r+0x66>
 800d0c4:	6829      	ldr	r1, [r5, #0]
 800d0c6:	291d      	cmp	r1, #29
 800d0c8:	d82c      	bhi.n	800d124 <__sflush_r+0xb8>
 800d0ca:	4a2a      	ldr	r2, [pc, #168]	; (800d174 <__sflush_r+0x108>)
 800d0cc:	40ca      	lsrs	r2, r1
 800d0ce:	07d6      	lsls	r6, r2, #31
 800d0d0:	d528      	bpl.n	800d124 <__sflush_r+0xb8>
 800d0d2:	2200      	movs	r2, #0
 800d0d4:	6062      	str	r2, [r4, #4]
 800d0d6:	04d9      	lsls	r1, r3, #19
 800d0d8:	6922      	ldr	r2, [r4, #16]
 800d0da:	6022      	str	r2, [r4, #0]
 800d0dc:	d504      	bpl.n	800d0e8 <__sflush_r+0x7c>
 800d0de:	1c42      	adds	r2, r0, #1
 800d0e0:	d101      	bne.n	800d0e6 <__sflush_r+0x7a>
 800d0e2:	682b      	ldr	r3, [r5, #0]
 800d0e4:	b903      	cbnz	r3, 800d0e8 <__sflush_r+0x7c>
 800d0e6:	6560      	str	r0, [r4, #84]	; 0x54
 800d0e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d0ea:	602f      	str	r7, [r5, #0]
 800d0ec:	2900      	cmp	r1, #0
 800d0ee:	d0ca      	beq.n	800d086 <__sflush_r+0x1a>
 800d0f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d0f4:	4299      	cmp	r1, r3
 800d0f6:	d002      	beq.n	800d0fe <__sflush_r+0x92>
 800d0f8:	4628      	mov	r0, r5
 800d0fa:	f7ff f949 	bl	800c390 <_free_r>
 800d0fe:	2000      	movs	r0, #0
 800d100:	6360      	str	r0, [r4, #52]	; 0x34
 800d102:	e7c1      	b.n	800d088 <__sflush_r+0x1c>
 800d104:	6a21      	ldr	r1, [r4, #32]
 800d106:	2301      	movs	r3, #1
 800d108:	4628      	mov	r0, r5
 800d10a:	47b0      	blx	r6
 800d10c:	1c41      	adds	r1, r0, #1
 800d10e:	d1c7      	bne.n	800d0a0 <__sflush_r+0x34>
 800d110:	682b      	ldr	r3, [r5, #0]
 800d112:	2b00      	cmp	r3, #0
 800d114:	d0c4      	beq.n	800d0a0 <__sflush_r+0x34>
 800d116:	2b1d      	cmp	r3, #29
 800d118:	d001      	beq.n	800d11e <__sflush_r+0xb2>
 800d11a:	2b16      	cmp	r3, #22
 800d11c:	d101      	bne.n	800d122 <__sflush_r+0xb6>
 800d11e:	602f      	str	r7, [r5, #0]
 800d120:	e7b1      	b.n	800d086 <__sflush_r+0x1a>
 800d122:	89a3      	ldrh	r3, [r4, #12]
 800d124:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d128:	81a3      	strh	r3, [r4, #12]
 800d12a:	e7ad      	b.n	800d088 <__sflush_r+0x1c>
 800d12c:	690f      	ldr	r7, [r1, #16]
 800d12e:	2f00      	cmp	r7, #0
 800d130:	d0a9      	beq.n	800d086 <__sflush_r+0x1a>
 800d132:	0793      	lsls	r3, r2, #30
 800d134:	680e      	ldr	r6, [r1, #0]
 800d136:	bf08      	it	eq
 800d138:	694b      	ldreq	r3, [r1, #20]
 800d13a:	600f      	str	r7, [r1, #0]
 800d13c:	bf18      	it	ne
 800d13e:	2300      	movne	r3, #0
 800d140:	eba6 0807 	sub.w	r8, r6, r7
 800d144:	608b      	str	r3, [r1, #8]
 800d146:	f1b8 0f00 	cmp.w	r8, #0
 800d14a:	dd9c      	ble.n	800d086 <__sflush_r+0x1a>
 800d14c:	6a21      	ldr	r1, [r4, #32]
 800d14e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800d150:	4643      	mov	r3, r8
 800d152:	463a      	mov	r2, r7
 800d154:	4628      	mov	r0, r5
 800d156:	47b0      	blx	r6
 800d158:	2800      	cmp	r0, #0
 800d15a:	dc06      	bgt.n	800d16a <__sflush_r+0xfe>
 800d15c:	89a3      	ldrh	r3, [r4, #12]
 800d15e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d162:	81a3      	strh	r3, [r4, #12]
 800d164:	f04f 30ff 	mov.w	r0, #4294967295
 800d168:	e78e      	b.n	800d088 <__sflush_r+0x1c>
 800d16a:	4407      	add	r7, r0
 800d16c:	eba8 0800 	sub.w	r8, r8, r0
 800d170:	e7e9      	b.n	800d146 <__sflush_r+0xda>
 800d172:	bf00      	nop
 800d174:	20400001 	.word	0x20400001

0800d178 <_fflush_r>:
 800d178:	b538      	push	{r3, r4, r5, lr}
 800d17a:	690b      	ldr	r3, [r1, #16]
 800d17c:	4605      	mov	r5, r0
 800d17e:	460c      	mov	r4, r1
 800d180:	b913      	cbnz	r3, 800d188 <_fflush_r+0x10>
 800d182:	2500      	movs	r5, #0
 800d184:	4628      	mov	r0, r5
 800d186:	bd38      	pop	{r3, r4, r5, pc}
 800d188:	b118      	cbz	r0, 800d192 <_fflush_r+0x1a>
 800d18a:	6983      	ldr	r3, [r0, #24]
 800d18c:	b90b      	cbnz	r3, 800d192 <_fflush_r+0x1a>
 800d18e:	f000 f887 	bl	800d2a0 <__sinit>
 800d192:	4b14      	ldr	r3, [pc, #80]	; (800d1e4 <_fflush_r+0x6c>)
 800d194:	429c      	cmp	r4, r3
 800d196:	d11b      	bne.n	800d1d0 <_fflush_r+0x58>
 800d198:	686c      	ldr	r4, [r5, #4]
 800d19a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d19e:	2b00      	cmp	r3, #0
 800d1a0:	d0ef      	beq.n	800d182 <_fflush_r+0xa>
 800d1a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d1a4:	07d0      	lsls	r0, r2, #31
 800d1a6:	d404      	bmi.n	800d1b2 <_fflush_r+0x3a>
 800d1a8:	0599      	lsls	r1, r3, #22
 800d1aa:	d402      	bmi.n	800d1b2 <_fflush_r+0x3a>
 800d1ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d1ae:	f000 f927 	bl	800d400 <__retarget_lock_acquire_recursive>
 800d1b2:	4628      	mov	r0, r5
 800d1b4:	4621      	mov	r1, r4
 800d1b6:	f7ff ff59 	bl	800d06c <__sflush_r>
 800d1ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d1bc:	07da      	lsls	r2, r3, #31
 800d1be:	4605      	mov	r5, r0
 800d1c0:	d4e0      	bmi.n	800d184 <_fflush_r+0xc>
 800d1c2:	89a3      	ldrh	r3, [r4, #12]
 800d1c4:	059b      	lsls	r3, r3, #22
 800d1c6:	d4dd      	bmi.n	800d184 <_fflush_r+0xc>
 800d1c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d1ca:	f000 f91a 	bl	800d402 <__retarget_lock_release_recursive>
 800d1ce:	e7d9      	b.n	800d184 <_fflush_r+0xc>
 800d1d0:	4b05      	ldr	r3, [pc, #20]	; (800d1e8 <_fflush_r+0x70>)
 800d1d2:	429c      	cmp	r4, r3
 800d1d4:	d101      	bne.n	800d1da <_fflush_r+0x62>
 800d1d6:	68ac      	ldr	r4, [r5, #8]
 800d1d8:	e7df      	b.n	800d19a <_fflush_r+0x22>
 800d1da:	4b04      	ldr	r3, [pc, #16]	; (800d1ec <_fflush_r+0x74>)
 800d1dc:	429c      	cmp	r4, r3
 800d1de:	bf08      	it	eq
 800d1e0:	68ec      	ldreq	r4, [r5, #12]
 800d1e2:	e7da      	b.n	800d19a <_fflush_r+0x22>
 800d1e4:	0800eb9c 	.word	0x0800eb9c
 800d1e8:	0800ebbc 	.word	0x0800ebbc
 800d1ec:	0800eb7c 	.word	0x0800eb7c

0800d1f0 <std>:
 800d1f0:	2300      	movs	r3, #0
 800d1f2:	b510      	push	{r4, lr}
 800d1f4:	4604      	mov	r4, r0
 800d1f6:	e9c0 3300 	strd	r3, r3, [r0]
 800d1fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d1fe:	6083      	str	r3, [r0, #8]
 800d200:	8181      	strh	r1, [r0, #12]
 800d202:	6643      	str	r3, [r0, #100]	; 0x64
 800d204:	81c2      	strh	r2, [r0, #14]
 800d206:	6183      	str	r3, [r0, #24]
 800d208:	4619      	mov	r1, r3
 800d20a:	2208      	movs	r2, #8
 800d20c:	305c      	adds	r0, #92	; 0x5c
 800d20e:	f7fb fc85 	bl	8008b1c <memset>
 800d212:	4b05      	ldr	r3, [pc, #20]	; (800d228 <std+0x38>)
 800d214:	6263      	str	r3, [r4, #36]	; 0x24
 800d216:	4b05      	ldr	r3, [pc, #20]	; (800d22c <std+0x3c>)
 800d218:	62a3      	str	r3, [r4, #40]	; 0x28
 800d21a:	4b05      	ldr	r3, [pc, #20]	; (800d230 <std+0x40>)
 800d21c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800d21e:	4b05      	ldr	r3, [pc, #20]	; (800d234 <std+0x44>)
 800d220:	6224      	str	r4, [r4, #32]
 800d222:	6323      	str	r3, [r4, #48]	; 0x30
 800d224:	bd10      	pop	{r4, pc}
 800d226:	bf00      	nop
 800d228:	08009861 	.word	0x08009861
 800d22c:	08009887 	.word	0x08009887
 800d230:	080098bf 	.word	0x080098bf
 800d234:	080098e3 	.word	0x080098e3

0800d238 <_cleanup_r>:
 800d238:	4901      	ldr	r1, [pc, #4]	; (800d240 <_cleanup_r+0x8>)
 800d23a:	f000 b8c1 	b.w	800d3c0 <_fwalk_reent>
 800d23e:	bf00      	nop
 800d240:	0800d179 	.word	0x0800d179

0800d244 <__sfmoreglue>:
 800d244:	b570      	push	{r4, r5, r6, lr}
 800d246:	1e4a      	subs	r2, r1, #1
 800d248:	2568      	movs	r5, #104	; 0x68
 800d24a:	4355      	muls	r5, r2
 800d24c:	460e      	mov	r6, r1
 800d24e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800d252:	f7ff f8ed 	bl	800c430 <_malloc_r>
 800d256:	4604      	mov	r4, r0
 800d258:	b140      	cbz	r0, 800d26c <__sfmoreglue+0x28>
 800d25a:	2100      	movs	r1, #0
 800d25c:	e9c0 1600 	strd	r1, r6, [r0]
 800d260:	300c      	adds	r0, #12
 800d262:	60a0      	str	r0, [r4, #8]
 800d264:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800d268:	f7fb fc58 	bl	8008b1c <memset>
 800d26c:	4620      	mov	r0, r4
 800d26e:	bd70      	pop	{r4, r5, r6, pc}

0800d270 <__sfp_lock_acquire>:
 800d270:	4801      	ldr	r0, [pc, #4]	; (800d278 <__sfp_lock_acquire+0x8>)
 800d272:	f000 b8c5 	b.w	800d400 <__retarget_lock_acquire_recursive>
 800d276:	bf00      	nop
 800d278:	200187c8 	.word	0x200187c8

0800d27c <__sfp_lock_release>:
 800d27c:	4801      	ldr	r0, [pc, #4]	; (800d284 <__sfp_lock_release+0x8>)
 800d27e:	f000 b8c0 	b.w	800d402 <__retarget_lock_release_recursive>
 800d282:	bf00      	nop
 800d284:	200187c8 	.word	0x200187c8

0800d288 <__sinit_lock_acquire>:
 800d288:	4801      	ldr	r0, [pc, #4]	; (800d290 <__sinit_lock_acquire+0x8>)
 800d28a:	f000 b8b9 	b.w	800d400 <__retarget_lock_acquire_recursive>
 800d28e:	bf00      	nop
 800d290:	200187c3 	.word	0x200187c3

0800d294 <__sinit_lock_release>:
 800d294:	4801      	ldr	r0, [pc, #4]	; (800d29c <__sinit_lock_release+0x8>)
 800d296:	f000 b8b4 	b.w	800d402 <__retarget_lock_release_recursive>
 800d29a:	bf00      	nop
 800d29c:	200187c3 	.word	0x200187c3

0800d2a0 <__sinit>:
 800d2a0:	b510      	push	{r4, lr}
 800d2a2:	4604      	mov	r4, r0
 800d2a4:	f7ff fff0 	bl	800d288 <__sinit_lock_acquire>
 800d2a8:	69a3      	ldr	r3, [r4, #24]
 800d2aa:	b11b      	cbz	r3, 800d2b4 <__sinit+0x14>
 800d2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d2b0:	f7ff bff0 	b.w	800d294 <__sinit_lock_release>
 800d2b4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800d2b8:	6523      	str	r3, [r4, #80]	; 0x50
 800d2ba:	4b13      	ldr	r3, [pc, #76]	; (800d308 <__sinit+0x68>)
 800d2bc:	4a13      	ldr	r2, [pc, #76]	; (800d30c <__sinit+0x6c>)
 800d2be:	681b      	ldr	r3, [r3, #0]
 800d2c0:	62a2      	str	r2, [r4, #40]	; 0x28
 800d2c2:	42a3      	cmp	r3, r4
 800d2c4:	bf04      	itt	eq
 800d2c6:	2301      	moveq	r3, #1
 800d2c8:	61a3      	streq	r3, [r4, #24]
 800d2ca:	4620      	mov	r0, r4
 800d2cc:	f000 f820 	bl	800d310 <__sfp>
 800d2d0:	6060      	str	r0, [r4, #4]
 800d2d2:	4620      	mov	r0, r4
 800d2d4:	f000 f81c 	bl	800d310 <__sfp>
 800d2d8:	60a0      	str	r0, [r4, #8]
 800d2da:	4620      	mov	r0, r4
 800d2dc:	f000 f818 	bl	800d310 <__sfp>
 800d2e0:	2200      	movs	r2, #0
 800d2e2:	60e0      	str	r0, [r4, #12]
 800d2e4:	2104      	movs	r1, #4
 800d2e6:	6860      	ldr	r0, [r4, #4]
 800d2e8:	f7ff ff82 	bl	800d1f0 <std>
 800d2ec:	68a0      	ldr	r0, [r4, #8]
 800d2ee:	2201      	movs	r2, #1
 800d2f0:	2109      	movs	r1, #9
 800d2f2:	f7ff ff7d 	bl	800d1f0 <std>
 800d2f6:	68e0      	ldr	r0, [r4, #12]
 800d2f8:	2202      	movs	r2, #2
 800d2fa:	2112      	movs	r1, #18
 800d2fc:	f7ff ff78 	bl	800d1f0 <std>
 800d300:	2301      	movs	r3, #1
 800d302:	61a3      	str	r3, [r4, #24]
 800d304:	e7d2      	b.n	800d2ac <__sinit+0xc>
 800d306:	bf00      	nop
 800d308:	0800e714 	.word	0x0800e714
 800d30c:	0800d239 	.word	0x0800d239

0800d310 <__sfp>:
 800d310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d312:	4607      	mov	r7, r0
 800d314:	f7ff ffac 	bl	800d270 <__sfp_lock_acquire>
 800d318:	4b1e      	ldr	r3, [pc, #120]	; (800d394 <__sfp+0x84>)
 800d31a:	681e      	ldr	r6, [r3, #0]
 800d31c:	69b3      	ldr	r3, [r6, #24]
 800d31e:	b913      	cbnz	r3, 800d326 <__sfp+0x16>
 800d320:	4630      	mov	r0, r6
 800d322:	f7ff ffbd 	bl	800d2a0 <__sinit>
 800d326:	3648      	adds	r6, #72	; 0x48
 800d328:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800d32c:	3b01      	subs	r3, #1
 800d32e:	d503      	bpl.n	800d338 <__sfp+0x28>
 800d330:	6833      	ldr	r3, [r6, #0]
 800d332:	b30b      	cbz	r3, 800d378 <__sfp+0x68>
 800d334:	6836      	ldr	r6, [r6, #0]
 800d336:	e7f7      	b.n	800d328 <__sfp+0x18>
 800d338:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800d33c:	b9d5      	cbnz	r5, 800d374 <__sfp+0x64>
 800d33e:	4b16      	ldr	r3, [pc, #88]	; (800d398 <__sfp+0x88>)
 800d340:	60e3      	str	r3, [r4, #12]
 800d342:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d346:	6665      	str	r5, [r4, #100]	; 0x64
 800d348:	f000 f859 	bl	800d3fe <__retarget_lock_init_recursive>
 800d34c:	f7ff ff96 	bl	800d27c <__sfp_lock_release>
 800d350:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800d354:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800d358:	6025      	str	r5, [r4, #0]
 800d35a:	61a5      	str	r5, [r4, #24]
 800d35c:	2208      	movs	r2, #8
 800d35e:	4629      	mov	r1, r5
 800d360:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800d364:	f7fb fbda 	bl	8008b1c <memset>
 800d368:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800d36c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800d370:	4620      	mov	r0, r4
 800d372:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d374:	3468      	adds	r4, #104	; 0x68
 800d376:	e7d9      	b.n	800d32c <__sfp+0x1c>
 800d378:	2104      	movs	r1, #4
 800d37a:	4638      	mov	r0, r7
 800d37c:	f7ff ff62 	bl	800d244 <__sfmoreglue>
 800d380:	4604      	mov	r4, r0
 800d382:	6030      	str	r0, [r6, #0]
 800d384:	2800      	cmp	r0, #0
 800d386:	d1d5      	bne.n	800d334 <__sfp+0x24>
 800d388:	f7ff ff78 	bl	800d27c <__sfp_lock_release>
 800d38c:	230c      	movs	r3, #12
 800d38e:	603b      	str	r3, [r7, #0]
 800d390:	e7ee      	b.n	800d370 <__sfp+0x60>
 800d392:	bf00      	nop
 800d394:	0800e714 	.word	0x0800e714
 800d398:	ffff0001 	.word	0xffff0001

0800d39c <fiprintf>:
 800d39c:	b40e      	push	{r1, r2, r3}
 800d39e:	b503      	push	{r0, r1, lr}
 800d3a0:	4601      	mov	r1, r0
 800d3a2:	ab03      	add	r3, sp, #12
 800d3a4:	4805      	ldr	r0, [pc, #20]	; (800d3bc <fiprintf+0x20>)
 800d3a6:	f853 2b04 	ldr.w	r2, [r3], #4
 800d3aa:	6800      	ldr	r0, [r0, #0]
 800d3ac:	9301      	str	r3, [sp, #4]
 800d3ae:	f000 f89f 	bl	800d4f0 <_vfiprintf_r>
 800d3b2:	b002      	add	sp, #8
 800d3b4:	f85d eb04 	ldr.w	lr, [sp], #4
 800d3b8:	b003      	add	sp, #12
 800d3ba:	4770      	bx	lr
 800d3bc:	20000114 	.word	0x20000114

0800d3c0 <_fwalk_reent>:
 800d3c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d3c4:	4606      	mov	r6, r0
 800d3c6:	4688      	mov	r8, r1
 800d3c8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800d3cc:	2700      	movs	r7, #0
 800d3ce:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800d3d2:	f1b9 0901 	subs.w	r9, r9, #1
 800d3d6:	d505      	bpl.n	800d3e4 <_fwalk_reent+0x24>
 800d3d8:	6824      	ldr	r4, [r4, #0]
 800d3da:	2c00      	cmp	r4, #0
 800d3dc:	d1f7      	bne.n	800d3ce <_fwalk_reent+0xe>
 800d3de:	4638      	mov	r0, r7
 800d3e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d3e4:	89ab      	ldrh	r3, [r5, #12]
 800d3e6:	2b01      	cmp	r3, #1
 800d3e8:	d907      	bls.n	800d3fa <_fwalk_reent+0x3a>
 800d3ea:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800d3ee:	3301      	adds	r3, #1
 800d3f0:	d003      	beq.n	800d3fa <_fwalk_reent+0x3a>
 800d3f2:	4629      	mov	r1, r5
 800d3f4:	4630      	mov	r0, r6
 800d3f6:	47c0      	blx	r8
 800d3f8:	4307      	orrs	r7, r0
 800d3fa:	3568      	adds	r5, #104	; 0x68
 800d3fc:	e7e9      	b.n	800d3d2 <_fwalk_reent+0x12>

0800d3fe <__retarget_lock_init_recursive>:
 800d3fe:	4770      	bx	lr

0800d400 <__retarget_lock_acquire_recursive>:
 800d400:	4770      	bx	lr

0800d402 <__retarget_lock_release_recursive>:
 800d402:	4770      	bx	lr

0800d404 <memmove>:
 800d404:	4288      	cmp	r0, r1
 800d406:	b510      	push	{r4, lr}
 800d408:	eb01 0402 	add.w	r4, r1, r2
 800d40c:	d902      	bls.n	800d414 <memmove+0x10>
 800d40e:	4284      	cmp	r4, r0
 800d410:	4623      	mov	r3, r4
 800d412:	d807      	bhi.n	800d424 <memmove+0x20>
 800d414:	1e43      	subs	r3, r0, #1
 800d416:	42a1      	cmp	r1, r4
 800d418:	d008      	beq.n	800d42c <memmove+0x28>
 800d41a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d41e:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d422:	e7f8      	b.n	800d416 <memmove+0x12>
 800d424:	4402      	add	r2, r0
 800d426:	4601      	mov	r1, r0
 800d428:	428a      	cmp	r2, r1
 800d42a:	d100      	bne.n	800d42e <memmove+0x2a>
 800d42c:	bd10      	pop	{r4, pc}
 800d42e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d432:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d436:	e7f7      	b.n	800d428 <memmove+0x24>

0800d438 <__malloc_lock>:
 800d438:	4801      	ldr	r0, [pc, #4]	; (800d440 <__malloc_lock+0x8>)
 800d43a:	f7ff bfe1 	b.w	800d400 <__retarget_lock_acquire_recursive>
 800d43e:	bf00      	nop
 800d440:	200187c4 	.word	0x200187c4

0800d444 <__malloc_unlock>:
 800d444:	4801      	ldr	r0, [pc, #4]	; (800d44c <__malloc_unlock+0x8>)
 800d446:	f7ff bfdc 	b.w	800d402 <__retarget_lock_release_recursive>
 800d44a:	bf00      	nop
 800d44c:	200187c4 	.word	0x200187c4

0800d450 <_realloc_r>:
 800d450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d452:	4607      	mov	r7, r0
 800d454:	4614      	mov	r4, r2
 800d456:	460e      	mov	r6, r1
 800d458:	b921      	cbnz	r1, 800d464 <_realloc_r+0x14>
 800d45a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d45e:	4611      	mov	r1, r2
 800d460:	f7fe bfe6 	b.w	800c430 <_malloc_r>
 800d464:	b922      	cbnz	r2, 800d470 <_realloc_r+0x20>
 800d466:	f7fe ff93 	bl	800c390 <_free_r>
 800d46a:	4625      	mov	r5, r4
 800d46c:	4628      	mov	r0, r5
 800d46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d470:	f000 fa9a 	bl	800d9a8 <_malloc_usable_size_r>
 800d474:	42a0      	cmp	r0, r4
 800d476:	d20f      	bcs.n	800d498 <_realloc_r+0x48>
 800d478:	4621      	mov	r1, r4
 800d47a:	4638      	mov	r0, r7
 800d47c:	f7fe ffd8 	bl	800c430 <_malloc_r>
 800d480:	4605      	mov	r5, r0
 800d482:	2800      	cmp	r0, #0
 800d484:	d0f2      	beq.n	800d46c <_realloc_r+0x1c>
 800d486:	4631      	mov	r1, r6
 800d488:	4622      	mov	r2, r4
 800d48a:	f7fe faa7 	bl	800b9dc <memcpy>
 800d48e:	4631      	mov	r1, r6
 800d490:	4638      	mov	r0, r7
 800d492:	f7fe ff7d 	bl	800c390 <_free_r>
 800d496:	e7e9      	b.n	800d46c <_realloc_r+0x1c>
 800d498:	4635      	mov	r5, r6
 800d49a:	e7e7      	b.n	800d46c <_realloc_r+0x1c>

0800d49c <__sfputc_r>:
 800d49c:	6893      	ldr	r3, [r2, #8]
 800d49e:	3b01      	subs	r3, #1
 800d4a0:	2b00      	cmp	r3, #0
 800d4a2:	b410      	push	{r4}
 800d4a4:	6093      	str	r3, [r2, #8]
 800d4a6:	da08      	bge.n	800d4ba <__sfputc_r+0x1e>
 800d4a8:	6994      	ldr	r4, [r2, #24]
 800d4aa:	42a3      	cmp	r3, r4
 800d4ac:	db01      	blt.n	800d4b2 <__sfputc_r+0x16>
 800d4ae:	290a      	cmp	r1, #10
 800d4b0:	d103      	bne.n	800d4ba <__sfputc_r+0x1e>
 800d4b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4b6:	f000 b94b 	b.w	800d750 <__swbuf_r>
 800d4ba:	6813      	ldr	r3, [r2, #0]
 800d4bc:	1c58      	adds	r0, r3, #1
 800d4be:	6010      	str	r0, [r2, #0]
 800d4c0:	7019      	strb	r1, [r3, #0]
 800d4c2:	4608      	mov	r0, r1
 800d4c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4c8:	4770      	bx	lr

0800d4ca <__sfputs_r>:
 800d4ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d4cc:	4606      	mov	r6, r0
 800d4ce:	460f      	mov	r7, r1
 800d4d0:	4614      	mov	r4, r2
 800d4d2:	18d5      	adds	r5, r2, r3
 800d4d4:	42ac      	cmp	r4, r5
 800d4d6:	d101      	bne.n	800d4dc <__sfputs_r+0x12>
 800d4d8:	2000      	movs	r0, #0
 800d4da:	e007      	b.n	800d4ec <__sfputs_r+0x22>
 800d4dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d4e0:	463a      	mov	r2, r7
 800d4e2:	4630      	mov	r0, r6
 800d4e4:	f7ff ffda 	bl	800d49c <__sfputc_r>
 800d4e8:	1c43      	adds	r3, r0, #1
 800d4ea:	d1f3      	bne.n	800d4d4 <__sfputs_r+0xa>
 800d4ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d4f0 <_vfiprintf_r>:
 800d4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4f4:	460d      	mov	r5, r1
 800d4f6:	b09d      	sub	sp, #116	; 0x74
 800d4f8:	4614      	mov	r4, r2
 800d4fa:	4698      	mov	r8, r3
 800d4fc:	4606      	mov	r6, r0
 800d4fe:	b118      	cbz	r0, 800d508 <_vfiprintf_r+0x18>
 800d500:	6983      	ldr	r3, [r0, #24]
 800d502:	b90b      	cbnz	r3, 800d508 <_vfiprintf_r+0x18>
 800d504:	f7ff fecc 	bl	800d2a0 <__sinit>
 800d508:	4b89      	ldr	r3, [pc, #548]	; (800d730 <_vfiprintf_r+0x240>)
 800d50a:	429d      	cmp	r5, r3
 800d50c:	d11b      	bne.n	800d546 <_vfiprintf_r+0x56>
 800d50e:	6875      	ldr	r5, [r6, #4]
 800d510:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d512:	07d9      	lsls	r1, r3, #31
 800d514:	d405      	bmi.n	800d522 <_vfiprintf_r+0x32>
 800d516:	89ab      	ldrh	r3, [r5, #12]
 800d518:	059a      	lsls	r2, r3, #22
 800d51a:	d402      	bmi.n	800d522 <_vfiprintf_r+0x32>
 800d51c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d51e:	f7ff ff6f 	bl	800d400 <__retarget_lock_acquire_recursive>
 800d522:	89ab      	ldrh	r3, [r5, #12]
 800d524:	071b      	lsls	r3, r3, #28
 800d526:	d501      	bpl.n	800d52c <_vfiprintf_r+0x3c>
 800d528:	692b      	ldr	r3, [r5, #16]
 800d52a:	b9eb      	cbnz	r3, 800d568 <_vfiprintf_r+0x78>
 800d52c:	4629      	mov	r1, r5
 800d52e:	4630      	mov	r0, r6
 800d530:	f000 f960 	bl	800d7f4 <__swsetup_r>
 800d534:	b1c0      	cbz	r0, 800d568 <_vfiprintf_r+0x78>
 800d536:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d538:	07dc      	lsls	r4, r3, #31
 800d53a:	d50e      	bpl.n	800d55a <_vfiprintf_r+0x6a>
 800d53c:	f04f 30ff 	mov.w	r0, #4294967295
 800d540:	b01d      	add	sp, #116	; 0x74
 800d542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d546:	4b7b      	ldr	r3, [pc, #492]	; (800d734 <_vfiprintf_r+0x244>)
 800d548:	429d      	cmp	r5, r3
 800d54a:	d101      	bne.n	800d550 <_vfiprintf_r+0x60>
 800d54c:	68b5      	ldr	r5, [r6, #8]
 800d54e:	e7df      	b.n	800d510 <_vfiprintf_r+0x20>
 800d550:	4b79      	ldr	r3, [pc, #484]	; (800d738 <_vfiprintf_r+0x248>)
 800d552:	429d      	cmp	r5, r3
 800d554:	bf08      	it	eq
 800d556:	68f5      	ldreq	r5, [r6, #12]
 800d558:	e7da      	b.n	800d510 <_vfiprintf_r+0x20>
 800d55a:	89ab      	ldrh	r3, [r5, #12]
 800d55c:	0598      	lsls	r0, r3, #22
 800d55e:	d4ed      	bmi.n	800d53c <_vfiprintf_r+0x4c>
 800d560:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d562:	f7ff ff4e 	bl	800d402 <__retarget_lock_release_recursive>
 800d566:	e7e9      	b.n	800d53c <_vfiprintf_r+0x4c>
 800d568:	2300      	movs	r3, #0
 800d56a:	9309      	str	r3, [sp, #36]	; 0x24
 800d56c:	2320      	movs	r3, #32
 800d56e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d572:	f8cd 800c 	str.w	r8, [sp, #12]
 800d576:	2330      	movs	r3, #48	; 0x30
 800d578:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800d73c <_vfiprintf_r+0x24c>
 800d57c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800d580:	f04f 0901 	mov.w	r9, #1
 800d584:	4623      	mov	r3, r4
 800d586:	469a      	mov	sl, r3
 800d588:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d58c:	b10a      	cbz	r2, 800d592 <_vfiprintf_r+0xa2>
 800d58e:	2a25      	cmp	r2, #37	; 0x25
 800d590:	d1f9      	bne.n	800d586 <_vfiprintf_r+0x96>
 800d592:	ebba 0b04 	subs.w	fp, sl, r4
 800d596:	d00b      	beq.n	800d5b0 <_vfiprintf_r+0xc0>
 800d598:	465b      	mov	r3, fp
 800d59a:	4622      	mov	r2, r4
 800d59c:	4629      	mov	r1, r5
 800d59e:	4630      	mov	r0, r6
 800d5a0:	f7ff ff93 	bl	800d4ca <__sfputs_r>
 800d5a4:	3001      	adds	r0, #1
 800d5a6:	f000 80aa 	beq.w	800d6fe <_vfiprintf_r+0x20e>
 800d5aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d5ac:	445a      	add	r2, fp
 800d5ae:	9209      	str	r2, [sp, #36]	; 0x24
 800d5b0:	f89a 3000 	ldrb.w	r3, [sl]
 800d5b4:	2b00      	cmp	r3, #0
 800d5b6:	f000 80a2 	beq.w	800d6fe <_vfiprintf_r+0x20e>
 800d5ba:	2300      	movs	r3, #0
 800d5bc:	f04f 32ff 	mov.w	r2, #4294967295
 800d5c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d5c4:	f10a 0a01 	add.w	sl, sl, #1
 800d5c8:	9304      	str	r3, [sp, #16]
 800d5ca:	9307      	str	r3, [sp, #28]
 800d5cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800d5d0:	931a      	str	r3, [sp, #104]	; 0x68
 800d5d2:	4654      	mov	r4, sl
 800d5d4:	2205      	movs	r2, #5
 800d5d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d5da:	4858      	ldr	r0, [pc, #352]	; (800d73c <_vfiprintf_r+0x24c>)
 800d5dc:	f7f2 fe48 	bl	8000270 <memchr>
 800d5e0:	9a04      	ldr	r2, [sp, #16]
 800d5e2:	b9d8      	cbnz	r0, 800d61c <_vfiprintf_r+0x12c>
 800d5e4:	06d1      	lsls	r1, r2, #27
 800d5e6:	bf44      	itt	mi
 800d5e8:	2320      	movmi	r3, #32
 800d5ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d5ee:	0713      	lsls	r3, r2, #28
 800d5f0:	bf44      	itt	mi
 800d5f2:	232b      	movmi	r3, #43	; 0x2b
 800d5f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d5f8:	f89a 3000 	ldrb.w	r3, [sl]
 800d5fc:	2b2a      	cmp	r3, #42	; 0x2a
 800d5fe:	d015      	beq.n	800d62c <_vfiprintf_r+0x13c>
 800d600:	9a07      	ldr	r2, [sp, #28]
 800d602:	4654      	mov	r4, sl
 800d604:	2000      	movs	r0, #0
 800d606:	f04f 0c0a 	mov.w	ip, #10
 800d60a:	4621      	mov	r1, r4
 800d60c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d610:	3b30      	subs	r3, #48	; 0x30
 800d612:	2b09      	cmp	r3, #9
 800d614:	d94e      	bls.n	800d6b4 <_vfiprintf_r+0x1c4>
 800d616:	b1b0      	cbz	r0, 800d646 <_vfiprintf_r+0x156>
 800d618:	9207      	str	r2, [sp, #28]
 800d61a:	e014      	b.n	800d646 <_vfiprintf_r+0x156>
 800d61c:	eba0 0308 	sub.w	r3, r0, r8
 800d620:	fa09 f303 	lsl.w	r3, r9, r3
 800d624:	4313      	orrs	r3, r2
 800d626:	9304      	str	r3, [sp, #16]
 800d628:	46a2      	mov	sl, r4
 800d62a:	e7d2      	b.n	800d5d2 <_vfiprintf_r+0xe2>
 800d62c:	9b03      	ldr	r3, [sp, #12]
 800d62e:	1d19      	adds	r1, r3, #4
 800d630:	681b      	ldr	r3, [r3, #0]
 800d632:	9103      	str	r1, [sp, #12]
 800d634:	2b00      	cmp	r3, #0
 800d636:	bfbb      	ittet	lt
 800d638:	425b      	neglt	r3, r3
 800d63a:	f042 0202 	orrlt.w	r2, r2, #2
 800d63e:	9307      	strge	r3, [sp, #28]
 800d640:	9307      	strlt	r3, [sp, #28]
 800d642:	bfb8      	it	lt
 800d644:	9204      	strlt	r2, [sp, #16]
 800d646:	7823      	ldrb	r3, [r4, #0]
 800d648:	2b2e      	cmp	r3, #46	; 0x2e
 800d64a:	d10c      	bne.n	800d666 <_vfiprintf_r+0x176>
 800d64c:	7863      	ldrb	r3, [r4, #1]
 800d64e:	2b2a      	cmp	r3, #42	; 0x2a
 800d650:	d135      	bne.n	800d6be <_vfiprintf_r+0x1ce>
 800d652:	9b03      	ldr	r3, [sp, #12]
 800d654:	1d1a      	adds	r2, r3, #4
 800d656:	681b      	ldr	r3, [r3, #0]
 800d658:	9203      	str	r2, [sp, #12]
 800d65a:	2b00      	cmp	r3, #0
 800d65c:	bfb8      	it	lt
 800d65e:	f04f 33ff 	movlt.w	r3, #4294967295
 800d662:	3402      	adds	r4, #2
 800d664:	9305      	str	r3, [sp, #20]
 800d666:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800d74c <_vfiprintf_r+0x25c>
 800d66a:	7821      	ldrb	r1, [r4, #0]
 800d66c:	2203      	movs	r2, #3
 800d66e:	4650      	mov	r0, sl
 800d670:	f7f2 fdfe 	bl	8000270 <memchr>
 800d674:	b140      	cbz	r0, 800d688 <_vfiprintf_r+0x198>
 800d676:	2340      	movs	r3, #64	; 0x40
 800d678:	eba0 000a 	sub.w	r0, r0, sl
 800d67c:	fa03 f000 	lsl.w	r0, r3, r0
 800d680:	9b04      	ldr	r3, [sp, #16]
 800d682:	4303      	orrs	r3, r0
 800d684:	3401      	adds	r4, #1
 800d686:	9304      	str	r3, [sp, #16]
 800d688:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d68c:	482c      	ldr	r0, [pc, #176]	; (800d740 <_vfiprintf_r+0x250>)
 800d68e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800d692:	2206      	movs	r2, #6
 800d694:	f7f2 fdec 	bl	8000270 <memchr>
 800d698:	2800      	cmp	r0, #0
 800d69a:	d03f      	beq.n	800d71c <_vfiprintf_r+0x22c>
 800d69c:	4b29      	ldr	r3, [pc, #164]	; (800d744 <_vfiprintf_r+0x254>)
 800d69e:	bb1b      	cbnz	r3, 800d6e8 <_vfiprintf_r+0x1f8>
 800d6a0:	9b03      	ldr	r3, [sp, #12]
 800d6a2:	3307      	adds	r3, #7
 800d6a4:	f023 0307 	bic.w	r3, r3, #7
 800d6a8:	3308      	adds	r3, #8
 800d6aa:	9303      	str	r3, [sp, #12]
 800d6ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d6ae:	443b      	add	r3, r7
 800d6b0:	9309      	str	r3, [sp, #36]	; 0x24
 800d6b2:	e767      	b.n	800d584 <_vfiprintf_r+0x94>
 800d6b4:	fb0c 3202 	mla	r2, ip, r2, r3
 800d6b8:	460c      	mov	r4, r1
 800d6ba:	2001      	movs	r0, #1
 800d6bc:	e7a5      	b.n	800d60a <_vfiprintf_r+0x11a>
 800d6be:	2300      	movs	r3, #0
 800d6c0:	3401      	adds	r4, #1
 800d6c2:	9305      	str	r3, [sp, #20]
 800d6c4:	4619      	mov	r1, r3
 800d6c6:	f04f 0c0a 	mov.w	ip, #10
 800d6ca:	4620      	mov	r0, r4
 800d6cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d6d0:	3a30      	subs	r2, #48	; 0x30
 800d6d2:	2a09      	cmp	r2, #9
 800d6d4:	d903      	bls.n	800d6de <_vfiprintf_r+0x1ee>
 800d6d6:	2b00      	cmp	r3, #0
 800d6d8:	d0c5      	beq.n	800d666 <_vfiprintf_r+0x176>
 800d6da:	9105      	str	r1, [sp, #20]
 800d6dc:	e7c3      	b.n	800d666 <_vfiprintf_r+0x176>
 800d6de:	fb0c 2101 	mla	r1, ip, r1, r2
 800d6e2:	4604      	mov	r4, r0
 800d6e4:	2301      	movs	r3, #1
 800d6e6:	e7f0      	b.n	800d6ca <_vfiprintf_r+0x1da>
 800d6e8:	ab03      	add	r3, sp, #12
 800d6ea:	9300      	str	r3, [sp, #0]
 800d6ec:	462a      	mov	r2, r5
 800d6ee:	4b16      	ldr	r3, [pc, #88]	; (800d748 <_vfiprintf_r+0x258>)
 800d6f0:	a904      	add	r1, sp, #16
 800d6f2:	4630      	mov	r0, r6
 800d6f4:	f7fb faac 	bl	8008c50 <_printf_float>
 800d6f8:	4607      	mov	r7, r0
 800d6fa:	1c78      	adds	r0, r7, #1
 800d6fc:	d1d6      	bne.n	800d6ac <_vfiprintf_r+0x1bc>
 800d6fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d700:	07d9      	lsls	r1, r3, #31
 800d702:	d405      	bmi.n	800d710 <_vfiprintf_r+0x220>
 800d704:	89ab      	ldrh	r3, [r5, #12]
 800d706:	059a      	lsls	r2, r3, #22
 800d708:	d402      	bmi.n	800d710 <_vfiprintf_r+0x220>
 800d70a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d70c:	f7ff fe79 	bl	800d402 <__retarget_lock_release_recursive>
 800d710:	89ab      	ldrh	r3, [r5, #12]
 800d712:	065b      	lsls	r3, r3, #25
 800d714:	f53f af12 	bmi.w	800d53c <_vfiprintf_r+0x4c>
 800d718:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d71a:	e711      	b.n	800d540 <_vfiprintf_r+0x50>
 800d71c:	ab03      	add	r3, sp, #12
 800d71e:	9300      	str	r3, [sp, #0]
 800d720:	462a      	mov	r2, r5
 800d722:	4b09      	ldr	r3, [pc, #36]	; (800d748 <_vfiprintf_r+0x258>)
 800d724:	a904      	add	r1, sp, #16
 800d726:	4630      	mov	r0, r6
 800d728:	f7fb fd1e 	bl	8009168 <_printf_i>
 800d72c:	e7e4      	b.n	800d6f8 <_vfiprintf_r+0x208>
 800d72e:	bf00      	nop
 800d730:	0800eb9c 	.word	0x0800eb9c
 800d734:	0800ebbc 	.word	0x0800ebbc
 800d738:	0800eb7c 	.word	0x0800eb7c
 800d73c:	0800eb14 	.word	0x0800eb14
 800d740:	0800eb1e 	.word	0x0800eb1e
 800d744:	08008c51 	.word	0x08008c51
 800d748:	0800d4cb 	.word	0x0800d4cb
 800d74c:	0800eb1a 	.word	0x0800eb1a

0800d750 <__swbuf_r>:
 800d750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d752:	460e      	mov	r6, r1
 800d754:	4614      	mov	r4, r2
 800d756:	4605      	mov	r5, r0
 800d758:	b118      	cbz	r0, 800d762 <__swbuf_r+0x12>
 800d75a:	6983      	ldr	r3, [r0, #24]
 800d75c:	b90b      	cbnz	r3, 800d762 <__swbuf_r+0x12>
 800d75e:	f7ff fd9f 	bl	800d2a0 <__sinit>
 800d762:	4b21      	ldr	r3, [pc, #132]	; (800d7e8 <__swbuf_r+0x98>)
 800d764:	429c      	cmp	r4, r3
 800d766:	d12b      	bne.n	800d7c0 <__swbuf_r+0x70>
 800d768:	686c      	ldr	r4, [r5, #4]
 800d76a:	69a3      	ldr	r3, [r4, #24]
 800d76c:	60a3      	str	r3, [r4, #8]
 800d76e:	89a3      	ldrh	r3, [r4, #12]
 800d770:	071a      	lsls	r2, r3, #28
 800d772:	d52f      	bpl.n	800d7d4 <__swbuf_r+0x84>
 800d774:	6923      	ldr	r3, [r4, #16]
 800d776:	b36b      	cbz	r3, 800d7d4 <__swbuf_r+0x84>
 800d778:	6923      	ldr	r3, [r4, #16]
 800d77a:	6820      	ldr	r0, [r4, #0]
 800d77c:	1ac0      	subs	r0, r0, r3
 800d77e:	6963      	ldr	r3, [r4, #20]
 800d780:	b2f6      	uxtb	r6, r6
 800d782:	4283      	cmp	r3, r0
 800d784:	4637      	mov	r7, r6
 800d786:	dc04      	bgt.n	800d792 <__swbuf_r+0x42>
 800d788:	4621      	mov	r1, r4
 800d78a:	4628      	mov	r0, r5
 800d78c:	f7ff fcf4 	bl	800d178 <_fflush_r>
 800d790:	bb30      	cbnz	r0, 800d7e0 <__swbuf_r+0x90>
 800d792:	68a3      	ldr	r3, [r4, #8]
 800d794:	3b01      	subs	r3, #1
 800d796:	60a3      	str	r3, [r4, #8]
 800d798:	6823      	ldr	r3, [r4, #0]
 800d79a:	1c5a      	adds	r2, r3, #1
 800d79c:	6022      	str	r2, [r4, #0]
 800d79e:	701e      	strb	r6, [r3, #0]
 800d7a0:	6963      	ldr	r3, [r4, #20]
 800d7a2:	3001      	adds	r0, #1
 800d7a4:	4283      	cmp	r3, r0
 800d7a6:	d004      	beq.n	800d7b2 <__swbuf_r+0x62>
 800d7a8:	89a3      	ldrh	r3, [r4, #12]
 800d7aa:	07db      	lsls	r3, r3, #31
 800d7ac:	d506      	bpl.n	800d7bc <__swbuf_r+0x6c>
 800d7ae:	2e0a      	cmp	r6, #10
 800d7b0:	d104      	bne.n	800d7bc <__swbuf_r+0x6c>
 800d7b2:	4621      	mov	r1, r4
 800d7b4:	4628      	mov	r0, r5
 800d7b6:	f7ff fcdf 	bl	800d178 <_fflush_r>
 800d7ba:	b988      	cbnz	r0, 800d7e0 <__swbuf_r+0x90>
 800d7bc:	4638      	mov	r0, r7
 800d7be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d7c0:	4b0a      	ldr	r3, [pc, #40]	; (800d7ec <__swbuf_r+0x9c>)
 800d7c2:	429c      	cmp	r4, r3
 800d7c4:	d101      	bne.n	800d7ca <__swbuf_r+0x7a>
 800d7c6:	68ac      	ldr	r4, [r5, #8]
 800d7c8:	e7cf      	b.n	800d76a <__swbuf_r+0x1a>
 800d7ca:	4b09      	ldr	r3, [pc, #36]	; (800d7f0 <__swbuf_r+0xa0>)
 800d7cc:	429c      	cmp	r4, r3
 800d7ce:	bf08      	it	eq
 800d7d0:	68ec      	ldreq	r4, [r5, #12]
 800d7d2:	e7ca      	b.n	800d76a <__swbuf_r+0x1a>
 800d7d4:	4621      	mov	r1, r4
 800d7d6:	4628      	mov	r0, r5
 800d7d8:	f000 f80c 	bl	800d7f4 <__swsetup_r>
 800d7dc:	2800      	cmp	r0, #0
 800d7de:	d0cb      	beq.n	800d778 <__swbuf_r+0x28>
 800d7e0:	f04f 37ff 	mov.w	r7, #4294967295
 800d7e4:	e7ea      	b.n	800d7bc <__swbuf_r+0x6c>
 800d7e6:	bf00      	nop
 800d7e8:	0800eb9c 	.word	0x0800eb9c
 800d7ec:	0800ebbc 	.word	0x0800ebbc
 800d7f0:	0800eb7c 	.word	0x0800eb7c

0800d7f4 <__swsetup_r>:
 800d7f4:	4b32      	ldr	r3, [pc, #200]	; (800d8c0 <__swsetup_r+0xcc>)
 800d7f6:	b570      	push	{r4, r5, r6, lr}
 800d7f8:	681d      	ldr	r5, [r3, #0]
 800d7fa:	4606      	mov	r6, r0
 800d7fc:	460c      	mov	r4, r1
 800d7fe:	b125      	cbz	r5, 800d80a <__swsetup_r+0x16>
 800d800:	69ab      	ldr	r3, [r5, #24]
 800d802:	b913      	cbnz	r3, 800d80a <__swsetup_r+0x16>
 800d804:	4628      	mov	r0, r5
 800d806:	f7ff fd4b 	bl	800d2a0 <__sinit>
 800d80a:	4b2e      	ldr	r3, [pc, #184]	; (800d8c4 <__swsetup_r+0xd0>)
 800d80c:	429c      	cmp	r4, r3
 800d80e:	d10f      	bne.n	800d830 <__swsetup_r+0x3c>
 800d810:	686c      	ldr	r4, [r5, #4]
 800d812:	89a3      	ldrh	r3, [r4, #12]
 800d814:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d818:	0719      	lsls	r1, r3, #28
 800d81a:	d42c      	bmi.n	800d876 <__swsetup_r+0x82>
 800d81c:	06dd      	lsls	r5, r3, #27
 800d81e:	d411      	bmi.n	800d844 <__swsetup_r+0x50>
 800d820:	2309      	movs	r3, #9
 800d822:	6033      	str	r3, [r6, #0]
 800d824:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800d828:	81a3      	strh	r3, [r4, #12]
 800d82a:	f04f 30ff 	mov.w	r0, #4294967295
 800d82e:	e03e      	b.n	800d8ae <__swsetup_r+0xba>
 800d830:	4b25      	ldr	r3, [pc, #148]	; (800d8c8 <__swsetup_r+0xd4>)
 800d832:	429c      	cmp	r4, r3
 800d834:	d101      	bne.n	800d83a <__swsetup_r+0x46>
 800d836:	68ac      	ldr	r4, [r5, #8]
 800d838:	e7eb      	b.n	800d812 <__swsetup_r+0x1e>
 800d83a:	4b24      	ldr	r3, [pc, #144]	; (800d8cc <__swsetup_r+0xd8>)
 800d83c:	429c      	cmp	r4, r3
 800d83e:	bf08      	it	eq
 800d840:	68ec      	ldreq	r4, [r5, #12]
 800d842:	e7e6      	b.n	800d812 <__swsetup_r+0x1e>
 800d844:	0758      	lsls	r0, r3, #29
 800d846:	d512      	bpl.n	800d86e <__swsetup_r+0x7a>
 800d848:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d84a:	b141      	cbz	r1, 800d85e <__swsetup_r+0x6a>
 800d84c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d850:	4299      	cmp	r1, r3
 800d852:	d002      	beq.n	800d85a <__swsetup_r+0x66>
 800d854:	4630      	mov	r0, r6
 800d856:	f7fe fd9b 	bl	800c390 <_free_r>
 800d85a:	2300      	movs	r3, #0
 800d85c:	6363      	str	r3, [r4, #52]	; 0x34
 800d85e:	89a3      	ldrh	r3, [r4, #12]
 800d860:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800d864:	81a3      	strh	r3, [r4, #12]
 800d866:	2300      	movs	r3, #0
 800d868:	6063      	str	r3, [r4, #4]
 800d86a:	6923      	ldr	r3, [r4, #16]
 800d86c:	6023      	str	r3, [r4, #0]
 800d86e:	89a3      	ldrh	r3, [r4, #12]
 800d870:	f043 0308 	orr.w	r3, r3, #8
 800d874:	81a3      	strh	r3, [r4, #12]
 800d876:	6923      	ldr	r3, [r4, #16]
 800d878:	b94b      	cbnz	r3, 800d88e <__swsetup_r+0x9a>
 800d87a:	89a3      	ldrh	r3, [r4, #12]
 800d87c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800d880:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d884:	d003      	beq.n	800d88e <__swsetup_r+0x9a>
 800d886:	4621      	mov	r1, r4
 800d888:	4630      	mov	r0, r6
 800d88a:	f000 f84d 	bl	800d928 <__smakebuf_r>
 800d88e:	89a0      	ldrh	r0, [r4, #12]
 800d890:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d894:	f010 0301 	ands.w	r3, r0, #1
 800d898:	d00a      	beq.n	800d8b0 <__swsetup_r+0xbc>
 800d89a:	2300      	movs	r3, #0
 800d89c:	60a3      	str	r3, [r4, #8]
 800d89e:	6963      	ldr	r3, [r4, #20]
 800d8a0:	425b      	negs	r3, r3
 800d8a2:	61a3      	str	r3, [r4, #24]
 800d8a4:	6923      	ldr	r3, [r4, #16]
 800d8a6:	b943      	cbnz	r3, 800d8ba <__swsetup_r+0xc6>
 800d8a8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800d8ac:	d1ba      	bne.n	800d824 <__swsetup_r+0x30>
 800d8ae:	bd70      	pop	{r4, r5, r6, pc}
 800d8b0:	0781      	lsls	r1, r0, #30
 800d8b2:	bf58      	it	pl
 800d8b4:	6963      	ldrpl	r3, [r4, #20]
 800d8b6:	60a3      	str	r3, [r4, #8]
 800d8b8:	e7f4      	b.n	800d8a4 <__swsetup_r+0xb0>
 800d8ba:	2000      	movs	r0, #0
 800d8bc:	e7f7      	b.n	800d8ae <__swsetup_r+0xba>
 800d8be:	bf00      	nop
 800d8c0:	20000114 	.word	0x20000114
 800d8c4:	0800eb9c 	.word	0x0800eb9c
 800d8c8:	0800ebbc 	.word	0x0800ebbc
 800d8cc:	0800eb7c 	.word	0x0800eb7c

0800d8d0 <abort>:
 800d8d0:	b508      	push	{r3, lr}
 800d8d2:	2006      	movs	r0, #6
 800d8d4:	f000 f898 	bl	800da08 <raise>
 800d8d8:	2001      	movs	r0, #1
 800d8da:	f7f5 fa71 	bl	8002dc0 <_exit>

0800d8de <__swhatbuf_r>:
 800d8de:	b570      	push	{r4, r5, r6, lr}
 800d8e0:	460e      	mov	r6, r1
 800d8e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d8e6:	2900      	cmp	r1, #0
 800d8e8:	b096      	sub	sp, #88	; 0x58
 800d8ea:	4614      	mov	r4, r2
 800d8ec:	461d      	mov	r5, r3
 800d8ee:	da07      	bge.n	800d900 <__swhatbuf_r+0x22>
 800d8f0:	2300      	movs	r3, #0
 800d8f2:	602b      	str	r3, [r5, #0]
 800d8f4:	89b3      	ldrh	r3, [r6, #12]
 800d8f6:	061a      	lsls	r2, r3, #24
 800d8f8:	d410      	bmi.n	800d91c <__swhatbuf_r+0x3e>
 800d8fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d8fe:	e00e      	b.n	800d91e <__swhatbuf_r+0x40>
 800d900:	466a      	mov	r2, sp
 800d902:	f000 f89d 	bl	800da40 <_fstat_r>
 800d906:	2800      	cmp	r0, #0
 800d908:	dbf2      	blt.n	800d8f0 <__swhatbuf_r+0x12>
 800d90a:	9a01      	ldr	r2, [sp, #4]
 800d90c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800d910:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800d914:	425a      	negs	r2, r3
 800d916:	415a      	adcs	r2, r3
 800d918:	602a      	str	r2, [r5, #0]
 800d91a:	e7ee      	b.n	800d8fa <__swhatbuf_r+0x1c>
 800d91c:	2340      	movs	r3, #64	; 0x40
 800d91e:	2000      	movs	r0, #0
 800d920:	6023      	str	r3, [r4, #0]
 800d922:	b016      	add	sp, #88	; 0x58
 800d924:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d928 <__smakebuf_r>:
 800d928:	898b      	ldrh	r3, [r1, #12]
 800d92a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d92c:	079d      	lsls	r5, r3, #30
 800d92e:	4606      	mov	r6, r0
 800d930:	460c      	mov	r4, r1
 800d932:	d507      	bpl.n	800d944 <__smakebuf_r+0x1c>
 800d934:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800d938:	6023      	str	r3, [r4, #0]
 800d93a:	6123      	str	r3, [r4, #16]
 800d93c:	2301      	movs	r3, #1
 800d93e:	6163      	str	r3, [r4, #20]
 800d940:	b002      	add	sp, #8
 800d942:	bd70      	pop	{r4, r5, r6, pc}
 800d944:	ab01      	add	r3, sp, #4
 800d946:	466a      	mov	r2, sp
 800d948:	f7ff ffc9 	bl	800d8de <__swhatbuf_r>
 800d94c:	9900      	ldr	r1, [sp, #0]
 800d94e:	4605      	mov	r5, r0
 800d950:	4630      	mov	r0, r6
 800d952:	f7fe fd6d 	bl	800c430 <_malloc_r>
 800d956:	b948      	cbnz	r0, 800d96c <__smakebuf_r+0x44>
 800d958:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d95c:	059a      	lsls	r2, r3, #22
 800d95e:	d4ef      	bmi.n	800d940 <__smakebuf_r+0x18>
 800d960:	f023 0303 	bic.w	r3, r3, #3
 800d964:	f043 0302 	orr.w	r3, r3, #2
 800d968:	81a3      	strh	r3, [r4, #12]
 800d96a:	e7e3      	b.n	800d934 <__smakebuf_r+0xc>
 800d96c:	4b0d      	ldr	r3, [pc, #52]	; (800d9a4 <__smakebuf_r+0x7c>)
 800d96e:	62b3      	str	r3, [r6, #40]	; 0x28
 800d970:	89a3      	ldrh	r3, [r4, #12]
 800d972:	6020      	str	r0, [r4, #0]
 800d974:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800d978:	81a3      	strh	r3, [r4, #12]
 800d97a:	9b00      	ldr	r3, [sp, #0]
 800d97c:	6163      	str	r3, [r4, #20]
 800d97e:	9b01      	ldr	r3, [sp, #4]
 800d980:	6120      	str	r0, [r4, #16]
 800d982:	b15b      	cbz	r3, 800d99c <__smakebuf_r+0x74>
 800d984:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d988:	4630      	mov	r0, r6
 800d98a:	f000 f86b 	bl	800da64 <_isatty_r>
 800d98e:	b128      	cbz	r0, 800d99c <__smakebuf_r+0x74>
 800d990:	89a3      	ldrh	r3, [r4, #12]
 800d992:	f023 0303 	bic.w	r3, r3, #3
 800d996:	f043 0301 	orr.w	r3, r3, #1
 800d99a:	81a3      	strh	r3, [r4, #12]
 800d99c:	89a0      	ldrh	r0, [r4, #12]
 800d99e:	4305      	orrs	r5, r0
 800d9a0:	81a5      	strh	r5, [r4, #12]
 800d9a2:	e7cd      	b.n	800d940 <__smakebuf_r+0x18>
 800d9a4:	0800d239 	.word	0x0800d239

0800d9a8 <_malloc_usable_size_r>:
 800d9a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d9ac:	1f18      	subs	r0, r3, #4
 800d9ae:	2b00      	cmp	r3, #0
 800d9b0:	bfbc      	itt	lt
 800d9b2:	580b      	ldrlt	r3, [r1, r0]
 800d9b4:	18c0      	addlt	r0, r0, r3
 800d9b6:	4770      	bx	lr

0800d9b8 <_raise_r>:
 800d9b8:	291f      	cmp	r1, #31
 800d9ba:	b538      	push	{r3, r4, r5, lr}
 800d9bc:	4604      	mov	r4, r0
 800d9be:	460d      	mov	r5, r1
 800d9c0:	d904      	bls.n	800d9cc <_raise_r+0x14>
 800d9c2:	2316      	movs	r3, #22
 800d9c4:	6003      	str	r3, [r0, #0]
 800d9c6:	f04f 30ff 	mov.w	r0, #4294967295
 800d9ca:	bd38      	pop	{r3, r4, r5, pc}
 800d9cc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d9ce:	b112      	cbz	r2, 800d9d6 <_raise_r+0x1e>
 800d9d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d9d4:	b94b      	cbnz	r3, 800d9ea <_raise_r+0x32>
 800d9d6:	4620      	mov	r0, r4
 800d9d8:	f000 f830 	bl	800da3c <_getpid_r>
 800d9dc:	462a      	mov	r2, r5
 800d9de:	4601      	mov	r1, r0
 800d9e0:	4620      	mov	r0, r4
 800d9e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d9e6:	f000 b817 	b.w	800da18 <_kill_r>
 800d9ea:	2b01      	cmp	r3, #1
 800d9ec:	d00a      	beq.n	800da04 <_raise_r+0x4c>
 800d9ee:	1c59      	adds	r1, r3, #1
 800d9f0:	d103      	bne.n	800d9fa <_raise_r+0x42>
 800d9f2:	2316      	movs	r3, #22
 800d9f4:	6003      	str	r3, [r0, #0]
 800d9f6:	2001      	movs	r0, #1
 800d9f8:	e7e7      	b.n	800d9ca <_raise_r+0x12>
 800d9fa:	2400      	movs	r4, #0
 800d9fc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800da00:	4628      	mov	r0, r5
 800da02:	4798      	blx	r3
 800da04:	2000      	movs	r0, #0
 800da06:	e7e0      	b.n	800d9ca <_raise_r+0x12>

0800da08 <raise>:
 800da08:	4b02      	ldr	r3, [pc, #8]	; (800da14 <raise+0xc>)
 800da0a:	4601      	mov	r1, r0
 800da0c:	6818      	ldr	r0, [r3, #0]
 800da0e:	f7ff bfd3 	b.w	800d9b8 <_raise_r>
 800da12:	bf00      	nop
 800da14:	20000114 	.word	0x20000114

0800da18 <_kill_r>:
 800da18:	b538      	push	{r3, r4, r5, lr}
 800da1a:	4d07      	ldr	r5, [pc, #28]	; (800da38 <_kill_r+0x20>)
 800da1c:	2300      	movs	r3, #0
 800da1e:	4604      	mov	r4, r0
 800da20:	4608      	mov	r0, r1
 800da22:	4611      	mov	r1, r2
 800da24:	602b      	str	r3, [r5, #0]
 800da26:	f7f5 f9bb 	bl	8002da0 <_kill>
 800da2a:	1c43      	adds	r3, r0, #1
 800da2c:	d102      	bne.n	800da34 <_kill_r+0x1c>
 800da2e:	682b      	ldr	r3, [r5, #0]
 800da30:	b103      	cbz	r3, 800da34 <_kill_r+0x1c>
 800da32:	6023      	str	r3, [r4, #0]
 800da34:	bd38      	pop	{r3, r4, r5, pc}
 800da36:	bf00      	nop
 800da38:	200187bc 	.word	0x200187bc

0800da3c <_getpid_r>:
 800da3c:	f7f5 b9a8 	b.w	8002d90 <_getpid>

0800da40 <_fstat_r>:
 800da40:	b538      	push	{r3, r4, r5, lr}
 800da42:	4d07      	ldr	r5, [pc, #28]	; (800da60 <_fstat_r+0x20>)
 800da44:	2300      	movs	r3, #0
 800da46:	4604      	mov	r4, r0
 800da48:	4608      	mov	r0, r1
 800da4a:	4611      	mov	r1, r2
 800da4c:	602b      	str	r3, [r5, #0]
 800da4e:	f7f5 fa06 	bl	8002e5e <_fstat>
 800da52:	1c43      	adds	r3, r0, #1
 800da54:	d102      	bne.n	800da5c <_fstat_r+0x1c>
 800da56:	682b      	ldr	r3, [r5, #0]
 800da58:	b103      	cbz	r3, 800da5c <_fstat_r+0x1c>
 800da5a:	6023      	str	r3, [r4, #0]
 800da5c:	bd38      	pop	{r3, r4, r5, pc}
 800da5e:	bf00      	nop
 800da60:	200187bc 	.word	0x200187bc

0800da64 <_isatty_r>:
 800da64:	b538      	push	{r3, r4, r5, lr}
 800da66:	4d06      	ldr	r5, [pc, #24]	; (800da80 <_isatty_r+0x1c>)
 800da68:	2300      	movs	r3, #0
 800da6a:	4604      	mov	r4, r0
 800da6c:	4608      	mov	r0, r1
 800da6e:	602b      	str	r3, [r5, #0]
 800da70:	f7f5 fa05 	bl	8002e7e <_isatty>
 800da74:	1c43      	adds	r3, r0, #1
 800da76:	d102      	bne.n	800da7e <_isatty_r+0x1a>
 800da78:	682b      	ldr	r3, [r5, #0]
 800da7a:	b103      	cbz	r3, 800da7e <_isatty_r+0x1a>
 800da7c:	6023      	str	r3, [r4, #0]
 800da7e:	bd38      	pop	{r3, r4, r5, pc}
 800da80:	200187bc 	.word	0x200187bc

0800da84 <_init>:
 800da84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da86:	bf00      	nop
 800da88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800da8a:	bc08      	pop	{r3}
 800da8c:	469e      	mov	lr, r3
 800da8e:	4770      	bx	lr

0800da90 <_fini>:
 800da90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da92:	bf00      	nop
 800da94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800da96:	bc08      	pop	{r3}
 800da98:	469e      	mov	lr, r3
 800da9a:	4770      	bx	lr
